cset: moving following pidspec: 1353
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.630407602 seconds)
loading group "shootout"... done (took 1.240125641 seconds)
loading group "string"... done (took 0.419704093 seconds)
loading group "linalg"... done (took 7.94880269 seconds)
loading group "parallel"... done (took 0.150127033 seconds)
loading group "find"... done (took 1.477965292 seconds)
loading group "tuple"... done (took 1.96778596 seconds)
loading group "union"... done (took 12.863809307 seconds)
loading group "dates"... done (took 1.342736878 seconds)
loading group "micro"... done (took 0.204276321 seconds)
loading group "simd"... done (took 4.296588803 seconds)
loading group "io"... done (took 0.978845366 seconds)
loading group "random"... done (took 8.431541425 seconds)
loading group "problem"... done (took 1.648620954 seconds)
loading group "array"... done (took 19.379546317 seconds)
loading group "misc"... done (took 1.523204494 seconds)
loading group "scalar"... done (took 39.213530489 seconds)
loading group "sort"... done (took 3.044352849 seconds)
loading group "sparse"... done (took 11.642305159 seconds)
loading group "collection"... done (took 16.9818782 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532577541 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128024498 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137335942 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121642421 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152820022 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117975655 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124680216 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086321472 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.8649405 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152621234 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113281723 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.487359317 seconds)
done (took 5.403609326 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174672394 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089709514 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079237592 seconds)
  done (took 1.232216632 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063660472 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127479626 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065090186 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065309357 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065798612 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064956118 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064958402 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064696823 seconds)
  done (took 1.5825505 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071865293 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067082964 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066317094 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066676206 seconds)
  done (took 1.336984406 seconds)
done (took 5.470187222 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.254964928 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.112939886 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.310529027 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.406550264 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.494994068 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090004261 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072495875 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069000134 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126278827 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.310644778 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.119426974 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.200089506 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099448602 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.182480078 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.025302798 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.134412035 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083611643 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.125360867 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091374837 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128939909 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.426054222 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076216042 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.074630586 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.07019266 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066989666 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.645412428 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665015249 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145847672 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082013954 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.102619421 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.116209691 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.640824379 seconds)
  done (took 10.657306827 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103783589 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100131118 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06773357 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123996998 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100060984 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06820788 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074452572 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066142719 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089163058 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130074181 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091163863 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.11023274 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064418605 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06796474 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08486597 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198401522 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079546465 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081621104 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067556162 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078708841 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106907875 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077309066 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079157848 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079634055 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128916518 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170708912 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095397464 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096591799 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064883408 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081092054 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114228368 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126498511 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064745197 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065033683 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129149241 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093184032 seconds)
  done (took 4.534490112 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.199000701 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.091168583 seconds)
    (2/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.121760311 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.109616849 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.657060544 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065451926 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.161222557 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248491779 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072661094 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.442508635 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.166692015 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12647782 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.150636053 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.124294361 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070535604 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.37228303 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.127821672 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.590263481 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067860294 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067181206 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064071842 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076042134 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067877568 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062793236 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.078680954 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.090630738 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088702437 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.202505387 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.033528732 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.318598899 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.070462875 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162733618 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.089145634 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.369787306 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.073893792 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.093682025 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.404379387 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.127986773 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065372004 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175971371 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069234408 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.126679744 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064337367 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.126035077 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080969563 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.070512087 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.072479493 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.06968089 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080531011 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.081288817 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102752245 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068602197 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065472518 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170597032 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064840823 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067626849 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.06882663 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149965147 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064620028 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.161693266 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.0648074 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069202586 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096311894 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071638626 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.096144491 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.121320111 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.344036908 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064458949 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.035788166 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068461399 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.012488013 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07956849 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066415116 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.085745868 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066693603 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068686212 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067997727 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.078999834 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070297653 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068719198 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.111322552 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066596212 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06984289 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066019855 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.073706651 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100745103 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066420804 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.473412074 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100523261 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06887076 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.079794013 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10692509 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066940531 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.074888049 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068064494 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.071781817 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066044527 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068614689 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083779846 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.173600183 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090678897 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068105596 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110457041 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.021301948 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069066011 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064953839 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070795169 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068951649 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067661599 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064172472 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069076221 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066191473 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063383109 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.114182726 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063551471 seconds)
  done (took 22.469670539 seconds)
done (took 39.92686579 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.255905364 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083660111 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083606641 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083352392 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083254217 seconds)
  done (took 1.770135873 seconds)
done (took 2.937652807 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107731533 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062196564 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100974018 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.099872735 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.061781385 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062092676 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.097619218 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.062078037 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098858247 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100463088 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.103112375 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.102430201 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062463583 seconds)
  done (took 2.301465201 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069695739 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079035657 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081441805 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060670069 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070118364 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080379546 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060231172 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078998828 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086145412 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079686687 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079824569 seconds)
  done (took 1.984093093 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067240854 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07961214 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082204643 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061210753 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071564806 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079705044 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060921715 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079010222 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083444054 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079238639 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079338631 seconds)
  done (took 1.972781897 seconds)
done (took 7.411896505 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.074112705 seconds)
  done (took 1.209657725 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.56205522 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.833968732 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.076012536 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.09744215 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.194627973 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108304405 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.244453979 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.080684147 seconds)
  done (took 8.527280244 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107346235 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067395109 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067240796 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066670558 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068003752 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068015801 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066326319 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067537294 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066515402 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068971712 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067997754 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.0681929 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06704685 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067951212 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066646046 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067033334 seconds)
  done (took 2.357495852 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096804487 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094979191 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07195545 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073391474 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070561481 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069884962 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072878023 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072841395 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06905397 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070284965 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073455008 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071586245 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071868188 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06258204 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073360602 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07491667 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069030739 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072221886 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072600258 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073278021 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073078361 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062475754 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071401812 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07285233 seconds)
  done (took 3.028652237 seconds)
done (took 16.275034548 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115860401 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077973287 seconds)
  done (took 1.342893201 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078016676 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079729193 seconds)
  done (took 1.319996306 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080365355 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060536398 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089286617 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074797822 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06113268 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060725924 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085946708 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061064024 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061437708 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06098436 seconds)
  done (took 1.859500486 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064243994 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073668972 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06949815 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079065977 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.069864563 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062948834 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.067377374 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063090641 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073009146 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061437793 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.067596462 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082312325 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067315037 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08488378 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.067258984 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067707953 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069950034 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066701315 seconds)
  done (took 2.424520009 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06357463 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062052398 seconds)
  done (took 1.294286165 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066484538 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062133848 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066350826 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066280276 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062078107 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060864632 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061967168 seconds)
  done (took 1.609947519 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.37591756 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122322332 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332061808 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068287048 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078716453 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26113878 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.061875273 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068000892 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06781691 seconds)
  done (took 2.646470059 seconds)
done (took 13.671739302 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078830451 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084510315 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097216637 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.460005863 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090226706 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065050336 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112121981 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18179461 seconds)
done (took 2.351616185 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208046271 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.497261122 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.815773399 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064447615 seconds)
  done (took 3.550152997 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337973899 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085760809 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075378852 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064624152 seconds)
  done (took 1.746684822 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064705997 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068134972 seconds)
  done (took 1.312341532 seconds)
done (took 8.002035698 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063001563 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088530487 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061975179 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062865235 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062306848 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062913768 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062232041 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062113719 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061844236 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062152174 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.061889268 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062137534 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.062167046 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062569321 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.061712131 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062167068 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062328901 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062041724 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06229339 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062308709 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062386938 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06198924 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062507985 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06212184 seconds)
  done (took 2.728737923 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080941414 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064959779 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066172028 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.0664978 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067117252 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066329255 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06628468 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064348255 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066349069 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063984729 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066378805 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066645816 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064137459 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066787553 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064173763 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066652007 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066093879 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064456468 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064194631 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066676415 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06605737 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064942339 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06671354 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066024762 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066396051 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06659761 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064280109 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064326804 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066411364 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066210008 seconds)
  done (took 3.173936673 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06271747 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059824781 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059892033 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067569067 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059907226 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059900141 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060339871 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058997712 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059337422 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060999497 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060294038 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059050553 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060410595 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058823373 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058987016 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059726428 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062827739 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076231067 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059831901 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.05892465 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062701854 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059224457 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058979671 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058952986 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059739168 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059119701 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061066118 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059577594 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058756599 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059724496 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059050781 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.062280435 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06333416 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059133206 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067450302 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063089382 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059062713 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062403438 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060476286 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058946702 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058898213 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058887132 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059030998 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059242156 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.067718638 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059257425 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060992274 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059942945 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059618985 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058582237 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059272105 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.06136492 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.063835994 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060845559 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058781007 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060905184 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058874516 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060475621 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059183654 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058978818 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058741454 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061721689 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061136214 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06043402 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076012428 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.060848755 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067483999 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058883809 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060124482 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061660015 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059751558 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073916008 seconds)
  done (took 5.590403697 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089421403 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088157746 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064260002 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063849249 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059677889 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059754889 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067791459 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059763099 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063865278 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079341975 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060214749 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063599923 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063802373 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064233477 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06008319 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064141382 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069181416 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060270412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059635929 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063485848 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060143424 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068168741 seconds)
  done (took 2.655542871 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148744527 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065621804 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104398685 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081677608 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069056399 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078146788 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065516931 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065677702 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066376416 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066952883 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066670392 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066123284 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068769558 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066415116 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066345811 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066322435 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066096272 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066676338 seconds)
  done (took 2.540529876 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07746822 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065531706 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085623927 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065135405 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065273962 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064993884 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069632935 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070839117 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065268395 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065310358 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.071116201 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064951188 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064747175 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065445667 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064958043 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06510822 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065223915 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065059638 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071090525 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069545327 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07024652 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071101724 seconds)
  done (took 2.700131325 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076815609 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064223619 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079554227 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066016728 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060502476 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060238411 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065451141 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063970263 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066176025 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064063294 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06435505 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060459643 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066078089 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064610412 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066322519 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064540054 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064034168 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064334724 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064743262 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059751664 seconds)
  done (took 2.503494373 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09412603 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063330182 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063256431 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081775087 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063261519 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063244868 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08146034 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063377598 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063294997 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084939957 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062926192 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063749874 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081311654 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081736727 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063867898 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080973778 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081253118 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083629772 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062939218 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063093832 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084962894 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063152996 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081714924 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063226555 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063552055 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063276937 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063482091 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081751014 seconds)
  done (took 3.211035233 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070625719 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061745831 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062607685 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062080854 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062266543 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062584806 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062338191 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062997586 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061865469 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062505431 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062205505 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061896031 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062445513 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062128787 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062072316 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062636245 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062368503 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062185482 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0622378 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062031798 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06229306 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062167829 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062376196 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062181306 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062154807 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062212296 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0617544 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061986724 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061939997 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062077845 seconds)
  done (took 3.077776563 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073764353 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071834949 seconds)
  done (took 1.34847573 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061913602 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078497489 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059659359 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070755076 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06879395 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062444418 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069839243 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068171251 seconds)
  done (took 1.73977361 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.076459943 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.099295029 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062849896 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06337423 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074794391 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122979834 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083253262 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.070498112 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073639923 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062297972 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062342823 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082016032 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061382913 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072496513 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064377678 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069157842 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068618942 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072801045 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072329586 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059870758 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075498375 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065213923 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062554553 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063377099 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061680886 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06738052 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075527837 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072208862 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06893484 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059273729 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.082459094 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060014456 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061959943 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068800036 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.073767932 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060568136 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097380156 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061119108 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.067499245 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059738602 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071912642 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082110896 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072884645 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.078602611 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062425681 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063443105 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059560349 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062859072 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062542971 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068612704 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060023272 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066378953 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059398348 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062933311 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069728611 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060877042 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.067996083 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068435813 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074952871 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070014398 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067894822 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074135486 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067960228 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.071619958 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061779207 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078916948 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062645067 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071547231 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073366847 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.062179311 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075097813 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059904802 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058614537 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060078394 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093587734 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062716942 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062087514 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.061265307 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060392073 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.06218637 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068932493 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.068073529 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065804322 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065267149 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076698821 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069863706 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059974288 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071099661 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077679941 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061773781 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060346461 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075789024 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062441473 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060080522 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080498396 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068155439 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062545769 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062868897 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062856236 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073152024 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062308647 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058193786 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066600094 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062573164 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.070200591 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065162309 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065309795 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058576508 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068844532 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.065840526 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061475951 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057651187 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062670649 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060629901 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057473276 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067531755 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059176043 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073204748 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063328752 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.071240949 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.0735368 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068134035 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075414443 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059312062 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057529926 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.078184701 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067580633 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.06088634 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077738316 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058357275 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068125061 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.185912014 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.064256441 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070363637 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060568579 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064000251 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061241534 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.070265488 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.064467563 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063432025 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.063614532 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067830416 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072607635 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062415963 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068703108 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061682481 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075181432 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069004279 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063866894 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065912839 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.062281984 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072130064 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066679067 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071332321 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059896213 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061896126 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061741437 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070934588 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069167453 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062985164 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072688796 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064053515 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061721704 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061044648 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062503167 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062962421 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065417169 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062306556 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068100057 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069735081 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.076695437 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071974732 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068387005 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060860159 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060689791 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.062984226 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059665791 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065148924 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069563138 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07424519 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071863947 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080219175 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.06110638 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068575359 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063116326 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076659181 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071661248 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061790378 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.067000811 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058880912 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063045568 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069397524 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070858376 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074046516 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073711544 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064563632 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063823703 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059920868 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073782521 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061205707 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067653068 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070320598 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067770795 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060985518 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063306165 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068269422 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063855915 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060800835 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.075821345 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070200847 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059935873 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073020549 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061307134 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070867207 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059704912 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06253099 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064294887 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063876034 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068837396 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077641469 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058798702 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061618765 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078178077 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062564651 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063094158 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066526215 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.0752666 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064288607 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066739021 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069313145 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067958245 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063429504 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067752127 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.062036635 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.07061589 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.065866176 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071373741 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060739184 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077196157 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058694533 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.075660424 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060742289 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070046755 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060988681 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068018346 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060810326 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075140683 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061883495 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061165257 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071648861 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057794895 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06923427 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058424375 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062611491 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063814451 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.069202429 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061781319 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067259703 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061673267 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066575028 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062632884 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066307205 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.06865126 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062352808 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058335752 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067227297 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069364199 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066110212 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.194057023 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.064293116 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063060849 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072265357 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064468242 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063934679 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07042408 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066264848 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066367263 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06354477 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.063594278 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.063607805 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071640704 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069561236 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078402443 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068216558 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066523463 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070540731 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06037426 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07927993 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060818476 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066195525 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059687555 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070958242 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070676623 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.06105578 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078814561 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.063622135 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06787282 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074159834 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067676424 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063014595 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079040825 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.065920195 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070109838 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068374536 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064273186 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066871108 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063619885 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068511991 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071120393 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070875657 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061889377 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066825031 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068459996 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06264161 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.073370916 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063044971 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067990915 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06335434 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060414915 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065467482 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071024322 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063879886 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065243972 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061691013 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059053391 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061274575 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071401908 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064867945 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067823228 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073934963 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059311763 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.062013456 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060133977 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062609053 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077829074 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069920894 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067375309 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064602433 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059508994 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062727632 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.063507443 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060759082 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.065440235 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059357617 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060567408 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069844568 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.063214853 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063635517 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061020384 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062875094 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068577461 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.066825049 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061435363 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065548637 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060811317 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063854398 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059421828 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062710334 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064229805 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059783419 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063415789 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069410761 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.076090716 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065642754 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067785448 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06324546 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067059203 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075864227 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.071279774 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062431917 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068431947 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059666392 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.080399483 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068277079 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066748211 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068719621 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062916769 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076350004 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063746992 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069634765 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.077679502 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061834881 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.070093061 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059241442 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.077506607 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064988002 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059659573 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06663853 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065514927 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063845233 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071415785 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060794356 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067138739 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066727432 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061969396 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061522369 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061923534 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066421085 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074682836 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060356917 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065609531 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066020294 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066501264 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062318748 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070688504 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.203787695 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064245629 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064886433 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06430708 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063631769 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072948145 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062395346 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065007982 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064333403 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061109609 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066316144 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075710848 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071217584 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069604233 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060888476 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060686494 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.07929511 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062574218 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.065896381 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068072648 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069024324 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072470362 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070138078 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07742501 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061733682 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064820019 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072436061 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062149506 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060533743 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063045273 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062823435 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069002486 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069669452 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067677952 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066151834 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066788562 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07338595 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.063462724 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064784137 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.068617641 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.062332481 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070041436 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067639201 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067885771 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063480166 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0600555 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06230537 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070127126 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066804363 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070004135 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062701074 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.07213673 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.075041524 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066767201 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065958712 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060409892 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066196548 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068493872 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.067789487 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06024713 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064467544 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062723428 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.071897563 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070077886 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063909732 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060106895 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07706396 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068032103 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069074046 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.063180613 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.063264857 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061466897 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060089862 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071086508 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060041105 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062948264 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064339696 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063531304 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.077372928 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067831587 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.078938016 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062257856 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063815338 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059880649 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069144588 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064120564 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.060672638 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069726971 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059627549 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.078237543 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072079138 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.069926532 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060292265 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063729356 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067678484 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07498741 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069407525 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069718678 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.065473452 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069113105 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062873252 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070539665 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060100661 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.05910363 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069743883 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067317993 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071609064 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059984556 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069450832 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062902021 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066927241 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067188719 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06231198 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062655856 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062499259 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068249535 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062904497 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068093171 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063461099 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076488512 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061149153 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069774935 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067483005 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069141652 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072183667 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072520444 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069046607 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060331745 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065979008 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066116059 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061020253 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062597093 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063819378 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.08337738 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061915593 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062245397 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073319869 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.208537049 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.06448058 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073283253 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065956024 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071565722 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.063006685 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070663039 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.068204792 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.063135113 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06496376 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064701383 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059672206 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060691716 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06079941 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069879735 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064673422 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061877342 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079899325 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063890127 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068294961 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071778321 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065865247 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063457516 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060057951 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06432545 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072080282 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07525176 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063664719 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068528338 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064265551 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070257937 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059734405 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068385939 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068759456 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068245876 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060817998 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061481708 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074155564 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074784562 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064569604 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069733095 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06986858 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063179563 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085838216 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068594838 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062508628 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071134984 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064103915 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060099179 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060054396 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.064101032 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071413694 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061105637 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.064362797 seconds)
  done (took 41.561552641 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100022731 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06205404 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060726927 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060858194 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073336784 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061937553 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060276692 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061283121 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061087641 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063934323 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060095088 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060171629 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072877252 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076830899 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072085213 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065428303 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060470058 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061524806 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060136483 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062112364 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072225629 seconds)
  done (took 2.708481077 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069492423 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076993853 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073881694 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07930644 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069305183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066256048 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073313918 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066306882 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074695396 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071685995 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075467858 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066301626 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071579568 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071273472 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071253728 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066761856 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075001202 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068967984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066313649 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073516436 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066424574 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073632318 seconds)
  done (took 2.868398269 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06295564 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061436005 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067883168 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060033206 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059772955 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065030055 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059615124 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062988629 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062746352 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063278595 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067574173 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061035136 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059454427 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064131818 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.05921168 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060751096 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108499265 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061350889 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060817392 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059729551 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063493794 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070830444 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059710923 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059891038 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063161415 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064778029 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060030843 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.064391829 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061277807 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064173761 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061783876 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059351438 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067899779 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069201796 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063588573 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063163163 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061828029 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063608846 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060304895 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059936452 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067964063 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061946421 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060488601 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062484975 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06938316 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060309198 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059313719 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067738026 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059273971 seconds)
  done (took 4.423745374 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07690681 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111298408 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065964476 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091678747 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076330954 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069195573 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065612747 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092813762 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061646632 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063403043 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077283867 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077355883 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065003311 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06682117 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067259701 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064302169 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065590822 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063589883 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068291895 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063899962 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068510328 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067220131 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076094368 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076283583 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065978534 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063297443 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064190146 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066501713 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076000764 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069373288 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067063078 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067856461 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076661501 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068025897 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063618993 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06390414 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077459116 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064957311 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064666164 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062067214 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063808988 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066483839 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067153779 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077855253 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064701456 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067616801 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065019135 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061402157 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077352642 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064545372 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069965405 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077914206 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066515636 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065353689 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066831296 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076752099 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064729676 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06301397 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065242638 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076289529 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062346095 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066140225 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077477715 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063790408 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069542259 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07753543 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067819407 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065922595 seconds)
  done (took 6.198836196 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070928041 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093311719 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073554118 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073086225 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073090235 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072202946 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071968507 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071984883 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07216172 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07270471 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072051753 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122147791 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066994109 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079088914 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071792186 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072585772 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071956874 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072062538 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072001701 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072345187 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071980073 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072730173 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072024778 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072338263 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076185713 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066382029 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071673398 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072508309 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072619114 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071972197 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0763456 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072137261 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072105006 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073018294 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076489285 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072229018 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061348638 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071786384 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072015761 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071613399 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066594792 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07294478 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071752186 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066651608 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072185626 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071742563 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072505057 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076124776 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082773006 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072933222 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072535877 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075307422 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071950444 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072274076 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072577316 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082591169 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072466293 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072550223 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07200562 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073084017 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072893512 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082142157 seconds)
  done (took 5.911401432 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079277673 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070290944 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082071312 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062953775 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060028012 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071130651 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059708936 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059823264 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069604003 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070129513 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072023388 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070718363 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073866985 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07228649 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070609755 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073757437 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070881493 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070829054 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069551252 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070735683 seconds)
  done (took 2.733332423 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073679185 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081551317 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066562166 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07090204 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067063968 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070583525 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065490425 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066790082 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066183347 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06624314 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072802904 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072801276 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066508739 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070894562 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072458822 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07045716 seconds)
  done (took 2.442005519 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.067667878 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070934061 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077272514 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062552747 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065462356 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06106463 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06177054 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059889358 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060323833 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075205146 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06194957 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072633881 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061643072 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060344204 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061086724 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067409438 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061059219 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061585217 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061482189 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07499894 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068534397 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063397113 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064931307 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061615497 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066935814 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069211833 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064242698 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064326973 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061617878 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06226487 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067008941 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068693479 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061715838 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062428923 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060183121 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061880524 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061515258 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062375579 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067337556 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061742794 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059902781 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067999088 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061720374 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063318672 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060689478 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061982866 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060663778 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067429564 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061920316 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06690246 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061733337 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064327867 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06234654 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069997871 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065096593 seconds)
  done (took 4.866684277 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077255848 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066792301 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059986176 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060178231 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065495905 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065993872 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066273872 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065290508 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065865637 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060229269 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06602097 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065188672 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066533199 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065921517 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065534666 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066011377 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059730542 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065259016 seconds)
  done (took 2.506383063 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071389161 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064974687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070742643 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065082673 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064801095 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065053268 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061158236 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060752275 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060399372 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065209185 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06473664 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064982175 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061058223 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064822133 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06470324 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065107016 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064650316 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061043403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065116849 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061035573 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065028584 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06084738 seconds)
  done (took 2.739137953 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095367491 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081960076 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144089838 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078298807 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086304805 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069877054 seconds)
  done (took 1.883174492 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090475093 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107812273 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06518459 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065748637 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078455429 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069477691 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069407187 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069884873 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078217801 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07830954 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070134186 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080216337 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078159246 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071738949 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07799324 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081031976 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070048284 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069531669 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06497007 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081495026 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069538436 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077986642 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070388894 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086620008 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069409021 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071484995 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081549211 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075187391 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069118275 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078091202 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081326489 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069509013 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078015047 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075347039 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06543716 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078309025 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069620779 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081629104 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078229027 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071858954 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064917512 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077740172 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078229115 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071873408 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08153923 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069933804 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071777394 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069617522 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069638545 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085658641 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078231875 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071629284 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07792179 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081300401 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081577012 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085113267 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075885525 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071877483 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078126286 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076037073 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072094296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078168521 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071615601 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075398204 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08115467 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072214774 seconds)
  done (took 6.31659001 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098729066 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065437361 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070391888 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075903773 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072224316 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070164589 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070198606 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069813907 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070188973 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065719123 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107355395 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070126691 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071990156 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071789789 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069830472 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069426319 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069781694 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071729423 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065670993 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085367289 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069922465 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072218166 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072149337 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072064858 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075848417 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081493436 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069531923 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069613454 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069413182 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06962276 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071698105 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06968674 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07211305 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065641119 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071911677 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069996036 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06931067 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071985677 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069789164 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07817882 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071881497 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081744461 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069443539 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069528507 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075966584 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069442349 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069652958 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06544051 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069748226 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06536193 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075864214 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075948377 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076026809 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071787244 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069479919 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069791002 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069456427 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069644485 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069566152 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081247128 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07505488 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069098339 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084768743 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069396689 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069548736 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07213732 seconds)
  done (took 6.143181403 seconds)
done (took 125.751566491 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211009497 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181324048 seconds)
  done (took 1.708560845 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072531701 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104487958 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080955095 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131947433 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068668625 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104214704 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102499274 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081428658 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068950363 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068622093 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068963075 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071838463 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134239814 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068722393 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068751634 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07221068 seconds)
  done (took 2.706646156 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103736954 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.188703053 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107661957 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066845468 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103276043 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074972779 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066858196 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081325957 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071137745 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068452553 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075044026 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07300696 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068039905 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073310839 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071405889 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075014438 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068631276 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07491134 seconds)
  done (took 2.851240139 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.091933317 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084313142 seconds)
  done (took 1.520281004 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163053348 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.132060206 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206291418 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34069473 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.145500669 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277075818 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131811779 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129636827 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.111670246 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12591231 seconds)
  done (took 3.101338307 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103462608 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172162599 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298296521 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121360237 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073251424 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.086647758 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122145447 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078720022 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079390207 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079433766 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079200793 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076344023 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100116569 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075681608 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073511669 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075360767 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102552187 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072474274 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073542697 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075196986 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101492487 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067513398 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075937873 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072877505 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077581544 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076894325 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068928069 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06713496 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074838087 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073185596 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077976876 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.0835105 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076968354 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104651912 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071242086 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10544555 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075863626 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07187296 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073820737 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071649001 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07663183 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07659974 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07576854 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075367016 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068282342 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075513488 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068425937 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066825473 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078588522 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068621604 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078680806 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077796623 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104435981 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070389283 seconds)
  done (took 6.018281111 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109404031 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109941897 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072172684 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118110593 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109286142 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072041734 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108946333 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10078235 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110512203 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071063723 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069097972 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071219793 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082021276 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081779315 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120379478 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112143062 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074681151 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0716845 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110370706 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110118324 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069254971 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104974776 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098860539 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108801131 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067726883 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07143972 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068726735 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071180272 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075233766 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077457798 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069572014 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081322344 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084665418 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077084587 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067425046 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068488216 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06883583 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079355271 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078731331 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077438301 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07704575 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067726507 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068878441 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070003239 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070558107 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067561913 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077661829 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079753407 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077395875 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068959636 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070470232 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068552117 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070282114 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079608565 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077168114 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080151362 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078576771 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068784412 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068544431 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073849777 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079769006 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078685463 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079105627 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071294089 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077303353 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069266749 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081239501 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083367025 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06905054 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070639104 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068519729 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069377316 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070055649 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076835994 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076711906 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070732276 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069741684 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069076313 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07859469 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077695334 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069176374 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076178965 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067560482 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069027946 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07055997 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071033031 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076169823 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079662135 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07055619 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068732603 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069761179 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068414523 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06717126 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075156645 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079583529 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079240821 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076599309 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068904207 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076978915 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076436827 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069392283 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076981411 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067143207 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069455006 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068475952 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076398057 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07454372 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07648187 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068135962 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06764023 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075010643 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077782342 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067233208 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075645289 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08016017 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.211413083 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069336725 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081182051 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069656882 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078918095 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069867786 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078244174 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069435193 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079090406 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070064873 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068517898 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069000928 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078754799 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071478241 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069802175 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07041245 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069548703 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078807207 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081786529 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0714064 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077381763 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07762859 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071332351 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077695072 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069515295 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078332615 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070905888 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070389177 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067910923 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081047921 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069670906 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070320285 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069672118 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079382741 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069567151 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07960676 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077430459 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068090701 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079955178 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079175981 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076184371 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07927612 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071859237 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069487009 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068962225 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070175692 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07631061 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078474473 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071338765 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069353074 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076458567 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077983775 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067838856 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077697435 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077213266 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077799311 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069253872 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069739953 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080245632 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079671289 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078543096 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077267718 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077925155 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069423654 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076950636 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077016726 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068809412 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08304559 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06875407 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082484142 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077991012 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07606722 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078041384 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079246691 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.0788862 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079285927 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082923406 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068640416 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068674211 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079218874 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069033589 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069508778 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078410348 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07094145 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070634495 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083157628 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069883988 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078349316 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068118411 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079161967 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067484693 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070659525 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08314564 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068959574 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070691197 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079560598 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071524879 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076813018 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078694415 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076989989 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067779443 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070943725 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077467942 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076400896 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067260809 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067168292 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06979194 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074834445 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073880056 seconds)
  done (took 18.551871506 seconds)
done (took 37.81091001 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.233723764 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.169550954 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.203926623 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.126611834 seconds)
  done (took 2.187486408 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.113540887 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105657587 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.089317414 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063569345 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096591409 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062984464 seconds)
  done (took 1.917785903 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.331471525 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.222796994 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196035363 seconds)
  done (took 2.131540422 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.229237081 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.416985798 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473000728 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.289854365 seconds)
  done (took 2.895701003 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146458433 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08570277 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063349898 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081776452 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131571437 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.156174153 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097318754 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122773363 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074272613 seconds)
  done (took 2.403527735 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146730562 seconds)
done (took 13.092429798 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.105428751 seconds)
    (2/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.075119377 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.204834472 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073636774 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.178788253 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.083820394 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070989213 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.19039575 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066680662 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118826078 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.208082037 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.083664657 seconds)
    (13/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.233734131 seconds)
    (14/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.195182563 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.105439344 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177280094 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063571485 seconds)
    (18/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.129926149 seconds)
    (19/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074849827 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098474776 seconds)
    (21/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.233833792 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.1813224 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072726793 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.224842035 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169174413 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090366024 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072796861 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06480174 seconds)
    (29/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.137256 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073354069 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.149997209 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088547953 seconds)
    (33/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.078279289 seconds)
    (34/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090178061 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083345265 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073529104 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.129300979 seconds)
    (38/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.251951379 seconds)
    (39/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073458494 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090976267 seconds)
    (41/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070420629 seconds)
    (42/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.145933019 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072045384 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064471245 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146505469 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062223049 seconds)
    (47/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.178331271 seconds)
    (48/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.176543572 seconds)
    (49/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075223944 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.168757244 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.102668117 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.205846813 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.063145522 seconds)
    (54/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180453618 seconds)
    (55/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.120077989 seconds)
    (56/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.062315744 seconds)
    (57/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.083563987 seconds)
    (58/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.0867429 seconds)
    (59/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073493579 seconds)
    (60/309) benchmarking ("sort", Bool, false)...
    done (took 0.152743118 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.062867637 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103184452 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070268881 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063093876 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 0.064395994 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087257873 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071564479 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07645167 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072908485 seconds)
    (70/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.206926112 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062893692 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072460773 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123937729 seconds)
    (74/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.064087906 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089874561 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06195239 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066564621 seconds)
    (78/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.140272213 seconds)
    (79/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071507353 seconds)
    (80/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.170464616 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.231986959 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062374021 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117042546 seconds)
    (84/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.06336364 seconds)
    (85/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.139751066 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.073894798 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182842575 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069129462 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164349367 seconds)
    (90/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071095805 seconds)
    (91/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.063283779 seconds)
    (92/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.291815395 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.177914621 seconds)
    (94/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.202888316 seconds)
    (95/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069086803 seconds)
    (96/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072142969 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068691997 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13429068 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.063866275 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064479593 seconds)
    (101/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066524143 seconds)
    (102/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.167802859 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091103375 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144447059 seconds)
    (105/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.140852999 seconds)
    (106/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068106997 seconds)
    (107/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.063485707 seconds)
    (108/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.065330718 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105447927 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070431938 seconds)
    (111/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.173656231 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091437916 seconds)
    (113/309) benchmarking ("sort", Float64, false)...
    done (took 0.132184647 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06394753 seconds)
    (115/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064945269 seconds)
    (116/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.065288101 seconds)
    (117/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.200923222 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063851191 seconds)
    (119/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.073675618 seconds)
    (120/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082334325 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.197271276 seconds)
    (122/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.173855879 seconds)
    (123/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.199712069 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063705251 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.101234552 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073143985 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072817913 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.212592218 seconds)
    (129/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.075424774 seconds)
    (130/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.138727427 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076268084 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.212188442 seconds)
    (133/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.076763198 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.167021789 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074668393 seconds)
    (136/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071815281 seconds)
    (137/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.197629862 seconds)
    (138/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076415939 seconds)
    (139/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.068536896 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.199995726 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086645413 seconds)
    (142/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.197490377 seconds)
    (143/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.063556189 seconds)
    (144/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073817435 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072122125 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127753933 seconds)
    (147/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072490665 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119626762 seconds)
    (149/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.063425614 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093925499 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072109422 seconds)
    (152/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064519027 seconds)
    (153/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072305958 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.17216315 seconds)
    (155/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064625229 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095189329 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063350406 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088954251 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.063143473 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063014453 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090310556 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088572622 seconds)
    (163/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06331547 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.077048173 seconds)
    (165/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.064594008 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.063205726 seconds)
    (167/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063320596 seconds)
    (168/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070018047 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141165013 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06462322 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063229431 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108098756 seconds)
    (173/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.199099308 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065814258 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.063416286 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170448977 seconds)
    (177/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.063115216 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069867431 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120499934 seconds)
    (180/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.09139146 seconds)
    (181/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072936489 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062724711 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.063013117 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.063810236 seconds)
    (185/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.062917849 seconds)
    (186/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078573222 seconds)
    (187/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.137230653 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.129302837 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064124863 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076591861 seconds)
    (191/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064133781 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088491157 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.182017071 seconds)
    (194/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.079374603 seconds)
    (195/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.063180387 seconds)
    (196/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142735956 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.137908017 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.062153886 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070945359 seconds)
    (200/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063543863 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064111015 seconds)
    (202/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064770495 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088184639 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.227464379 seconds)
    (205/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076790353 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065396367 seconds)
    (207/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066594599 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076320434 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180251343 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074153145 seconds)
    (211/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067339942 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06542156 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064925074 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.135033977 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138563356 seconds)
    (216/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092954854 seconds)
    (217/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.066158908 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.091618638 seconds)
    (219/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065394936 seconds)
    (220/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073451288 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063718023 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064966331 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072295807 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063911136 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072942368 seconds)
    (226/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119376838 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072338489 seconds)
    (228/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070232983 seconds)
    (229/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091485483 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089697164 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128474282 seconds)
    (232/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.163493351 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063645494 seconds)
    (234/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064991432 seconds)
    (235/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064431202 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072948795 seconds)
    (237/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.174443348 seconds)
    (238/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080425448 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063670212 seconds)
    (240/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072770929 seconds)
    (241/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06688228 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144550889 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064131207 seconds)
    (244/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.065501816 seconds)
    (245/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.065266755 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064176136 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064104793 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062948512 seconds)
    (249/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.140128078 seconds)
    (250/309) benchmarking ("sort", Float32, false)...
    done (took 0.133019208 seconds)
    (251/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.063985815 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089738874 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073214881 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070422221 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071183515 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.095503768 seconds)
    (257/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065007575 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065105214 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071758502 seconds)
    (260/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.063435695 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130885897 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.063833453 seconds)
    (263/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066905204 seconds)
    (264/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.063784795 seconds)
    (265/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064342267 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07059448 seconds)
    (267/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065186323 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063890403 seconds)
    (269/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078991124 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.0643989 seconds)
    (271/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.063710615 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063654578 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.063430356 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064797659 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064475704 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118938219 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081114541 seconds)
    (278/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.064137334 seconds)
    (279/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.062994795 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06337673 seconds)
    (281/309) benchmarking ("sort", BigInt, false)...
    done (took 0.248438964 seconds)
    (282/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066660313 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063382289 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089535676 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064850594 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073497301 seconds)
    (287/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.065533336 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064314338 seconds)
    (289/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064673035 seconds)
    (290/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072050128 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06468448 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063559061 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063465734 seconds)
    (294/309) benchmarking ("sort", Int8, false)...
    done (took 0.169832553 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070700139 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064497808 seconds)
    (297/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.065115006 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064413975 seconds)
    (299/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.063606888 seconds)
    (300/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.063829429 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066516295 seconds)
    (302/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.06458768 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.138250904 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063357472 seconds)
    (305/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064310806 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112119286 seconds)
    (307/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066080185 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177586163 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119762292 seconds)
  done (took 32.507414015 seconds)
done (took 33.907224213 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085950881 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097479875 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072764786 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093515577 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081035235 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097406241 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072218761 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077893092 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08001868 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07889199 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079698034 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070462407 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073957027 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074408931 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072107874 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096584766 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077940591 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072889177 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073242423 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063207435 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072955723 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063967055 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063389751 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070165993 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075564922 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071701702 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07445114 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074094907 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06410141 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064708727 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068924928 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072932522 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06373948 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076566837 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072758697 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073001179 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074573294 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075865123 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063968582 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064388509 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073954732 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063988266 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072626423 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071619572 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068799926 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070469671 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073049912 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077109556 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096210515 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067879348 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073975998 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075944324 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076730253 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069637168 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068966609 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072944059 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069746345 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096145707 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073254948 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067989505 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074005326 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073063553 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070448766 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073062689 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072766752 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074949326 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076679406 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070607599 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074837822 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070763983 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06384477 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073119403 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068323671 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065856909 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075203018 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076644678 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063339251 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068524933 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072269571 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072342699 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063934995 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067512289 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063413593 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068547612 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067632412 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070206398 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069036584 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071714334 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06352956 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073374782 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071500436 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071828846 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.0636318 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077095001 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064390348 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070037215 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064399478 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064061959 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06363214 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069461142 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063907082 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067642185 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07280456 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063173208 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.06870003 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078489856 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063887676 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071855699 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063945281 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063928718 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076169917 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075044793 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064029601 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068067713 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063315772 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069469026 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063608629 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063649799 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06386935 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063995866 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068186931 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063885376 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067622142 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069069586 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076955347 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063658008 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06836367 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067677684 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063765689 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070095993 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063870285 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063592716 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063013731 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077591254 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066847494 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063607338 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068303076 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066918744 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071716362 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062469054 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071714629 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06839908 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.066698949 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.06920146 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061724127 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073597767 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066429181 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066119216 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062007317 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062393574 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06171843 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.20312156 seconds)
done (took 12.43628753 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065695717 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.114585769 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.082856117 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.091233644 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.080018349 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064987071 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.071247024 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.084647253 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066095532 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.086733134 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085917735 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08673005 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.103099784 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063551081 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064095265 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065310148 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065810383 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069385815 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.087311232 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087102041 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.095181819 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064144878 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.074241205 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.079937561 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.076684625 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.086439035 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065145613 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065607266 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066792569 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082976139 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09057524 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06739855 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065619704 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.080423744 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.080887623 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.076339198 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065621171 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.07024914 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065632958 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064612158 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066335235 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079839807 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07012018 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072472273 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065977073 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072405223 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065962166 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.074938442 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077328254 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.070028453 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.074381105 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.08031736 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068554824 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.073974864 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06374934 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.075794615 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.067759015 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065058811 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06531117 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069602899 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064874332 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067454327 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.069127527 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.06591258 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070625516 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.073927243 seconds)
  done (took 6.368654588 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085990902 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092493991 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082598989 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083120713 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06461451 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065320766 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.0656125 seconds)
  done (took 2.045629146 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065387695 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087818175 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091128801 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091056618 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083144143 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092170531 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065171015 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09898257 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064006983 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086244013 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.124782823 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092030579 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068857844 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077398564 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064817789 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.081489191 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065197765 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073769586 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.082856264 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091349385 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06987743 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092510488 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07858707 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065503793 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.100991466 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078453437 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064354161 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065213693 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066661048 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066546301 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066148485 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109803872 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078757561 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080140667 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06640375 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.065377467 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079345381 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068326652 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.076723874 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075231722 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07909525 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066429401 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06426812 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066737943 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068231247 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076895558 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06400212 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066619442 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066186628 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086126901 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063840749 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07849977 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069146958 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070780781 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07127804 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070264866 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073484543 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066860529 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086219191 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073252273 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066324018 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083566306 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082860821 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079142149 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082635158 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070166719 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078011883 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079211352 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066098388 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067125176 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066958714 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082478897 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065155397 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067290381 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06835123 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066945911 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077226493 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090938201 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090819981 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07932141 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065517555 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066359429 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.077930608 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091314165 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070875018 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066278847 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068114792 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064193017 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068692783 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066806174 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070681635 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066415727 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073707422 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067643008 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068959142 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082674094 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064197456 seconds)
  done (took 8.796820738 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068294872 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067487006 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069349268 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067108243 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067150566 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06707743 seconds)
  done (took 1.943771805 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092465224 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066972287 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08210941 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067116422 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106741209 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.082578495 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082749316 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077642222 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079472267 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079664894 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082137292 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.085436279 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.080654275 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.068786536 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082478779 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068357661 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082883455 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070982799 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079090837 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069287079 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080696578 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.06847307 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068947889 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087081557 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069836352 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068116518 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075719424 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079268613 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079083031 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077588728 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068136872 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069488986 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074894201 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077759465 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.082833008 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076931309 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066830168 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073417661 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068971623 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069866613 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085675165 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068748233 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069441071 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073197307 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076994428 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074594925 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073313653 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07558416 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082146182 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073158719 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072790333 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068243495 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070080414 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073154053 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074930844 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077387879 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07323057 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082702107 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068305972 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07486216 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066870656 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069798732 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077167305 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070099806 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.074718205 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07311146 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074647537 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068758039 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069100079 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066779785 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073548256 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06679793 seconds)
  done (took 6.914928356 seconds)
done (took 27.555948499 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.949491338 seconds)
  done (took 2.43681346 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.614721517 seconds)
  done (took 2.135970987 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.337823089 seconds)
  done (took 8.856762867 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.382857833 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.3974545 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.800862186 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138268486 seconds)
  done (took 3.271131463 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.709114793 seconds)
  done (took 2.236320445 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239330503 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226641544 seconds)
  done (took 2.005233774 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.359626242 seconds)
  done (took 1.878286632 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.101127259 seconds)
  done (took 2.622712655 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.276198206 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165763888 seconds)
  done (took 1.970055824 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459880237 seconds)
  done (took 1.984139187 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.387420248 seconds)
  done (took 5.914711498 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244731466 seconds)
  done (took 1.809447156 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239852017 seconds)
  done (took 1.768121803 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.773385133 seconds)
  done (took 3.299845595 seconds)
done (took 43.72108271 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082390488 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08544745 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084765833 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080711941 seconds)
  done (took 1.840023388 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.073893737 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.069952757 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.073741934 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074122796 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070884135 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072815238 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.072540342 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069745864 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071017491 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.069047558 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067920661 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.069124471 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072563983 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069322146 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072221095 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.074142095 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.069395695 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.069041362 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072393001 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.068746496 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.072029189 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.069143548 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067498629 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068458154 seconds)
  done (took 3.2291813 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078205928 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072659099 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074297592 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070995422 seconds)
  done (took 1.833084868 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.075255439 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.086692927 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.088643581 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.093473651 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075537573 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.076793374 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.084945127 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.085144587 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064703102 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.089258954 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.067518916 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065752474 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065544827 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.087155683 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.08436075 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062965361 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064128271 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075709581 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.075055054 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.077483102 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066644732 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064495317 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07516381 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074982207 seconds)
  done (took 3.361088374 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081655504 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06460745 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080865291 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092869937 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093531964 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064516716 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084311468 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093127053 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.13906761 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064997119 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07072181 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064694946 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104931516 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064985895 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083165173 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107246855 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110568315 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068291247 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09825376 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064818644 seconds)
  done (took 3.241188786 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083878216 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068651432 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069794308 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064824074 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075243368 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072252977 seconds)
  done (took 1.979810898 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067211045 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066615598 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066982429 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065937706 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071237317 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068738069 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065542359 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066724619 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066676501 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065870009 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065667917 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064511826 seconds)
  done (took 2.343475936 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.165175993 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068463487 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06947879 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06502526 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071842034 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065574222 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081623268 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067541597 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.084451754 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065319018 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065077934 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067924384 seconds)
  done (took 2.479469512 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122084629 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153414051 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104682613 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073191145 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198510753 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108047708 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.091434664 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.136072335 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102470401 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.07007028 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10466936 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144856716 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105889644 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.116347351 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086131651 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142425967 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116627007 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096040654 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129279813 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086847371 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070748775 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162451979 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070902961 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099062178 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120402015 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.104176746 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121833588 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144876463 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093481398 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.09565856 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082997124 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077927889 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117143953 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084669876 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.107219751 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104760655 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106711844 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092197449 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.086997141 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138145029 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180806896 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110958599 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113098511 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143903801 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080081164 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.118953882 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086947502 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111507349 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124343171 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104186762 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077065971 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098824419 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119421183 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11504651 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.085212601 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087188303 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13166804 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.112449273 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11012658 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081355804 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111185027 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.096767154 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113316484 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133575629 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15196397 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104798448 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293169233 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131464068 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110531015 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.097475325 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.102338708 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076346194 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127554555 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112995651 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153364203 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129291913 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112251057 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.0981633 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088945641 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117000537 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126309216 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105251504 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104529295 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164677346 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122304581 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10014808 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101256153 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.143905268 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072475432 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171981588 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096888456 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126415598 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111131718 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154922493 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101267898 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.088154648 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111687031 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116311467 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101061858 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115770952 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092312406 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127503555 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099619261 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112258691 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085022745 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100302328 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091073074 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.10345744 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077886436 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116509447 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128968602 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1267263 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076628275 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117058463 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095986139 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077730793 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104778408 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155767503 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08539755 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07797209 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163774178 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.098390365 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.123253357 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118250954 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.085795795 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130030317 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154986017 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096095583 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097157954 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076179341 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.320967019 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079565584 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130920154 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088117742 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109796794 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112038402 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153759093 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151903177 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104142525 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080992131 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09840411 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.120377857 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095064174 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092738539 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079053283 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118971702 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143998804 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.110258593 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08394608 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.098921473 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.071082022 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130640354 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079684737 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084984493 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104898391 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.095759793 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.096138235 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161359141 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.087836224 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121493625 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102464983 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.068108959 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095620277 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176681407 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08630221 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.117015291 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126242492 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09235484 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069294758 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.111961238 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075504144 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121325207 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.104216177 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112827658 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08086569 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114961402 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069873307 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075247896 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148618217 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111635582 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100786521 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14917525 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111757087 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.101097819 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118907997 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.103715451 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104137681 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110229281 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.115685624 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114861881 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.075201792 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137255638 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098666658 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078858563 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093431271 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078686624 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077779108 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111621831 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125771823 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248470196 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108456961 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111614442 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100197609 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109239261 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093648135 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081443494 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145237811 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078960145 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.0779653 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099972954 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118635685 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092190439 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150161662 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080745511 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149205798 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10521642 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087018989 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124602564 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070285498 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071741192 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08937968 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103035914 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130141566 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080462404 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080659013 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13101596 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145632393 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109832923 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116222882 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069991786 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103032176 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153513452 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.117303035 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08427722 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119368628 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088338811 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139105808 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104952621 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136895629 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112161375 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121335382 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.094051497 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082745591 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075844167 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093019529 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119418103 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087943874 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084401981 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068890035 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075825635 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102355736 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101480889 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127072049 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097109386 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149050933 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074414558 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115812457 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116453229 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117005094 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097735419 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102701326 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.096850002 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093050439 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096402185 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094824621 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07518166 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140822188 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11469427 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079486868 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091948411 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10334453 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.26443476 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120039611 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116537836 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100911696 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11631631 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132988896 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107253097 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090075532 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091582539 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104995512 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.093504943 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084377822 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113139002 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130219449 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107333494 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116009973 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.097772201 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.09381461 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120525637 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105104432 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093446377 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.125084265 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170411848 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.105012004 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116663268 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089694308 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116410705 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111365822 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119071957 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.120947736 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121512448 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071709116 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078540644 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.07165374 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115272053 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082238069 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129350489 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079275739 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112770378 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106942306 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083048415 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067683565 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105593677 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095051134 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.085896137 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142283326 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114032628 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075284967 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102975618 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113642186 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090270435 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134870621 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.104529579 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107590583 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073561849 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101108692 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078016062 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117032538 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110525815 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085405313 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.077821266 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.071575952 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117127746 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08813254 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116937788 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099299511 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107562645 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125540626 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152924242 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093152454 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098997973 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128482474 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117773269 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.086189249 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274965536 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150375598 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.138181425 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087529088 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.092760169 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113210188 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112049516 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105775586 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079906189 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080713686 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121911484 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12299536 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069846723 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087906241 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073582036 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.092471205 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127496613 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106756475 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086494144 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127844915 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078212332 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117853793 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104174555 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139632672 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134437454 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163675334 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101843682 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086828379 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080759611 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139802372 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.073432202 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128205502 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122323666 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096678683 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070185251 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089483804 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10066458 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.643804421 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116059756 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077455241 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148941499 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092804515 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126440097 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092684732 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.125923033 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099425861 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10649012 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097974606 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150116189 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085808174 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118563257 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.17727418 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119047263 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115961189 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076888121 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085722417 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075642085 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.084912915 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088698 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094295063 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11526491 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092170237 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111474868 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.082398739 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115388687 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099388551 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093307182 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.106637125 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234651041 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154368749 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094539097 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143716396 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116816409 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081516236 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078504296 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.094612876 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110689013 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084911327 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097616067 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081685358 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.080986764 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168113775 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115822443 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088985008 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106821489 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.095704744 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.095314463 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096528735 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130136559 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119249814 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076568211 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.091077621 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11006388 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081720323 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077506972 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101958231 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071910402 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097795278 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111806873 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10460744 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099583254 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113869751 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080617674 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095771896 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118731772 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090382823 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079402814 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079110239 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081017589 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.077901391 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109474502 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116110458 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124550521 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122181751 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094881764 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106499609 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.081459638 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.228364646 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083412133 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101359447 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.109466707 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079213254 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.137200923 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093816276 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09875196 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105624337 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108311268 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166969316 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075390796 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118748007 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095446088 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117234366 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094120244 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116732599 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10240588 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102604362 seconds)
  done (took 54.232056432 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.095449609 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.14266057 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.152071252 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081948455 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.095962457 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125270313 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20362927 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190796825 seconds)
  done (took 2.770780615 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.076062585 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09822131 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101867708 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082096115 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065397362 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074353323 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.246164462 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08035153 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065300192 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100026452 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079417847 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066994302 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.458798461 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065039201 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066057792 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07693465 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06563747 seconds)
  done (took 3.512941691 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.402576635 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610035259 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374105096 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07432286 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.795742863 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088021002 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.236088934 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137298119 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080090119 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.500152056 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365844704 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126701762 seconds)
  done (took 18.447549372 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081043938 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077130681 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090111955 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089669169 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076576027 seconds)
  done (took 2.066265948 seconds)
done (took 102.880838438 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08029491 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.216697095 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068186605 seconds)
  done (took 1.965308627 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.091840346 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089705993 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090144539 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.087588803 seconds)
  done (took 2.015912218 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073859264 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076676838 seconds)
  done (took 1.801883124 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.239348421 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173350713 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096904755 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083297127 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079848971 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08109169 seconds)
  done (took 1.900739796 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072289782 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072854426 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072526903 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07830485 seconds)
  done (took 1.944001055 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069421855 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066300058 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068549713 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071878972 seconds)
  done (took 1.927412865 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085111314 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084935988 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078760538 seconds)
  done (took 1.899247931 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108479854 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097000959 seconds)
  done (took 1.858060746 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081968677 seconds)
  done (took 1.737630183 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093526433 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101496128 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135842174 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114922993 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144662931 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11988359 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.081063183 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086892912 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076725923 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.083126842 seconds)
  done (took 2.692403497 seconds)
done (took 21.986499826 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078995046 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368079457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36061635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092474758 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.703620685 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356255884 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970381831 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091991138 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107880582 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06827589 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086590586 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647333183 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.994259981 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324299472 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.949541182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319335422 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648740066 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067521556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067204684 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068143308 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955433274 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066989059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068555262 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067685595 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648267492 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37369625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069161095 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321453695 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067527436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070310303 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355189368 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06922678 seconds)
  done (took 16.13721101 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070068132 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122236065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073836177 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08553685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070560881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069387981 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071275477 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068494316 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117950305 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068438297 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086965697 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067089445 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072159539 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069430986 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089610627 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067638701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069576631 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068910483 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068436196 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070059446 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088666512 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067721238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069202239 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068975098 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069068778 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082108836 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070415712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068290026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068641435 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071278231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071968513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070290969 seconds)
  done (took 4.082528425 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117084282 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126558959 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0750384 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106726136 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117837414 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070383881 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148419846 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094700226 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120545686 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068429842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087139899 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068043415 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103203335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069947198 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090562838 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069116791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07040908 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068816104 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068203865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069632922 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089280887 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067720711 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069385525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069061982 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069736836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084104827 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070224314 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068192317 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068584647 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071499724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073805863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070300047 seconds)
  done (took 4.354888236 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069302769 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072380275 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080068533 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081204325 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067067225 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068784506 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070030482 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067324781 seconds)
  done (took 2.250005977 seconds)
done (took 28.490011017 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078455034 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067940333 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07083248 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087060023 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073368197 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078906516 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064857623 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073518922 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071488746 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071470144 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074808508 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065756354 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069151048 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064406911 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071827725 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065889121 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08034421 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069716651 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078916322 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07992857 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068933498 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071892835 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07435444 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079926434 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080009704 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079687227 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076379414 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071797314 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067332643 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069648153 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068834314 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078854971 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081330839 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082004855 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066224848 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066683994 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070824323 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068355954 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08058547 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075905022 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068002601 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076344896 seconds)
  done (took 4.726321496 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085163984 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090430518 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083413425 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08138838 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100403123 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081710797 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087762583 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077827141 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.075839738 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085964679 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072622405 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079466991 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077523085 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071346003 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075613033 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073396079 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078524203 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072580591 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076575985 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076379829 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087985656 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071085332 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088308611 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077988384 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073543026 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079515896 seconds)
  done (took 3.763547368 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072607546 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084581822 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091237658 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145638899 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111575686 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084701934 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080412951 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091616847 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095730764 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067091323 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071175903 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091880756 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091391731 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073773939 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.109554697 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083237146 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079035194 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06887763 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074633083 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095601408 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088232361 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084826183 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09455963 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083667175 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06664726 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069220283 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071649967 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081604416 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070982658 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079446408 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071041772 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071171886 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067985075 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078740085 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070644507 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06641893 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087222843 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079407349 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079758506 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105757265 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076384239 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067529711 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094683081 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126981019 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065671334 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070149171 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069946576 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078599458 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065689855 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093519832 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080989654 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.0662442 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067329022 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066002484 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065996193 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.069912041 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068527442 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068640659 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077388585 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073326506 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085218345 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071750848 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086117643 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065824255 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076952341 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065824397 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067792548 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065473655 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097666248 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068516478 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115577539 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067520928 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06627999 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078387297 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077230099 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072691454 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06632655 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086986576 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077519733 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071081525 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076978022 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069439255 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069978138 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096733748 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066699875 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065954536 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067531385 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069930087 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070037648 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067371445 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080653937 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065937415 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070584255 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087545421 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066224724 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067274759 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070124455 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068971624 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065992628 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080495523 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071700212 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068024756 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07892495 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067126155 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069711148 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080105021 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073746891 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065525437 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068725711 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070104015 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068340471 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06886361 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070141612 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069079181 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073291827 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073828269 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072743337 seconds)
  done (took 10.714648465 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.173680957 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.164857963 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069254767 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.155499266 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07616536 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081201248 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157143468 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096859677 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068059109 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068641197 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067111921 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110673279 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105901589 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116037732 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079917628 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067789942 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093394291 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114775446 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158980594 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153725491 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09015918 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.0754015 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069500503 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068339153 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068771233 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076996218 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084249633 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075737752 seconds)
  done (took 4.503739935 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080769017 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103427786 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071557894 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090459392 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08987898 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068518411 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069426061 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069077583 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083540265 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07998968 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067426421 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072895786 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071064892 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070325525 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068218651 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073991918 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07449679 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066724272 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.0711311 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072876615 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077491973 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095393533 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072763748 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067386426 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069858754 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067085485 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07941483 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083135819 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067789163 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104407922 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065024738 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072456383 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082196272 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067660802 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066929125 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067282063 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067231138 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067467994 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067583187 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065966021 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065807661 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071748814 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066154887 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07876341 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079702281 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074054905 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069678881 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070347435 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069934106 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065006896 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070387874 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069915118 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07020662 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074859115 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071700601 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069893891 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067975465 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096238123 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073455427 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066737763 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066805992 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065995357 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069562926 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.08093715 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082352792 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070123795 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066131399 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067239834 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081140293 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080168774 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066849207 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071783074 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064690669 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068262429 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069566523 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069812431 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068241916 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066277056 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06711977 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067344233 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068080587 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066967751 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067165096 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069888218 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06547107 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065851941 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069701996 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069586804 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079126855 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066928557 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070988734 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068105073 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066139059 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069890352 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072734715 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070180849 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.0784379 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081563089 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067494144 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065753482 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081625825 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069723464 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066708322 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073112721 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071871595 seconds)
  done (took 9.316509113 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088784411 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068280864 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084435407 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090717676 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.0772577 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073028889 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077725584 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068424277 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083451739 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072418056 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075887852 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066279861 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077691204 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076668086 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068118962 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077585205 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072393421 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084841333 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081284583 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066101468 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07538667 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079193559 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079127209 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081354239 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080608881 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081809602 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079405541 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077002793 seconds)
  done (took 3.891891637 seconds)
done (took 38.58567276 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.770970163 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.014776813 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.756299871 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.026554194 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.811819252 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.995193801 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.912353166 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.757955294 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.86726263 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.802285954 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.082806447 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.274447758 seconds)
done (took 65.8821198 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.784567581 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.907398391 seconds)
    (2/2) benchmarking "String"...
    done (took 2.011421996 seconds)
  done (took 5.603931932 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.956250752 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.402395983 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.013381945 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.750001257 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.756370946 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.181350191 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.526231901 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.199777818 seconds)
  done (took 30.513772123 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.876646287 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.967411321 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.420340231 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.453236995 seconds)
  done (took 15.448729489 seconds)
done (took 63.082907311 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.763119098 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.751053551 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.806581767 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.784861939 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.758968083 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.753974665 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.752860187 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.753134265 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.807826097 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.776423481 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.751559413 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.768797671 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.753141376 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.808260104 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.259463551 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.799844302 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.776368213 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.751564214 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.77189351 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.805924803 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.755729267 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.750464786 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.225403903 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.905415182 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.358351309 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.943146732 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.10719277 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.161997374 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.768265599 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.907861549 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.806200481 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.135721591 seconds)
  done (took 203.467956259 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.753156121 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.552505187 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.617140525 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.795177178 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.056161104 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.927779915 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.855030283 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.137769803 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.754215961 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.754696166 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.890713543 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.754549059 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.934659013 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.696722488 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.789326345 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.840098768 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.8938846 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.952721336 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.792215901 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.916545686 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.756548793 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.706921779 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.65570665 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.888959543 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.773028492 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.848322351 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.775255442 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.775409308 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.944538416 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.86089526 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.794905488 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.762467021 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.936229787 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.623523257 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.761953066 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.766695524 seconds)
  done (took 167.983705734 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.948542961 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.76039795 seconds)
    (2/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.753090792 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.753378813 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.80878633 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.875039146 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.755859038 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.432222589 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.763561309 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.885762596 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.759389162 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.753899916 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.756084435 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.755337657 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.767100274 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.863862865 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.758099569 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.770562195 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.756152051 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.778815965 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.757441526 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.754858441 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.755159553 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.754345789 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.753359736 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.754438801 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.754081447 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.031049031 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.003570816 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.756983565 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.755408742 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.243855512 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.766512102 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.823422673 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.760928402 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.846580093 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.810416499 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.874965966 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.75564164 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.971792919 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.755496924 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.828087583 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.756244657 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.756092031 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.81961192 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.767536709 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.75601644 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.757770266 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.761883046 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.821130039 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.0007034 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.758896952 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.875995172 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.233278737 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.755692541 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.754835809 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.756302279 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.327217622 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.758653473 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.756501921 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.762336114 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.762140278 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.760417241 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.755719001 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.143838152 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.826987248 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.848036275 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.761846941 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.964781338 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.760032211 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.252219019 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.903561826 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.757992103 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.756588699 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.757309596 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.758303417 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.75719193 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.759628143 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.881742105 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.765820731 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.873048064 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.837637891 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.878290847 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.759836449 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.767158491 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.572621964 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.826300288 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.793964148 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.580518397 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.757405432 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.131960695 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.525591069 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.758007596 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.757993401 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.770351367 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.760800321 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.757088855 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.758018592 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.837844165 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.758523937 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.757833691 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.877299713 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.465583716 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.025840989 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.760627674 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.759166035 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.765840676 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.839788393 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.881087574 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.760782149 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.823342857 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.763943798 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.760063119 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.848081416 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.759745729 seconds)
  done (took 397.66640511 seconds)
done (took 772.807520453 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.392824018 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.364153611 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.460528509 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.378441724 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.351042374 seconds)
  done (took 13.641946791 seconds)
done (took 15.334569989 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.773992729 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.76380467 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.817337251 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.842888777 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.774931052 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.778417848 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.840440094 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.779268686 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.809979639 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.812917806 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.843322693 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.846446993 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.787099357 seconds)
  done (took 25.165539214 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.770070922 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.912816206 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.982793657 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.800659066 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.770197116 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.010019826 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.824768568 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.900936266 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.908634727 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.994730939 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.993532125 seconds)
  done (took 22.565856495 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.768648546 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.911048024 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.99294821 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.802237581 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.772847716 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.993103323 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.829740638 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.905849558 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.91043863 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.990498974 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.005147286 seconds)
  done (took 22.586261472 seconds)
done (took 72.013690879 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.763360661 seconds)
  done (took 3.458869641 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.783767429 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.928888809 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.76283797 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.760865069 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.76381904 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.763443928 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.764548871 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.763816422 seconds)
  done (took 15.990776403 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.763205214 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.762929828 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.763750195 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.763480669 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.764161525 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.76406679 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.763183378 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.763267511 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.763702012 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.763404699 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.76334407 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.763604635 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.762652256 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.763547909 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.763957717 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.764675112 seconds)
  done (took 29.914615389 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.765901932 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.763402929 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.76425286 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.764784819 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.765859577 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.765269906 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.765039719 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.765062104 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.764996322 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.764156895 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.765005346 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.764264832 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.765589636 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.764600397 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.767519578 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.764885313 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.764131381 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.764540081 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.769038411 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.764815822 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.765997587 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.765540763 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.762983573 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.763302318 seconds)
  done (took 44.065079927 seconds)
done (took 95.13302911 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.527948424 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.36227112 seconds)
  done (took 9.588643124 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.768516302 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.764511037 seconds)
  done (took 5.300613658 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.76351749 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.763875067 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.764281787 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.763666817 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.764505545 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.763595853 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.764509272 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.765273222 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.764805244 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.763788248 seconds)
  done (took 19.339009388 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.764885259 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.763350224 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.76523144 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.765397071 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.765988005 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.764909613 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.765875797 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.763583165 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.766164768 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.764197427 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.764624322 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.765170984 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.766543438 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.765193492 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.766925667 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.764634601 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.766240044 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.766494743 seconds)
  done (took 33.473453696 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.765427837 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.769934113 seconds)
  done (took 5.234659841 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.765979622 seconds)
    (2/7) benchmarking "second"...
    done (took 1.766106716 seconds)
    (3/7) benchmarking "month"...
    done (took 1.765605874 seconds)
    (4/7) benchmarking "year"...
    done (took 1.767504641 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.766933431 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.766121983 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.766385747 seconds)
  done (took 14.064098873 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.766120316 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.922911781 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.981182205 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.434052664 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.766979414 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.769271373 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.654050969 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.767380318 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.769458728 seconds)
  done (took 19.530636291 seconds)
done (took 108.22791224 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.51734538 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.768181034 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.064765698 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.827485103 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.776312972 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.107823764 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.781999012 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.068979018 seconds)
done (took 42.611590456 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.846908419 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.765332216 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.79337296 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.793092385 seconds)
  done (took 22.052001449 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.767638217 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.185391802 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.796695434 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.627273261 seconds)
  done (took 22.273255198 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.134691336 seconds)
    (2/2) benchmarking "read"...
    done (took 2.156435258 seconds)
  done (took 5.996048384 seconds)
done (took 58.868820555 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.76708951 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.767619968 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.767118206 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.767043946 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.767439973 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.768457356 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.76998471 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.766871625 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.767880311 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.767380882 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.767452688 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.768248008 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.767260037 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768292661 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.768520359 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767679885 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768246077 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767272154 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.768973227 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767847223 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768116624 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769419309 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.769861667 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.770042349 seconds)
  done (took 44.137780493 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.768698901 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.769018243 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.769493594 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.768224242 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.770137246 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.769595931 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.769269702 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.769441678 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.770210916 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.769157435 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769321574 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.769517792 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.769057141 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.770085944 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771136559 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.772837128 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.768494872 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769789964 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768836591 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.770277436 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.77084233 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769852093 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.76940226 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769027747 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.769989562 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770386794 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.770846042 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.770971753 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.7707598 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.770446283 seconds)
  done (took 54.797883458 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.770586291 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.773211689 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.770635259 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.770326408 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.769482998 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.771473781 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.771371386 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.771058463 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.771614982 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.771010841 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.77196659 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.771666225 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.770026278 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.772146737 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.771601806 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.772638846 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.770784346 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.771016362 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.772759687 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.771600729 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.771913201 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.772964095 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.772248262 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.772861292 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.772642483 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.773521256 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.772699895 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.772605937 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.772687046 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.773168501 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.773036272 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.772432296 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.771864863 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.771854737 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.774273512 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.773187081 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.773672801 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.774108323 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.772501036 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.772688912 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.773577404 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.772730577 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.772578213 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.771758824 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.771658215 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.772758006 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.773413544 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.773214871 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.773800992 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.773132544 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.773510121 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.774310015 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.773975623 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.773389629 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.773773233 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.77404811 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.774269675 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.773798105 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.774800673 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.773837644 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.775224837 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.774076374 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.774133617 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.774007441 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.774615979 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.775444296 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.77382583 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.774850618 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.777088116 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.773698269 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.775476554 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.773691295 seconds)
  done (took 129.354637914 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.775433519 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.775145296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.774160413 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.774562648 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77501745 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.774920607 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.776251855 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77461518 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774421301 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.776022286 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775765792 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.775645378 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776392581 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.775306784 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776376378 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.775316496 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.775432928 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.776266046 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.775216868 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.774248779 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776000854 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.775839258 seconds)
  done (took 40.767171456 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775838314 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.776212636 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.775745492 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.77458407 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.77638253 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.775869314 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.777174782 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.77781162 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775424653 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775484044 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774927576 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777412969 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.77497407 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775423714 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776496149 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.776282921 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775648996 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777765925 seconds)
  done (took 33.679565492 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.776577153 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.776778126 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.776081947 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.776684452 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.778322555 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.777448914 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775768389 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.776555661 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.777048885 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.778025309 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.776533532 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776279575 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.776593067 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777492066 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776917641 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.777333057 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.776017583 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776307211 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777692703 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.776144906 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.778509551 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.778038673 seconds)
  done (took 40.803217417 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777362741 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.777400785 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.777701455 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.779050144 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.778549916 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.777516346 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.777715213 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.777490729 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.777882297 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.779679703 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777236679 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.77935874 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.778217544 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.778416444 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.779149208 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779571388 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.779846153 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.778579896 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777415701 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.779093306 seconds)
  done (took 37.280749748 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.77831581 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779173005 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.778080115 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780556487 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.779175283 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.779110361 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778881253 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.779336649 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.779163106 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.779127092 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.779657064 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.782403312 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.779232226 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.779250229 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779467056 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.779495104 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779957462 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.779522706 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.779511595 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.779368645 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.780430539 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781402768 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.780348665 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.780048206 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779337959 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.780854643 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77959937 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.780632751 seconds)
  done (took 51.543917336 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779172803 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.779708391 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.779700884 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.779557762 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.78115364 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.779295629 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.780137783 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.78006774 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.780336269 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779770974 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.780294401 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.780860765 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.779752098 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.779771901 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.77961568 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.780896142 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783589924 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.780112591 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780049341 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779827692 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.78043453 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781039121 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.780851708 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.781341967 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78116707 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.781252889 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781421166 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780608069 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781134258 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781074711 seconds)
  done (took 55.129802512 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.801707546 seconds)
    (2/2) benchmarking "in"...
    done (took 1.801566528 seconds)
  done (took 5.31742288 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.781760987 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780479354 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.781274555 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.780454075 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.781029746 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.781272453 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.781483441 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781986235 seconds)
  done (took 15.966726945 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.782011716 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.785636914 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.783342569 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.781945452 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.782922739 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79038051 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.784495109 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.786426288 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.784615076 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.784128575 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.786049398 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.786455776 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.789359116 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.78619865 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.785640915 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.784337858 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.784653226 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.786173698 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.785807734 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.783390729 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786711761 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784111784 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.784420131 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.784267366 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.7871958 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.785156078 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.792119142 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.785063534 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.785811141 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.783746381 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.791722422 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.783687966 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.784565416 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785774705 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.783205134 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.784107559 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.791686867 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.785513945 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.784275188 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.785380068 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.788065322 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787247277 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.787662642 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.792613491 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.784748348 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.78546758 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.784919634 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.783838088 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.785640001 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.787875421 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.791714047 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.785181409 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.784928845 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.784555185 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.787570968 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.785339643 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.785051772 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.789280375 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792269083 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.792313427 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.788917764 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.803542594 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.794507022 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.784795904 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.785832184 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794140758 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.808534511 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.787841492 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.789980753 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.785680873 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793368751 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.785802807 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.785628163 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.786638968 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798467806 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.793024422 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.787929588 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.786245174 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.787494282 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.78681569 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788594426 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.786372677 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786428356 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.785607213 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.796645326 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.809975024 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.786739716 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.786575422 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.788659962 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.788883914 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.790057191 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.790939653 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.787040782 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.787298016 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.789003025 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.789109343 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.786596483 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.787805931 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.786819197 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.795161815 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.786870469 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.786835693 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.790800326 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.794983228 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.788067086 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.788055344 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788623267 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.78754487 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.795658582 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.78819755 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.787569446 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.787440454 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.789710834 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.791298866 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.7884154 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792171365 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.795423132 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.796229408 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.791938927 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.792940142 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.792112309 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.792781509 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.797583298 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.810954502 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.789902921 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.792498407 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.793959764 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.799945278 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.793284856 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.788984354 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.791686531 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.788442121 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.787941215 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.791827695 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.78939448 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.7887842 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.789806303 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.789059748 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.78990645 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.789568955 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.792566867 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.792064308 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.792247795 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.78971725 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.793070973 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.790704512 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.792297852 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.797183402 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.789933253 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.790613682 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.789886235 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.793870303 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.79183622 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.791107023 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.789642016 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.790079708 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.789976667 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.791520894 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.794183677 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.791164473 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.790750386 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.790962333 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.794658574 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.79138212 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.790723124 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.791867749 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.790502682 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.790513578 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792211763 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.79129744 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.792959661 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.79070947 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.794585226 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.791556753 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.78978757 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.791624491 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.790736465 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.792452156 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.794339616 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.802655903 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.794133062 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.800517793 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.791105427 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.798271884 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.791080039 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.793772777 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.792921045 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.792187942 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.792391875 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.790995879 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.792534101 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.7966414 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810912584 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.802230592 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.7949005 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.793604323 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.797428151 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.795490769 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.79709328 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.793141985 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794850067 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.797574743 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.7940196 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.793925585 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.793426453 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.794850219 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.79236335 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.79353827 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.797705625 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.793173704 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.792683794 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.794510413 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.79259305 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.795118157 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.793719049 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.793442633 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.793744045 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.792755841 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.800024643 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795831385 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.792560316 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.793957005 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.796115084 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.793606476 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.794103061 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.796510085 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.79669845 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.792494803 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.795139615 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800862694 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.795388305 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.794530171 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.794426831 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.794608687 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.79599455 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.794400681 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.79685343 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.800555512 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.797491536 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.794017468 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.800081827 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.794183395 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.799556593 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.795012332 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796601247 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.79453701 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.798514895 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.795063194 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.793774356 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.801206589 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.795934844 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.797258272 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.795800488 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.797541736 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.796138522 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.797613442 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.795199672 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798882555 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.802294253 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.801458894 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.797979816 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.799000504 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.798426468 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.7968121 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.799103096 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.796512755 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807288611 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.804020359 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.796005832 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.795457199 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.795198822 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.799576008 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.795435313 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.795200825 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.803193786 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.799601745 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.797272854 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.799606749 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.797115726 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.796580022 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802590289 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798543132 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.799389372 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.798922357 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.799254913 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.798341928 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.796843402 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.798021654 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.796531714 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.799559658 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.802122499 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.797527066 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.798622784 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.797243175 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.805038736 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.797835559 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.79845139 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804660824 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800557233 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.798364768 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.798744566 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.797176895 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.799174836 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.799847224 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.798362537 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.799976918 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.798346631 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.802541665 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.808150716 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.804356614 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.805000068 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.800888447 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808880587 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.799799725 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.798527001 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.798502838 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.802406342 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.808034922 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.798565939 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.79850072 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.80569453 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.799861448 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.800483305 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.802933783 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.798630299 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.800862466 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.799093405 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.799985169 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.804350787 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.802003806 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.799197712 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.798607019 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.79934328 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.799702216 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.80292146 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.803975461 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.800516395 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.801046249 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.799223832 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.799804517 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.800579026 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.79992665 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.799845534 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.799672481 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.799721928 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806912019 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.801544564 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.80166859 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.802765492 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.799914285 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.808226959 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.800837432 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.801333157 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.801296547 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.799798463 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.803224984 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.800468377 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.800927609 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.801882881 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.800709965 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.80215716 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.811966955 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.809513196 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.804901371 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.803059094 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.801302451 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.801667862 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811824054 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.824885644 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801657027 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.803436201 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.804980201 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.808971856 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.803421076 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806682216 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805603223 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.809158834 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.803356865 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.800892833 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.805123607 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.814203356 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80255026 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.802664243 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.80078288 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.807281752 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.804967125 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.801880381 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.803827346 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805152549 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.803864871 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.813595271 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.802712603 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.8045338 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.803123787 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.802158074 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.803309538 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.801926988 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.805431764 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.804760122 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.803334579 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.802281323 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.8064011 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.807411011 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.802062253 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806570499 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.812959184 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.803246717 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.803578397 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.80394844 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.807424935 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.806375543 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.802740145 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.804272773 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.804703407 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.803188612 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.806147845 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807544795 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.811793787 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806419672 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.803653205 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.804428631 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.80755448 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.805176415 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.804397596 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.807559724 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.814414809 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809721536 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.815051092 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.814019177 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.805198195 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.805498297 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.81215738 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.812449623 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.804195553 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.8040033 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.806144986 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.807485291 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.807083765 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.806468155 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804963025 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.806842704 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.810999412 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.808787922 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.806983021 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.805243262 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.805098326 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.808221987 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.808134189 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.811444459 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.804760161 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.804746245 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.804505626 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.807056483 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.807080701 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.809007568 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.805379688 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.805613679 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.808904171 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.808260982 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.810702128 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.805902124 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.806417697 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.808521742 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.805388902 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.806297308 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.806415174 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.807407668 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.806333704 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.80965705 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.814337113 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.806208622 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.808002155 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.808296239 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.809640372 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.806696795 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.809250927 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808611829 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.808340264 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.815272596 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.807207414 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.807853921 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.80832808 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.809695012 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.811092753 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.8094692 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.812115143 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80848885 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.807499568 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.807077418 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810514253 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.816973184 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.812104477 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.812602781 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.815823664 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.813113528 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.810321048 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.807976024 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.807226115 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.808319374 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.809996514 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.811024171 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.809138897 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.810339065 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.808094941 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.810364161 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.807478958 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.810941785 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.808490881 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.809977107 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.813099228 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.818511686 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.817766779 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.810711071 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.810931211 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.808784468 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.812642021 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.819232892 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.809364463 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.809366467 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.808851304 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.811094088 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.811508245 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.816927788 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.818112176 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.813377264 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.811349605 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.814162265 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.825472692 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.812179477 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.820060082 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.838636873 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.811338004 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.809726061 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810527194 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.812024731 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.810136633 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.812379096 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.810208763 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.818937998 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.810986103 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.809822642 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.81813198 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.812702823 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.810999589 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.810735907 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.811843749 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.817165317 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.810858917 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.817862738 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.809431665 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.811112179 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.810625104 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.813029105 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.811330193 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.810710517 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.812771484 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.814183196 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.810558524 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.813258925 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.820388433 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.811194351 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.813839824 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823256242 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.823118775 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.81019116 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.811331878 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.811165144 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.816897373 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.815418652 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.8125272 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815353528 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.817719951 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.816574224 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.819673078 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.813276763 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.814988035 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814364161 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.812714896 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.81310116 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.824800078 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.823155635 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.81321779 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.81490066 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.819745931 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.811794621 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.82089655 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.819484529 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.813201329 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.815336185 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813955664 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.813581986 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.814166183 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.814000862 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.816206163 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.821634765 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.813239239 seconds)
  done (took 1074.700642393 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.812150573 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812296141 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.814510085 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.814263877 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813101897 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814405414 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814068095 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.813048807 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.814992317 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.814432154 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.813662258 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815230321 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813248701 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.813533244 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81301582 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.814897155 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814185853 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.814743833 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.814816635 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813949576 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.814121128 seconds)
  done (took 39.83846817 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.813716865 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.814898326 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.814412854 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.814480132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813654122 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.815152635 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.814556938 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815221142 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.814409191 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815515512 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.814234149 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81466183 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.814094259 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.815304803 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816000099 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817385597 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.814078075 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815317555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.815920867 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.815691937 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.815070091 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.814760547 seconds)
  done (took 41.674777739 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.816218699 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.815275538 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.817035252 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.813928701 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.815703142 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.816101537 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.816103261 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.817410711 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.816338376 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.81691791 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.82412088 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.822498605 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.815764035 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.819684103 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.817508821 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.815998335 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.961445945 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.818496625 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.816520229 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.817274457 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.816517006 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.822604076 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.81644485 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.81563044 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.816913705 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.817377107 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.817903517 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.816506488 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.817121392 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.81867036 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.821440256 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.816832887 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.820046558 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.819853777 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.818263209 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.818470496 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.822052233 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.81719688 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.818540944 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.817505827 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.827171297 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.840386458 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.818060142 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.81852579 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.823706262 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.818900344 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.818576494 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.822113967 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.826149491 seconds)
  done (took 91.018311802 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.817829143 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.81761502 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.817833341 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.819220754 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.818571508 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.817292897 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.818381435 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.818306514 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.818141721 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.818303855 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.818696002 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.818510399 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.818595018 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.819866562 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.819019564 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.820572539 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.819365804 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.819546429 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.817970866 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.819021477 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.818698642 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.817886485 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.818553777 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.818527166 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.818557917 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.81919653 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.820109257 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.818546736 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.818749097 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.820012951 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.820106063 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.818738284 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.820409192 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.818417893 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.818687098 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.819247554 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.8194973 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.819566582 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.818508577 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.820427337 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.820337734 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.820178178 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.81919528 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.821574573 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.819977105 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.819581391 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.821139281 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.819794611 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.821759095 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.819764394 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.820195471 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.819890343 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.820783406 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.820999668 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.821060249 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.820983166 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.821305947 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.821283981 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.820703154 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.821227568 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.821211436 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.821872703 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.820596562 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.821153325 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.821057593 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.822382458 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.820974824 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.820672796 seconds)
  done (took 125.488585425 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822051627 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.821415772 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820703318 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.820834116 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.821331671 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.821468125 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.821812337 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.821084784 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.820457175 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.821542587 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.821192197 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.821952307 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.822889144 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.821936299 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.82196073 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.821866424 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.82196192 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.822043902 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.821865483 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.821568464 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.822766044 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.822992131 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.821742422 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.822931048 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.821880533 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.821770161 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.823121033 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.823117378 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.822040455 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824990367 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.822809462 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.823105556 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.823749976 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.824044419 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.823966888 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.823684868 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.823979787 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8230303 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.82315871 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.823199914 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.82363885 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.823635514 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.824257412 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.823660515 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.823420438 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.824634764 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.824155638 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.824378507 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.824488058 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.825330173 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.824792441 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.823403516 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824152118 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.823450142 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.824092524 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.824961304 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82482384 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.825541399 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824500305 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.824947234 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.823700698 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.823918384 seconds)
  done (took 114.781742632 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.82415149 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.824479734 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.82320217 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.8265613 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.825031391 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.824054528 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.823771306 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.824448598 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.825453504 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.825390166 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824834974 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825686235 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826453863 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825298813 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.825569465 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826645003 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.825375326 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.824656913 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.826397367 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.824969351 seconds)
  done (took 38.258292261 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.824617632 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.825620097 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.826147236 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.825756751 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.825669554 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.825698332 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.826625986 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82655399 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82750871 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826894661 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.826933988 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.827835965 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826884555 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.82645755 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.827072247 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.82700678 seconds)
  done (took 30.980224245 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.826203162 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.827216197 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.827940849 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.827774787 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.827185478 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.827927087 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.828038052 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.829365196 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.827541553 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.827546289 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.830334682 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.830072121 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.828175176 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.826739179 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.827898969 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.826531956 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.827442275 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.828025877 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.826714729 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.826964402 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.827715334 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.826648517 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.826895533 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.828778375 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.82776103 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.826945773 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.828259105 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.830242833 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.827658198 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.82715491 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.82789444 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.828398269 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.829242162 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.827087425 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.82847264 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.829765729 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.829029862 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.828362107 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.827788996 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.828643935 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.827585906 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.828496843 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.829190977 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.831126834 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.830733995 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.828664916 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.829043486 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.830043855 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.829552102 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.82924131 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.83059902 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.83007793 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.830308761 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.830168334 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.829673427 seconds)
  done (took 102.323376407 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.82853859 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.829444383 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.829014273 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.828045572 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.832949226 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.82975463 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.829542423 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.828923543 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829421703 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.830535961 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830477679 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.829320917 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830049542 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828819779 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.830314743 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.829755706 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.830408785 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.830012917 seconds)
  done (took 34.695146605 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.829583018 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.832012354 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.830833683 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.83116068 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.830881391 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.829816547 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.829711914 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.829935668 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830314305 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.830458381 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829909018 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.83020368 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831006988 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.8302511 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.830660749 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830879603 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.83470083 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.830258412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.832696 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.831496357 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.831414961 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831721909 seconds)
  done (took 42.040142953 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.831802815 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.832415946 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.844647087 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.852221146 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.851854252 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.867067847 seconds)
  done (took 12.843719067 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831772223 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833591854 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833629498 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833165675 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835281846 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834205481 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833307037 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833652978 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833828889 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833270863 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8338513 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833002441 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833022027 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833881802 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833683765 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832995425 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833058798 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833763258 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833479545 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833462958 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833842187 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834906994 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83310802 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833765599 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832404343 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835599802 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833847659 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834021273 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834084108 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833873905 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833958652 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832818036 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833644606 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833581775 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834128989 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834838565 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833570192 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836065192 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834949891 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83387626 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.833565305 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835273919 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835244401 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835088228 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8345435 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834562004 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83565425 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835793242 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833561267 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834077374 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835126296 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834584062 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834741744 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836790487 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834797945 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83595492 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835856255 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835707517 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836208529 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835183108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836738644 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836227294 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836225011 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836551754 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836210939 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835475536 seconds)
  done (took 122.835436844 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83615619 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835921521 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835322591 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83604344 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836238546 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836673369 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835515409 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837204236 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836463582 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836288988 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835612817 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836443989 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836731267 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835913808 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837643174 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836686363 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837310002 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836365097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837002293 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837027224 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83613354 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837730915 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837059354 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837193461 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836958866 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836601929 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836284866 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836412424 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837160376 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837153593 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837161648 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837669333 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837879521 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.837509963 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83791815 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839296371 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83698284 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837300314 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83827927 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837755282 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838132157 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837567957 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838057677 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837647481 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838775093 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838657295 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839106317 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837201803 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837774744 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838804838 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839039562 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838854571 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840229559 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838659923 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837524011 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839560132 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839562714 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840868077 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839195289 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838920993 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838880437 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837266449 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83985784 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838761661 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839727397 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840057433 seconds)
  done (took 123.052356047 seconds)
done (took 2505.016068965 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.905096078 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.844380264 seconds)
  done (took 15.518417111 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.003695504 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.957089268 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.842101466 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.88982893 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.843113108 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.864922273 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.866690012 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.842821255 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.843929225 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.84330306 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.84330368 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.029943882 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.902561331 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.84407059 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.843877079 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.93591906 seconds)
  done (took 51.973553599 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.846019169 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.846888521 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.856908682 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.848180007 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.84641137 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.858460348 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.87768723 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.849800164 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.879784593 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.858377613 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.915566815 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.859715547 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.846609851 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.896852976 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.858944175 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.860710822 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.936980465 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.922669941 seconds)
  done (took 35.436544779 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.923273031 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.859207964 seconds)
  done (took 10.562042507 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.865217089 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.875510845 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.872337289 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.852760911 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.843801259 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.866882237 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.881434497 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.851874349 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.860752425 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.857068478 seconds)
  done (took 70.400597543 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.851951357 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.849115003 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.845359368 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.844674014 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.842789795 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.846312131 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.84590166 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.841303891 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.503778398 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.883493629 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.85348099 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.85036244 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.847598349 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.848570916 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.843875152 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.867988928 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.955280276 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.844132626 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.843257565 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.852253011 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.846089893 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.898317046 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.861497784 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.847140844 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.877535457 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.502496642 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.857033606 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.852116364 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.963366181 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.84407798 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.847375943 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.037120781 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.849565518 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.31768972 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.116600913 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.853852563 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.861198588 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.853026531 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.843470764 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.95658012 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.848352283 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.85282527 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.774826834 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.097127421 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.94807917 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.893066135 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.197285983 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.864911454 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.848447049 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.876984911 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.850979498 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.848354569 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.86252725 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.350967395 seconds)
  done (took 131.536946863 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.845132117 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.208624679 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.01166476 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.847168648 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131267605 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05435343 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.848988722 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891073603 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.851392292 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.091066752 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.013120355 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.954780379 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.850507183 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.844144296 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.850314689 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.84514502 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.996607418 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91830018 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.850913485 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.844623367 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873554085 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090129761 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.986835672 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.850571687 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.864241857 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.06054912 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.974692866 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.954394823 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.077419593 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.844994254 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.908182548 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.84962875 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.849487434 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.84760103 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.008541604 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.941860655 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929702636 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.850920421 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84597246 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.846505956 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.530800785 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043066373 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.942230784 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.979237223 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.044122769 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.055354457 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.627154637 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.845837226 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.58740801 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008453514 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.076051153 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.094961635 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.967807364 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.850514475 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.189784898 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.846673409 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.846036375 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.542153679 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99448488 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.947624712 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850022773 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.848769667 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847114192 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.089208198 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.850340888 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.94269344 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851694232 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.84767547 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.943760584 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.949858894 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.989084192 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061327604 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.877283199 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.791795335 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.397145985 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.092588038 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.912905284 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096750045 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.849150144 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847362822 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924312576 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.698984212 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.009281843 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.093686405 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.104307802 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882027731 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.608757034 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.847547596 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.075506494 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.069264401 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.101504243 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.05376808 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.003457373 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.016945926 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.847886999 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.847588519 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.094865748 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.973642057 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.852690032 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.189148831 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080810069 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.415067765 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.865899906 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.151039876 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979774783 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.851791399 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.481522148 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.850873618 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.072198623 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.891459512 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.850878585 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850136354 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.068330377 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.827346304 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849977145 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.484403229 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.910889552 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.854491147 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081226487 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.853682546 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111916825 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853715201 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08278042 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.020309102 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879795657 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.022906603 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.055459858 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.851900886 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093225968 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.092271777 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965435474 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.072049043 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.473098299 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.8498839 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136658316 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.85217349 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.849968936 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021006506 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.852567121 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.996137579 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.856628953 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.134108814 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871393773 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011117296 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855385947 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.122483202 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.883248776 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901733169 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.854025342 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980164309 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.853487186 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.689541445 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006414879 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851207551 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.851623794 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.394948877 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.850184436 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001010827 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.078525731 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872585089 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.92212392 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.511547943 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.853364041 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931531308 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.8721576 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.247421992 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.849090082 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.007792708 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.852563848 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.849984516 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.847665461 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.078911789 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.02548116 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.8450667 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.843171248 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.736685852 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.839544965 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841870114 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.018406782 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.237055938 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835774368 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034946713 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.836437033 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.960449637 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.834081912 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.904587808 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159959572 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.827278516 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.824240782 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.825731999 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.822516233 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.820963611 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.029139065 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.849067686 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.347132407 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.953164988 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087570381 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.124138438 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.069475942 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.857902776 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.81790612 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.067643119 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.8155791 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.872202853 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.812692178 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.827299251 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03895623 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.811306802 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.016534157 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.088216098 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.675242423 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.85404999 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.806098007 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.803870173 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.800482632 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.964044848 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887931676 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.801855563 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.794601898 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.909687831 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.931488626 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001266379 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.793733119 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.91127983 seconds)
  done (took 895.888019907 seconds)
done (took 1213.086216886 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.791733999 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.790621096 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.790877715 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.789241831 seconds)
  done (took 28.885697398 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.785969912 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.786713205 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.783338696 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.783754853 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.784134793 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.783447021 seconds)
  done (took 12.422285328 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.932193002 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.782108407 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.780608728 seconds)
  done (took 21.208639665 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.851160482 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.162836062 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.918099882 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.192744769 seconds)
  done (took 9.839346122 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.777664566 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.779078159 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.779369053 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.779588387 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.780402646 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.782033582 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.779500692 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.778584068 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.780126567 seconds)
  done (took 17.730930061 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.887154818 seconds)
done (took 95.697585674 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.871241843 seconds)
    (2/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.032674391 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.961735789 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.937310138 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.857025161 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.099725052 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.919963313 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.039488441 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.963746412 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.678051445 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.867240274 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 3.307709901 seconds)
    (13/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.080048807 seconds)
    (14/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.106669429 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.496889701 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.86478863 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.168058947 seconds)
    (18/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.815785006 seconds)
    (19/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.876204267 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.914334694 seconds)
    (21/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.44393947 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.948947625 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.020569179 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.859129915 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.072202444 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.865224704 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.895992892 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.095512885 seconds)
    (29/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.081743665 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.861154503 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 3.35617098 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.776021779 seconds)
    (33/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.75425842 seconds)
    (34/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.863856884 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.944837293 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.940119299 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.957828288 seconds)
    (38/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.636870548 seconds)
    (39/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.862669171 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.116075014 seconds)
    (41/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.94183729 seconds)
    (42/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.043262773 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.02940318 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.857992279 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.949489522 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.965726 seconds)
    (47/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.959145265 seconds)
    (48/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.007095729 seconds)
    (49/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.8657096 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.063323582 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.741858851 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.165564791 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.220038356 seconds)
    (54/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.863324321 seconds)
    (55/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.895108317 seconds)
    (56/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.983985386 seconds)
    (57/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.233574619 seconds)
    (58/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.272826247 seconds)
    (59/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.868910861 seconds)
    (60/309) benchmarking ("sort", Bool, false)...
    done (took 2.100698208 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.992110316 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.262756365 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.948904053 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.175742672 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 5.551826252 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.806520609 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.121865896 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.861826356 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.063976523 seconds)
    (70/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.860853457 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.033000199 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.878433739 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.984426868 seconds)
    (74/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.857451443 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.338674001 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.954765118 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.920461719 seconds)
    (78/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.107547732 seconds)
    (79/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.942737257 seconds)
    (80/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.092636001 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.178516958 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.253373168 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.99437083 seconds)
    (84/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.33101913 seconds)
    (85/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.975982037 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.879693096 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.052720895 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.877865723 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.618450971 seconds)
    (90/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.887389325 seconds)
    (91/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.271586899 seconds)
    (92/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.075329829 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.321727113 seconds)
    (94/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.164599387 seconds)
    (95/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.99663385 seconds)
    (96/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.953870585 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.921245214 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.861811075 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.224809739 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.999378671 seconds)
    (101/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.958402392 seconds)
    (102/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.108260821 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.173811707 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.86385937 seconds)
    (105/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.972037009 seconds)
    (106/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.923401197 seconds)
    (107/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.23489182 seconds)
    (108/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.02307573 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.351859914 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.889605268 seconds)
    (111/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.738981612 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.625028773 seconds)
    (113/309) benchmarking ("sort", Float64, false)...
    done (took 5.636454543 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.866169408 seconds)
    (115/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.102346956 seconds)
    (116/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.960620222 seconds)
    (117/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.233189622 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.124556702 seconds)
    (119/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.014265344 seconds)
    (120/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.690206658 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.266696158 seconds)
    (122/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.048546868 seconds)
    (123/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.31856426 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.990222598 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.980727272 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.175279905 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.887155733 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.151001561 seconds)
    (129/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.09835838 seconds)
    (130/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.022018146 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.872334872 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.951032561 seconds)
    (133/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.129456421 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.105237407 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.898158323 seconds)
    (136/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.886004858 seconds)
    (137/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.231068971 seconds)
    (138/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.149188121 seconds)
    (139/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.154779585 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.314884382 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.120404012 seconds)
    (142/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.309773551 seconds)
    (143/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.283129588 seconds)
    (144/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.868742689 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.111639933 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.994269821 seconds)
    (147/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.873848953 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.863478991 seconds)
    (149/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.77109157 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.97530181 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.978362303 seconds)
    (152/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.058728589 seconds)
    (153/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.901188213 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.004090442 seconds)
    (155/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.295217098 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.867555925 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.171005837 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.762661948 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.226128632 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.886014487 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.819865728 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.985584204 seconds)
    (163/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.979443575 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.26237099 seconds)
    (165/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.382402323 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.019705305 seconds)
    (167/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.057968293 seconds)
    (168/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.872391073 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.861114581 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.862682416 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.104399564 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.981075783 seconds)
    (173/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.355747076 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.866460931 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.180971595 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.864961243 seconds)
    (177/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.181830044 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.876173635 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.863572345 seconds)
    (180/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.816535299 seconds)
    (181/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.867335139 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 3.32984558 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.236745289 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.867899941 seconds)
    (185/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.545907407 seconds)
    (186/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.362722639 seconds)
    (187/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.978860457 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.89062927 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.861660292 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.925383921 seconds)
    (191/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.954653864 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.760394776 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.862715349 seconds)
    (194/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.983167432 seconds)
    (195/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.99164013 seconds)
    (196/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.860362513 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.329200013 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.938491452 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.922453766 seconds)
    (200/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.083226773 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.857898005 seconds)
    (202/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.945981447 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.56013535 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.092178828 seconds)
    (205/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.872894974 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.853540969 seconds)
    (207/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.168416018 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.545663452 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.846737797 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.17395459 seconds)
    (211/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.846837392 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.685233856 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.84420583 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.07585511 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.838586502 seconds)
    (216/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.86719858 seconds)
    (217/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.611877086 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.156986347 seconds)
    (219/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.307165082 seconds)
    (220/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.863263492 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.14612549 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.837265426 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.921576307 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.961443222 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.85403368 seconds)
    (226/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.827160618 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.05643049 seconds)
    (228/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.903487638 seconds)
    (229/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.822009546 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.771288965 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.938350647 seconds)
    (232/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.061198862 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.230401009 seconds)
    (234/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.978031109 seconds)
    (235/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.817984008 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.808253407 seconds)
    (237/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.04989205 seconds)
    (238/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.518445445 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.913245434 seconds)
    (240/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.833538107 seconds)
    (241/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.016768274 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.896879858 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.96950488 seconds)
    (244/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.945518262 seconds)
    (245/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.122782521 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.148414425 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.125040174 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.943078204 seconds)
    (249/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.991929657 seconds)
    (250/309) benchmarking ("sort", Float32, false)...
    done (took 5.702138609 seconds)
    (251/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.935157374 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.77227934 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.80799123 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.730698135 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.846004542 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.77184657 seconds)
    (257/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.23004747 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.805220953 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.208778184 seconds)
    (260/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.53689724 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.836437125 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.903900802 seconds)
    (263/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.896884975 seconds)
    (264/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.698362197 seconds)
    (265/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.41168946 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.817038898 seconds)
    (267/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.122502818 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.142255144 seconds)
    (269/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.617183236 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.808099745 seconds)
    (271/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.014420119 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.152391329 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.948968509 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.323894437 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.803535036 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.349862386 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.698725358 seconds)
    (278/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.466462655 seconds)
    (279/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.144102807 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.150473846 seconds)
    (281/309) benchmarking ("sort", BigInt, false)...
    done (took 6.801628727 seconds)
    (282/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.868542919 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.199555246 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.816091703 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.089664513 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.669732636 seconds)
    (287/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.911808039 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.131840604 seconds)
    (289/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.072742039 seconds)
    (290/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.828932185 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.300068805 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.023478978 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.229699674 seconds)
    (294/309) benchmarking ("sort", Int8, false)...
    done (took 4.701737008 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.834844036 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.801215484 seconds)
    (297/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 3.308071862 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.802459882 seconds)
    (299/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.334602307 seconds)
    (300/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.538645245 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.188079417 seconds)
    (302/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.553686768 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.961216239 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.018247686 seconds)
    (305/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.807308444 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.299392582 seconds)
    (307/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.805381466 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.634549837 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.803413989 seconds)
  done (took 997.397628189 seconds)
done (took 999.236106649 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.88283601 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.829416999 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.809060992 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.830418289 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.921445485 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.859473028 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.823403751 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.811096559 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.858628059 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.857876586 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.805721199 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.855132923 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.812142136 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.809656271 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.809584835 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826960801 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.1260602 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.84463883 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.829169222 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.82228591 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.829138632 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.813288254 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.861818088 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.853465136 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.813727637 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.812846666 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.811848259 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.830544698 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.92533204 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.81453695 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.815474294 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.825288667 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.128295378 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.839275309 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.809188369 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.831673835 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.825331437 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.825457175 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.815804746 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.84399633 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.251842764 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.853491687 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.814095807 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.812481024 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.813311351 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.818191543 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.812092448 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.818761244 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.829791621 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.83046006 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.207310737 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.870623496 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.815561977 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.813417375 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.826051228 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.812654784 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.815698193 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83250168 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.831680892 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832195396 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.110739682 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.851781404 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.814581542 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.832396246 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.822264061 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.243762251 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.853814263 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.819334975 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.209982082 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.865334411 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.242260945 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.866659231 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.815959146 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.827688713 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.84556715 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.122929639 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.842696137 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.812260552 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.822340633 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.811729347 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.825807914 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830631591 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.81892843 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.812708844 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832667779 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.861523469 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.828002899 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.814773846 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.823877266 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.836013429 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.823045726 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.829148919 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.818353791 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.813469117 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.824782027 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.819614435 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.818834418 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.81770348 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.820847741 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.827779861 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.210967972 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.877827066 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.813798103 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.812766207 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.815232114 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.828882664 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.213124114 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.858920716 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.83851481 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.864763949 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.816723422 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.110193385 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.851514529 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832484882 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.828494847 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.81905586 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.8135805 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.114525652 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.24184716 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.875275264 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.815993211 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.81344681 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835704695 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.817400965 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.811866088 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.126977483 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.848250581 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835330227 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.938429218 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.830080745 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.848520901 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.814220061 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.820368579 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.864885633 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.836482765 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.84901865 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.823178129 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.837062409 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.836150359 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.81622648 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.830426228 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.832439755 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.81669635 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.825320432 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.813928111 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.864586083 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.835686753 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835153689 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.839074727 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.939992647 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.816121296 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.113494348 seconds)
done (took 286.490296374 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.894997764 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.812261822 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.906108695 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.809553148 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.897053021 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.881634159 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.808129789 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.809720384 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.809963915 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.309305496 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.80819051 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.815935099 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.809690501 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.807885748 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.877619628 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.807259697 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.809445647 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.250219554 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.805562884 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.882219411 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.803385946 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.803451448 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.803538558 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.301742718 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.801808109 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.802703245 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.878371293 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.800463059 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.246402571 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.799827601 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.799003631 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.247769308 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.880161097 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.8281707 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.808471284 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.804973558 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.889975428 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.81339308 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.868858949 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.868472119 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.891977682 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.83325965 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.800007759 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.800143015 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.802291061 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.801855002 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.800160919 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.830467314 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.800312414 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.80413478 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.246763645 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.808003306 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.804104594 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.801542864 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.800408037 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.827151833 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.801660687 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.801485986 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.880837569 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.802337834 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.866761351 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.301023851 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.29963793 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.801643436 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.801248356 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.800834623 seconds)
  done (took 180.813032364 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.868642214 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.878574126 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.866855457 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.806063584 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.850679289 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.871496953 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.807024431 seconds)
  done (took 14.675627612 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.80639276 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.800707661 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.853095513 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.848646 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.799044842 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.976278054 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.811854582 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.803657438 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.824630349 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.795426764 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.433604106 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.843793093 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.801828096 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.799201824 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.804842011 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.848498747 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.794503565 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.793099607 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.907228504 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.93856223 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.795972383 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.797853942 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.81825043 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.802981773 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.791310323 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.789914678 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.790536318 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.797859772 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.790757521 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.790099723 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.791078102 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.842574444 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.791602296 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.792268719 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.791300285 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.79191769 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.791805216 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.792041433 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.791736683 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.792966033 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.792924708 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.791184216 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.790328045 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.792235275 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.792319214 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.816854433 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.791746874 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.792028086 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.791447248 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.790803589 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.819006721 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.791057908 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.794029069 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.795954823 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.836585548 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.797700056 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.791835389 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.79324534 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.793906229 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.791745932 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.795737809 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.941302695 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.841116018 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.790849828 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.842323133 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.944540914 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.790447471 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.789127985 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.789542716 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.879366429 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.790330067 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.84045837 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.785978947 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.897899732 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.783914993 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.964355044 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.807528293 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.785316829 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.786803606 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.780235127 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.789803098 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.78113933 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.7837939 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.788068944 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.786330407 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.781466431 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.782748869 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.783736028 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.790791607 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.782885499 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.833936688 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.781983284 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.784161777 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.92371936 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.783069217 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.900250391 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.811646468 seconds)
  done (took 198.1922412 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.790800231 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.791612284 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.785484661 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.800117284 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.784588123 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.784878729 seconds)
  done (took 12.443987644 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.785174274 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.789254302 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.785234922 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.78340718 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.784012602 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.784630276 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.783215896 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.786102133 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.788310563 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.783727337 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.78453771 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.784192733 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.784923612 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.783483515 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.783647538 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.784442116 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.785389067 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.785458543 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.784320485 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.784746575 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.990199856 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.784239385 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.784428086 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.788983065 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.790582141 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.784941796 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.798794746 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.785241803 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.784334472 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.791877944 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.788575404 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.784987636 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.787721178 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.791257923 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.788172891 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.787259678 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.788278787 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.785995959 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.784536959 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.785394867 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.786139087 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.785989704 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.785807266 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.78725561 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.787049519 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.793439824 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.791421864 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.797984131 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.786278423 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.787072973 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.786570895 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.78548159 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.786797571 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.786933509 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.789871901 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.792619026 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.791773253 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.785721083 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.785971122 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.789407715 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.79137676 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.786283837 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.788361624 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.789872147 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.792963632 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.787610917 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.789740322 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.791116198 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.786959636 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.786337206 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.788703693 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.787160105 seconds)
  done (took 131.599709028 seconds)
done (took 539.483503191 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.20007752 seconds)
  done (took 8.908617662 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.877762311 seconds)
  done (took 8.702198808 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.375794703 seconds)
  done (took 10.090155634 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.803822455 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.832861867 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.796716106 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.79377245 seconds)
  done (took 28.958034792 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.119613804 seconds)
  done (took 8.83401864 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.812712613 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.78539884 seconds)
  done (took 15.373245909 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.78949987 seconds)
  done (took 8.508577085 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.179801914 seconds)
  done (took 8.897606501 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.793644782 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.808488546 seconds)
  done (took 15.339025146 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.794055244 seconds)
  done (took 8.507888361 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.926569257 seconds)
  done (took 9.708550525 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.813434049 seconds)
  done (took 8.59850285 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.816547349 seconds)
  done (took 8.533217995 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.924008493 seconds)
  done (took 9.63777039 seconds)
done (took 160.306990827 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.807171485 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.78802993 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.787358353 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.785774898 seconds)
  done (took 28.880773963 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.825231287 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.825928017 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.834093596 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.824620663 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.814911721 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.814865613 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.825567984 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.824183707 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.817310416 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.825251597 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.825647398 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.824221171 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.825865018 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.83467774 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.833233575 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.823266735 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.824648024 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.825834306 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.816976728 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.834376381 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.822651309 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.824088938 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.790108398 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.790322735 seconds)
  done (took 45.445035849 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.012233292 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.87840543 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.958787966 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.865525106 seconds)
  done (took 9.428320571 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.791483073 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.868057144 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.859830131 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.846691248 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.850829087 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.906524545 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.860289457 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.939615254 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.920000802 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.922222702 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.798538761 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.814028334 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.816632578 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.848073819 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.908036869 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.792610641 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.792512584 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.910313815 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.869382172 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.97995132 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.792524424 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.860058274 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.852393357 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.860869823 seconds)
  done (took 46.376318399 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.793461153 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.801242057 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.80168787 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.793199792 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.794140094 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.793510312 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.800451536 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.794577626 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.816681521 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.795579281 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.794547464 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.793540595 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.799871455 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.794183467 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.792921217 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.805460502 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.807605659 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.794857176 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.798068355 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.802150123 seconds)
  done (took 37.683812028 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.791499529 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.063358259 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.137482659 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.04503589 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.793504114 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.791128196 seconds)
  done (took 31.337160944 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.806786436 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.800287345 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.794342975 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.852647154 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.937515445 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.802429768 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.795906606 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.806068878 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.840854973 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.864042041 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.815149038 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.821780181 seconds)
  done (took 23.655864909 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.794731908 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.795303475 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.79458769 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.805938505 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.805139632 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.801952721 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.800989361 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.794071247 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.804193749 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.813340515 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.801499438 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.806905353 seconds)
  done (took 43.342829311 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.498486208 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866934532 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793021578 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.819355672 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235791196 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.346082691 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.68515525 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.408576143 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.434520935 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.82768054 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104868755 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.901346053 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.987617451 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.903757141 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175316578 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.225945227 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091604423 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145717944 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.617157093 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.997511071 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.106838114 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12110741 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.191527903 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902088132 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905270079 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.90732067 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444318365 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.621104921 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.004495092 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.120556426 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.219536957 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.851378398 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950321464 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.907466729 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.918839373 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909141103 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909977137 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173785204 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.919881827 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099432676 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97517906 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152133998 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908572225 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318035489 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.612656283 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.161524275 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.008567626 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903301652 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907109156 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904819401 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.829936299 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987921899 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.906146651 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909126479 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.60437841 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.905645161 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979051234 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.906505661 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109484171 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.713365721 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.591273053 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.908595574 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907955727 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.463047261 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88805557 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.088006222 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.518812599 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342662699 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.318141012 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.001231379 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.906762631 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90634326 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.112718129 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.942175903 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.57489899 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009707309 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041311621 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.921709091 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549110288 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206386912 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.275876775 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.463945659 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824803266 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188748279 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.659427643 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.967493474 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123395846 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.752471215 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832408647 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115749108 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939813998 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910575098 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1755568 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.580333856 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086160645 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.919898594 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343387324 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925247119 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.912596708 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908695121 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124093698 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36119444 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00247115 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034458508 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924067259 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.992326787 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834721698 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.921138608 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.908836608 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.792324457 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906377414 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786864496 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.028247461 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.784752282 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.022034609 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.848593615 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913653578 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.892298169 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017463614 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.861429388 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158998863 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.200835077 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.542453235 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839768277 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.115922767 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.234564278 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134792313 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915724682 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.123830858 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449423979 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.269241488 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.953843321 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190895806 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.959725592 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193592958 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326333027 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986822557 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.585023853 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.503959504 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.12702194 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92384319 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.912267368 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.913299192 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917793264 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845065324 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.547424887 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.239273925 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.075947451 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123663375 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.34275651 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.966917664 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.807081327 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.295495982 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047615132 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.926328594 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.547402294 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.182055309 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.678139069 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.993362529 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.114974227 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.219849993 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.947477387 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926001724 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003270499 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928627871 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.918030283 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.228343003 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.272126607 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.912995305 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.915362894 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.864640624 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917947475 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.915222134 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.437160784 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.879417824 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.912792993 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.923178116 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.785904968 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971635144 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.917261277 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.914704558 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.436986669 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.422350005 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.916002151 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.564744563 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.917697234 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060017274 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177584847 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.221271406 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040637978 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.611548982 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.275830899 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.016175972 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.614658128 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.840703855 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.913727796 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.854142277 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914799456 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913338518 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920320981 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.103298417 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182735867 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211791398 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.350577959 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973144519 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117572796 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.557281077 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.937453824 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.914075107 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92096165 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.916298717 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913924237 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.408169918 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.456992188 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.887974848 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01328217 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.919912487 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041864897 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.925334809 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.842878417 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.915131315 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916719943 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36765743 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.007371835 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.863572197 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.179580228 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.699119848 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10686 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959961511 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.92560122 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920712475 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.511163045 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.029010807 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840735351 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393733674 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026427962 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.569974726 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.668277072 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.478390472 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214097054 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.231324984 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.228827759 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.980907038 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.129483743 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001451584 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972182008 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004482146 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853523221 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.840087416 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.55562259 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238886756 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187876139 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928580769 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132748938 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.568203499 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.213501144 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945348989 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.813491546 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292198355 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.887667199 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933507029 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.369939512 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098684412 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999673884 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918364763 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.867878905 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.24702437 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957664667 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.616572811 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932205731 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.270019847 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37139584 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.147197278 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.240700986 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128024576 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.925462283 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259613789 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.174958321 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.031455427 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.921812348 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.891775829 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.140246136 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.496322579 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.756610714 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923878385 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.122907628 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.280784131 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.817929519 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.923992845 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.135173875 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256637822 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921096481 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.218989811 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281952834 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.037225152 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971055784 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147367666 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.716510534 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295240591 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.46603331 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.391965664 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931592577 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.847248409 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.620870308 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.125159493 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.921306704 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.885874259 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143473152 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156731462 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.600828141 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141842689 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.166582456 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.934284069 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.187469913 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991965425 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.018441018 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.182557879 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.370502694 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.167446993 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149818412 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451906408 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.140799845 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36574446 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.07318759 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.925353561 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129895281 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141916537 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.140225489 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.256760678 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083869933 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.630522941 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.928407105 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.129791543 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221046903 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981741389 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.254831032 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.093314552 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.010163789 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931703114 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988592173 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.92934719 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932008883 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.256556442 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.445983824 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.938318558 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001292277 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.923361651 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.485455322 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.932317673 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.931422108 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187589094 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276711141 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.242840558 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902506247 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924964 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930131394 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053727492 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.851653327 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930016281 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195812184 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.927437456 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379333092 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.153007062 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939932822 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.189813441 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.313547821 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.639100446 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.033573347 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930844817 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142171498 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237664741 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.167017184 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.114333732 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197849418 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.25689512 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.958547601 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.229692548 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152968354 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928405505 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.95109513 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929732072 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048238188 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.130903483 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194705517 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.430769109 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.548123999 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264118155 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.781311695 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.929727203 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.592914151 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267516119 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.189971568 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.971774601 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992233493 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935569946 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383565012 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.722415529 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059001824 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.763553856 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852711127 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.939124201 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.20630746 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.171799841 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.637670167 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.930744936 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19552222 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2284515 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191316308 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.974745998 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.79268375 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152892314 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933838394 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.934991837 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190960769 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147706835 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174841058 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932062544 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930741349 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.737912882 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857247072 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.929204485 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974731367 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155797359 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94886201 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.44425211 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.630574876 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206822199 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976054847 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933334203 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.193217137 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.42417208 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.467430731 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938497247 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149564878 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.876358485 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.306080686 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.933982816 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382679598 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309870673 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.930811942 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.522468981 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.252188796 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201147747 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864733799 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938021789 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145773995 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.822231532 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.951061904 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.918205441 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388388967 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239130127 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.666095582 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.487864947 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.931372067 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.933900906 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417815334 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041622588 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418607464 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.023895645 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949609769 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451829219 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.643511794 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.218414239 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.176811924 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.509076382 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.656655791 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.933763992 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.932415862 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934261201 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854759764 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.116824011 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.121784677 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210238469 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96367867 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414406359 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042665194 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.235400324 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034218729 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.142457467 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047362311 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.452327327 seconds)
  done (took 1687.22662908 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.955211942 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.945597035 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.977816908 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.944592986 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.937550317 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939799873 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.940927266 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.018220976 seconds)
  done (took 57.50945224 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.926104595 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.083817205 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.93156623 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.929832719 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.933956385 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.931172402 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.089593546 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.940242465 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.947801803 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.937475293 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.932514923 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.930153282 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.22008958 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.955563993 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.930177408 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.926525269 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.929569118 seconds)
  done (took 75.333867951 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.928126791 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.243889153 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.965686345 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.931038713 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.387765077 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.933083009 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.04988906 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.96681652 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.927794568 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.186323309 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.219600754 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.972694687 seconds)
  done (took 90.558598182 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.941065567 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.931214732 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.929092513 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.930669698 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.92936866 seconds)
  done (took 11.520057649 seconds)
done (took 2190.102604732 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.163585642 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.988065512 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.029747079 seconds)
  done (took 5.86534391 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.076285291 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.122913239 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.235954616 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.996187833 seconds)
  done (took 10.288107087 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.236488429 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.296820522 seconds)
  done (took 6.382006527 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.24971672 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.960949524 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.306837393 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.933308343 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.928994103 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.929941431 seconds)
  done (took 22.64509848 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.928776422 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.929765775 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.927923835 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.930971268 seconds)
  done (took 9.566201151 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.930101029 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.625191207 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.931747213 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.942710466 seconds)
  done (took 21.277314391 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.077141102 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.045592899 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.072782038 seconds)
  done (took 8.044356769 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.165719716 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.144868671 seconds)
  done (took 7.159084774 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.085951323 seconds)
  done (took 3.932923395 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.95914674 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.199859144 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.415049508 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.962056502 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.584128752 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.17956081 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.261183779 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.154509882 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.38113183 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.414647808 seconds)
  done (took 26.360900298 seconds)
done (took 137.048135347 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.484772854 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.964010094 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.134290134 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.290101691 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.162800736 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.133982468 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.149260905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.289576962 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.97159031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.959586442 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.286854092 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.177052486 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.095271535 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.95848502 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.103853366 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.958438601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.16026526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.295155829 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.995759406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.26292351 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.152892407 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.9330709 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.127300457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.947418296 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.16137937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.082350056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.481134768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.960197625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.147464242 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.493069464 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.084284444 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.412618124 seconds)
  done (took 170.666676977 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.935497368 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.932216389 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.932453147 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.932414096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.401801163 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.93440687 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.933886793 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.931215775 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.325211203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.320009745 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.931957587 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.396006566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.930868436 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931649429 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.931155106 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.932266693 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.493005278 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.932397491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.934131308 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.933067583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.933372815 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.22969586 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.931898231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.237773792 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.477865795 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.937456572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.931973063 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.931777355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.931541471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.931706445 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.934395219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.932151647 seconds)
  done (took 211.12332787 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.934345446 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.934255156 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.93402979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.93303047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.93425974 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.935505097 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.933283933 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.932497877 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.689646938 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.680345822 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.934170467 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.933990181 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.934299708 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.93370275 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.935250013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.932716816 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.933337117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.936272807 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.934312185 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.935696145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.936155079 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.505041805 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.935623398 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.504386757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.934718451 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.934954428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.93361605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.935203657 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.935621055 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.935733655 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.935079497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.934718213 seconds)
  done (took 222.403177372 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.175071315 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.937084735 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.938163541 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.927280584 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.938997519 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.93666628 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.923650527 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.183129663 seconds)
  done (took 19.823780165 seconds)
done (took 625.874834126 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.315373483 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.14549017 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.099896602 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.9623763 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.208681592 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.005410803 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.958044615 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.02318958 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.798415256 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.033558691 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.596380174 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.979856086 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.6895276 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.984859985 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.065778479 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.015070752 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.505128697 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.610349491 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.080882412 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.035271137 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.119637027 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.90539589 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.040782105 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.841776768 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.614310954 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.956493783 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.021132364 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.516214864 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.969923618 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.098022212 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.662155357 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.304803843 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.974550809 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.960460482 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.011353702 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.03361326 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.219160821 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.971125289 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.068116088 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.699283323 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.026068156 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.700250024 seconds)
  done (took 105.683036598 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.951485738 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.947515808 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.947208011 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.946870453 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.957422944 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.945667658 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.946217445 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.947530543 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.947100557 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.9470125 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.947790428 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.95998602 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.947260603 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.956646546 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.948081889 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.946813613 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.947682063 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.955806579 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.946805548 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.946177747 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.949314167 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.947512892 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.943407476 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.947230236 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.947779208 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.948098473 seconds)
  done (took 52.546942183 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.941404596 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.118431453 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.186374361 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.96430528 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.94258862 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.946156754 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.960354411 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.947383169 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.94433121 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.945733286 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.046595716 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.948601882 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.961500829 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.187703739 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.961709649 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.941975911 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.940469118 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.942177294 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.123503906 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.960386743 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.962587097 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.948407117 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.962820166 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.956841916 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.945784436 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.942812213 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.947119855 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.398397206 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.953465114 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.050270486 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.004401975 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.967962978 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.359266245 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.195701985 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.998975115 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.954951491 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.943290463 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.053189197 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.95291107 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.94475523 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.96269737 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.947455267 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.187342693 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.483285939 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.960149058 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.942156255 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.407745219 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.060529653 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.984982329 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.955277765 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.193078959 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.961280737 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.944861404 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.946793149 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.983237699 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.952149401 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.943913832 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.279640196 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.960716199 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.964976136 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.946253396 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.946346218 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.129458055 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.954040782 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.121348215 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.954881455 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.951435245 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.944892801 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.190285183 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.96153222 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.497152881 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.956580292 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.943772074 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.050352461 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.125002114 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.432038867 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.958370549 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.134558257 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.375300313 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.968223947 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.951752412 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.38845453 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.971026767 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.952759775 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.946946022 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.946989868 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.945170338 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.990976594 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.962977388 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.399233587 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.492671649 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.295135681 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.976346054 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.965230356 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.949569632 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.278733148 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.952304967 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.945610692 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.180769706 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.501335269 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.961648136 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.955158596 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.473980779 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.962524577 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.96662523 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.954957771 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.200406836 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.962505961 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.991882589 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.948411691 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.955305702 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.949924246 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.964973179 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.953183709 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.945681829 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.465494708 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.066252688 seconds)
  done (took 241.456522313 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.949726248 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.945542671 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.9466604 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.943263536 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.948502307 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.946772686 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.945740939 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.946977964 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.946676489 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.947001952 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.945883706 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.9477506 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.94788923 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.955372213 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.952985957 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.951093233 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.551590119 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.94499888 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.94808849 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.94463091 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.591034574 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.955490503 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.946343435 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.945987982 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.948304602 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.946991073 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.950964086 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.950169362 seconds)
  done (took 169.662712047 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.947111842 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.061278728 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.966882356 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.976831978 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.957205268 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.951121668 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.04600321 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.965792462 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.95658493 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.949440363 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.949337504 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.00966845 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.958295206 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.046468765 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.97948551 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.057509251 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.052048861 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.952507591 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.949423156 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.951634957 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.981238045 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.959155346 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.009496597 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.076285824 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.966761148 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.06400449 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.971086539 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.951691328 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.95040387 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.062690881 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.968408384 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.011326595 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.981577375 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.969493328 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.068382475 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.068012279 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.052788512 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.051954183 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.955182718 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.951077516 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.951501743 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.951773292 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.064976782 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.968200316 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.951453927 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.068485823 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.969515572 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.952347803 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.951691668 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.952200042 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.968400444 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.96999836 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.01674609 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.081922234 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.983614869 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.976434543 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.047491463 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.077608809 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.952022882 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.04923605 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.957438622 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.064997151 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.968914271 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.954667254 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.951968915 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.959889546 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.980639783 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.054363079 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.054411864 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.960888404 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.049831254 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.986919121 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.95877978 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.952778828 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.95226807 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.0655916 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.067345778 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.983707376 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.988655067 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.98205083 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.962657637 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.952595608 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.954534628 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.969260529 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.959713112 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.067574928 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.068341354 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.957025869 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.954251458 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.954794847 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.954151167 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.979724348 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.075290056 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.990405989 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.059464777 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.019646289 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.02884828 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.97070485 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.966549241 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.956700602 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.014970378 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.969668354 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.966298643 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.246068356 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.01385155 seconds)
  done (took 211.440354514 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.321326076 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.998391788 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.012241605 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.266000007 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.343667147 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.030273219 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.006280156 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.00468132 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.023026694 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.187431048 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.064666204 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.019753557 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.988824619 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.977722245 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.000873247 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.021278347 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.009529121 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.336155022 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.229667556 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.213282855 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.991108919 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.296700353 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.326979999 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.567673338 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.050795452 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.409917315 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.586141977 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.133110957 seconds)
  done (took 64.297271682 seconds)
done (took 846.94082184 seconds)
SAVING RESULT...
DONE!
