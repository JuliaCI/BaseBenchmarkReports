cset: moving following pidspec: 15803
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.366106729 seconds)
loading group "string"... done (took 0.56654682 seconds)
loading group "linalg"... done (took 7.425600068 seconds)
loading group "parallel"... done (took 0.16639168 seconds)
loading group "find"... done (took 1.133362406 seconds)
loading group "tuple"... done (took 2.028944269 seconds)
loading group "dates"... done (took 1.286459103 seconds)
loading group "micro"... done (took 0.237777159 seconds)
loading group "io"... done (took 0.960705722 seconds)
loading group "scalar"... done (took 39.828970365 seconds)
loading group "sparse"... done (took 12.414328025 seconds)
loading group "broadcast"... done (took 1.005739817 seconds)
loading group "union"... done (took 13.757015819 seconds)
loading group "simd"... done (took 4.659804577 seconds)
loading group "random"... done (took 9.441328881 seconds)
loading group "problem"... done (took 1.968254219 seconds)
loading group "array"... done (took 22.328005966 seconds)
loading group "misc"... done (took 2.028491499 seconds)
loading group "sort"... done (took 3.409389989 seconds)
loading group "collection"... done (took 19.554565612 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/9) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.457403326 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208236479 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258981976 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.15139886 seconds)
  done (took 1.999097977 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.160800452 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.07493336 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.0929438 seconds)
  done (took 1.070841882 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.324989881 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.253323836 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.226067306 seconds)
  done (took 1.507840167 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.312309692 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.240243493 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.509553199 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.33042114 seconds)
  done (took 2.194483579 seconds)
done (took 7.488179335 seconds)
(2/9) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.590813917 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.422446306 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.243394131 seconds)
  done (took 2.003841456 seconds)
done (took 2.715087949 seconds)
(3/9) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.722111833 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275577371 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203164055 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462826093 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197601099 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215285102 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679254998 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.340377754 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253320334 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099314674 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134215188 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390553451 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13701468 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680521796 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089602709 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122986383 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17841235 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434609798 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082202788 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109014666 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115417625 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139552686 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127873535 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089736168 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184286452 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081581105 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19320658 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107478495 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079621652 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.270874836 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20028126 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686199476 seconds)
  done (took 10.834711889 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117385196 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.125616743 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098347437 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137623588 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134039494 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098741868 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083368907 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09544384 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120714403 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173895684 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112395394 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13476619 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09479206 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.110086696 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097855638 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242921626 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11920593 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098086216 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100753646 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103987262 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119937743 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113197473 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10807112 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092729406 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164830016 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22025378 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10937311 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124572282 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095605248 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110857277 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142086812 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140326649 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093602685 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079912522 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170395133 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122658943 seconds)
  done (took 5.138446821 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.09138963 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186381123 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12030791 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167895849 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.16995961 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.097096468 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141800867 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.077929434 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113260772 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255979281 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.179155089 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.46918123 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141295453 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116279274 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081606266 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098290427 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079517451 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.492879257 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155411185 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15579127 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096642073 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103283616 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100725142 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364562328 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080941283 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096201415 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081237344 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080246789 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1605693 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080904269 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.201104618 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100010716 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102470056 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133092976 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207828081 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108657427 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133870955 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095537078 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079741184 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174817858 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104438392 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093550263 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095293974 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.0781088 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121363312 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134239323 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13391958 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097085653 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08074028 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.19594917 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096862238 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09655728 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.9476662 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179968421 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09892644 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096976863 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.304820565 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09904588 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096458963 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077155353 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278334053 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.197980908 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096952586 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096480651 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080740424 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094754189 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081102691 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380115192 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097060191 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.667997019 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084747732 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108346899 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082349843 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096054642 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106983394 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08630724 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115690354 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078830274 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098618807 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078214658 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096140666 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080009192 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107901317 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.210005783 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097519415 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07973404 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095748917 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115144057 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109981412 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099202848 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094655937 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113586997 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098488307 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096519058 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115268075 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098424329 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10688287 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082131752 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143725408 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097032242 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.153432865 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094962035 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12298077 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099184295 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113365333 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111090292 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098969813 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.164547569 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077292123 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09528658 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079169941 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096312176 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08018008 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09997531 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108445241 seconds)
  done (took 22.721289562 seconds)
done (took 40.497193664 seconds)
(4/9) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.438653856 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.514306943 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.904292978 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161496735 seconds)
  done (took 2.765411443 seconds)
done (took 3.523255433 seconds)
(5/9) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087650593 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.107166088 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090221659 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.104746808 seconds)
  done (took 1.141746112 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102072157 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.101149967 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.088726847 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.100849342 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105603892 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.084068806 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103647897 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.08784493 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.101239058 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101550165 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.083693012 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100103919 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.086264452 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102812547 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.081274711 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104593124 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104106933 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.084326554 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.10433062 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.084319437 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.098858892 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.084509916 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103846053 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098846987 seconds)
  done (took 3.056059501 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098150459 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.099463198 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.084730438 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.098440655 seconds)
  done (took 1.138414275 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.088944091 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.1209427 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.11769699 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.089203272 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.121390784 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114793685 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.080737209 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097326435 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.08233503 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.104864168 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.079572932 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.128000485 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.117917716 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086856072 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.107725045 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.076518884 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097453273 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.115850609 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.088386968 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.109281762 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.080669426 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104822371 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095625126 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.103627474 seconds)
  done (took 3.169472758 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.146212161 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129814925 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.119598699 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.082881883 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.135241758 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.130568536 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.099407237 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.121605603 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.120164738 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.109736995 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.081985687 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.137844202 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.08963476 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.095005298 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.07599465 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.094304896 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.107216745 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.091378913 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.096928466 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10575631 seconds)
  done (took 2.934558793 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097227822 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107657812 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076367703 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.097565613 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.087184588 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102813169 seconds)
  done (took 1.334590093 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.080427155 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094568859 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.078614822 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095040193 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.082788096 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094966623 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.077391613 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.094949523 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.078475591 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.094792942 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.078254672 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.094089697 seconds)
  done (took 1.807948752 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.452970634 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.101390899 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.100538014 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.07845309 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103180934 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.077892421 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109658416 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.081349581 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.120646144 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100398773 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.079188668 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.097577047 seconds)
  done (took 2.305600844 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224603824 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11481056 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256942497 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167782656 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139061631 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148626469 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130761602 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143601344 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.175802387 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154010402 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182576121 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173105138 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130055953 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186201159 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100829287 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.133715093 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174187835 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215582505 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13437351 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182059817 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197249619 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144079054 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157825798 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131473235 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118715502 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149216966 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.082260215 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111104608 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204591878 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155669503 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166444286 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160770124 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108626098 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208660441 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221456696 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191254966 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165990611 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096933883 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.141818923 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.150098569 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237674544 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099705558 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204364445 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138616111 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111305795 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171364675 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147093899 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.153395049 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.12971296 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119284541 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193145058 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191910731 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.187338723 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100345582 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141009847 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139380496 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14656224 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131595373 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220863748 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176551257 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178035458 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.082979374 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126508508 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168673362 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161400866 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162817001 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16296802 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126510701 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169852509 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165126232 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143739013 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187863588 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.162955479 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120647462 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149084118 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15114069 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148322176 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227164575 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156414331 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.10175005 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146262939 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129748759 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111173014 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.15545686 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10478316 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190964949 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129561369 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.114850274 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142281844 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13930349 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139684532 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174970395 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187297939 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107182029 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.091044748 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134738236 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.134781757 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165812449 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119860641 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137640465 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139802713 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.091622357 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174602825 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.086322434 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157467604 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.098338923 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154639712 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161102809 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.106469632 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136900537 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13080802 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.109620703 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174391314 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177996144 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121355264 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11223287 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185783062 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154174826 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.12856245 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156703447 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177303416 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.122817791 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128962412 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195261506 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194900748 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119554168 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18225346 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133832236 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115956153 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112360817 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159078621 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134893169 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149413133 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094303353 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178855292 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295386944 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106493966 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116941904 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166886003 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113123065 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092119724 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139493874 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128161157 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.118292551 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12530799 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.130858274 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160720608 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156527465 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13226527 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145465395 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130073 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219924914 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120439251 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.13079559 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107511371 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.101213575 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170097674 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192130909 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092585928 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199012655 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.150593794 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134272135 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150819355 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095039404 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154422847 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111021231 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099221163 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172422651 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144528805 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139738178 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19031868 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115692594 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.177415998 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159744674 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151963334 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151684721 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.142987146 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139222916 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.118309758 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138425322 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143859389 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.084317286 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121568014 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113732137 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135909637 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123210427 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097062364 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196237513 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146564182 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129010313 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137872203 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128335377 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157950222 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.091003123 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153868518 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.173975167 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12432646 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.176328809 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169934947 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181705387 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103701392 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203373385 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.081233565 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10610774 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.121273289 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147951926 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11244016 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096953796 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143870845 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176664738 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162283504 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154244513 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142390792 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153364916 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167519994 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102248095 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12829661 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181918214 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157246656 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156879279 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104547167 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.130706992 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155506232 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135833944 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223733589 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144908621 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155702726 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205758747 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.128160488 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093035609 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131298972 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180903523 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133190065 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155731082 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107069564 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120495753 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139415697 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.112999563 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138666671 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160262748 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140634065 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188047045 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.128667907 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164198453 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106981945 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145507179 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137576906 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143738774 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070519486 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150571394 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20049327 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127296016 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151985328 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16951355 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111449361 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157326666 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189008014 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191498121 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097323731 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137131984 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138729253 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142626649 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149687495 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155682462 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15731183 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168855672 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136676702 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.097657119 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119513403 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129040758 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130030334 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092853062 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128471598 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.170665583 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100804607 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164460933 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15884063 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117657415 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168042793 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.110280623 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.12380707 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130075507 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193123517 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155363714 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20829114 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129652793 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.158039397 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200838107 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087090235 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111793128 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.093030993 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154490139 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116689293 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186279725 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107576008 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137005819 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158016716 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189269802 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100009414 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.100747176 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135683356 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15194307 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143347642 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131419373 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1386618 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181702256 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.122083187 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11099473 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149205082 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11617213 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12705682 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192759113 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06924079 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128579855 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089482117 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113251373 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143972245 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183296543 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.115780545 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155441717 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155756044 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146217616 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143773073 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129924352 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127638279 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143708609 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180585614 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161411601 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.111932145 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135336633 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153627105 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190987939 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139298109 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100059586 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199455469 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171253826 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.174736196 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.122550324 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146909203 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145069763 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1367344 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183824472 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096016517 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201867953 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094908312 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195980772 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133109727 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122879153 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154019315 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.128175703 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101735589 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18723439 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152082982 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115255658 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093470722 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146331856 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176879553 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1340975 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.087947896 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175442444 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.085879903 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168077157 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228542661 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114140095 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132613377 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126452353 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096167726 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135780889 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137149876 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119663137 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.13618272 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184427909 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.11496493 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16905458 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200286196 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147104961 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153642308 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123511739 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671672484 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.109698298 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172148151 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133724807 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182958363 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130078232 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1516641 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137709585 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146545067 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193755753 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138868394 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208953961 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170687792 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157782944 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113178712 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137335984 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140236206 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.125607461 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131197708 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146643704 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138048722 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132453807 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155796036 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148914094 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.113707383 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100003137 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194114508 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113121789 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18428607 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157238149 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098195597 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171359942 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166293252 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112517381 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158786886 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203606795 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101501243 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130525783 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.113588082 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135393858 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229554963 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.085411627 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199038721 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157616136 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137537677 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146038669 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.126032523 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168587274 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137341876 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154092367 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126421445 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.13853207 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135134747 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118450282 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108902936 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114891998 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144439735 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128148423 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137533648 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138391214 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171627688 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.105916749 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104084204 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134942998 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18531616 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192909476 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116671242 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094629927 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140113508 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130792515 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152549315 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174568544 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.095676346 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116719885 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.116873385 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.110569722 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119365855 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134224728 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13566111 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144867936 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184405316 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.116722608 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.256662003 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099613519 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133642942 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.096361669 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.092298235 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130116173 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126731798 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137919639 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130120625 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229970423 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.109943338 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.114474106 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127355027 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.086131621 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117277393 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145801638 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144961691 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155383312 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126033301 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068907293 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137681933 seconds)
  done (took 70.378366605 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149877842 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.113518518 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.128997705 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.290420445 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158792856 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247647308 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.190480067 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233774749 seconds)
  done (took 2.353126165 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.162770246 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.108372294 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.133539633 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.113247574 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.080439525 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.136306629 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.304832503 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.11467537 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.098551025 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.10077151 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.144839211 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.082008639 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.466132393 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.100933518 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.098484511 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.072734274 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.099191515 seconds)
  done (took 3.253473426 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.428308579 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.577492434 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.466571679 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.086874495 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.584495927 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.117227267 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.853557461 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.170719994 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084553286 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.401157277 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.745963364 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148460977 seconds)
  done (took 16.507208913 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086970558 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.104326903 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.096364483 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.115472107 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085218444 seconds)
  done (took 1.334006207 seconds)
done (took 111.47654271 seconds)
(6/9) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.083123117 seconds)
  done (took 0.921943543 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.378254508 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063237443 seconds)
  done (took 1.316902301 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.094821506 seconds)
  done (took 0.950269932 seconds)
done (took 4.034307019 seconds)
(7/9) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.232243212 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.291727166 seconds)
    (3/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.159912059 seconds)
    (4/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.08542159 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.178133323 seconds)
    (6/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171908478 seconds)
    (7/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.253045185 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095945963 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.19932864 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086506315 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.113876203 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.200406274 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112114898 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.158993856 seconds)
    (15/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.211966139 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.189780246 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.203270821 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.205888813 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.109762667 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.207672336 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.127076602 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.143170746 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.139221872 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.2207462 seconds)
    (25/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.131318356 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.220472739 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.101936686 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.203329108 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080754751 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.092510855 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.160740775 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135193181 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.109715999 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.110450309 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.241167661 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.159684899 seconds)
    (37/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.175776727 seconds)
    (38/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.087183654 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.127200904 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.112258683 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.22729809 seconds)
    (42/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.14903963 seconds)
    (43/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.199494343 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.190457582 seconds)
    (45/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.207700745 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.080746817 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.110310797 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.125117638 seconds)
    (49/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.14874498 seconds)
    (50/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.189705847 seconds)
    (51/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.106140746 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.081280204 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.128958863 seconds)
    (54/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.091016869 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.1447099 seconds)
    (56/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.138648254 seconds)
    (57/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087815948 seconds)
    (58/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.097202601 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.179183333 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.103589132 seconds)
    (61/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.08756338 seconds)
    (62/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113243083 seconds)
    (63/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102078011 seconds)
    (64/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088304206 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.112457356 seconds)
    (66/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.082343654 seconds)
    (67/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.10859373 seconds)
    (68/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091283184 seconds)
    (69/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.169985666 seconds)
    (70/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.087231167 seconds)
    (71/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.131108848 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.214217337 seconds)
    (73/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147281201 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.060268898 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.086300532 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.062793801 seconds)
    (77/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.150117514 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.059483638 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.171373844 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.060409402 seconds)
    (81/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.150946587 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.106538501 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120826104 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.172837859 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.102283496 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108955207 seconds)
    (87/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111155529 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.127666122 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.061508775 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 0.163629999 seconds)
    (91/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.176486337 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.116833541 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.164187462 seconds)
    (94/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.094027491 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.10274987 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111357905 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.214590291 seconds)
    (98/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096681599 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.143615047 seconds)
    (100/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.083243348 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082593758 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061375331 seconds)
    (103/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.128413319 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.149057652 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.082293167 seconds)
    (106/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.062366385 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.16953332 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087698349 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.101686134 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.087678997 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083640757 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.080239455 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.107653592 seconds)
    (114/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.07866903 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.193359842 seconds)
    (116/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.060250658 seconds)
    (117/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.092233808 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.095114437 seconds)
    (119/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.107401472 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.16102045 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.10882953 seconds)
    (122/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.173833911 seconds)
    (123/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.10829552 seconds)
    (124/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.167945489 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092230842 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.146357179 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.207423438 seconds)
    (128/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.061319375 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.173027286 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.111551446 seconds)
    (131/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.084505792 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.110546744 seconds)
    (133/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.060785521 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107404898 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.10420919 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.110048564 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.134570851 seconds)
    (138/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156400533 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083199805 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.087637518 seconds)
    (141/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.127165917 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081690583 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.14903857 seconds)
    (144/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.099511124 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.166626066 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.103624551 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.087200786 seconds)
    (148/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.120283666 seconds)
    (149/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.10923903 seconds)
    (150/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.099933057 seconds)
    (151/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.120128034 seconds)
    (152/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.088734798 seconds)
    (153/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082272445 seconds)
    (154/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196074806 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110757308 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103277007 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.088136506 seconds)
    (158/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083666676 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.079943942 seconds)
    (160/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.082379765 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.082381046 seconds)
    (162/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.104297132 seconds)
    (163/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.062500613 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100361205 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.110455612 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.125246623 seconds)
    (167/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086275946 seconds)
    (168/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.110818065 seconds)
    (169/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.136063847 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 0.140729062 seconds)
    (171/309) benchmarking ("sort", Int8, false)...
    done (took 0.199756906 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.10209863 seconds)
    (173/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.139229936 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085530698 seconds)
    (175/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.104995169 seconds)
    (176/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.062237252 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111795734 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.062353887 seconds)
    (179/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.129248731 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.170086431 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.061467021 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.100442192 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.089730334 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.101684575 seconds)
    (185/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.062875948 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.164452849 seconds)
    (187/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.119038584 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085152499 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.204065078 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.08824545 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.109483027 seconds)
    (192/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.09970222 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109363034 seconds)
    (194/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083027132 seconds)
    (195/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.146812218 seconds)
    (196/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.169553945 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.080704738 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.171445441 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.105645477 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.090162471 seconds)
    (201/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.061376232 seconds)
    (202/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.088572507 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.141295166 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.081878818 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.060235513 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.126693573 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.138872274 seconds)
    (208/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.061950696 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.079285297 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.101937228 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.1380154 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063507285 seconds)
    (213/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.102719608 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062882932 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.207477666 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.076886147 seconds)
    (217/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.10334998 seconds)
    (218/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.062696251 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.130815591 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.088903904 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.112292805 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085752982 seconds)
    (223/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093897744 seconds)
    (224/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.072050736 seconds)
    (225/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.060602033 seconds)
    (226/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.113064604 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109836061 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065525462 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10531625 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102911108 seconds)
    (231/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079408595 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108486706 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107198626 seconds)
    (234/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073653701 seconds)
    (235/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.071036045 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.102760176 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.0795284 seconds)
    (238/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.174850575 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.180763384 seconds)
    (240/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.118571912 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.15906727 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.127997962 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.103287549 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.10781015 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.124727201 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.080622351 seconds)
    (247/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.138653333 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.2131906 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.080943972 seconds)
    (250/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.116943679 seconds)
    (251/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.108150636 seconds)
    (252/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.080428801 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.081558535 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.170001366 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.08445962 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.101232616 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.102676158 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06273884 seconds)
    (259/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.098908252 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.088212406 seconds)
    (261/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101579499 seconds)
    (262/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.083781051 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.154556479 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.081100569 seconds)
    (265/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084326899 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.089776979 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102591846 seconds)
    (268/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.091684513 seconds)
    (269/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113503858 seconds)
    (270/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.087409246 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.103435078 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.079518584 seconds)
    (273/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.127744098 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.060853675 seconds)
    (275/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.08382246 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.15104659 seconds)
    (277/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.087631007 seconds)
    (278/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210887596 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.145449001 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.061036455 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132027367 seconds)
    (282/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.061353694 seconds)
    (283/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.093646143 seconds)
    (284/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.080051923 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106178949 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.080177832 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.111230873 seconds)
    (288/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.062795131 seconds)
    (289/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083629075 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.081429031 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.061009567 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.102110249 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.080772938 seconds)
    (294/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.108922491 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121188587 seconds)
    (296/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.111317675 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.061066925 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.085367467 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.088010681 seconds)
    (300/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.087289924 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.086773223 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.129393394 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.188493867 seconds)
    (304/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066086716 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.10779237 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084135324 seconds)
    (307/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062128765 seconds)
    (308/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.094860805 seconds)
    (309/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082107511 seconds)
  done (took 37.393002948 seconds)
done (took 38.238192449 seconds)
(8/9) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215997397 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.200304254 seconds)
  done (took 1.300039992 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.114969298 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139210517 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.115947536 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.142920207 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105561342 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.114203691 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.135387307 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.093477952 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105056181 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081824938 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.104522217 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.10381304 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146629739 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103380543 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084035641 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.102638466 seconds)
  done (took 2.723864032 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.111742356 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.239671574 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11933724 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.079433768 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.109126253 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.106140484 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.081181555 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111280076 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.083749408 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.102264697 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.084788558 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.104151189 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.081068631 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105093477 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.083198125 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107601437 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.080566768 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107803995 seconds)
  done (took 2.791926011 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113743903 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148856657 seconds)
  done (took 1.159328308 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.239347017 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160064557 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.225567547 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.478191264 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.279110908 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.39976293 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.199883163 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.20984275 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156825442 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207342306 seconds)
  done (took 3.446512047 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11660841 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179151422 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.34021887 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153233668 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.131242648 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.102336792 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154439343 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132961995 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122075124 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122129914 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120959062 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095625937 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136194971 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.112186688 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094261129 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11586505 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140315404 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.090160496 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113690102 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.113153217 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.113738901 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105093165 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091296227 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.112783046 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.118539578 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.117887281 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08368606 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103817722 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.09260314 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113131037 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.088476127 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.121675796 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117736666 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.149855858 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124553464 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.151699198 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116543272 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.108801411 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.091798599 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.109332888 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.115214748 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.094124175 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126717115 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115465833 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.082224158 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117044749 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.082276515 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104993959 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.0902769 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119397665 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113018333 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.089446279 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174528307 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095940495 seconds)
  done (took 7.338269862 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.781216297 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153716427 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087874883 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.875219375 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109982946 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125681101 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.767063659 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108570143 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249776943 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.744254291 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129241375 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093681909 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224710994 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.254731757 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.933535001 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308885938 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.63065704 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123365866 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148662877 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151672501 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.090009059 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131102601 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124979168 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.422736909 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.113172069 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087104151 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113113407 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115928842 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157759939 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.120837407 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091072444 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194463834 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249468681 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.17938663 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114014973 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108013346 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087134939 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186898915 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240665478 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214080857 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176750312 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104561721 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087909811 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115408799 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124768202 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084902513 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158730397 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190441475 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167566175 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111150707 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094910656 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113984049 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.114232941 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.161933032 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.117539633 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.295841362 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308303312 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110412125 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114706864 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10206085 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261140787 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.120138953 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221856875 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110629359 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210126594 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10797159 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751609722 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186650977 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088491851 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114626616 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.091361012 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114137268 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115430618 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162483452 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387261127 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095573265 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112725758 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107564753 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203596923 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.121997407 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086523553 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180140539 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091407622 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115041348 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117219805 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095166757 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186308818 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.232353079 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116435905 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09286905 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114081388 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.097556299 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.113144672 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207656014 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21649717 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.159910427 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22723489 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093826197 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183272381 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.165683039 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116938379 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.16968729 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.114184934 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099415935 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117153084 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215682667 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.141609421 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.118827561 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091252116 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11589596 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.144973935 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123212008 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090644215 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188906141 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45361429 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16449623 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.106860943 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124144851 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092680409 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15727138 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116463662 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256105269 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09373005 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187615268 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092174017 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108281925 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.113884125 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161194657 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119776413 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093751145 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117390149 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116629685 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.230891273 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213100978 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096966342 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241573906 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180718464 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.114697998 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167679864 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115055328 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166832977 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094608394 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1160018 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112832454 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785283906 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096472393 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.114955458 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090239781 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185467654 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110049637 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.121555972 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099373053 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107310545 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771492487 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10083096 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120078244 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.122402703 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114370319 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.094233347 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11352826 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089532138 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1809271 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224288833 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094633152 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114252517 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121610099 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158204598 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.112541772 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100439557 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121760949 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122483194 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.092663732 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114003475 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.121880722 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166390251 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.159291657 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217092994 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.586916786 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087213318 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.122241611 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223192133 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086448217 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286043427 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114724097 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.222291642 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163882509 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.118103225 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.303141979 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16250439 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187055024 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.122502581 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171404362 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083320793 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113936768 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.161068672 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109746062 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113972033 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160315294 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.094537169 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118645389 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956053381 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108775423 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222388579 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.084328352 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189863845 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09241996 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118305528 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292822395 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086529914 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121546815 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160388121 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113046869 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.121166055 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.691678237 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123619719 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115204443 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093584172 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.2186471 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.160489869 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11509526 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112232426 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094537834 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180443257 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205661966 seconds)
  done (took 43.016613077 seconds)
done (took 62.668736562 seconds)
(9/9) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096007248 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.129619657 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091613935 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120248346 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.117317939 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.087922906 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.111859452 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093856261 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.117786151 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.119186872 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.094442671 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.087734464 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.092630762 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.114240014 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.093407256 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129987165 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118358522 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089892281 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.114564186 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081919367 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.11437705 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.082010858 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.108342853 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.065534269 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.115963596 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089595111 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.111847029 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.091591384 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.105709396 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.081640859 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.108849176 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.111031963 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.082373281 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.117803124 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.089047075 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.113470235 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.092056132 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.115829669 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.086072769 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.105438593 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.111662803 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.083501239 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.111352539 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.091233744 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.110050826 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.088460274 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.112755433 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.094479929 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.130056646 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106347637 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091937571 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.114421803 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.092031352 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.112879176 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085758932 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.113373696 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.086989927 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.129986223 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.113554478 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085452291 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.1134994 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.090626042 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11138576 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.090746793 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.114203851 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.114598344 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095118897 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111156666 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.092053121 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.110700754 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.082846905 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.113608277 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.085615676 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.105189825 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091403827 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.116708963 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.103839442 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.088989379 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.111075158 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.087790453 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10430512 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08536202 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.105990655 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.088505474 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107541396 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.066432788 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.108113465 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089304566 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.103783875 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.092284983 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.110552047 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089491707 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.107005851 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093901182 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.104727574 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.087374463 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.105852199 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.082077373 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108019876 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.086202726 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.10542094 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083359303 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.114166939 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.106117403 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.089337348 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117079209 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.082972915 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.111009081 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.081627054 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.104559956 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.096387087 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.115599654 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.082795112 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107307402 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.106588435 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.090786053 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.103458081 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.083699739 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.104655713 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.083224142 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.1107101 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082780937 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106350553 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.08987214 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.119389206 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.082170503 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.108651692 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084295778 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.1055768 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.087543818 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106658657 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082108907 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.107814907 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073369906 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107226664 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.082441435 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113398952 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085112308 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.113776711 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.083626553 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.114638508 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.109778111 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.089534685 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.110474473 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.082474467 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.070394845 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107892589 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10664831 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.085610975 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.105573072 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.085796736 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.105116079 seconds)
done (took 16.122111545 seconds)
RUNNING BENCHMARKS...
(1/9) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.989422194 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.987654732 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.969864044 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.988980102 seconds)
  done (took 24.857017994 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.991656693 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.990636452 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.991335822 seconds)
  done (took 3.895611921 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.119383151 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.988293042 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.986948572 seconds)
  done (took 18.016781265 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.325537716 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 3.033211448 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.43847303 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.850818787 seconds)
  done (took 10.57204038 seconds)
done (took 58.265439662 seconds)
(2/9) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.681408419 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.682953533 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.986438852 seconds)
  done (took 10.272982436 seconds)
done (took 11.19364021 seconds)
(3/9) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.970957236 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.051661472 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.000763591 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.968431345 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.100011426 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.027183393 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.274847139 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.206541758 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.987349412 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.973575606 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.993151186 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.994731346 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.988985254 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.27323759 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.989427924 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.990860413 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.006661769 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.431539015 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.331798904 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.992204695 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.990675649 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.009155147 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.995378873 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.00406499 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.047715056 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.99026421 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.989208869 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.99367587 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.755838152 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.996691932 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.067207496 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.470532821 seconds)
  done (took 183.789785234 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.98995361 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.997727345 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.051401572 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.045884964 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.561267218 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.186357705 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.129913693 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.621116135 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.00553745 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.991608347 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.277811202 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.990483473 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.343011199 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.006761859 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.999680992 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.094175042 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.276757307 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.299042959 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.005716556 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.241372567 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.011087948 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.348504233 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.277740225 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.203158228 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.03764506 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.072769344 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.026487277 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.039756507 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.180792531 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.231044999 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.993003673 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.028579849 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.480680273 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.851820784 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.99426427 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.025490814 seconds)
  done (took 142.844830335 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.249521429 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.991359817 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.992560161 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.991997068 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.991418726 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.017248371 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.99208366 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.448171041 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.451484143 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.489373891 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.487333083 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.051708714 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.139314762 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.992831475 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.080609581 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.004684252 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.993225632 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.007291484 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.035476927 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.992446039 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.99281306 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.454194281 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.010076151 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.203222703 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.001664929 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.993593607 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.019025857 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.377761571 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.992763442 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.019406632 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.296846173 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.033925078 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.993219796 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.215071354 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.108318928 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.096504325 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.995464357 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.018958696 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.994520274 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.251534206 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.994270108 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.994202364 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.994374712 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.993425159 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.997914823 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.508364738 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.994386508 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.450452233 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.993816493 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.817507735 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.994355379 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.995065027 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.294917003 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.294058779 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.007648059 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.993156324 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.996157244 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.994706897 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.993697416 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.021241519 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.28799996 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.089115303 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.007386655 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.994700974 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.997567183 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.020339561 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.993804263 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.034086141 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.994640237 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.134073049 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.056588248 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.220117084 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.457619518 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.998468287 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.083567718 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.109167952 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.995873111 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.995766735 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.996214096 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.99562603 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.097105909 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.995873778 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.343633904 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.002774313 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.99674983 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.051349932 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.082712299 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.995057823 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.211421386 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.997885833 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.995804156 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.608814837 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.082193638 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.995579894 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.994482946 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.994638791 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.338569657 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.448978555 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.110333423 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.995755678 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.269934847 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.995041985 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.348839902 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.431616905 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.488646603 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.992700549 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.093507896 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.997119172 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.992904248 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.992323035 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.020727441 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.007515887 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.05120775 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.992456877 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.382714508 seconds)
  done (took 319.337757063 seconds)
done (took 648.143985904 seconds)
(4/9) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.067983397 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.050973671 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.99726362 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.000355516 seconds)
  done (took 25.044249611 seconds)
done (took 25.970267501 seconds)
(5/9) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.991724471 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.996080886 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.993848016 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.99485326 seconds)
  done (took 24.904101379 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.032965478 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.033430989 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.034623455 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.044610331 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.036677951 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.033952686 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.025378354 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.025694232 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.043074471 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.036664104 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.035887325 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.035187648 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.033197353 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.025794396 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.035285701 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.034879601 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.043947784 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.035147211 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.026052433 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.036703003 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.001604047 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.044946014 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.036890962 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.000796225 seconds)
  done (took 25.702534628 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.529171154 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.073915636 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.159459561 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.059829114 seconds)
  done (took 5.751166395 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.052895209 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.054861785 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.067376189 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.106943758 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.139049826 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.063947298 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.028142362 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.02334024 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.009221419 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.055311074 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.129854373 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.072106574 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.144620189 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.000912831 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.195778682 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.000798851 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.001282356 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.053601959 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.105296482 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.121951844 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.003850993 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.052289279 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.061142892 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.071458834 seconds)
  done (took 26.545965888 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.013585101 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.007969551 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.99952109 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.998844145 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.022391682 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.003087673 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.001075987 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.001384207 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.999176513 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.005594791 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.999546517 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.011854671 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.000831658 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.999752234 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.00632949 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.002130138 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.006079849 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.999197935 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.000400279 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.002836984 seconds)
  done (took 21.01212293 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.993928775 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.905158839 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.345815873 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.252141617 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.994691108 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.995043093 seconds)
  done (took 26.417209397 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.053703415 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.178461589 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.001343776 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.258757109 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.347605093 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.01719678 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.002280861 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.192255129 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.418410522 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.389427771 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.048169054 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.056537004 seconds)
  done (took 14.894640102 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.006449424 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.997761726 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.997203375 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.013605819 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.041343907 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.019184018 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.008026312 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.995799271 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.044088721 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.059331747 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.019124758 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.042612152 seconds)
  done (took 33.175985015 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.294064073 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042709833 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.728652819 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.851001239 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.724092628 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.207214918 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.8479725 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.434770457 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.000869206 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.268844072 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005834371 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.1016838 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.250330685 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.999753186 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.998362976 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.805211067 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.236583241 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414668964 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998524604 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271481332 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.022749359 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.995896081 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.34079373 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.024247089 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.207205275 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.973670153 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.256327486 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.77196909 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.216587359 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.007708466 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.006494766 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.995025711 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.26975237 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575252138 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.107225047 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.006570845 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.737899208 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.543108156 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.982010595 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.380255631 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.755226435 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.999465596 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.007231658 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.995544386 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.930969114 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.994491857 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430074129 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.005961828 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.707022606 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.995504221 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.006488554 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.090335036 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.998904703 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.986578501 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.043128978 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.941339942 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 5.991992314 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.002169098 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567635438 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702901487 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.999097936 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.946006632 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416334974 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.216208777 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539578925 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.111835637 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.998578894 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.998462669 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93019917 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.2999402 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.012270399 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142893529 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.020996001 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644978681 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599841271 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.930893901 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.939865767 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469696143 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.999420316 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.935293077 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.222863519 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.78191508 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.931186205 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.958401485 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.930748802 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595619443 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.004646255 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.246297575 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.002777907 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.425495426 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.007551618 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.012649341 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.020635575 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.220418122 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.874581425 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.995716109 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.684959256 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138067266 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.017597227 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.422795475 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933690089 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.999938134 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.251717333 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.208976871 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.999892155 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.791674205 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.196668679 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.999569393 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.015166506 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.997048321 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.010409538 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.476338726 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.023376029 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.670422096 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.016874139 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.775014126 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625589295 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.009254612 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.100643595 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.880049842 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.20827619 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.6678068 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.87888811 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.063930764 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.000592131 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.998053454 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.283462746 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.850221739 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.879752245 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.99286784 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.998116775 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.009682925 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.996911105 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.946309136 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 5.994858046 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.911085055 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.775651187 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.220346087 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.000135243 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.275542341 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.932283768 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144564082 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005890842 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.220632315 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 1.956331768 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.010772206 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.256757203 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.996351299 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.000851192 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.02483582 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.017092767 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.095169621 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.019318323 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.00450564 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.256226239 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.001682129 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.001031359 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.322044381 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.778745338 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.001513534 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.004319497 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.871898094 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.47944114 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990666283 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.005101139 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.888505409 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.012366434 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.066174249 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.004838885 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.008438669 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.330023935 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.855815783 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.00296192 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 5.995087219 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.225321924 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.010002534 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.242147246 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.078903275 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.180547435 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.486131183 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.026688473 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.934318939 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.710835938 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.692368912 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.999284809 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.193379928 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.999042425 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.008969465 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.010645432 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.545539431 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.481088499 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.015894132 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.243510318 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.005632201 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.011695172 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.006057142 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.001460812 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.289675492 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.692922101 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.007648842 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.014482008 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.143232753 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.01483289 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.936170161 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.517025193 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.006586415 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.001079337 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.779737049 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.036412819 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.232168413 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453100968 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.260673616 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.730465061 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.012238531 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.365382585 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.032949475 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.000044843 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.677649135 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.016166524 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.021173148 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.021729959 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.010522857 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.300715139 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.440127156 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569761069 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611226507 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46166175 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741987936 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.009469715 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.885635221 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.426337319 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933250122 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.657225416 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.13813571 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.449482301 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.946305159 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.17974839 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 1.957960267 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592320838 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.006748003 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.224596864 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.719142636 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.693419002 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.022254908 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.207622903 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.030663423 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.996136035 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.939870996 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.276484247 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.233160105 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.661030776 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.075745974 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432444397 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.67569306 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.784633193 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 5.992012736 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161763625 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.145086126 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.539465103 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.37904857 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.997574236 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.893764891 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.456754908 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.997434825 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.516676676 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517824532 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.007519598 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.176559677 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930540966 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.00299993 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.003679639 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.987947125 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.802814269 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 4.740860262 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.261358682 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.002855397 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.926409122 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.997694143 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430530086 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.87185751 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.998039561 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.991463398 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63746352 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.993092672 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.222705186 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.994723813 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.291767171 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.00917272 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.927621151 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.926828265 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.685720855 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.995355241 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96839089 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412134004 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.393556174 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.024023971 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.008731777 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84027236 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.249275262 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.007981113 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.503146808 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.234034687 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.822341052 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.018354195 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.095414849 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.717882823 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.988769636 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.889852059 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.229102656 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.871323156 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.217172648 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.701040553 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.894669128 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.993676692 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.209423806 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.891539189 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.906330081 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.203494653 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.724060537 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.998739121 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594516648 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.033884833 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.902222705 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.020760903 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413299835 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.00553053 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.066288334 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.005453922 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.006922894 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.006041789 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.133507763 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.910249152 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.010853335 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.009240468 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.088551675 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.678584088 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.300825975 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.770105093 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486809566 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635442482 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.498124402 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.023579971 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.996485034 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.004763328 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930445732 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.145974136 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.521386684 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.269648753 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125122003 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.476441382 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.019172828 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.729630894 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.020065104 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.210710634 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.270632838 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.867811758 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000896168 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.654965762 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.885788135 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.004723104 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.203044756 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413164068 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479466918 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110325908 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.999357401 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.422296929 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.269080265 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.083962538 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.993004712 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583708633 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.00246581 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17280015 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.012134139 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.95842975 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.140765958 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.002820695 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56753855 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.01922373 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.14857516 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.766486457 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.265588863 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.25005771 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309954759 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.002914027 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485933508 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598247378 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.256496215 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.063094073 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.004569247 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.095651875 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.141033289 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 4.852013691 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.888873918 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.993420028 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839152147 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.703019913 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.004703848 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.484851704 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271606242 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 5.992599081 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 4.859652634 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.030130012 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.004319547 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.217331977 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585502612 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.219476656 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.004981422 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.997440101 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.985577861 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485969512 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.021478155 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928468705 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.998824108 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.186789175 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.248561039 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.020615219 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.448427898 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.706908549 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464570061 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.966281097 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.017094856 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.997111513 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.586168689 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484727368 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.321220179 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413139641 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.656179745 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.995406704 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.285147581 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.001403953 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.004578574 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.275384521 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.000535209 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.001585323 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.009817978 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.486900555 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602761749 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.014826518 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284569776 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.934741487 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.223270562 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675647515 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.932349153 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.007489357 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.144320176 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.000299774 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127679141 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.00864999 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 4.886063305 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.009029517 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.733242149 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282020688 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.003108197 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.979134366 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.759298921 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.001070887 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.007680195 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.238278568 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.003293448 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.672673836 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.349318636 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.25261021 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.998244711 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.980847448 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.002090958 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998686083 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.699880852 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.965908447 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.54746856 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483610829 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.999748674 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.022639822 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.002726242 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.215622389 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.210385044 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.954654358 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.024464499 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.003815297 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.016801151 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.89935453 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766362865 seconds)
  done (took 1373.68028993 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.017392419 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.008704711 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.001401909 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.021179774 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.007419919 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.111279019 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.079456283 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.084554189 seconds)
  done (took 49.264648205 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.006268345 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.142602115 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.02467181 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.004895675 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.009066193 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.005475391 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.364951047 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.020949713 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.009200151 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.010683346 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.001064667 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.001295478 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.568629126 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.009700811 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.00351802 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.984848525 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.008566598 seconds)
  done (took 59.110478101 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.000155188 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.17544999 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.037620112 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.000893515 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.207334292 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.029166523 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.591281705 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.056103927 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.000307589 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.087362099 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.658906523 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.028470364 seconds)
  done (took 78.808309901 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.003812877 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.003239127 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.003296426 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.003858536 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.004104396 seconds)
  done (took 5.950175219 seconds)
done (took 1746.143848197 seconds)
(6/9) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 5.976932217 seconds)
  done (took 6.905921621 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.51086536 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.480875579 seconds)
  done (took 3.921632789 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.279983515 seconds)
  done (took 2.206260086 seconds)
done (took 13.962307975 seconds)
(7/9) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.39500185 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.127451008 seconds)
    (3/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.01091051 seconds)
    (4/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.054042365 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.057779178 seconds)
    (6/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.198985511 seconds)
    (7/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.277920551 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.344451393 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.35898291 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.214212521 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.040588145 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.996164728 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.015228431 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.771377867 seconds)
    (15/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.282071601 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.005791744 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.674195227 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.969212864 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.198045924 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.361004881 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.941787349 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 5.987649644 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.72402182 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.181582798 seconds)
    (25/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.009912697 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.519122343 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.032578547 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.666386651 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.360203489 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.082539288 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.979860227 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.059879779 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.087066528 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.021630711 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.107177514 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.009161048 seconds)
    (37/309) benchmarking ("sort", BigFloat, false)...
    done (took 5.984147294 seconds)
    (38/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.006773392 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.379759003 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.007204413 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.396171093 seconds)
    (42/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.426567079 seconds)
    (43/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.133922235 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.990253706 seconds)
    (45/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 5.986907388 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.006079537 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.093044259 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.230420157 seconds)
    (49/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.388169519 seconds)
    (50/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.912662963 seconds)
    (51/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.005057288 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.979015587 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.937840897 seconds)
    (54/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.98761567 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.046000253 seconds)
    (56/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.286302775 seconds)
    (57/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 5.993181103 seconds)
    (58/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.567298851 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.47417627 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.036893375 seconds)
    (61/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.986476507 seconds)
    (62/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 5.977359058 seconds)
    (63/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.002720107 seconds)
    (64/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.991149219 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.002164784 seconds)
    (66/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.100817577 seconds)
    (67/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 5.991052214 seconds)
    (68/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.138867094 seconds)
    (69/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.618956902 seconds)
    (70/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.003422902 seconds)
    (71/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.420419033 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.967197777 seconds)
    (73/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.04788475 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.398921268 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.959372989 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.162335094 seconds)
    (77/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.632039841 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.183625273 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 5.99415993 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.283385176 seconds)
    (81/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.972743558 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.056643546 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 5.959442045 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.727463754 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.001307054 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.517657697 seconds)
    (87/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.038168155 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.912330558 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.13404251 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 4.916101738 seconds)
    (91/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.550295047 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.267490647 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.960717718 seconds)
    (94/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.072865915 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 5.981925117 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.295681289 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 5.990292524 seconds)
    (98/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.682326493 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 5.987352049 seconds)
    (100/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.051112132 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.121742077 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.197327908 seconds)
    (103/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.076065265 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.201575789 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.004476136 seconds)
    (106/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.98041474 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.293711449 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.202657716 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.341754035 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.065151222 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.960426641 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.309278604 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.006970933 seconds)
    (114/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.235826035 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 5.979823808 seconds)
    (116/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.557917842 seconds)
    (117/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.086536173 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.079928631 seconds)
    (119/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.104471927 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.081398499 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.766340346 seconds)
    (122/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.693681323 seconds)
    (123/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.002038046 seconds)
    (124/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.1176641 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.122312976 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 5.960886295 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.048819803 seconds)
    (128/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.173192119 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.490533935 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.016597419 seconds)
    (131/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.099990573 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.25820009 seconds)
    (133/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.917605724 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.562558017 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.240247492 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.258227254 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 5.98270812 seconds)
    (138/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.938765629 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.9496171 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.086407475 seconds)
    (141/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.999022072 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.972579116 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.388533121 seconds)
    (144/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.220202342 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 5.980275478 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.569027461 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.004933136 seconds)
    (148/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.859571075 seconds)
    (149/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.100218519 seconds)
    (150/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.83721513 seconds)
    (151/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.101432232 seconds)
    (152/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.080689961 seconds)
    (153/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.089769774 seconds)
    (154/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.298586493 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.314696379 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 5.974735412 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.011533486 seconds)
    (158/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.286563714 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.232091101 seconds)
    (160/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.470047867 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 5.989407685 seconds)
    (162/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.035363326 seconds)
    (163/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.430089245 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.662528893 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.815629372 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.384606496 seconds)
    (167/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.045760034 seconds)
    (168/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.000116848 seconds)
    (169/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.032987228 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 5.124218366 seconds)
    (171/309) benchmarking ("sort", Int8, false)...
    done (took 3.974458548 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.917317526 seconds)
    (173/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.266681303 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.185660587 seconds)
    (175/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.113732677 seconds)
    (176/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.209747692 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.98953904 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 5.963119527 seconds)
    (179/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.978320192 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 5.990400709 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.124551066 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.360162205 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.013405051 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.506596821 seconds)
    (185/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.268659762 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.078075321 seconds)
    (187/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.954089281 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.957266837 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 5.987520283 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.002181031 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.003044239 seconds)
    (192/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 3.941733357 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.55835049 seconds)
    (194/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.087452907 seconds)
    (195/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.83331576 seconds)
    (196/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.815971961 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.314672867 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.074387902 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 5.979508772 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.033928448 seconds)
    (201/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.491262411 seconds)
    (202/309) benchmarking ("map", abs, BigInt, false)...
    done (took 5.997841796 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 5.964738992 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.737083523 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.261681731 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.539670965 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.123219949 seconds)
    (208/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.90995122 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.653384395 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.036071036 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.022002286 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.964179446 seconds)
    (213/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.027565019 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.631012054 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 5.979306208 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.473873525 seconds)
    (217/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.061095486 seconds)
    (218/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.458231473 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.663228663 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.194813672 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.598885313 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.576940756 seconds)
    (223/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.503296889 seconds)
    (224/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.438029693 seconds)
    (225/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.944556653 seconds)
    (226/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 5.978362167 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.006058019 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.012886482 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.02311726 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 5.981552591 seconds)
    (231/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.062215263 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.001574483 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.586308172 seconds)
    (234/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.283574677 seconds)
    (235/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.977225282 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 5.993271745 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.021244406 seconds)
    (238/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.512756091 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 5.994699014 seconds)
    (240/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.624648366 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 5.992624376 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 5.979281698 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.072731466 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.828057757 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.02259043 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.719875555 seconds)
    (247/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.273289525 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 5.98104123 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.485364872 seconds)
    (250/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.712971999 seconds)
    (251/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.069657509 seconds)
    (252/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.862636178 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 5.983259438 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.962811487 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.673670812 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.264464197 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.169626975 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.972663077 seconds)
    (259/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.967104152 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.011540741 seconds)
    (261/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.155001212 seconds)
    (262/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.09599247 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.001265746 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.351336583 seconds)
    (265/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.255114417 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.369492206 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.734337943 seconds)
    (268/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.069334893 seconds)
    (269/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.092207985 seconds)
    (270/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.008553169 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.065243989 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.564681667 seconds)
    (273/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.011290785 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.404782076 seconds)
    (275/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.149174077 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.09721306 seconds)
    (277/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.008072096 seconds)
    (278/309) benchmarking ("sort", BigInt, false)...
    done (took 5.98108918 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 5.965716864 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.063904136 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.117695389 seconds)
    (282/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.833729269 seconds)
    (283/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.935940791 seconds)
    (284/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.05460829 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.046071228 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.365457055 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.075967691 seconds)
    (288/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.440512477 seconds)
    (289/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.868028068 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.068037055 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.02050315 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.115863928 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.649315474 seconds)
    (294/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.090672695 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.767847693 seconds)
    (296/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.276931946 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.658082538 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 5.967610616 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.026224797 seconds)
    (300/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.964050718 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.028973942 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.767749147 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 5.996865706 seconds)
    (304/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.150650427 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.017576279 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.155937511 seconds)
    (307/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.147776275 seconds)
    (308/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.562613235 seconds)
    (309/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 5.996055254 seconds)
  done (took 778.565063891 seconds)
done (took 779.491679347 seconds)
(8/9) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 5.976744879 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 5.984358036 seconds)
  done (took 12.878155901 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.149424151 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.104807391 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.989429659 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 5.993719172 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.989188151 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.011760147 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.012596283 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.989920355 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.989217903 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.989555394 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.990097759 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.176365353 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.046164584 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.989867607 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.99074664 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.082690196 seconds)
  done (took 37.414721091 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.013916166 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.995649823 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.082799369 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.009638936 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.013116889 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.142590207 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.042185063 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.995670433 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.123103007 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.027888471 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.2062454 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.012706783 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.993584383 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.846439649 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.009064493 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.143905773 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.18949496 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.20637116 seconds)
  done (took 22.972599588 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.328963629 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 5.996214166 seconds)
  done (took 8.244466238 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 5.991285171 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.004014819 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.021103974 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.018606919 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.035652706 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.021004418 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.037631819 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.057978897 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.003742637 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.014618196 seconds)
  done (took 61.126615457 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.009695491 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.994690246 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.99511425 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.993768831 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 5.986920708 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 5.998989205 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.994075219 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 5.987053816 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.679376217 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.094641942 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.01122548 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.001419589 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.00884021 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.996312296 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.992476125 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.026306723 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.129552578 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.005911684 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.992566504 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.999929814 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.994365735 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.094073248 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.027578364 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.993221687 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.09179085 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.695331735 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.001326984 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.002200485 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.116568081 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.007452844 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.994760565 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.996067898 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.99669722 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.539983821 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.428714697 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.001787106 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.014338314 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.004231764 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.992459051 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.130073411 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.010853517 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.0020082 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 5.989984995 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.399098458 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.14198213 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.090549072 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.005266348 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.999815601 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.997375464 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.04811043 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.997991666 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.997501656 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.021260592 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.68923497 seconds)
  done (took 90.333830062 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.045850322 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.486022399 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.156161597 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.003582203 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.780870191 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.567941642 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.006155098 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.207535361 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.01232141 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 4.137227376 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.25164466 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.42804439 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.010512518 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.030833145 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.374435231 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.070489123 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.990739091 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.707810884 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.006578537 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 5.992742775 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.344903268 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.378904383 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 5.681139698 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.068947178 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.026720161 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.390256956 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 3.151712893 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.482180825 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.009937508 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 5.991659189 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.392978101 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.009032634 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 5.99992779 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.994373241 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.231668525 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.280974637 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.274038722 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.008182047 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.037320195 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.994482147 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.021203342 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.38566433 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.286188751 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 5.690648572 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 5.993365935 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.390620797 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.006370748 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 5.995362217 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 5.999255751 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.192899353 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.773620393 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 5.992963439 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 3.160080927 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.008272379 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.250679038 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.059311703 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.042058788 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.417113404 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.007624213 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.106945421 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.038697794 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.99560464 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.001588586 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.997464954 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.007374955 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.272837739 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.364667824 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.99681406 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.276870394 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.40186231 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 5.757882607 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.46242948 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.586428297 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.020122778 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.041219813 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.993636875 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.52156283 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.432854613 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.028520289 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.994181232 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.263137911 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.013366504 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.239856281 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.006531858 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 4.238307286 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.367808172 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.016091538 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.016961731 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 4.197139055 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.998359796 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.755636007 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 5.996264004 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.228775328 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.051470095 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.994827656 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 5.99516878 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.045539788 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 3.73665671 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.008130509 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 5.99970032 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.452186529 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.017309882 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 4.978053964 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.996398193 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 4.247362499 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.995729433 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 5.995989666 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.998044398 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.212338365 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.155468631 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.001547776 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.997699799 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 4.182097286 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.002011511 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.097794393 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.998586696 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.238087309 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.014403191 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.50516498 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.002661802 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.597124962 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.032024762 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.997199549 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.01244524 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.793424908 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.216892115 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.010309984 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 5.997975795 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.997970616 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.020859999 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 4.86908554 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.998132267 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.057611714 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.000008316 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.63222766 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.024217909 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.020065337 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.403408285 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.003087738 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.504877607 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.014718498 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 5.999580986 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.253799503 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.238171607 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.277219454 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 5.999546141 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.998737671 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.622496483 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.024599374 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.126671995 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.013653267 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.989147564 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.192428156 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.108095724 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.999929623 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.548942206 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 5.999344521 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.207781345 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 5.998879715 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.269078992 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.4216856 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.014935259 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.005914064 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.637263392 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.626119022 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.753880517 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.003237412 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.242223305 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.970977616 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.449917716 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 5.998872969 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 5.999840835 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.557081716 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.000560299 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.007053281 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.001100029 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.999811369 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.068484319 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.171940308 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.678140717 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.000697068 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.396576476 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.040545414 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 4.276674569 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.004546466 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.001034174 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.353162549 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.041224917 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.004245704 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.015167186 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.00074916 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.008526435 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.40458415 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.628659033 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.002209933 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.150300337 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.559489171 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.016948295 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.000972106 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.286020887 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.192398857 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.48385652 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.030702526 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.244167425 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.02365679 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.039114817 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.724918803 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.067628666 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.407016388 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.017821242 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.014646958 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.530905354 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.018104536 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.058481111 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.00187744 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.00238289 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.467284213 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.019547282 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.00643591 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 4.903351278 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 3.749118024 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.260721371 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.00243547 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.005545161 seconds)
  done (took 1008.325651027 seconds)
done (took 1242.21270136 seconds)
(9/9) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.036058583 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.030188362 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.014852869 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.034951921 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.124894699 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.037766364 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.023547824 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.016275578 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.06111275 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.063413708 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.013424995 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.036347492 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.01601592 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.014698137 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.014493129 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.028602629 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.837687 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.015160244 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.032346985 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.023752067 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.031084479 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.013512497 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.064106328 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.037167594 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.018389002 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.018524683 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.017959744 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.034531406 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.126622148 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.018144346 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.019136624 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.026351569 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.837709068 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.013884476 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.010599914 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.03562519 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.026809878 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.025387112 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.01890646 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.047110931 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.148147242 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.028115434 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.017392679 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.016916719 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.01827282 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.021308609 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.017519679 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.022839056 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.02905483 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.03049763 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.137726292 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.043270985 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.019368937 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.017343773 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.026669563 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.017439061 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.020242421 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.032853707 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.035942616 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.032832872 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.829527665 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.022015644 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.019485784 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.033740831 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.024733232 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.178477437 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.025551449 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.0224287 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.156833666 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.034906538 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.181065081 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.039090729 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.018627769 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.031552361 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.048562459 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.84431396 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.013186473 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.018322263 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.025354042 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.017583866 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.027235761 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.030834524 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.022904145 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.019455305 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.032524262 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.041514433 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.02880919 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.020132924 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.027559032 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.038218679 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.026555925 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.029584125 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.022207624 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.014289945 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.028764805 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.022133304 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.021925718 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.022523947 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.02368001 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.030163134 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.157394737 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.047369733 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.016888186 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.017434746 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.01934822 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.033594577 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.160686636 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.032754662 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.042426595 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.068132635 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.021655744 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.836753068 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.024787283 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.035950179 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.029092007 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.023560808 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.015463518 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.837322376 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.151551853 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.047076956 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.022633144 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.019577724 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.036539099 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.023250273 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.017722752 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.851457117 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.022319485 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.03486003 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.141894744 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.031214726 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.052262061 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.01992049 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.025053576 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.044509294 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.037046136 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.052348277 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.025072131 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.036235518 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.037178301 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.018690449 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.031795602 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.031746479 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.02374122 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.028089032 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.016898524 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.045667964 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.034831707 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.034538481 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.042745659 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.143034114 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.020107369 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.842613866 seconds)
done (took 173.173137209 seconds)
SAVING RESULT...
DONE!
