cset: moving following pidspec: 5404
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.392682348 seconds)
loading group "string"... done (took 0.578762065 seconds)
loading group "linalg"... done (took 7.37085719 seconds)
loading group "parallel"... done (took 0.170628062 seconds)
loading group "find"... done (took 1.156541348 seconds)
loading group "tuple"... done (took 2.0763295 seconds)
loading group "dates"... done (took 1.308967019 seconds)
loading group "micro"... done (took 0.242504125 seconds)
loading group "io"... done (took 0.970778072 seconds)
loading group "scalar"... done (took 41.179918737 seconds)
loading group "sparse"... done (took 13.261782062 seconds)
loading group "broadcast"... done (took 1.032403435 seconds)
loading group "union"... done (took 14.150909746 seconds)
loading group "simd"... done (took 4.694265524 seconds)
loading group "random"... done (took 9.535616547 seconds)
loading group "problem"... done (took 1.986269163 seconds)
loading group "array"... done (took 22.328555935 seconds)
loading group "misc"... done (took 2.003059466 seconds)
loading group "sort"... done (took 3.39505865 seconds)
loading group "collection"... done (took 19.437220048 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/9) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.45837938 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206279564 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.255667585 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150821386 seconds)
  done (took 1.958660659 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.162253751 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.073921218 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.091885539 seconds)
  done (took 1.032163229 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.324781338 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.249919998 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.2232695 seconds)
  done (took 1.460750653 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.295673157 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.232462203 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.441305817 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.293958709 seconds)
  done (took 2.026822425 seconds)
done (took 7.155243427 seconds)
(2/9) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.586155559 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.418480825 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.241831629 seconds)
  done (took 1.955868138 seconds)
done (took 2.626056745 seconds)
(3/9) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.717716996 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274748599 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205206271 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46495631 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195199495 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214042043 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675564505 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343670301 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250596255 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098675785 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.133499447 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387322129 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134558516 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676156184 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090875255 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125196816 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178120311 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448251966 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083862053 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110454721 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116299203 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142096006 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130563525 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092326752 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185465129 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080407527 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.189521798 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107289956 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.078776162 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.271152375 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199286443 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679667207 seconds)
  done (took 10.796411674 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118999212 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.123621547 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096506219 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136925387 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133389941 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097407349 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083546778 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094875899 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119836595 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.172833643 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112878414 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.134114939 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093167368 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.108902374 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098244051 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243024282 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120762395 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098375655 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10198327 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104663269 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123016054 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114200449 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108229457 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091976059 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164877174 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223145306 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112496975 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126665855 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097236664 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112449572 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143432814 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142789508 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092403996 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07898273 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171174228 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121930142 seconds)
  done (took 5.10972725 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.080316674 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.183711415 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119289937 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165932857 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079151668 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141006303 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093286274 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111300728 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253724928 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.099717427 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.467768807 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139294637 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099677813 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097999941 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081780481 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097503858 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.429541057 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156034694 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15465455 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112677334 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101259873 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083348956 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362695894 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094038477 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079684923 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096204956 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065579623 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158410848 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.158287146 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098797716 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.183742096 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101302378 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.124386834 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078921824 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133062211 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.203377918 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126551601 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119006383 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097708292 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077913392 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191389825 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087345989 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094910624 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101122181 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133539227 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133483291 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097041721 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08138674 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.211660767 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080374181 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114664555 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.915101544 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182737601 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096714774 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097302249 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.307899943 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099605373 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096338537 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076765563 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.270237566 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.195135196 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098573123 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093068467 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081135339 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096290035 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081387746 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382062105 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096065988 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.701584227 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08350823 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107565343 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082476094 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096830886 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104227779 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092671821 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115912257 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076775197 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097850968 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081793953 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.0985311 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.0784894 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100369039 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107383525 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215518377 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078338867 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09911591 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076710012 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117975423 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127340038 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084257899 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096349244 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131404828 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083471064 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098727779 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134381799 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080625263 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110255736 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100143949 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141565136 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081688546 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.138188052 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094792307 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124769999 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098378436 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112920803 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112779301 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099218824 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.169881991 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078973829 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096246389 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080384644 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096335904 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080835235 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100404203 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109199705 seconds)
  done (took 22.525408077 seconds)
done (took 40.18202887 seconds)
(4/9) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.430190229 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.5055205 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.819519523 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156463325 seconds)
  done (took 2.605765054 seconds)
done (took 3.327552073 seconds)
(5/9) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088804951 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.105182913 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089608608 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.102013565 seconds)
  done (took 1.096132013 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102089714 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.101702395 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.088591039 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.101295072 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1064616 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.085599151 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103103337 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.089309727 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.101263542 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100939263 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.085559568 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099953751 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.08693485 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103052202 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.081698713 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.103884404 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104573375 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.084307111 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104487388 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.085043147 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.099288008 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.085927396 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.104236218 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09877781 seconds)
  done (took 3.015893329 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099647718 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.099211298 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.085015282 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.098775643 seconds)
  done (took 1.101283184 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.089796441 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.12123438 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.118702687 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.089796576 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.121811934 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115193408 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.081349637 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097971505 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.083770216 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.105189211 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.079355994 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.127945374 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.117601719 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08769481 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.107274895 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.076758406 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.098764932 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.116238687 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.088324252 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.109931382 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.081667785 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.106102974 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.079096613 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119926862 seconds)
  done (took 3.14211482 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.147598499 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130790775 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.118727737 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.084454112 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.135650845 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.131539476 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.10177025 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.121499889 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.121239928 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.110340583 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.082055071 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.139379824 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.091400525 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.095104149 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.076811784 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.094501924 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.108601379 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.092440574 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.096835682 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.107705177 seconds)
  done (took 2.913729774 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097293645 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108211319 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.077177449 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.097069805 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.087464571 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10220027 seconds)
  done (took 1.296776359 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.080972211 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094371473 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.079603113 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.09436124 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.084711626 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09494616 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.07771372 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095198961 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.079121905 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.094603184 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.07850048 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.094382918 seconds)
  done (took 1.773608553 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.445892121 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09866646 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.097755622 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.07735483 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.100979987 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.077406855 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.107788972 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.081053134 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.121782306 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100434968 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.078847189 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.096126302 seconds)
  done (took 2.249764792 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223988548 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115393918 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256123589 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168986804 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139227798 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149106576 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132272154 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143744128 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174580414 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153495447 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185500223 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173013691 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130419674 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184942107 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101924004 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.134177085 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173760787 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214129084 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135325548 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181403285 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195969015 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144916107 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158406548 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13128683 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117878547 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149533552 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.084091213 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111246397 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202357659 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156431332 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164996702 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159682013 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109467558 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208215115 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219913312 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191819131 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167067688 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099536992 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.139923593 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14894604 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239381444 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101789515 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204153815 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14026392 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110634708 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173211987 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148285339 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.153411251 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130103787 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118973062 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191904027 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190793281 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.187868255 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101748417 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14168676 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140913887 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145593692 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133749208 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220205197 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17721265 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177040897 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.084360569 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126835709 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170184104 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161084005 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163046095 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161785575 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126071371 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16906985 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166594051 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160674319 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165741267 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.161972302 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120077235 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149038463 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151869145 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148486609 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224235231 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158371003 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103042484 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145965321 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129389806 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10999145 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.155021289 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105125707 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208604463 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112786204 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.114953431 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142935186 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13985698 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139088401 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175621444 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187682675 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109017312 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.092269639 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134745512 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.135624004 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167127292 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119539257 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138166678 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140568353 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.10933655 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155795989 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.087121457 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158566537 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.098882077 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154457001 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16083967 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.107783104 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137313064 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131161478 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.109852011 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171947985 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178862485 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12032487 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113472456 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184959301 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155358353 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129625583 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15793997 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195635839 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105543323 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129887622 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193817696 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195699857 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120618233 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183156727 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135502333 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115849569 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112255489 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15662131 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13442794 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149845179 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094747442 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.17776237 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186584234 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10818857 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118283024 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165921224 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113143985 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094230159 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249967549 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128574714 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.118928894 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.123627983 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.127789043 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157745957 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157470677 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132751277 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145975044 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13128885 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219025766 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121131852 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131800948 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109402579 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.101317291 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170373385 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192657886 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091823817 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19386473 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.14840861 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133532196 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149824482 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113462065 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152847414 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092519691 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100275297 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171300406 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145796508 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141597319 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.190311055 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114039961 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.172379933 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.155760901 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149151729 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148227363 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.141056149 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13528693 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114703649 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134885731 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14195404 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.082633399 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119162184 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112521866 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13248653 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119841005 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095836369 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190735168 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146979076 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128443918 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138249427 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12947168 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159489495 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.09126803 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171474042 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.155090718 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126773175 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177524561 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171920892 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181547882 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105796871 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20067114 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.082415861 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105451245 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118355501 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145461305 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111192196 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094627911 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158415932 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154518389 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158125903 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151591901 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139621267 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14959571 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163989734 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.10105624 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.145159422 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162013903 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158721526 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.1541238 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103899315 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127291124 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151003554 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132837643 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218362565 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142867674 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150281923 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202550836 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.1289184 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093749702 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130865467 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178133188 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130345374 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15343805 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125875913 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099541718 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13649176 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110053994 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135002564 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157026888 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137789277 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182887893 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.126852213 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160757427 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106039641 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141283039 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135832043 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140896877 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069517623 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14841045 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196373832 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124765296 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148083304 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169456809 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112160998 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157563615 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18594231 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186697953 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096346501 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151494074 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118234401 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140267748 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146996627 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152731956 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153388751 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163916225 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134698076 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.096704221 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116855679 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126168586 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128340633 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.091304331 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.124472183 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.167126208 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099450607 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178714939 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137572628 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116863315 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163075998 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.109146378 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.12111458 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127677233 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18952126 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168676672 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185727864 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126292138 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.15438666 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195505529 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085884931 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109286505 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.110292649 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153467711 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096181515 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181037956 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106811336 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133247659 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153738519 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183714949 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098602083 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098174972 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132363836 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149921245 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141081034 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129180008 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1349267 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179046621 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118762559 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108251865 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146064234 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115430571 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123672794 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188400025 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.067834334 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126491514 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087771933 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110658846 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140308437 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197071877 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.095205114 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151699643 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15373628 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147566283 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145445762 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131608581 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128373369 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145749765 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179960047 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159765276 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.110804575 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133147448 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150238991 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188460669 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136123333 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099122591 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195116419 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167518249 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.171882277 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.119354796 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143025259 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142292986 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133270138 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178596802 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094404007 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196707234 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094321456 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190530441 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130808249 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120395325 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150585835 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126333915 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118309846 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163507726 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149472272 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113227915 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091864136 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160488631 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154764395 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131969458 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.087683693 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171856042 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.085935539 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164059523 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221499231 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111323684 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129995493 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124097562 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095445511 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134011098 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134501264 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116505976 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.131235816 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180022585 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.112882197 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164660697 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195021648 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144196678 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150578923 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121513356 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671602992 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.109070879 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169082459 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131202384 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178543643 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127245377 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148077132 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133931447 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144879582 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18920382 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135529104 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206622618 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168025816 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155929653 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111098334 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136109703 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139895043 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.121957452 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129074432 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142925028 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136955928 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130076948 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.152766272 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146080994 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110085489 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098599466 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191791239 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130690845 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160700472 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154865904 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115761454 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148057941 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161148378 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111508841 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156656976 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201562706 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103531739 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130587624 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.11494786 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133117744 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225422343 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.083771732 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190414184 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153413651 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134510794 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143389923 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.125842392 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167549062 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136951752 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153770088 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123183823 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.135184808 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132103039 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114421928 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107329004 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112573652 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158992791 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.106564288 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135514558 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.133441326 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167330095 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103923579 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102424549 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13248104 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182256293 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188486687 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.113946861 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094273873 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138938811 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12773442 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150791291 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169579676 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.094162849 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113360187 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.113800411 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.108805445 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114954193 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131459152 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132833399 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140105282 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180129914 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115091827 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.256302603 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099326824 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130378238 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.094358591 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.091377373 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127177952 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124425172 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133825267 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128555405 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223426379 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.108296939 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.110754661 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125360251 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.085613609 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114224553 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142471959 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142461344 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151688584 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123818677 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.086782445 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134289347 seconds)
  done (took 69.615378275 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.141015882 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.109879077 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.12578938 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.281538406 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156018103 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245091873 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.187021871 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.230907231 seconds)
  done (took 2.265573549 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.159506105 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.107051987 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.129841802 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.112747687 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.079539964 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.13245715 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.298638009 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111627357 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.09631758 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101286479 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.14128424 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.080674801 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.457562937 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.0973305 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09696869 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.0696357 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.095551678 seconds)
  done (took 3.153434548 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.423469571 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.561069311 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.458523443 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.085151231 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.529847804 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113921594 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.781749266 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.165183875 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082696262 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.39378653 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.740578282 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.14823959 seconds)
  done (took 16.276989366 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086366477 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.101699891 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094373143 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.112488044 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.084045676 seconds)
  done (took 1.27590265 seconds)
done (took 109.893174325 seconds)
(6/9) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.081859345 seconds)
  done (took 0.871176072 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.369340693 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.062672996 seconds)
  done (took 1.259078862 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.092875264 seconds)
  done (took 0.894474984 seconds)
done (took 3.822041956 seconds)
(7/9) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.221849899 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.2358486 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.195622276 seconds)
    (4/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.241304249 seconds)
    (5/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.173359579 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.079827787 seconds)
    (7/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.222668217 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.202291818 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.15676253 seconds)
    (10/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.236920953 seconds)
    (11/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.147420967 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083859895 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.113068467 seconds)
    (14/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116486285 seconds)
    (15/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.115628416 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.277694525 seconds)
    (17/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.151954792 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.22280475 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.092232003 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.112458798 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.214428632 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.147946593 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.086726701 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.11174675 seconds)
    (25/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.218599147 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.172487857 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.099824563 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.102944501 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.086597023 seconds)
    (30/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.22611979 seconds)
    (31/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105305229 seconds)
    (32/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.086241589 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.204673179 seconds)
    (34/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.112178973 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.127030641 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.13394769 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080902521 seconds)
    (38/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.113656898 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.096428504 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.16510216 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.169130872 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128611825 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.146887299 seconds)
    (44/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.187710969 seconds)
    (45/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.095819757 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.110766518 seconds)
    (47/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064659619 seconds)
    (48/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.204217878 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.202133578 seconds)
    (50/309) benchmarking ("sort", Float64, false)...
    done (took 0.159548604 seconds)
    (51/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.086779885 seconds)
    (52/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.107318972 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.144469445 seconds)
    (54/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.169522355 seconds)
    (55/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.156982291 seconds)
    (56/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09072734 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.126388251 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.062241414 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19859352 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.103440302 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.158240317 seconds)
    (62/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.187251487 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.106892872 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.122249811 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086926466 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.136322272 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.215480958 seconds)
    (68/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06982996 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100559293 seconds)
    (70/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.061562647 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.182313054 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.207353721 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.109416894 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.135754311 seconds)
    (75/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.115994388 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.107056101 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082339101 seconds)
    (78/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162401456 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.125326079 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110227166 seconds)
    (81/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079253678 seconds)
    (82/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.130309842 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.110764256 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.172139019 seconds)
    (85/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.106162115 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.087392103 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100277396 seconds)
    (88/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.090988226 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.081808291 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062146991 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.089718194 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.103483707 seconds)
    (93/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.071286785 seconds)
    (94/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.142739006 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.130017071 seconds)
    (96/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.153121518 seconds)
    (97/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.081340812 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.183475192 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.103191056 seconds)
    (100/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.104104062 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.084938688 seconds)
    (102/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.103114021 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.119463796 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.061293364 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.148618588 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.08034106 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104702989 seconds)
    (108/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090006462 seconds)
    (109/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.128086126 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.163904455 seconds)
    (111/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.112377089 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.086474134 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.060349411 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.060671315 seconds)
    (115/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.145616863 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.079844843 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.081497616 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.129494761 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.173339616 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.187274375 seconds)
    (121/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.166813024 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.094626283 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.107608319 seconds)
    (124/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.176162809 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.082142498 seconds)
    (126/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.116181254 seconds)
    (127/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.071757995 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.183637922 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103684234 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075215651 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063565369 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085298229 seconds)
    (133/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.097300498 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113399221 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081743836 seconds)
    (136/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173495856 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102909738 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089089439 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 0.173842941 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.112070023 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.110696174 seconds)
    (142/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.109285472 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.110847603 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.088980836 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.155631467 seconds)
    (146/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.105219284 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106223452 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.170911438 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.086507543 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.164319854 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062842189 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127165158 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.12108226 seconds)
    (154/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.105892665 seconds)
    (155/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.081450784 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.087396039 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.147959794 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.079346911 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.108996646 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.080649229 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.156056508 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.123011234 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078629538 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.10815288 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.061234044 seconds)
    (166/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.101982643 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.087721285 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099484707 seconds)
    (169/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077712173 seconds)
    (170/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.089838867 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.079780383 seconds)
    (172/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107159696 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.085651582 seconds)
    (174/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209433165 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108420943 seconds)
    (176/309) benchmarking ("sort", Float32, false)...
    done (took 0.166482582 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089635618 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.199224087 seconds)
    (179/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.062950556 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103375774 seconds)
    (181/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.129298747 seconds)
    (182/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.073774569 seconds)
    (183/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.111348004 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.118058425 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062902963 seconds)
    (186/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.24564766 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061792883 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.202000861 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.063625253 seconds)
    (190/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.169790375 seconds)
    (191/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.062819047 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.147833859 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.082318098 seconds)
    (194/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.086982205 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.088997201 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.105174327 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06349991 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062931824 seconds)
    (199/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.114012248 seconds)
    (200/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063379344 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.112777745 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103203788 seconds)
    (203/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.089446682 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.063582294 seconds)
    (205/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.084623173 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.11288306 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.166807579 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.106151547 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.081469417 seconds)
    (210/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.209061482 seconds)
    (211/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.106566048 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.082611175 seconds)
    (213/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.088129183 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118911321 seconds)
    (215/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.173259999 seconds)
    (216/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.176305765 seconds)
    (217/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064290481 seconds)
    (218/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.108334467 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.063945598 seconds)
    (220/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.112133497 seconds)
    (221/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08283415 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.114281657 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.091262894 seconds)
    (224/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.143679163 seconds)
    (225/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.111774231 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.152219044 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063571874 seconds)
    (228/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.114123461 seconds)
    (229/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063891332 seconds)
    (230/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.103747031 seconds)
    (231/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.086571424 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110261612 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.183024534 seconds)
    (234/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07288343 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.216963688 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.083311561 seconds)
    (237/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.108271794 seconds)
    (238/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.131674344 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.082047535 seconds)
    (240/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.138286439 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.094240446 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.218678655 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.106966506 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.183829902 seconds)
    (245/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.063324996 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.063141223 seconds)
    (247/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.094710101 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.106708834 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.08561334 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064201551 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.064641139 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.108065639 seconds)
    (253/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.106731238 seconds)
    (254/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.064504464 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.174651273 seconds)
    (256/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.075162092 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.081715565 seconds)
    (258/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.085390219 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065165482 seconds)
    (260/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.113131661 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.082398601 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10437386 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.072839973 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116630359 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.089623269 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.084337226 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.105307819 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.105922983 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.092173082 seconds)
    (270/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.095085368 seconds)
    (271/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107970154 seconds)
    (272/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.107071526 seconds)
    (273/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.086245808 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105422315 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.063761282 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177435268 seconds)
    (277/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.0643802 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105433077 seconds)
    (279/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.063638194 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.113471426 seconds)
    (281/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.0650843 seconds)
    (282/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110353252 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.082372208 seconds)
    (284/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.122471214 seconds)
    (285/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.064148795 seconds)
    (286/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.074937121 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.104327995 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.123231348 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.103049512 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.131824083 seconds)
    (291/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.086459607 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.129523134 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.064236821 seconds)
    (294/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.10553256 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.088947186 seconds)
    (296/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.158348259 seconds)
    (297/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.129298736 seconds)
    (298/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.090624495 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104273101 seconds)
    (300/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.089064921 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.107389955 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.088151046 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10393634 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066358486 seconds)
    (305/309) benchmarking ("sort", Int8, false)...
    done (took 0.183375594 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.129489973 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066084025 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.135168657 seconds)
    (309/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.106651766 seconds)
  done (took 37.409654894 seconds)
done (took 38.207121049 seconds)
(8/9) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214522295 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.194956287 seconds)
  done (took 1.251770539 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.11793648 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136922302 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.118719734 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.147207909 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104707999 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118011289 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136051062 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.114029707 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.082395762 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.102872016 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.082999872 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.10880616 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149242784 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103340512 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.083478522 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106310247 seconds)
  done (took 2.70206655 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.112526268 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.240693472 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11742462 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.07957969 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.109393654 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108493857 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.082775053 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112349288 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089168778 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.105871158 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087650617 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.10712961 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084121183 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108586465 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088801292 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109469673 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.083114027 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109300814 seconds)
  done (took 2.787399758 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111693773 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145053779 seconds)
  done (took 1.111180193 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242026047 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.156111007 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.219834833 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.470680098 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.275833658 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.35562879 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.19823319 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210434929 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.160369704 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.202748866 seconds)
  done (took 3.338008113 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115695016 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17956309 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.336124365 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158295912 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.127504767 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.105454891 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157725673 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132022296 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.121435426 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.120383164 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.100248811 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.115941186 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138849366 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094619247 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118994042 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119034092 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141848179 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092523915 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11581349 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095116631 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137817014 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106470459 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094331081 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114253947 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.120258397 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096887708 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107102139 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.083974845 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117084945 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115134743 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091690294 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126374731 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118838544 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154212861 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124169788 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156155666 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119762662 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090300479 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11604445 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111988059 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097223075 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119592804 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125580226 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096858319 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106588411 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097278477 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107207308 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.083744387 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115827508 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119991148 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.092756542 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114784684 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155123687 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120003244 seconds)
  done (took 7.393361945 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.789681418 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150077886 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086676728 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.86822999 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108698897 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12249681 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.7735197 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111430056 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255764242 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.746470574 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127265941 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092896465 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.220323443 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.252832105 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9681041 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288955524 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.620772298 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.121361786 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.146838607 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.148534776 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111923834 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111342689 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125873859 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.446971154 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11140276 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085969862 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112752582 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115253425 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.154401329 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.119038235 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.088517189 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192937157 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247415699 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193972677 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091074872 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106846784 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084525613 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185204845 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235171831 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.206620807 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.175678249 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104123314 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085133701 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116819718 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126492716 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083043593 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177471876 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.169067498 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.164326408 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11017162 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113626957 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094707074 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116275195 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157731082 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.116762256 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313840931 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.301901486 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085989892 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117045918 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121213599 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23377226 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.119153901 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.217290178 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135389658 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.182235463 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107263022 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778708557 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163913822 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105288772 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09222984 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116451162 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110093024 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095196339 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163531767 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386217294 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119509754 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109951926 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086248267 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242372735 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099712661 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10757029 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155924983 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112657942 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094541916 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120381742 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118719776 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.163357183 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227925632 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118149078 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116522462 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.109370203 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099196517 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.112169255 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207719653 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.211505489 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.156287051 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205258499 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118069845 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157076767 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184563458 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094018331 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187937831 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093573947 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120290146 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117837018 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.207477113 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.140230069 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.09773317 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111744562 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116508468 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.142669234 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101145526 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113984817 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164222516 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.492661401 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162306236 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.104306547 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102811657 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115083625 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.155870769 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112460319 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.252263596 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095549791 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184112552 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092965521 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.105135581 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115240234 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.157487636 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116589296 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095306791 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119030624 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114829786 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.232552508 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20850451 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095461031 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235975245 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179314928 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113339402 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.165866212 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11642793 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.161884401 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115248673 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095336202 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111763411 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781085043 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.097161191 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115323862 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111437584 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188582542 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086068477 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.119354605 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.119755736 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083637673 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788250855 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121393451 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.095140558 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.119101106 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113739381 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.09472553 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113998982 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111660797 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155744198 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22091814 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114850365 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094545331 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.120432054 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155122122 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.112482221 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.118562753 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099371088 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.121434352 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118211541 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090344161 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.120282261 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162328485 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176822275 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.189462783 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.584664798 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107675783 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098952802 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218640933 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107770017 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.281241697 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094095631 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.216986168 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159362031 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.116674535 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.302672368 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.158695285 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.1901336 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.122638454 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.167116479 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104678458 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091785629 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179195645 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086165302 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113564295 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.155763232 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120997013 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117786806 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.968137687 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108230623 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.21992671 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.104604808 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.164997967 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111421716 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093469968 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288611681 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107775215 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122590075 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158966504 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.087575748 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.120231662 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.737157137 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098068541 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117523692 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113468021 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212281845 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.158526342 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114199802 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093036415 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115554874 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.155118956 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.202743342 seconds)
  done (took 42.843468234 seconds)
done (took 62.277949008 seconds)
(9/9) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099233011 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133623346 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094944671 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.123442591 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.120840217 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091047719 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.116002213 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09673956 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121897725 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.122166768 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096928471 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.091438227 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095441728 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.117312126 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095853642 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.133837942 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.1201646 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093378842 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.116719929 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084681266 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.116830399 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085566856 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.109822649 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068563354 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.119133071 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093151163 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114753747 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.094720225 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.107918443 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085722028 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.111247185 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.114699447 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.083699171 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120777801 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091427649 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.115736212 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095973509 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118500774 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.090447988 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.10729942 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.114654337 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086458537 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114342822 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093843781 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113809451 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.090624211 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.115750062 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098032101 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134153061 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110139736 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091927209 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.116096697 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.092782048 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.109719689 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.084939938 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.112483168 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.089122246 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.131424495 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117023615 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088337174 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11646363 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093682665 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.113583381 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094100625 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117196065 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118626898 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09695336 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113539492 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096313026 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114243106 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085104029 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.116217266 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.08866876 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.108280094 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094165658 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.118922555 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.106447861 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.091364805 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11495047 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090876328 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.107292803 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088393198 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.109337441 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.091529927 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111537055 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069165071 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.112270425 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.091834359 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.107629768 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094365676 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114686976 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092099112 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109897735 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097192296 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108196955 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.090730054 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.107982594 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086386956 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.110103165 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089435656 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.107623597 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087913978 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116783061 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.109203837 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.091972631 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.119904459 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085350643 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.114590206 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08462241 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.107525296 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.099677332 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118526647 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085065155 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111277232 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108735974 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.091075087 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106017648 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084552086 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.107833414 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.085738725 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114445232 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.085368321 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11064716 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.092960404 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122573636 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.085315926 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.111874657 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088878826 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.10928797 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.090928059 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.108649204 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.085851351 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.110076143 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077810227 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111833366 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.085850676 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115961395 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089129791 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.116955532 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087348198 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118127853 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.113438286 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093024567 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114024833 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085477763 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073794467 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11183118 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109901334 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.086264162 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.107821804 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.087949114 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.107817159 seconds)
done (took 16.521922754 seconds)
RUNNING BENCHMARKS...
(1/9) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.950866922 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.941457037 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.927606033 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.939566202 seconds)
  done (took 24.639211157 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.947259281 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.949011428 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.950849245 seconds)
  done (took 3.727743732 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.24225682 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.942591034 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.94474924 seconds)
  done (took 18.010067599 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.122317084 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.930438602 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.228316521 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.549692643 seconds)
  done (took 7.7066186 seconds)
done (took 54.969246792 seconds)
(2/9) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.626840387 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.623020827 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.952422083 seconds)
  done (took 10.079152713 seconds)
done (took 10.958111301 seconds)
(3/9) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.929328462 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.968203213 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.956221451 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.92205285 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.040054205 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.963889628 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.167593197 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.208190928 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.945643217 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.926710944 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.943282941 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.945881198 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.950743481 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.161303311 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.953071868 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.946687258 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 5.949275771 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.452473411 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.282991754 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.951412065 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.948840852 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.007313232 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.947093893 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.949442774 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 5.972230527 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.945535619 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.95822975 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.948688866 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.638557031 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.949313337 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.012173232 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.400526392 seconds)
  done (took 182.126280421 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.947351249 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.932777396 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.01073272 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.97094301 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.520435137 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.141497396 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.072817979 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.571985904 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.959003544 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.970163384 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.217307948 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.949280613 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.311986137 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.918410928 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.956758945 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.053548529 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.144885247 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.279907955 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.960001415 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.193455843 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.958669118 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.180223878 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.09736769 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.193231665 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.962253184 seconds)
    (26/36) benchmarking "herk"...
    done (took 5.998312595 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.980845274 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.975786793 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.149386858 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.095864385 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.989659095 seconds)
    (32/36) benchmarking "symm!"...
    done (took 5.96521498 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.439419823 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.804265162 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.949295088 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.970456569 seconds)
  done (took 140.676646591 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.196893491 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.949138428 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.94835119 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.950550826 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.974844669 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.949952906 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.397682265 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.390347002 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.436594455 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.407307888 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.006725668 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.11300397 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.947231592 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.038395788 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.958048177 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.946293974 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.961633599 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.988129164 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.94416356 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.951005148 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.393439583 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.961859687 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 20.927667466 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.957823639 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.949259269 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.973714964 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.334101927 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.946640465 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.948223159 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.975519453 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.250002142 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.985325492 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.947335553 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.950473717 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.16476644 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.923427292 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.052902097 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.948087482 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.977720018 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.950488535 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.209004414 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.948915425 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.953255167 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.9555665 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.451211219 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.952165294 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.398448477 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.95342035 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.778248981 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.952855239 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.949363873 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.921399025 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.248327572 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.965045645 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.951598399 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.952372684 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.95211975 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.951824104 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.977018505 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.18364394 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.042801574 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.966095271 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.95273848 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.954600402 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.975910096 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.953041582 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.027321892 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.953857372 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.096784921 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.019546548 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.056379112 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.40341744 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.950949019 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.039503121 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.062779038 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.951783603 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.952490344 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.953170466 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.948325672 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.951650929 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.052906705 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.951517823 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.288065199 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.955273088 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.95511825 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.011014363 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.043337363 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.950385318 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.17105016 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.952712911 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.953712019 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.591695194 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.043110735 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.947645814 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.952603595 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.955297089 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.292126255 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.395487395 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.038416613 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.955057765 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.226217922 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.954904159 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.311089582 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.386401472 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.469143283 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.953866415 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.056917911 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.956052553 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.955060353 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.951963448 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.984761702 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.966284477 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.012986511 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.950042859 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.346848382 seconds)
  done (took 314.428055498 seconds)
done (took 639.308869898 seconds)
(4/9) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.008340321 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.024474852 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.983302217 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.960988715 seconds)
  done (took 24.866828517 seconds)
done (took 25.755878592 seconds)
(5/9) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.95485482 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.953207907 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.954990559 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.952977927 seconds)
  done (took 24.705356581 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.996777208 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.996011436 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.997703529 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.007140873 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.997542739 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.995795459 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.988587886 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.989484328 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.007331107 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.00035409 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.997404303 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.997917916 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.996565213 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.987652359 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.998901418 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.998930527 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.007574122 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.997835077 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.988100406 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.999036615 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.964534829 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.00853325 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.99954571 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.961015619 seconds)
  done (took 24.770600286 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.486854844 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.036173842 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.118419181 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.015337362 seconds)
  done (took 5.549060207 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.018078455 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.017970857 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.030568816 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.067531387 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.094365945 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.027042854 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.987599788 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.985573519 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.969778571 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.018380278 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.092203498 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.03403847 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.103226184 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.962238525 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.147613677 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.962592408 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.964731427 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.013602405 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.062977597 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.086906693 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.965133797 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.015756311 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.017587761 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.03424937 seconds)
  done (took 25.568986711 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.976050469 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.965982378 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.964237391 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.96337016 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.987442497 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.959408784 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.966685166 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.965776832 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.962496884 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.969401133 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.962346668 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.973639187 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.964288942 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.964663561 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.969432906 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.966932582 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.972311787 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.960517212 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.963132096 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.968073983 seconds)
  done (took 20.239069361 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.960776022 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 3.813383922 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.312241529 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.21316391 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.961654014 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.960934569 seconds)
  done (took 25.116189941 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.016236726 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.142998229 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.967997153 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.232032913 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.324001899 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.97896822 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.966870295 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.157691162 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.389313294 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.358212099 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.01224125 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.023572255 seconds)
  done (took 14.463699617 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.967346131 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.961274208 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.959913602 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.978655102 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.004343511 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.982543399 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.976223284 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.962847669 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.008845957 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.023909648 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.986460484 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.007075172 seconds)
  done (took 32.717152095 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.049845425 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006723808 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.697916375 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.727863628 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.712485085 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.165386022 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.778915929 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.361949469 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.965520481 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.235079934 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.183167766 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.064934409 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.214939346 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.956213065 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.9805387 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.774318629 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.198876751 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371751914 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.959864085 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358522508 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.990157605 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.957318117 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.51541632 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.988019476 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.168800185 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.939641208 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.218679955 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.739657921 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.179438826 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.190661323 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.969635229 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.961483449 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.235513641 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547116554 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.075629051 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.974533371 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.776384742 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.512343722 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.948706679 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.4437241 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922447286 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.969643053 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.975129878 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.964821271 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.901079611 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.968926876 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364115373 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.972183839 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.677602117 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.962617024 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.972983995 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.059679685 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.971630992 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.959773457 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.001262556 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.972620997 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 5.966059309 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.969646547 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532464693 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896855348 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.96988191 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.902053331 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391052284 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.452874936 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532783606 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.083998657 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.970954452 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.970864851 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.920847512 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.363803055 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.984601455 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106122003 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.983536464 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628357631 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668655243 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.199947588 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.927334769 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435538908 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.971427245 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.903279254 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.198819024 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.747645771 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909409066 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.910009145 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.903590153 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574576742 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.975268122 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.191664811 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.976376593 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.371665553 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.981012525 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.982961583 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.991543336 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.186568511 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.846085257 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965761396 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.956198552 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100263093 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.98722215 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.367915437 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.92262699 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.969489285 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.226282071 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.181346677 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.968797389 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.79734861 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.151758746 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977281956 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.982919096 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.971924814 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.980838265 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.478426107 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.996019993 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.010131249 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.989157416 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.745398072 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614437377 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.98247417 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.072438583 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.212222079 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.187355107 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.62486149 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131255072 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.036222434 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.974639301 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.970780243 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.46934803 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.8243949 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.866145252 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.967729514 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.972665538 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.983530028 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.972406878 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.960750735 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 5.966400499 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.240206013 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.750686309 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.196577684 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.973148767 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.244432317 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.904813421 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108480554 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.986743066 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.191360273 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 1.961266792 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 5.985025268 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.232454443 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.973242863 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.974160865 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.984276388 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.98117105 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.063655466 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.98870647 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.965187278 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.243514555 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.975828249 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.976654497 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.496569532 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.749691583 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.975769084 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.973917761 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.971942708 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.478953936 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956028764 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.967552814 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865539099 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.985135284 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.035243418 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.974924627 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.981050937 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.387683887 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.891098056 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.974448575 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 5.973246871 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.195276434 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.978105098 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.398031538 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.053194033 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.129461957 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484419005 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.001030178 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.905866238 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.686406766 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.663010889 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96924755 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.17157285 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.969656727 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.978474018 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.98241974 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.561505354 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.483284435 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.983124957 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.402966583 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.979697222 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.982426002 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.979270496 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.970279929 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.375682915 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.931269415 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.983909727 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.986997272 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.116821074 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.985624272 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.905535119 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.489640786 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.978479354 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.971578897 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.750976244 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.012078109 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.390921251 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.442389815 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.235289287 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.789861086 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.986990134 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.562362339 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.007183911 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.980841216 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.025726704 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998908147 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 5.981997583 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.993223806 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.984780183 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.489959383 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.427823391 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540154133 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664824197 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461119443 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.787715072 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.977145307 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.869027395 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.381918359 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914184519 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.634191011 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.127229546 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.427342217 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956305406 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.139406916 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 1.987753513 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605720234 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.986170818 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.204336614 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.767468995 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.034592678 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.006371884 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.189759493 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.004398647 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.975558635 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.928930689 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.251316282 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.177025256 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.98989944 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.054080812 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.3741024 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.041849301 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.765585531 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 5.975607275 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17774548 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.129603633 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.607870475 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.398002773 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.977577845 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.25277683 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441791116 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.977299339 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.506515068 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528258537 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.991523798 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.158327852 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.920777155 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.989981225 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.987731485 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.972246378 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.888469039 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.162168937 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.247844196 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.988965389 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910649349 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.979679135 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436856502 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.850043314 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.983656928 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.976696812 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634212656 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.980995819 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.199060961 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.984045393 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.368004998 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.99595699 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.907463489 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915121479 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.670831447 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.987488787 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948950491 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399124998 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.340921899 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.009061822 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.989836066 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832580133 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.233912131 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.993482035 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.493819712 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.219520683 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.855943275 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.00293648 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.073762967 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.078320702 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.976478071 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.862807962 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.21786772 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98690251 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.203133444 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.751020157 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.878970228 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.975561387 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.192493073 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.864504949 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.278441008 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.192553387 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.703551004 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.982495319 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677986586 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.019504229 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.267397498 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016115473 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404089783 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.986961503 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.051047783 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.993304802 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.995359329 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.991144767 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.118985472 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272207358 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.00258711 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.996387737 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.074692219 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.051348274 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.372616022 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.754764676 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498790164 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.726815862 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.514344405 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.011295798 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.980885293 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982830191 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928449761 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.129946084 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.509261425 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.251464109 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099930754 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.473241017 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.00822814 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.094699882 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.003295106 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.199909013 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.258681122 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.862884365 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.990900027 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.64743159 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.867338826 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.997588272 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.19814842 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410910341 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476347118 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11231864 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.989185817 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.39048756 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.262223791 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.080285476 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.986315271 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582894422 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.999583301 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201973468 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.002833125 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.316080483 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.136307696 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.998279061 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579846615 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.010710284 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.142465556 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.759956331 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.438291149 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.247184742 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33360575 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.996028375 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503350649 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625007694 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.2550976 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.054380449 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.997446954 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.096432927 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.134333011 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.208915519 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.883512553 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.989379671 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837210682 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.699130301 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.000240384 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.502013114 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.268190464 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 5.983447554 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.221345458 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.026190191 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.000275284 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.211158326 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60028606 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.212933038 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.996580406 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.997500058 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.563647442 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510815269 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.019993854 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.936254846 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.990441099 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.18764847 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.237830111 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.017396602 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.442578821 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.703718429 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468885572 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.962374169 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.008190255 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.992097798 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629729348 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508404029 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.40747138 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419484798 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.650519541 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.992024908 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.267977782 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.999637512 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.001966364 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.269211111 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.996024511 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.990954553 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.00439996 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.510024742 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633544366 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.007680987 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.470406345 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.930922768 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.221422793 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63399214 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953973122 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.989727439 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.138378308 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.995339431 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115340007 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.000554881 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.259727458 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.006803171 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.727225662 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277325927 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.995941991 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.978595555 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.119957349 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.005228251 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.001338916 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.20453817 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.995687683 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.668287321 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.345057311 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.248418432 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.991179425 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.974204076 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.993135966 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.990975324 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.74498235 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.001344265 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.578052625 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488454306 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.9959047 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.005000354 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.995246109 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.209492702 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.20434351 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.322294992 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.022678539 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.002941666 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.011276924 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.894008147 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.767984919 seconds)
  done (took 1378.539974482 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.993238402 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 5.994717176 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.002709937 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.004609178 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.021411333 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.021476235 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.049017357 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.010843443 seconds)
  done (took 49.02030059 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.002196042 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.142029841 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.012615818 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.000863262 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.006030628 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 5.999341461 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.379783363 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.012840476 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.003983931 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.003370742 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 5.999300944 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 5.99493755 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.569416519 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.005470462 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 5.992174731 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.979957563 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.003436073 seconds)
  done (took 59.030837763 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.99214753 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.061538181 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.039032775 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 5.99237513 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.121507258 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.013368023 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.168777308 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.026339795 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.000057923 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.070073478 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.635504861 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.011312887 seconds)
  done (took 77.057038895 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.998811706 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.99812639 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.997816986 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.997699409 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.998631886 seconds)
  done (took 5.915846935 seconds)
done (took 1743.581842273 seconds)
(6/9) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 5.968534402 seconds)
  done (took 6.894688395 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.52821743 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.524173376 seconds)
  done (took 3.973559139 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.292939701 seconds)
  done (took 2.220255566 seconds)
done (took 14.011684889 seconds)
(7/9) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.475414646 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.998231131 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 5.988748872 seconds)
    (4/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.495568076 seconds)
    (5/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.499624767 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 5.998451849 seconds)
    (7/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.287292939 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.13861437 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.07507196 seconds)
    (10/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.488739717 seconds)
    (11/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.081594346 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.221059392 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.033452238 seconds)
    (14/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.036210177 seconds)
    (15/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.311660075 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.98714527 seconds)
    (17/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.526935584 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 5.998499093 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.031017751 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.022446704 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 5.994451178 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.837616359 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.022462618 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 5.996558938 seconds)
    (25/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.99555177 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.035455745 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.126924362 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.995465655 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.024090273 seconds)
    (30/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.371425845 seconds)
    (31/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.234562636 seconds)
    (32/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.106820487 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.351482172 seconds)
    (34/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.129734446 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.959457813 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.00601322 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.117521574 seconds)
    (38/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.833010918 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.999585548 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 5.972498638 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.014284914 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.739607631 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 5.981052762 seconds)
    (44/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.883736368 seconds)
    (45/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.670302645 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.059354411 seconds)
    (47/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.338078413 seconds)
    (48/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 5.997601541 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.05510553 seconds)
    (50/309) benchmarking ("sort", Float64, false)...
    done (took 5.158430594 seconds)
    (51/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.096242842 seconds)
    (52/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.000029494 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.118284398 seconds)
    (54/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.62875186 seconds)
    (55/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.997299716 seconds)
    (56/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.008393511 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.373861689 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.988018081 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.542933826 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.642829309 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.097473683 seconds)
    (62/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.977728516 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.105241418 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.256544714 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.101518314 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.036741395 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.280277163 seconds)
    (68/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.079794219 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.058743488 seconds)
    (70/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.097176719 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.015730812 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.705572132 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.973453211 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.097864301 seconds)
    (75/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.090141073 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.806263347 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.980882295 seconds)
    (78/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.052329454 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.043372367 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.006870195 seconds)
    (81/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.080743552 seconds)
    (82/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.191406707 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.805856791 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.466489566 seconds)
    (85/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.024637532 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.02270167 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.808186588 seconds)
    (88/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.084032366 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.38479821 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.715225625 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.026938333 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.057974874 seconds)
    (93/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.323912919 seconds)
    (94/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.307551888 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.585126417 seconds)
    (96/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.764941799 seconds)
    (97/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.16853136 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.012691377 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.567225388 seconds)
    (100/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.082840447 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.025770984 seconds)
    (102/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.062865144 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.126819053 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.521397131 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.635698857 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.021531437 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.411242029 seconds)
    (108/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.010816583 seconds)
    (109/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.480355057 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.736731955 seconds)
    (111/309) benchmarking ("map", abs, BigInt, false)...
    done (took 5.983360358 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.173021145 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.071097858 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.344810384 seconds)
    (115/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.168487384 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.011376915 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.985058769 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.364475973 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.530092796 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.931757073 seconds)
    (121/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.073166163 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.179275646 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.200601425 seconds)
    (124/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.288179613 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.1142469 seconds)
    (126/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.657676663 seconds)
    (127/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.100330117 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.008311431 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.001846374 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.982159429 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.129106977 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.371079531 seconds)
    (133/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.137378405 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.381008572 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.754012912 seconds)
    (136/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.639845577 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.520092528 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.739050889 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 1.497124885 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.041147434 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.794935701 seconds)
    (142/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.032185245 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.258695501 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.023855857 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.019037824 seconds)
    (146/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.000384054 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.639351636 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.117501255 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.254760655 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.766221495 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.14396738 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.903245871 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.293528383 seconds)
    (154/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.185161036 seconds)
    (155/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.274041766 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.115365544 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.981626079 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.808519867 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.046766761 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.009450015 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.068566085 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.320811721 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.6734014 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.032126919 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.273342655 seconds)
    (166/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.135210077 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.025326483 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.185293874 seconds)
    (169/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.363530102 seconds)
    (170/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.055342024 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.646856691 seconds)
    (172/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.035741142 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.02832303 seconds)
    (174/309) benchmarking ("sort", BigInt, false)...
    done (took 6.003004903 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.033928932 seconds)
    (176/309) benchmarking ("sort", Float32, false)...
    done (took 4.967117398 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.17419135 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.447798061 seconds)
    (179/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.408237746 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.64032269 seconds)
    (181/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.03223207 seconds)
    (182/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.653728512 seconds)
    (183/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.722871377 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.006194886 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.27496212 seconds)
    (186/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.41220581 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.7821186 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.013945508 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.127388337 seconds)
    (190/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.994455911 seconds)
    (191/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.195381249 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.088537069 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.784281927 seconds)
    (194/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.551422409 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.03702886 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.106295326 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.223225252 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.443289047 seconds)
    (199/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.023904688 seconds)
    (200/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.236022479 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.060923023 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.003126957 seconds)
    (203/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.093308831 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.39263414 seconds)
    (205/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.158374978 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.421615505 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.109704153 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.069230974 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.062922017 seconds)
    (210/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.003478859 seconds)
    (211/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.009641367 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.333808741 seconds)
    (213/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.962676714 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.075864028 seconds)
    (215/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.121418522 seconds)
    (216/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.455388272 seconds)
    (217/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.367208402 seconds)
    (218/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.031146843 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.991476326 seconds)
    (220/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.127130543 seconds)
    (221/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.16818896 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.640302923 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.243408574 seconds)
    (224/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.060035732 seconds)
    (225/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.756488908 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.111067659 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.456878867 seconds)
    (228/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.733439384 seconds)
    (229/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.497362418 seconds)
    (230/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.390602989 seconds)
    (231/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.097997533 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.027000031 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.003715159 seconds)
    (234/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.24530039 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.026976496 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.583936688 seconds)
    (237/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.179000753 seconds)
    (238/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.093997209 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.044585372 seconds)
    (240/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.927492631 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.02625877 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.021917941 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.015927818 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.006514347 seconds)
    (245/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.330858788 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.460504742 seconds)
    (247/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.317003436 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.125704273 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.998482899 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.553704884 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.41196701 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.021446104 seconds)
    (253/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.110442605 seconds)
    (254/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.005720015 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.009844294 seconds)
    (256/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.004798665 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.195955043 seconds)
    (258/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.258172445 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.000749065 seconds)
    (260/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.026048761 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.323378889 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.68635108 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.218077589 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.108589463 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.027661693 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.028864368 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.045833673 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.012015095 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.387425734 seconds)
    (270/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.29971473 seconds)
    (271/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.01699744 seconds)
    (272/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.124371862 seconds)
    (273/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.064185659 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.414778137 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.111284845 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.623289297 seconds)
    (277/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.988666716 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.372464231 seconds)
    (279/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.203963377 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.097759955 seconds)
    (281/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.192258477 seconds)
    (282/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.043150502 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.08325936 seconds)
    (284/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.179434342 seconds)
    (285/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.308942047 seconds)
    (286/309) benchmarking ("map", abs, BigInt, true)...
    done (took 5.985833964 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.157296124 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.002178281 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.822714081 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.281014709 seconds)
    (291/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.070179498 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.517527696 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.142115028 seconds)
    (294/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.017329987 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.043943281 seconds)
    (296/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.001488781 seconds)
    (297/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.016788864 seconds)
    (298/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.010487879 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.382214679 seconds)
    (300/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.110694266 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.059989548 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.023997717 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.37852989 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.247593242 seconds)
    (305/309) benchmarking ("sort", Int8, false)...
    done (took 4.094713605 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.847333381 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.999258082 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.009051519 seconds)
    (309/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.007987848 seconds)
  done (took 794.941389435 seconds)
done (took 795.869372128 seconds)
(8/9) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.00339509 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.071461283 seconds)
  done (took 13.009032178 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.170045939 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.122251697 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.007276457 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.035581826 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.006622818 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.031467402 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.004188575 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.008116851 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.007028984 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.007882145 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.006703353 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.194503466 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.06073174 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.007183645 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.007162466 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.100707588 seconds)
  done (took 37.715162208 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.031679736 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.014027096 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.102896107 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.025952082 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.030327025 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.161256524 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.062050522 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.012638672 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.146978551 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.051321189 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.272959413 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.032137504 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.013092402 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.925535938 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.0301698 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.161022853 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.216704618 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.27208484 seconds)
  done (took 23.498342639 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.363117623 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.014457904 seconds)
  done (took 8.312722666 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.002990343 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.013882668 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.041508322 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.017445192 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.056478231 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.087907855 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.018908251 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.011795242 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.019101313 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.056625921 seconds)
  done (took 61.265437958 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.025304442 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.010356099 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.010578826 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.007958946 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.002846875 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.002613023 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.008444828 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.009398099 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.815682268 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.107056807 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.029135907 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.017140116 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.024641607 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.0111898 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.007372751 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.042325182 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.186322655 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.022489412 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.007187491 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.017067853 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.010152924 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.111161555 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.043165974 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.009948525 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.107515454 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.830593695 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.013665659 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.018094079 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.127812602 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.023597477 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.00877802 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.010591499 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.012285538 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.550409424 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.516116244 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.022594968 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.030388695 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.020433869 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.00888228 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.146986026 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.027738707 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.01879948 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.013537618 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.461054153 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.164282117 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.102718513 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.986716399 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.016741149 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.01265643 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.067987866 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.012132357 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.01234032 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.037771705 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.704662237 seconds)
  done (took 91.563884438 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.036741959 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.490415747 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.169644383 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.022388173 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.819370005 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.754199324 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.021426334 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.22011837 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.062646401 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.004100601 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.250389112 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.445767222 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.015727043 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.053661 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.646146736 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.04738949 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.005001385 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.717650499 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.01630463 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.009629839 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.395554639 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.017065285 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.005262757 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.249355235 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.038701636 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.395552127 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.101372456 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.514642765 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.021461201 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.003874221 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.410793125 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.028772483 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.085208813 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.007034546 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.243003108 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.283800659 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.275538308 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.01622401 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.029723516 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.003042597 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.030509881 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.391176627 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.286094307 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.016420467 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.003562419 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.40656294 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.016896745 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.015430592 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.011132162 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.202871869 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.930722264 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.003446708 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.083986981 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.003999134 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.263273655 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.052344137 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.022552364 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.41804791 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.015553258 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.141307625 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.04202208 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.004319609 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.008782787 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.008636065 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.005832981 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.274656803 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.442352302 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.010288529 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.278593644 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.411363725 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.018967253 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.458813507 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.904852557 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.01609445 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.05229292 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.005195267 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.564874931 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.435952588 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.048805146 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.004156525 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.26212442 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.020800071 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.246799002 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.01535949 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.004534214 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.41538465 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.024136132 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.025009042 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.005263139 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.006271509 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.783031394 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.005476364 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.247622666 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.038806524 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.005290274 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.006724175 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.046958443 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.006953023 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.018024464 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.010352106 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.460922207 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.021518621 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.093389006 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.01964777 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.007404134 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.024487111 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.009301827 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.00603015 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.2213519 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.475382145 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.013397934 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.006887556 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.005424614 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.007560761 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.198746718 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.006025799 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.239161993 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.026588627 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.007270575 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.015089208 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.775124563 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.040890398 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.006726637 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.014078538 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.823411143 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.221219167 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.019614921 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.00650852 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.008022777 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.025631222 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.03970069 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.008770137 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.089021159 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.010864977 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.637426004 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.035872365 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.041177391 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.605961393 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.019345277 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.668787948 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.02908797 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.010068883 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.298084477 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.251175785 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.332781338 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.012038108 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.009192583 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.632217702 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.039335848 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.152214716 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.02409634 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.004319578 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.202033155 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.39487983 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.009903212 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.558060583 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.009906485 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.216807689 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.016748533 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.305525417 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.431203985 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.024541076 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.015352983 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.647404747 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.655077957 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.678562061 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.014829162 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.249053107 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.003186815 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.457760556 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.010099024 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.010930186 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.601272595 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.011050571 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.011219602 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.010089257 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.011206085 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.075193341 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.180932441 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.804348122 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.013113755 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.399495411 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.082795419 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.011319392 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.026870523 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.014364728 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.361940776 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.073212727 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.014708166 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.049891187 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.012984736 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.021234194 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.408438001 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.950487027 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.017791465 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.161985936 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.562475664 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.028583122 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.011935616 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.654919463 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.603902595 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.487426439 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.092926292 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.24703701 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.037775563 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.047279529 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.747124765 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.082338876 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.458526033 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.031577871 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.02375728 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.544497477 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.029124338 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.134910276 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.012983728 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.014799029 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.482875317 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.028824698 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.013386677 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.040819688 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.013437726 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.267862584 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.013394679 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.016494159 seconds)
  done (took 1036.114091109 seconds)
done (took 1272.41212753 seconds)
(9/9) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.046600123 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.039486019 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.02522395 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.045470418 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.135025203 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.048205094 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.035470162 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.026372292 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.071990029 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.072499227 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.023232082 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.046982083 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.026813851 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.023926333 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.024086464 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.03878674 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.836728604 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.031807867 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.042328068 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.034441826 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.04205753 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.023038112 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.074602605 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.047213737 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.028516344 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.027887538 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.028213487 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.044390842 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.137154336 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.028415632 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.027861849 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.036333905 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.839599397 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.030500531 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.020112295 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.045297377 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.037335377 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.035867094 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.029285879 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.057167144 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.139629094 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.043964711 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.028004018 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.027467909 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.027857119 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.032014654 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.027577805 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.034215485 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.039162468 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.040641301 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.140628792 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.060592121 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.030094684 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.028688062 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.038382318 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.027600662 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.03120033 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.043647398 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.046213979 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.044947037 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.820286112 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.032073611 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.030308288 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.043042796 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.034958646 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.179124926 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.041634221 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.031810399 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.135311606 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.046582005 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.160262182 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.049322143 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.030252355 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.042836285 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.060647777 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.834865737 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.023505393 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.028434876 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.034554747 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.027548288 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.038198736 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.04116239 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.034312091 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.030118393 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.042267255 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.053379722 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.039415603 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.030335395 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.038554997 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.048863824 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.036443881 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.040896537 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.033562827 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.025159934 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.03996565 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.034263142 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.033021492 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.032758193 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.035221609 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.041132021 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.135188485 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.059710877 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.026345075 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.027747939 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.029317071 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.044428609 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.136900265 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.042980231 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.052129251 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.077483865 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.031973481 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.823839309 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.033527446 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.046244987 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.041170982 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.03444174 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.026211771 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.825733746 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.130170984 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.057612898 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.03350251 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.030003409 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.047217791 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.032782878 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.02793154 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.840159614 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.033442418 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.044748409 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.15244802 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.042982485 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.064320619 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.030222246 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.035869371 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.054836923 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.047739697 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.063109633 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.034528932 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.048133893 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.049150214 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.028836491 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.042993932 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.043577874 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.034016026 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.038093326 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.027103504 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.055803068 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.04463868 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.044987562 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.054453992 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.153845706 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.030803601 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.828364842 seconds)
done (took 174.459860839 seconds)
SAVING RESULT...
DONE!
