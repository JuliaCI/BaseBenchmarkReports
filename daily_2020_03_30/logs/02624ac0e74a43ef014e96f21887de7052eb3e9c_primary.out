cset: moving following pidspec: 29710
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.280502851 seconds)
loading group "string"... done (took 0.613333394 seconds)
loading group "linalg"... done (took 7.428190001 seconds)
loading group "parallel"... done (took 0.153312746 seconds)
loading group "find"... done (took 1.200449177 seconds)
loading group "tuple"... done (took 1.790657952 seconds)
loading group "dates"... done (took 1.300359527 seconds)
loading group "micro"... done (took 0.216604162 seconds)
loading group "io"... done (took 0.896794665 seconds)
loading group "scalar"... done (took 36.905461854 seconds)
loading group "sparse"... done (took 11.657331281 seconds)
loading group "broadcast"... done (took 0.934753897 seconds)
loading group "union"... done (took 12.080088946 seconds)
loading group "simd"... done (took 4.439945566 seconds)
loading group "random"... done (took 8.910075925 seconds)
loading group "problem"... done (took 1.819248353 seconds)
loading group "array"... done (took 20.553865621 seconds)
loading group "misc"... done (took 1.687325242 seconds)
loading group "sort"... done (took 3.246222835 seconds)
loading group "collection"... done (took 16.96934253 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.518936883 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123647476 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132969906 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119601395 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148580308 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117508121 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125110319 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08700476 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.816138934 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148501737 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116345955 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.397906819 seconds)
done (took 5.29969564 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174674419 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084487088 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084763587 seconds)
  done (took 1.295373499 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068210036 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126903488 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069023653 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070435165 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.07070164 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069767443 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069272663 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069498383 seconds)
  done (took 1.672338081 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075467582 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071588306 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069144578 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071261623 seconds)
  done (took 1.415949672 seconds)
done (took 5.764775092 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.742796344 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212176955 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186041686 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.383773528 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127844813 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.169379801 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648084947 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317415658 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187243849 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.078516176 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108646996 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.338678262 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120865187 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637799447 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076349215 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091614276 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140885238 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.41850148 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070122572 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084978891 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092061461 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131812218 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087133844 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076292186 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145697147 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07035356 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13322171 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082983596 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06898277 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214794617 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175702993 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667537878 seconds)
  done (took 10.249860216 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100235464 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099807003 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071521717 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127927945 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099730005 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072318294 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077473399 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070340483 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091561293 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131271319 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093645028 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107475781 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068600624 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071882638 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085822902 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210051464 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082790778 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083377598 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072615882 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080809098 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109929433 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080046004 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082537872 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082447718 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130906539 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182736694 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098567591 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100272385 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069179479 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084435899 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117367386 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132562212 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070245857 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070523221 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12855596 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097266182 seconds)
  done (took 4.7072815 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.954686345 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140660097 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090227023 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131446327 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067747102 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107578945 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068915207 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082269329 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.205076014 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.348762124 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.572716041 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.130576352 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112119239 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104809462 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070451 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071051107 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069541558 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.433536087 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101315458 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107567246 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082593918 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073146661 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071245775 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06831539 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069448991 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067017789 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070280829 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114828984 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076629344 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.305460702 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120030646 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071036127 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.906498588 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.164489989 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069226013 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.24141285 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.172434526 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09377377 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138151065 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071601527 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06876004 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15697888 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067201559 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072786428 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069095007 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086708275 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108735008 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120984725 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068809991 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069102134 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16440963 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068277279 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080682232 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.113030909 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156159102 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070222474 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.281842878 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091611532 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072510443 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068881333 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.189471869 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124272187 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093154525 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070971333 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069813317 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071353428 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071399884 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361831698 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068773888 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.178092705 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07063743 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081634937 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072569486 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071903772 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075210454 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07502255 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067911869 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090358926 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068986961 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076289972 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068740819 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06952726 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069161842 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084991833 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.364515847 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.174941725 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070418794 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068244967 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091951359 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097945584 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069864327 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069341999 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102317791 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070847508 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069391981 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069222323 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066904312 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085378541 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072867379 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115790208 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069856976 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.108041669 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099900844 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071926983 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101026256 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069976409 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081032081 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070375122 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.408055234 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068872491 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071166082 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068412733 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070149488 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069197285 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080499107 seconds)
  done (took 21.924360643 seconds)
done (took 38.964656443 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247097335 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076888222 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076046258 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076316983 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076177685 seconds)
  done (took 1.773962274 seconds)
done (took 2.983341253 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120622884 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09931322 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067140961 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096691117 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067559126 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102108311 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099506233 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078710201 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099406121 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068522038 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097020731 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068276782 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067300402 seconds)
  done (took 2.35296723 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086120635 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086678356 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072402231 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085579283 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066784946 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084949914 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083777616 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092765884 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083987723 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075007402 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06668092 seconds)
  done (took 2.084903418 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084695028 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08684223 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071923304 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084329201 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066424397 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085281612 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083893267 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087566047 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084144183 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076085993 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067083433 seconds)
  done (took 2.069794122 seconds)
done (took 7.703835364 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08002513 seconds)
  done (took 1.262915388 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.524398399 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.679232917 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082311404 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.10730638 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184912591 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11398697 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.248585766 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087951182 seconds)
  done (took 8.384969258 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092533495 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083515303 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071056584 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07457383 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070805926 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074481753 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072114952 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074379217 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072409596 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074164941 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073507181 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071244719 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074798341 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074589505 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072070703 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071496874 seconds)
  done (took 2.462210836 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093659003 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092311215 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075544796 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076724556 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074371064 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073796854 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076539843 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075657174 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072910135 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074489841 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077406343 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07572773 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073921625 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067418002 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07616332 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078091025 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073210441 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076569373 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076780682 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07830091 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07731363 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066910499 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073882431 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075981354 seconds)
  done (took 3.123500358 seconds)
done (took 16.426538766 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106049787 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071115669 seconds)
  done (took 1.370729997 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082222921 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083517329 seconds)
  done (took 1.367068945 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083775438 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068587944 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090728671 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079627575 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068106264 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068273592 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089157578 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068289444 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068574599 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068177756 seconds)
  done (took 1.955610668 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071107526 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078583564 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072945198 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082485328 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075680856 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067063031 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073577806 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069958318 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078710839 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066299055 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073548277 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085095883 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073253245 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086476361 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073543805 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070890433 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072750296 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069907987 seconds)
  done (took 2.548449138 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06789942 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069005994 seconds)
  done (took 1.343679983 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069575692 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067051426 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069323485 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068999698 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066464564 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065543002 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066426576 seconds)
  done (took 1.677798446 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.358552662 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117851632 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300845657 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074421968 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08385346 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25252382 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069504676 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074415573 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073985569 seconds)
  done (took 2.649121748 seconds)
done (took 14.125017328 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082245292 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088481056 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.0965061 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.37052172 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094068747 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069692557 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115869923 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.179175332 seconds)
done (took 2.316211325 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210023313 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.658080389 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.409248655 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203185343 seconds)
  done (took 2.480686054 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333487228 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090916915 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063184204 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070661329 seconds)
  done (took 1.775486783 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069744288 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072151236 seconds)
  done (took 1.359439614 seconds)
done (took 7.0429808 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086079098 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069613742 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067124552 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06960884 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066387953 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068769668 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068953028 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.067091305 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066545422 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068797079 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068782096 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069470263 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.0688122 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068739889 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066314255 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066553927 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069020355 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.17642439 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06660599 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06995165 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06666431 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069100949 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06685831 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066427243 seconds)
  done (took 3.00516364 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085215718 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068751924 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073904004 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073160999 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070905276 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072650643 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072884328 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068683145 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073327645 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071015704 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070567543 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070964429 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071098529 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070861337 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070858562 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071009839 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073180745 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068335058 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070719703 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071385092 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072684721 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070038391 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071269346 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072592459 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070680045 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070768841 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071021537 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068854533 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073269385 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070827117 seconds)
  done (took 3.377233539 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072924626 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066407192 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06711071 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072785802 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066449889 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067961525 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066325091 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066689112 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067339005 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066297844 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067510995 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065869672 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066305919 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067086584 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066813907 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069961377 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081375675 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06646873 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065996984 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06659481 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069632982 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068749545 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06643172 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065989868 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066642464 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065989675 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066730076 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066365664 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067430393 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066167883 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069611454 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.07043135 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06627055 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073358168 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069991306 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066042468 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070327066 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065990378 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067125031 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065944804 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066204102 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065933469 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065979352 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072906129 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066144768 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067375587 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066639776 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068027319 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067146408 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06833492 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066058571 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06645155 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068730247 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.0674452 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07026455 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06593302 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067110002 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066161608 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066865271 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066166584 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066120376 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066229992 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068998047 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067594189 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081266949 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073559289 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066479734 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068059001 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067219186 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06951677 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068297193 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080307977 seconds)
  done (took 6.139269264 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091317217 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088622729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068466909 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068234144 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064532784 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067105779 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071736223 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066956798 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068531143 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08434196 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067370886 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068128384 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068403311 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070503301 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066936169 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068288039 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074824093 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064509579 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066719185 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070471865 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067782732 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072020389 seconds)
  done (took 2.80824128 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149561751 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073283566 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10680955 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077750406 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072646089 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077680462 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072590012 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07282745 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072448119 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070626247 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070483001 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072450493 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072586327 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07018904 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070122825 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070596673 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072411181 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070322129 seconds)
  done (took 2.650397288 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079243791 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069329839 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.0892502 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068734487 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069341205 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070757002 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073079012 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076648867 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071101788 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069060794 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07624017 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0712336 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070800245 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068811986 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07105172 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069126957 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071499426 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068532397 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076214213 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072976545 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072731327 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076679412 seconds)
  done (took 2.837264362 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082071229 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070975011 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081943076 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070467772 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064955223 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066816054 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072794256 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068715653 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072373505 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070563852 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068239133 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067415782 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07134892 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068797436 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071145109 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068411605 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070892579 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06864288 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070661899 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064327006 seconds)
  done (took 2.647339754 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088051697 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070645861 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070579246 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077693812 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071088132 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070812058 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07740227 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070257204 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070556487 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090455628 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070477324 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070948095 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076772527 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076965836 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071593975 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077022435 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07680976 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077160268 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070262836 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070358773 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091282397 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070684069 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076991483 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070311546 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070522589 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070215484 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070628006 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075047667 seconds)
  done (took 3.328364247 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069338617 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06868659 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066808337 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066995554 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06690223 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066613426 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066615243 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066525996 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069086955 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066872269 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06864776 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068855034 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068952667 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068599618 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069018541 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068704125 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068868882 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066739935 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066971705 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066786998 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068882639 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069256917 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069036699 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066747373 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066731308 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069196128 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066613474 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066497902 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068715697 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066549849 seconds)
  done (took 3.276179857 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077732832 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075618764 seconds)
  done (took 1.394986876 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065737782 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083026561 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066369248 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0737806 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072090958 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069547222 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07595529 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07238858 seconds)
  done (took 1.816471693 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083798553 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078398147 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070709573 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080183611 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078211285 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084955584 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122200525 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069315594 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075038071 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06752474 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081980878 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068705424 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075429458 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069867031 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074711176 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075709837 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068231065 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073467797 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070213973 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067543122 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069802099 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077252927 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071554339 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064987586 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070214374 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090996185 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079580352 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068391552 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072431521 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076107854 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07525056 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063254118 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068682794 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069693526 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066978241 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077759921 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082600735 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071934673 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077091379 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070171532 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077200385 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064067198 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073697592 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075797823 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079684123 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069284162 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069257145 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064194611 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067589043 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071773971 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064365482 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069374394 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064119503 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07613236 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072564011 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079290488 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068040799 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070860772 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072580168 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07200701 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075877329 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071283607 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072379561 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068462037 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079626296 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074118499 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077637142 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064355341 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063509262 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066823334 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078644927 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091382593 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074914468 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069710995 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069398684 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066905144 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072281898 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069864478 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074318451 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07594361 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069331591 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073537602 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076416376 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069903463 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07204313 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075433521 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067172941 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071464457 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066843034 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084269628 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067280775 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068762535 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067107345 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078765048 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07221336 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067347424 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066789483 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075758129 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062784038 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068531204 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068052524 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069077097 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077458862 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071026448 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071230986 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076188444 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074367808 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068593294 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070759727 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.1891071 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070689894 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.070005668 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076985076 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064439015 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073080257 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071334613 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070167112 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078108942 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.068028169 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069270931 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076669905 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075371004 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068300363 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066115194 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071810061 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068868947 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071583295 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077104516 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067968734 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064733288 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064874621 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072592325 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069170061 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072879179 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07267874 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073040319 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064044958 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066658065 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073367607 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078034725 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069583747 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070718858 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075358091 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070967269 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068481984 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075922974 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071668698 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069250343 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074509742 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070507842 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06444339 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071373637 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071659555 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067587314 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073337622 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070834224 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071000797 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068954797 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067534122 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075121742 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069261453 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068948933 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069501988 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068251995 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079146231 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070742903 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064511461 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066605973 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076567446 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067270634 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067890545 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068041433 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071316774 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069405889 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06730737 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068614331 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071112472 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076802818 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071680104 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06993612 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075004643 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080715262 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068781879 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071213823 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068321282 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070063296 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069290982 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078385615 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074569139 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072606901 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071937246 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066326179 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074349412 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07691719 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068831072 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067286008 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068820561 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072885859 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074858905 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072583287 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06941592 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066891777 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069389171 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07068624 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071402657 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068360179 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068116042 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073587829 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066741643 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073808933 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068499803 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077793537 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07160406 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063224676 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069898589 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065933633 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074015627 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063523711 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066508066 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067889675 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068104398 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066616106 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069798685 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.191070221 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077174945 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07760186 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070879522 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069773049 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069643313 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076968436 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071619276 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073299494 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073580506 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075355371 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080107864 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068896838 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073327811 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082849288 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068796147 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064086456 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074234464 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067332641 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068452565 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067900891 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067586107 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073221116 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076560316 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075766001 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063517995 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072151597 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067039195 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068520476 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064724896 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073730604 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072327948 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07026716 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076701177 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069585028 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.0690078 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072885759 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069397461 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068849602 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06994334 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072365702 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068924025 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071299733 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068267292 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072041502 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06895038 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067117242 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07086646 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068987664 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069922964 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074208658 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068396341 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069166304 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072059099 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069095372 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07039006 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069990262 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069123691 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073037339 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070235323 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069716559 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071938158 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064746142 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076349188 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068649062 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076049721 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069176094 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066186426 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074645832 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071527602 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075046761 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069259908 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069722817 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071187799 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068733457 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072059764 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076307573 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068019661 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079889543 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076553253 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070315429 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07189722 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070051786 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070893874 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068863557 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070652205 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069682038 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070072283 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068688498 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073908887 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072098767 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069937702 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070960254 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069042342 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069346429 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069462652 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064053551 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068774196 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068351531 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068294435 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077807233 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06921829 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069123612 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068316137 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069257634 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067632147 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065151318 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074425647 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074479402 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068362667 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07497734 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067761358 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069485015 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078283342 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.193299663 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068989044 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068267181 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068525281 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077705672 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069891097 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078967882 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07079788 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07013789 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066671403 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069930071 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067978735 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064237721 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067853431 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072607279 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069144674 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068258298 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069929998 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072359717 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069778792 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07929069 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068561325 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070679464 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069348356 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066422974 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068758661 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06899462 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072697021 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070047075 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067424334 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067168069 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068159353 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070110836 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071251458 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069147593 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071158956 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076260602 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068604927 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071904087 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071621307 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063915402 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073061708 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06850414 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069087468 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069722637 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073263463 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075539529 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069710736 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078828655 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068751289 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070294246 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069042023 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06747643 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068634375 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068994418 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068644639 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069044574 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070113497 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076729767 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067391533 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072448058 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069947446 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069944243 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075506346 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069606196 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072489549 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074137102 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069764886 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071410148 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077297418 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072580699 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072267516 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070280014 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07080765 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07463111 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068749311 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075848914 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069997857 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.0695032 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070728442 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.0675962 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068881669 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068845402 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06832904 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075634635 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069566389 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068885079 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068714599 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067165278 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070613495 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071663519 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07709464 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071788037 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072333979 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064938727 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066651659 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073426887 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067859523 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070403841 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071793527 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074878846 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070972368 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069551716 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067877091 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077799134 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074659402 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072730282 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067472852 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072074451 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068775262 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070537936 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06984086 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068757002 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068641563 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072045674 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06959111 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067771718 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.203891138 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074126411 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072121109 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072212444 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071265569 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070723394 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065149608 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070463088 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071818708 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074640204 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072638236 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06938339 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080110855 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067574523 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070310593 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071474013 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068799265 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074544725 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06492164 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071344566 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070126684 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06973259 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06488644 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06923001 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068557881 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07182582 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069692304 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064477528 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080113845 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079206459 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072905631 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068564017 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067781979 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065249713 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064667056 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068818296 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070089643 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071031345 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079669209 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068611432 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068613768 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064895139 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068916758 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072559087 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072423069 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066842626 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06494679 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068747979 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072613402 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074685599 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067786286 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068581066 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072419784 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071519956 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067187798 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071764857 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06616988 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073344634 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081036985 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069138228 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070274397 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07516938 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076533246 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069573215 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.0646522 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069171821 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072411433 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070040692 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069519513 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069823757 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083974235 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072140995 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069036465 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068195134 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071719476 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071113356 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077280255 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069771583 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069842276 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073963326 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071152836 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076329752 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072569985 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076285245 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072611776 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072898953 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068299953 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070367147 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067764081 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069365742 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070217013 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069484091 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073747368 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075925004 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06911452 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079708579 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077800185 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070362909 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065953491 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068228415 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068687326 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064168463 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069197694 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067021552 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067275794 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066741757 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067485344 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070163857 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072569697 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069647144 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068474333 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067209991 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062359757 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070771373 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070349879 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0696776 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.196725181 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070635296 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070244629 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074400589 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072036635 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067898639 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071335588 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072007748 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071591625 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065392188 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076119001 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069020807 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071506678 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069349869 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069886083 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069572314 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073107886 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073431231 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069855801 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071724294 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073407672 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071418705 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067142562 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067469433 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074623585 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067942117 seconds)
  done (took 44.281781045 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101397532 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065924826 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065020122 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06476203 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075076468 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065926464 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064693727 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065649527 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065608227 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067614136 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064752417 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065296465 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072423647 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079131158 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07581613 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069378474 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064580446 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065998428 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065033963 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065723905 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072570297 seconds)
  done (took 2.782762812 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074884058 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08004204 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077119416 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084550876 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073094822 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072400088 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077288028 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072356748 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080248651 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074596552 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079894548 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072760629 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074735595 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074618789 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07524104 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072559768 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0798942 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07296521 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072650601 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076992526 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072907757 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077278348 seconds)
  done (took 2.981312962 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068859459 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06806164 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070462345 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063793745 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068166882 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063770578 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071402273 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066867582 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071772035 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068071339 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067956478 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06817671 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07023817 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063956289 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069567128 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066459208 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108661901 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070901891 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067979284 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068904714 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064344987 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070323608 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064397106 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06447641 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068228583 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071040544 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069021429 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066761766 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068535065 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068094179 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069063656 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.0669825 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070242375 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069204 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068185439 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.0678867 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06788658 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070974495 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064554803 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067220847 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068975194 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064613597 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068807297 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069664286 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06685288 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067185058 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070369363 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068065717 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064161655 seconds)
  done (took 4.685816873 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080330376 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110083323 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070138711 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090383618 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081270761 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074756728 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07216007 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091337541 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065784751 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066791872 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083011441 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080141318 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067913522 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072284131 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072199738 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068254107 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068805182 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06702012 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071784315 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067691286 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071617277 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073889648 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081685254 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07912831 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072117604 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067489217 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06722586 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071886714 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078516711 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071892268 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072673388 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073098706 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081485674 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072027866 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067445517 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070286857 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082529187 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068259591 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070440957 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066558666 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070384393 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072602182 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074349136 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082579663 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068271517 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07208172 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067884733 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06569214 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079018815 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070521267 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075832196 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080105518 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071967375 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068419811 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072323556 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08211869 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068125978 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066659557 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071034875 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078890446 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06634301 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071429771 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079591575 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070373347 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074917505 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080405275 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072223136 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071471501 seconds)
  done (took 6.474447314 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077447843 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097982786 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084257168 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085001375 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077704697 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077714011 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077305053 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077745614 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07738921 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0819098 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077746349 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116011625 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074212703 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08776656 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077932107 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078118559 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.078128232 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077957953 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077476073 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077282554 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077465202 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084108503 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07753557 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084423613 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081419595 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073415905 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07752854 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077807909 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084756845 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077795722 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080812264 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077549418 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078205775 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084370788 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081096727 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077509998 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0681164 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077632672 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077868399 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077576065 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073266929 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085112782 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077663116 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073659101 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078015779 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077686248 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084587939 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081022961 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080135426 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081697972 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077798138 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084470586 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07746238 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077994111 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084804036 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087551804 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084167754 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084709681 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077884322 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084832523 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084490637 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087338824 seconds)
  done (took 6.343557236 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084516574 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075732771 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083303297 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064599632 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069230112 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074806591 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067115228 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067142107 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075796392 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075795945 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07834119 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074377117 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077026479 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078120682 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074331808 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077266462 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074003666 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074433906 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075924071 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074519266 seconds)
  done (took 2.83897697 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076650307 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084670891 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085624906 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073281316 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.07208645 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074257474 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071710017 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071720887 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069667808 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071858824 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077871832 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077602841 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069398714 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073604293 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077680041 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073394956 seconds)
  done (took 2.531745967 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08482607 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074876223 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080833985 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068855577 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068618933 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065588727 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067931567 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06385467 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065110798 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079827993 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068143282 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078559189 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068340543 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067027097 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065340685 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073538205 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064893681 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065688003 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068167298 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079693678 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072014885 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06684067 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071850539 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068294592 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070699265 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072092179 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067543266 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068915114 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066163355 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068973754 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070865483 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071856614 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065653578 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067273309 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067606215 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066097488 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068194146 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068893754 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073696279 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068685559 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066934871 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070590157 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068384064 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069685795 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064907789 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068672647 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065286897 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071037522 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066902917 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070977342 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068452144 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070946505 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069534187 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075341041 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07125782 seconds)
  done (took 5.188446177 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082547427 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072157828 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064160197 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066671853 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071875011 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070288917 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07233206 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069580806 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069863509 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066709148 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070241628 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071430026 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070368856 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071900627 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069845213 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071932962 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064258675 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069282814 seconds)
  done (took 2.623466086 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07393639 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069443441 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075918085 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069079838 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068512429 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07310656 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065635603 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067105915 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06713963 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068520518 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068701688 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071435005 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067052856 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070982193 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068497283 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068519362 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07100206 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067292857 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068776067 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064803289 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071051871 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067463458 seconds)
  done (took 2.873889548 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094184492 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084799505 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140121962 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08113011 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088071518 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074321933 seconds)
  done (took 1.914220062 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093935851 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102349635 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069452825 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072489082 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078411394 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072562432 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072468676 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072561509 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080362992 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078307193 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07253952 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082623331 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079879036 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079565761 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077804551 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078289312 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072587147 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072702891 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068946754 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084607325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072889327 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080496058 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073040308 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072778414 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072664713 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079517084 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079942693 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077458418 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072601975 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080663032 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07752127 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073214103 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080314139 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077985249 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071957424 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08003828 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07286339 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085102803 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078058213 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079678437 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07174603 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077904419 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080308798 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076715103 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080223847 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072910521 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076828852 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072651915 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072779529 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086734753 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078472819 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079345982 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078290254 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080623288 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080046586 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086579227 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077799178 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079449361 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078324579 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077578039 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07981942 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077808691 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079390352 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078085995 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077979215 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079650815 seconds)
  done (took 6.494677995 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105568323 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070274896 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072817191 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077838229 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079870818 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073177909 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072995774 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072976297 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07314886 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069849905 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10890876 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073452361 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079851418 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079359525 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072772134 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073198279 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073069152 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079423156 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069520482 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08656576 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072465193 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079175134 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079357648 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079526171 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077640821 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078076595 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072725686 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072738607 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072404442 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072713578 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07709248 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073044492 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079273753 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069485499 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07947244 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073215526 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072668545 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077405198 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072799947 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077805912 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079260563 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085053272 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072993531 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072482253 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07798254 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072900402 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072951975 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069329475 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072785115 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069620018 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077426975 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077754636 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077899741 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079171431 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072905063 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07280471 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073048152 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072616354 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072937242 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077902995 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079637103 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072602073 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086429476 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072669475 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072636922 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079494065 seconds)
  done (took 6.412931091 seconds)
done (took 132.927522257 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.194998591 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172135887 seconds)
  done (took 1.710007205 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071693738 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099810723 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078595543 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130831878 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069165554 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103331679 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101853835 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079407833 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069167503 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068626947 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.0686233 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071292198 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133439634 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06923705 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068978886 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071142866 seconds)
  done (took 2.716987284 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098845385 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157491714 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103298299 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067747133 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098695921 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074946996 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068112281 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079173099 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07351907 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067940365 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074557603 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07249467 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067950716 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072370988 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073277548 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074599678 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067925447 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074807261 seconds)
  done (took 2.832754486 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098389662 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092547086 seconds)
  done (took 1.558589231 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155332544 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134908783 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201643861 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331403894 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155673884 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147697757 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144136993 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141775383 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115344574 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138737891 seconds)
  done (took 3.028993746 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101317084 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149655809 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266032159 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116328846 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074757198 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092854383 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117818293 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080949897 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081472739 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081812864 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081546328 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078665398 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10023016 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075762256 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076614756 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078325056 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103608852 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076077562 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076709625 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077268387 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101048314 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069506184 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075681455 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076076377 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078756797 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078407196 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069240497 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069066399 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077720185 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076711894 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078085286 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092097489 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078817954 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105023733 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073425551 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106215105 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078434767 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075311883 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077249175 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075389244 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079709994 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079878374 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075628164 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078288814 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06883659 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078625207 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068940769 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068834723 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079542654 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070123986 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079703052 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078539208 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104959724 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069898553 seconds)
  done (took 6.070577422 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108950333 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108060833 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073154744 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114120634 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105226094 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07206287 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10609558 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098959501 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108949565 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072713367 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071093114 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072711325 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080845212 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082531317 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115911101 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108054013 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075055339 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072025102 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108620157 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108491193 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070961903 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102100405 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098620465 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107925582 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070241727 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072393346 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070610355 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071967055 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077426191 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078948513 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070852708 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080513217 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084754394 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078402557 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069643593 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070868879 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071113615 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07980026 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080647431 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080552489 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078395055 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070102261 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070757101 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071993585 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07163154 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069992516 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079604052 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080369796 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079050261 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070846678 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072323539 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070703384 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071727587 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080218852 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077853896 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08075663 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080345974 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070913054 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070708664 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073347109 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080838009 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079799482 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080049742 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071642418 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080575605 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072989857 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081141603 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084161186 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071349437 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071820106 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070741324 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071281308 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072442788 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078788766 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078550282 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072576759 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071065922 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071147055 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080292997 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078899367 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070845552 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077850692 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069364893 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070524584 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071398999 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071773859 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077432392 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080552053 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072157615 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070383554 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070267743 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069993751 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068380198 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076117066 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078656965 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077948415 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076954379 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070368989 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077823154 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076547484 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070969614 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077115578 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069411251 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071301654 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070383844 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077139819 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075882372 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07796944 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069276443 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069679145 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076893039 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079015415 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069698606 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076677927 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078660891 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077081122 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068444693 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079661869 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069901594 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078357905 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069665787 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078786316 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069634529 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075656543 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068359665 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067844833 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068972919 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075847913 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069752256 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069211878 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069910019 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068777819 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075488423 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078727174 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069707177 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076180837 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075204439 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070134511 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07632792 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069411542 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076190563 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068820489 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069599984 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067441794 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078284783 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069341628 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068858495 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068420244 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077300022 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068466166 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077704758 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075122916 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068636467 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078456468 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077584523 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074195084 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07757989 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069738617 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06863192 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069045747 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068943269 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075435266 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07604198 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070234622 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068395386 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074848802 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077321844 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068390654 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075577272 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075938078 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074998394 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068322492 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068811224 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077844381 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077313004 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074892976 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076039217 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076165233 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068957745 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075035096 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075203433 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069118831 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080762439 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069067109 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080165237 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075643164 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074048335 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076227285 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077662349 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077588347 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077770729 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079429903 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068418982 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068600703 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076233781 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068643897 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06843858 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075244603 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069991908 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070025647 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079857897 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069097677 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.319887293 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072681163 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081773209 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072850898 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075609806 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08689159 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074323421 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075195154 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082438648 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07635285 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081281305 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083871005 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082579647 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074418746 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075106459 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082457819 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082340023 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073460924 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073372294 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07420753 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081269524 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080159947 seconds)
  done (took 18.769158562 seconds)
done (took 38.064895436 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.195271435 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.147396958 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.160206025 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114055956 seconds)
  done (took 2.104581806 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.114444603 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099997783 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093663082 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06946525 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099102558 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06957698 seconds)
  done (took 1.976344731 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.271177075 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.188012243 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172319291 seconds)
  done (took 2.062292864 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195656121 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.181506294 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.426507162 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.259531966 seconds)
  done (took 2.597814008 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139859787 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088291448 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070642949 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086183543 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128690917 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.155299362 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098088726 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122385878 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082341572 seconds)
  done (took 2.45227245 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143329254 seconds)
done (took 12.774506458 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099673537 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075025434 seconds)
    (3/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078904184 seconds)
    (4/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.084542719 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071356887 seconds)
    (6/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.184173093 seconds)
    (7/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.175964294 seconds)
    (8/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080749961 seconds)
    (9/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104069935 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.228803471 seconds)
    (11/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076587017 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078407359 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.199978755 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111933536 seconds)
    (15/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104095163 seconds)
    (16/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094010507 seconds)
    (17/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.197569727 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07658505 seconds)
    (19/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.22502174 seconds)
    (20/309) benchmarking ("sort", Float64, false)...
    done (took 0.130056769 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077136703 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173764575 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.183576461 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170792255 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17974253 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078171712 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.21685643 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.16482749 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085248424 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.224530641 seconds)
    (31/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073540345 seconds)
    (32/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076226393 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078129968 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077319987 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.103443875 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076902991 seconds)
    (37/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.44999137 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.106920497 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150423599 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067379768 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.114090304 seconds)
    (42/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077011569 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077769996 seconds)
    (44/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.145078566 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.164347464 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091221316 seconds)
    (47/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.079254327 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.146918966 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100404306 seconds)
    (50/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08023326 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091586944 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055646427 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123310616 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090717019 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093410278 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.070346991 seconds)
    (57/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055470041 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097721587 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.174323942 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075884077 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09456325 seconds)
    (62/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093168134 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06919161 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07718767 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081461689 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179390542 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098926752 seconds)
    (68/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.138434951 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067459809 seconds)
    (70/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084575208 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.190029517 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.204642202 seconds)
    (73/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067157529 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.18229748 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090902898 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078363677 seconds)
    (77/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.156759294 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071761203 seconds)
    (79/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076552533 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088812221 seconds)
    (81/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054282183 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.219246725 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071935786 seconds)
    (84/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.17133453 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07555515 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089855425 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15618661 seconds)
    (88/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075400931 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093607755 seconds)
    (90/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06635935 seconds)
    (91/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.166043761 seconds)
    (92/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077553544 seconds)
    (93/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088100299 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075599297 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.178982887 seconds)
    (96/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112723222 seconds)
    (97/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.175986492 seconds)
    (98/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111669443 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092208427 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054700006 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170243759 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069768128 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141440484 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077506605 seconds)
    (105/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159877606 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074607182 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092923367 seconds)
    (108/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071478004 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06819223 seconds)
    (110/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.156069967 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069605156 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069184518 seconds)
    (113/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102092531 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07609754 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111619749 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077398249 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08245735 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076158763 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.116390676 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.190895985 seconds)
    (121/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067687821 seconds)
    (122/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.201707601 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.142113611 seconds)
    (124/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081400615 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094562518 seconds)
    (126/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.056087638 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077309167 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.055494704 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080173406 seconds)
    (130/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093758716 seconds)
    (131/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079969131 seconds)
    (132/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067348793 seconds)
    (133/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077226756 seconds)
    (134/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078132836 seconds)
    (135/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189502383 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077865387 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096957381 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100762483 seconds)
    (139/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076491842 seconds)
    (140/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081101089 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157332224 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075788576 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056067192 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075324851 seconds)
    (145/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074844286 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089917937 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07649231 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078816663 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140467635 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069053186 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055204925 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067450956 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055867686 seconds)
    (154/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076534204 seconds)
    (155/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055421302 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072913794 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094772129 seconds)
    (158/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064783084 seconds)
    (159/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055752405 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114115405 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088857851 seconds)
    (162/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054727895 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136565292 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068712994 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070551921 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075685325 seconds)
    (167/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.076934141 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142064736 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13633948 seconds)
    (170/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071394297 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055655756 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068522384 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067868397 seconds)
    (174/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090281322 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.118180134 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080812815 seconds)
    (177/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106812423 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.169238763 seconds)
    (179/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.140458959 seconds)
    (180/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053825254 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068474613 seconds)
    (182/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109571745 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068450951 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.188231589 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069430204 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.328177242 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077786406 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125770057 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07567933 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.08021568 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.075682879 seconds)
    (192/309) benchmarking ("sort", Int8, false)...
    done (took 0.147425885 seconds)
    (193/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.056024544 seconds)
    (194/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05669749 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.066348598 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069235846 seconds)
    (197/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067850592 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068921677 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075307886 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094737638 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069752277 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.178273942 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.055176137 seconds)
    (204/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.073733419 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054912191 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157740762 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098455267 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069533762 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068241484 seconds)
    (210/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070419942 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075326854 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068874064 seconds)
    (213/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081764345 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069990548 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075486609 seconds)
    (216/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083016767 seconds)
    (217/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070235006 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054557945 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077916995 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076221123 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06945327 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138510391 seconds)
    (223/309) benchmarking ("sort", Float32, false)...
    done (took 0.130974551 seconds)
    (224/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.074296111 seconds)
    (225/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054766065 seconds)
    (226/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054492772 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054996303 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080423315 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069319723 seconds)
    (230/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056904043 seconds)
    (231/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.068207231 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075659025 seconds)
    (233/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096181517 seconds)
    (234/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06544198 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070702635 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055204751 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123413302 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055064441 seconds)
    (239/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.057519897 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068660742 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080014873 seconds)
    (242/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055589924 seconds)
    (243/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070748125 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178265906 seconds)
    (245/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080712952 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072240672 seconds)
    (247/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.160720133 seconds)
    (248/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.14198358 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087731479 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070353657 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068007811 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118043907 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071270916 seconds)
    (254/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056056819 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057136525 seconds)
    (256/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.074426748 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145321314 seconds)
    (258/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071433304 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05730541 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068873218 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057412568 seconds)
    (262/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071828163 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075808384 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075143773 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088578561 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054902909 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076507898 seconds)
    (268/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.0770259 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069171135 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122681251 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054736159 seconds)
    (272/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05455837 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074189182 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090418731 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054298204 seconds)
    (276/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054505763 seconds)
    (277/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055550377 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09479354 seconds)
    (279/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054600747 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114165243 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091925505 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068819468 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070883632 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05461112 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098671895 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08712158 seconds)
    (287/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05622615 seconds)
    (288/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.140614224 seconds)
    (289/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054822581 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074964004 seconds)
    (291/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055768636 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054541731 seconds)
    (293/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054617477 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.0542163 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079697067 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06944036 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087478839 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055926232 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074204797 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.127730783 seconds)
    (301/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076537269 seconds)
    (302/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05537142 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068508297 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055638048 seconds)
    (305/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.072802227 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055004211 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.22644182 seconds)
    (308/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075702437 seconds)
    (309/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123303661 seconds)
  done (took 31.677715875 seconds)
done (took 33.12358491 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.0851377 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094792833 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079163518 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095476997 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084115231 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078853229 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076776272 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081169302 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083445305 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084770166 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081641773 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.0584438 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078077435 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078019759 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077775161 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092976 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081684639 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07635367 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076716364 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067883591 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076397957 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068824305 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070388179 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058322782 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081268735 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074866331 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077232216 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077371453 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068622653 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069460232 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072575619 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077459082 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068480917 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082176926 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076191514 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076536813 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078213759 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080012856 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070110322 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06839816 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077414758 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068639762 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076286288 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076638838 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075441804 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074945492 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076515914 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08023607 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092533245 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070727333 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07764325 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078717477 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079638871 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075706173 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07310146 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076146837 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073826646 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092549875 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076403658 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070629966 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077416163 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077224332 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074365381 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076351649 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07675909 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078719434 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079972908 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074444453 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078790419 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074709405 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068677967 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076382685 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072837403 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068892715 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078877009 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083016115 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067480856 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075467278 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076634713 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07654246 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06860337 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070849402 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070158255 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075698547 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07041536 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057811082 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072942491 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075397456 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067642955 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077232548 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075465505 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076061255 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069966039 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080124869 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067937064 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073970677 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068882461 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06922286 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070691214 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073170243 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.0684368 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070642635 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078450168 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069826338 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075375818 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081183642 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068202486 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.0752785 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067871791 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067658134 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081775475 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078484373 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068961656 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074310477 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067768316 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076176641 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067493492 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067933854 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068027808 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068094169 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074570804 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068163032 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070130261 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.215151537 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083463405 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069498131 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073835742 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071302753 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069256732 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074517278 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068986504 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06895071 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070224807 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065166359 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071055651 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068864219 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076095462 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070873246 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076762842 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071085401 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077287497 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073664656 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074552373 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073992545 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067665362 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063079244 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070924923 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071189989 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070183777 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069170878 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070698679 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069279477 seconds)
done (took 12.973576395 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069926729 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.132747769 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095831996 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095053588 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085952712 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069836732 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077015955 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096259935 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070262195 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.09858895 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088143865 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086691419 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11032617 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067783704 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069244793 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072837283 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070770098 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082219847 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097620278 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087648416 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111959835 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06838916 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092947354 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089309727 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088002296 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093453274 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069709416 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072649121 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072188955 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100953579 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089240379 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072582289 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069465002 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09796163 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093354494 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083897473 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069460722 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.0836368 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069711674 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068743504 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070359573 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097319424 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081475886 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081548227 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072429219 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078175877 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070448652 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083860277 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089229519 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082897827 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086328066 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099293571 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071193384 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084648714 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067693733 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086232236 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077895385 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07112008 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069191612 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07616675 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069497576 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07238208 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081700453 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081565236 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072878805 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084406422 seconds)
  done (took 6.935497476 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086137853 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094795611 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084854987 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.0874602 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068273279 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069331506 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069865907 seconds)
  done (took 2.098903425 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069783503 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08835853 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090396064 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08945787 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083392623 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09210024 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078461736 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069904486 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093532894 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071025971 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0884792 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098340445 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072950281 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.082377522 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091116129 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069236312 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090602137 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069764542 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071916237 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091340009 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075031463 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097826319 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07651776 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069919952 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082471212 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070248096 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112685176 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073202309 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071129813 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072634447 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070700062 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106437009 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082345666 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076632791 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07034673 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083888757 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08308181 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072313801 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080357267 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077771024 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082564107 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069928217 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07063216 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070993958 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073421007 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079097722 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070505986 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073758121 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072211556 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087931319 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068071991 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081890962 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071812933 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074785446 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071257866 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075620914 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078532633 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070824351 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088180015 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070910589 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08419209 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083622939 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082226035 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084613036 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071966345 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081761217 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082327309 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072162592 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071511107 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073248438 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083495529 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068790141 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07104836 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079069154 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072391151 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090672374 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090855396 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071317034 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082671938 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069955818 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069712554 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069576976 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090378787 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074369983 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069398459 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073329658 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073144905 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072404302 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068270342 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073555292 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06791768 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075087204 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072563154 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0725584 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072343585 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084316527 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072317162 seconds)
  done (took 9.100036332 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071954732 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070921336 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071350964 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07039875 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070936257 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070587017 seconds)
  done (took 1.989398737 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09203644 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070849924 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081390392 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073757917 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102709575 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087744065 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088428418 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079169943 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084449328 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080592331 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087103564 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088682688 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092172263 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074167889 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087617583 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073614177 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088175193 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077054581 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079434343 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074689357 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087584345 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074770767 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074599888 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083241786 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077524191 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074117669 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080269034 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080021395 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079473485 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079706487 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074067871 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078106265 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072773242 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079082614 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088222029 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073178296 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073656754 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079560852 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073907882 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079636601 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089003894 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074783431 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076130697 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079029582 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.0792685 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073185143 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07940406 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080832622 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088196193 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081959214 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078978531 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073306722 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07738972 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078823516 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07301268 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079412131 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079230235 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088399557 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073929329 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072907703 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070971681 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077395325 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078701347 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.0782005 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079765851 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07870308 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072790244 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074264214 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07493283 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073608931 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079045388 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071156891 seconds)
  done (took 7.245891772 seconds)
done (took 28.891831216 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536771451 seconds)
  done (took 2.050073316 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.599763459 seconds)
  done (took 2.143985921 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.468070151 seconds)
  done (took 8.011331118 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.362522431 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.46472546 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696504429 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135026932 seconds)
  done (took 3.232980267 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.713126266 seconds)
  done (took 2.265494908 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.22948418 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220772495 seconds)
  done (took 2.013214562 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376113165 seconds)
  done (took 1.917658829 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.081181443 seconds)
  done (took 2.626117797 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.2313825 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17608613 seconds)
  done (took 1.961069863 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44791062 seconds)
  done (took 1.998672224 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.788198838 seconds)
  done (took 6.340504188 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.219860941 seconds)
  done (took 1.812728299 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235345772 seconds)
  done (took 1.787064671 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.869256619 seconds)
  done (took 3.420767474 seconds)
done (took 43.136591199 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084430149 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086543554 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086483507 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08402607 seconds)
  done (took 1.871446101 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078648439 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075636924 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078771883 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075072694 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078362795 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074759826 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076254928 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077390256 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07464719 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075179459 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07549566 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074928316 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076972412 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076674928 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073753238 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077048772 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077502938 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074653918 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077677563 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07470809 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073062712 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076954545 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077627726 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07403323 seconds)
  done (took 3.378088111 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080275002 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075634238 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076972723 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07473716 seconds)
  done (took 1.866353779 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080073216 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091688003 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089415109 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080500603 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091932897 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087474995 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071381691 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07103786 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072660344 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079965693 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070838411 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095950707 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088802557 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080038039 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082284488 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068277744 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070553526 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087946633 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080660275 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080574958 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073548501 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08053201 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07063828 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09015546 seconds)
  done (took 3.4916328 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087076296 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101264578 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081659557 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091988821 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093438741 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067893374 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087656269 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093664755 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124703363 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068029874 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073340373 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06834303 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076229453 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068403886 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08218383 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11104768 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111871869 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071386769 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099194969 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068078303 seconds)
  done (took 3.294376848 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074283871 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071858789 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072751867 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068303114 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079315385 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07557644 seconds)
  done (took 2.01159972 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071087353 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070394081 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069588715 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069738325 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073855534 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070321907 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068740719 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070047508 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069896304 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070211624 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068914638 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068611357 seconds)
  done (took 2.404962885 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.182416138 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07035552 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071526558 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068752883 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073115148 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068759929 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.0825747 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070454137 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093281624 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069021891 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069470117 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071280547 seconds)
  done (took 2.556800655 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193320318 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077775744 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222549355 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148382734 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107613772 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111844599 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110938686 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110018944 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136048197 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099086459 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158792536 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160694316 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105805275 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133766108 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089430329 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099769559 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14890168 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159804277 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105298739 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158656561 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140568375 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123381237 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142208607 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100584456 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10490136 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11784497 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073557802 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081037294 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162937929 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129480736 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139677799 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110816422 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093762932 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170243701 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162935911 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136602023 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14475857 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085469308 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102650122 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130266672 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189323231 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088731157 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29938096 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110598269 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081561012 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129355984 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116740186 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117571405 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10419944 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090389691 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141681085 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175656417 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131370478 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087183736 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122927499 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11209272 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.111286272 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111212838 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170450123 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154268882 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126148393 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074226118 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109927776 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146231772 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128777223 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105740306 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121355565 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093984602 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129863972 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148535096 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119773825 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137757125 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113654864 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088975114 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117808745 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133749745 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124546441 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155663171 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122885705 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074766337 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119838457 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100203821 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082312224 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144009704 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076717169 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167558937 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099399659 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105044646 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122544211 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105739042 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106182761 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150990449 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285004439 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103583617 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.0681986 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105796004 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.116637897 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141562632 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08840756 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105898456 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115513384 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079589607 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132517752 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077717802 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120882477 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078133242 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121951695 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127548805 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07915819 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1196639 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102896749 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100361143 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127744098 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152805305 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088396513 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082253501 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160073864 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120795296 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101692438 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13814705 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150140264 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099896989 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09866986 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143467571 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165261364 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089977596 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156663052 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104701885 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084087433 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08794379 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120732557 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109790195 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121156393 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082985574 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116796166 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160355633 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075926447 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095637812 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130762985 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079969972 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081700395 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104551651 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102930989 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096160482 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098226344 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101266357 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132180557 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270199452 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107343153 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123681494 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099186773 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161079196 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088176527 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10224082 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10320094 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072525385 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128932848 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149810421 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080278186 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155618472 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119721509 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114461342 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117053574 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084955755 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134000818 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080124443 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072309644 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139084825 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109567557 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107535423 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144191496 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114136001 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120929558 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11608833 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128032229 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127274847 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125743208 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105801384 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088411138 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110336056 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124794807 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07532476 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090931347 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081676667 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104284114 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095286139 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084322931 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13707377 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121268475 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110990328 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110469378 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097515096 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141165321 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077871742 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124053222 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117913523 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095331974 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145694342 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144988641 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128213368 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097906983 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283032979 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073353709 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076433984 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088454673 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120226838 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084177109 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084071833 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113845971 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141619646 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12506072 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132906963 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120357587 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117037226 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148123902 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072688311 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117915904 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140838296 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118548217 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104428098 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09104226 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099377379 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136849561 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10480363 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171139075 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112349328 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121260367 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148663304 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101401427 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080665054 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101851016 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129045267 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102590378 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137396873 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097938534 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088549949 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107143505 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078922791 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098789517 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124445888 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116717603 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131828568 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112536625 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131170866 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078860599 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112799828 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118669591 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118605884 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066021342 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115315181 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152838122 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094958053 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114163531 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296060117 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080468114 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133942733 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165510317 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140011034 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085638079 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107371134 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118063275 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123691846 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117525506 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134474652 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105674733 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13265046 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108089673 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085525028 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0882772 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096275001 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103377419 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093727789 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103077026 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111036651 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095996482 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12754386 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102907444 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108654601 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115240307 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099345309 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092195436 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097011432 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166801293 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115999032 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163081661 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099481348 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13797484 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155622537 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077193471 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080740303 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079751579 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134415988 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086010981 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128193473 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109315535 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11557267 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121512698 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135998573 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095386359 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071070645 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106874779 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129885445 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121902175 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0981355 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101463872 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154151336 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097272108 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226782744 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111068498 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113452186 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10324206 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163526451 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064329093 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104266929 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078558375 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082217168 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122781139 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145095128 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081966528 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099584174 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11789346 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111386143 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12336539 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099084549 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110426728 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122845858 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143282999 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125063283 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090568687 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109068767 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123647897 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149299325 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102292052 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098090649 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167626785 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145943281 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.152537426 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087423651 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11196263 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112232694 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107049897 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13534885 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084845001 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15581209 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083211653 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133961108 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103143578 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089547717 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127477387 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111121356 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088691973 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140543606 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114622453 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083604838 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07881736 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113586466 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116053624 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103012382 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076035183 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283346577 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076013626 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129924421 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15561138 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083127261 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103822141 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095823705 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081744813 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104392301 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104576266 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088190666 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10010778 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163287824 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087195313 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142687627 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131395761 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110480932 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131104568 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101611881 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639482827 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079354104 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144953464 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113367615 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164226839 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099208202 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115992845 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107951888 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119077579 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139233561 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102114593 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179159521 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128152099 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114479268 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08027578 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101610697 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10362203 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087715496 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105862446 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112107607 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113989879 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093737037 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114501199 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122295601 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083690888 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096953891 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148914652 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112906709 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138943861 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133559536 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085345163 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115155726 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285327117 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08222103 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.116422229 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146126992 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105520124 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098828534 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082349315 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099949279 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154191296 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075129081 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152846208 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119767255 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108271125 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111447048 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110130709 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127992632 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104821116 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11962007 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093037004 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107269951 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111733724 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082482891 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07803107 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103618083 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108841891 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098125262 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096550506 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.0996749 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145078771 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074236772 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097878843 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113160872 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138957259 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165421849 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087469602 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08454365 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117582626 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113808551 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110953151 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119055979 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080701603 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082959178 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081449943 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082647204 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106381896 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112059101 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11409224 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109201731 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156008399 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084815374 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22481196 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095978211 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103261298 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071085324 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079252111 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095657955 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24653535 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105190536 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111838329 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154442783 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095735335 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091621723 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091834612 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077556061 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084612638 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123792824 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107809212 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116415259 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100404493 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065144561 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105922644 seconds)
  done (took 58.073048748 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108533929 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084524925 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098519661 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144994802 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122619506 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200375466 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156890546 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188639448 seconds)
  done (took 2.781370007 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070328911 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097335464 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103921388 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083871029 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068949882 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070358904 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.219326769 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082610841 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069109691 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094517589 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080197754 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071656117 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41208627 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068545293 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070158075 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06515843 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069533917 seconds)
  done (took 3.462146704 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.374814864 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.6220481 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.332651777 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078473647 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.893395615 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093085511 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.143385177 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13590384 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079903604 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541376257 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.407853498 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13056303 seconds)
  done (took 18.510132685 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083117986 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076535585 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090455563 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089429396 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079678924 seconds)
  done (took 2.093591226 seconds)
done (took 107.376441629 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084663033 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.585408969 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057324784 seconds)
  done (took 2.342040667 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08806587 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086324374 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086664572 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084150186 seconds)
  done (took 2.026002399 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075610746 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078208286 seconds)
  done (took 1.829476315 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222020345 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164872573 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095720657 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084012148 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081484979 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081718549 seconds)
  done (took 1.928052856 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074248097 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07739897 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074996287 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07779746 seconds)
  done (took 1.979059487 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07794503 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055054929 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058116176 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060473582 seconds)
  done (took 1.927656426 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087696778 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083364554 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080612133 seconds)
  done (took 1.928750726 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100100074 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088234892 seconds)
  done (took 1.864109882 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083750978 seconds)
  done (took 1.761435157 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093217693 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099198428 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127539285 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109625503 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134522675 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106405905 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085481765 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087286708 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078307451 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087311551 seconds)
  done (took 2.68470534 seconds)
done (took 22.511309555 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07981453 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363805161 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361769119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091912026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672039625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358364942 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970133298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094093633 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.138990104 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069933262 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086293277 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651679753 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960789271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324622463 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.948648914 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325268676 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652529398 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070879945 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07012915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070674967 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.956836939 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070163343 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070156765 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070749443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650433447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373638822 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070736971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324095151 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071034961 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072817664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357651349 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.085543533 seconds)
  done (took 16.190974085 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072621039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118996483 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075133163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086297972 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073483646 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072282579 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073688814 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071298863 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120406139 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070042973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086738186 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069926312 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073950085 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071096978 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089426442 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0707856 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071056934 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070982162 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072611116 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070879448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088999436 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070741403 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070562569 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071770444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071009364 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082047033 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071157805 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071447373 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071017316 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072472203 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073811236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071953092 seconds)
  done (took 4.158334031 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115364478 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125381589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076249262 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10493702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112770865 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072860084 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141779983 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095127492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128577861 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070387621 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08731632 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070918053 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102428966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071024029 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090092439 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071449161 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071522857 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071023489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070805777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070831244 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08985357 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07065608 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070700342 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071333975 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071069546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083809143 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071222015 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071445319 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071349268 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07258994 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074510509 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071367502 seconds)
  done (took 4.401216451 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07474148 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077138107 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084969903 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085976244 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071466569 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073904813 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075146387 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072398168 seconds)
  done (took 2.308893742 seconds)
done (took 28.743262311 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080729974 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071656854 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074729348 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089525563 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075116136 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079889508 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069189578 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077509792 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074394577 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074608794 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076529127 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069765083 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073758691 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069558028 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07625 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070379599 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081371805 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074066737 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080768141 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081188811 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072596512 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075381871 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077820783 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080929012 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081229845 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080908982 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079705579 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075238541 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071527594 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073403644 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079442198 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085728324 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071176239 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081398179 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070491011 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070268454 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074224617 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.0705394 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081328417 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079041814 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071999427 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079797022 seconds)
  done (took 4.868503855 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088102913 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092327454 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085322692 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064531679 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067968504 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067629916 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089670798 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062446908 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06207402 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088928481 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058963737 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061647613 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065062775 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056989069 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062521647 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060114241 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063795334 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058057419 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062249897 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061800811 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089531091 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057256171 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079523404 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065250762 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059377712 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064408693 seconds)
  done (took 3.497709296 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076963918 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085162752 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091361085 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141881307 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112261505 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079345272 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080950049 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093841327 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09540951 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069423598 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073543772 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09463955 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089006892 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075921468 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070257485 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085932052 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086653178 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071824044 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075085592 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092779078 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087875343 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087217673 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093014571 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08510184 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069177479 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072628286 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073707955 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083092835 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072800612 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079034036 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072947676 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07310174 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072351927 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080943686 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072699851 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071836917 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095086947 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079884645 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080083788 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070879011 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077187248 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071561287 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093169647 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124121303 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069282215 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075615105 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073069666 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079312689 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069358285 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09479028 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080471115 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069924444 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072447807 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069393051 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070263 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072791749 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071991392 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072310654 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079252362 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074994366 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092767643 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074053221 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085661178 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069304986 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07734272 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069545417 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070774107 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069090087 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094358009 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071799285 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108926806 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070483065 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071022656 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078398942 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077406578 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076102078 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070102308 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085950059 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080176493 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074761241 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077476746 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073286401 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072548333 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097800093 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072248714 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071731546 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070814029 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075246992 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072512664 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070657173 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082099919 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069877122 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072223929 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086392877 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069871232 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071455049 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075199407 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074112749 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069479374 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080606283 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073934015 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070844326 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07911804 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069923765 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072229593 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080469475 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07560537 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069049388 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073444913 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074892393 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070521804 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071216307 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072225745 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071657497 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078117751 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075753043 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074363681 seconds)
  done (took 10.907251657 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158183264 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15030198 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074117404 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143122082 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078878047 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080717929 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14358361 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093539962 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070502918 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071531775 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070908113 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.10990111 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104799564 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115152639 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080936065 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070632348 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091764336 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113299775 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146576729 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141524637 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091874764 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078342834 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073071033 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072153698 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072466796 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079551984 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086962438 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078516924 seconds)
  done (took 4.480818409 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082128259 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102973632 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076840934 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091786156 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09250179 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069988487 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072449994 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072417878 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086763746 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080262479 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070017542 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075428075 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076756443 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072971957 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071230003 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076873243 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076280329 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071418404 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07315543 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074781685 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079573209 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093309477 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07345511 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072015515 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074946357 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06983645 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066504908 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085754619 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071370055 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.093571298 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068251029 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074943833 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082976866 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071174412 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070404185 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07043817 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070141085 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.0706523 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071894148 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069207758 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068901939 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060551475 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069667817 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080560356 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082599205 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059351129 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074452999 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075338319 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075027529 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067684043 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07327523 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072786394 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072684004 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076778479 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074036585 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075193288 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071265569 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075887351 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078318145 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069990074 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068166847 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068905011 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074451713 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067850754 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08446602 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074740093 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068834253 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070114599 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071717746 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083024925 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070146303 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075267763 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067735991 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072249375 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074627126 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071849412 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071365797 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069308956 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070666384 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070720755 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058296513 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070324513 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056623439 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072631716 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069198525 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069003374 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071065523 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074761778 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081431811 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071413824 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075868426 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071418184 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069386051 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072942491 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06312451 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072709235 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080341345 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084068852 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071134152 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068232231 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081618345 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075545599 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069402926 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059491003 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074435079 seconds)
  done (took 9.480687897 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09173929 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072211222 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083425548 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090062534 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087903024 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077101955 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079452068 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071499416 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085070492 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075543107 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078670307 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070146847 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079776541 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079087294 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07205783 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079566355 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073687542 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084584182 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083645776 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071464244 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078712808 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081843538 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090545311 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081860846 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080835544 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081946095 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091371173 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078675974 seconds)
  done (took 3.997945571 seconds)
done (took 38.92072327 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.804097411 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.945356438 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.771136353 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.095138126 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.835050157 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.798245647 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.967270088 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.767109074 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.969404912 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.805533577 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.130649395 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.881629729 seconds)
done (took 65.600064766 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.858366026 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.914413531 seconds)
    (2/2) benchmarking "String"...
    done (took 2.009460948 seconds)
  done (took 5.622578187 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.01338542 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.349062842 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.015863159 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.768125628 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.773139414 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.072059036 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.578150287 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.28095067 seconds)
  done (took 30.537836511 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.891855118 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.992279375 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.445565527 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.480757977 seconds)
  done (took 15.563217099 seconds)
done (took 63.386101711 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.779214382 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.813167437 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.772092594 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.751861962 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.825433386 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.781658101 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.227739441 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.847375924 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.770622795 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.754058547 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.76929991 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.183086688 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.783061354 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.099132797 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.766917867 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.768768861 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.789919731 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.267323329 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.924563591 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.782968096 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.781506335 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.815451565 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.768796292 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.936350766 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.796151626 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.771690546 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.174028692 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.76955452 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.386365945 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.770422344 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.800913532 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.326413015 seconds)
  done (took 204.255587145 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.769716677 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.682698624 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.780704198 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.805715835 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.115807411 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.95024195 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.882705983 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.210193387 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.775021617 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.789878458 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.949690256 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.771825607 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.99400738 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.755509557 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.797214939 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.879857477 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.944870119 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.971174345 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.806143851 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.920124259 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.791387916 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.77318636 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.725979962 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.905521979 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.78163536 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.774168813 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.792200787 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.797647246 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.962921588 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.904609933 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.811904036 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.816743041 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.960490833 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.641313359 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.779843429 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.778857232 seconds)
  done (took 169.255560281 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.965837731 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.771471147 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.770614843 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.769983478 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.776280308 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.771420258 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.893602632 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.89861069 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.396548181 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.258611948 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.824275034 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.771097852 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561261111 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.770962485 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.839815025 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.784070235 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.773527934 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.787319499 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.800562203 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.776277069 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772936668 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.900079271 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.785293482 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.77295582 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.779579339 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.774025083 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.778311739 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.14470146 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.772930031 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.788543821 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.775872266 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779811731 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.014753124 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.774666093 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.773085224 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.632734762 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.938097264 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.862297329 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.775594983 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.778882815 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.774233488 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.990733684 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.774830376 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.774167022 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.774724571 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.777383854 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924160372 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.77343474 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.898428542 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.774113341 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.254010249 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.774629175 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774996446 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.567401497 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.350728135 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.776096347 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.777497796 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.775134302 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.774542273 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.782769897 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.50019195 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.847139289 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.776422694 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.775073407 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.778705208 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.780546191 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.775140674 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.949268057 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.777193745 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.812089034 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.836453513 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.89907546 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.898087281 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.776926574 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.841036905 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.869643663 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.776236252 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.77652605 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.775992871 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.775634424 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.776409169 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.855551851 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.776114886 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.901764197 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.785358333 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.779043153 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.826740791 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.844191158 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.776310138 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618995162 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.77827763 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.776610127 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.050610604 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.842585472 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.777000342 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.776699304 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.776992107 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.902351944 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.89966679 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.49498428 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.781016398 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.505536311 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.912104792 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.778377039 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.918280184 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.778546459 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.777984437 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.859288581 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.782988144 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.780890795 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.810287211 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.778902324 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.832534456 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.778623742 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.150984413 seconds)
  done (took 402.177301834 seconds)
done (took 779.408767872 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.378184487 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.344879367 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.434639875 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.358759446 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.335464227 seconds)
  done (took 13.56174285 seconds)
done (took 15.270907051 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.866459701 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.872102293 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.803063163 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.870089601 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.799999839 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.868974822 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.851350971 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.803720099 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.835329512 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.802814064 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.838164521 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.803332548 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.79042427 seconds)
  done (took 25.516566362 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.014374693 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.02201383 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.848670904 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.01007494 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.824440114 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.016100977 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.943286108 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.932233268 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.938393288 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.795522421 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.792178063 seconds)
  done (took 22.848523511 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.041262159 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.020669259 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.855787004 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.029675174 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.827646698 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.053389734 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.947339537 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.933402534 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.934883287 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.79559249 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.793123855 seconds)
  done (took 22.943972994 seconds)
done (took 73.018701505 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.788422999 seconds)
  done (took 3.500865945 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.816557896 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.984073396 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.794547643 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.790614427 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.787153619 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.788008993 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.792968836 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.788482192 seconds)
  done (took 16.25661554 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.7842818 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.787469979 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.784648768 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.787818602 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.784748114 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.788796888 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.785785076 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.788308546 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.785700961 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.788116795 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.787809992 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.784932913 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.788148841 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.788108427 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.786775232 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.785550703 seconds)
  done (took 30.300823296 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.787542517 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.785493654 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.786019115 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.786320282 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.786002705 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.786419981 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.786466599 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.785769795 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.786438492 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.786510314 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.786419606 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.784833262 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.786029141 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.785913843 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.786902962 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.787226893 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.785794672 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.786325395 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.790731974 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.78741837 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.786900852 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.785839303 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.787624104 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.787771416 seconds)
  done (took 44.594656149 seconds)
done (took 96.364741791 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.508884279 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.654723312 seconds)
  done (took 9.880451759 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.793868026 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.790726104 seconds)
  done (took 5.373518062 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.791790161 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.790881604 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.792475847 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.790754139 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.791748448 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.791214429 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.79107399 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.7909954 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.790594592 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.791608792 seconds)
  done (took 19.629358611 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.791162041 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.791864028 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.789714827 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.791236342 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.79132724 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.789154012 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.790959552 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.791862404 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.790949183 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.788882165 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.79153287 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.789471783 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.791015218 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.79026491 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.792600769 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.789169445 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.789369406 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.789261602 seconds)
  done (took 33.946100908 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.792654487 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.792836424 seconds)
  done (took 5.302642233 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.789911502 seconds)
    (2/7) benchmarking "second"...
    done (took 1.789229854 seconds)
    (3/7) benchmarking "month"...
    done (took 1.790900495 seconds)
    (4/7) benchmarking "year"...
    done (took 1.789901912 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.790837718 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.790720179 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.79108446 seconds)
  done (took 14.249310177 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.794315911 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.9395902 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.99890592 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.466677432 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.795874704 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.797385385 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.907085676 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.79692317 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.797578784 seconds)
  done (took 20.012870196 seconds)
done (took 110.109142595 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.672024245 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.791472734 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.035089056 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.846362152 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.843778446 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.130480873 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.811147502 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.072324345 seconds)
done (took 42.921303789 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.815365176 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.485809816 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.503051089 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.924232383 seconds)
  done (took 15.633997908 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.774207716 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.077748813 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.7955319 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.63295308 seconds)
  done (took 22.003293008 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.156556735 seconds)
    (2/2) benchmarking "read"...
    done (took 2.14006422 seconds)
  done (took 6.020517037 seconds)
done (took 52.193284712 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.791426317 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.794443048 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.792912368 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.79475492 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.792446505 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.795971437 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.795028235 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.793214114 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.792523282 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.795621567 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.79533608 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.79628229 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.795371396 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795961508 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.79261407 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792580897 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794604148 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.792260131 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79305764 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.79520384 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79267854 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795420921 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.793053259 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.792823239 seconds)
  done (took 44.776166616 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.795754012 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.793946009 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.796602415 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.797039196 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.793899755 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.796237474 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.79529534 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.793584863 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.796945984 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.797307646 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793871407 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.793733894 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.797044862 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.793979478 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797650813 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.793276815 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.796734865 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793891987 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796835051 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.794324932 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.797000809 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794571075 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.794942744 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796966123 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.7953196 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.79422226 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.79800236 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.796508807 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.797585378 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.793863531 seconds)
  done (took 55.58887675 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.802631269 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.805015631 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.798897019 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.79672462 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.797305974 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.798346537 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.797709648 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.800981723 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.798003631 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.79809532 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.79970733 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.79853203 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.798735539 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.799865413 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.797435759 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.798092519 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.798348823 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.798658855 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.798620816 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.797713334 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.79817406 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.797842722 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.798670765 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.797575182 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.799661052 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.798219176 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.797456374 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.797720558 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.799030563 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.799296168 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.799157225 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.79857972 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.799358513 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.800914565 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.799816948 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.798790674 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.803812326 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.806088261 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.799774293 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.799241897 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.799457242 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.79885068 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.800489378 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.799410966 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.7996649 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.799338176 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.801076069 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.8001653 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.799883986 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.799071189 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.800058694 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.800480635 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.80207844 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.79971121 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.799688667 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.800886588 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.799804417 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.800391276 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.800015931 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.799783242 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.800405422 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.801148536 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.800795498 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.801057329 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.801080721 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.802332309 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.801089026 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.800008337 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.80101388 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.801760239 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.801613526 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.80144301 seconds)
  done (took 131.307302986 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.801001832 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.79872695 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.79915393 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.798967671 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798613544 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.80017586 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.799557281 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801215683 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799628525 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.800532538 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801866892 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.798704395 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798528759 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.802425806 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803289884 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.798943959 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.802135625 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.799924689 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.801435428 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.8023449 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801476015 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.800347065 seconds)
  done (took 41.335459377 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802300748 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.802790341 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.79952977 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.801882759 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.800252622 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.801952373 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.803344616 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.802315843 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802799657 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801155259 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800929408 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803880015 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.800102744 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800461975 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80031066 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.800624829 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803786615 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.801500294 seconds)
  done (took 34.156926675 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.801446847 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.801243323 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.803775787 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.802015268 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.80145767 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.80444164 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801280587 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.803971339 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.803687729 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.80196844 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.803428386 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803451472 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.803967228 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800686704 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804694749 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.801888063 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.805363693 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801108655 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804555633 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801394129 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.802032286 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804456251 seconds)
  done (took 41.391254791 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804888344 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.804584462 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.802171622 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.803375227 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.801537712 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.80407938 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.804909138 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.802056944 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.804734287 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.80412965 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801598794 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.805280806 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.802700075 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.803187177 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.803057216 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802859912 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.804836446 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.803329851 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805252759 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.803161231 seconds)
  done (took 37.801752952 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.807033699 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806888006 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.807438198 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.807461701 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807610803 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.808325329 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807591086 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.807876495 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.807133044 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.808013153 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.808008726 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.807715072 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807955089 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.807861856 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808854056 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808088809 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808326863 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.808847277 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.808317641 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808070083 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.80787598 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.807618081 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.808012099 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808282115 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.809112251 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.807987626 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808652115 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808480925 seconds)
  done (took 52.35468089 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806714262 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.807278865 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.803526157 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.804842694 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.805163354 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.804427833 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.805429697 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.805334063 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.807144923 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.805230081 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.808216167 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.806917343 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.807580406 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.807119623 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.807336506 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.808047687 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808268121 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.8048514 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80627888 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804905584 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.807750138 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807611097 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.808924411 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.805615877 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805787927 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.807612966 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805528833 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.806437673 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809310158 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.806196603 seconds)
  done (took 55.928218133 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.826887515 seconds)
    (2/2) benchmarking "in"...
    done (took 1.826623788 seconds)
  done (took 5.387497172 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.805941382 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809412906 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.809327296 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.80630685 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.806582227 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.809405514 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.809793539 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807729931 seconds)
  done (took 16.197843492 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.809389461 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.809461704 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.810625738 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.811662541 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.8127074 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.811907276 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.817631906 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.810774369 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.812304548 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.812679078 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.818124468 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.818696881 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.812499642 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.812383266 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.81070642 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814054872 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.81190626 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.812128992 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.81311906 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.812807566 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814223827 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.813697752 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814298079 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.810054639 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.813823717 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.821700002 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.816243919 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.811620728 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81171827 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.815369249 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.812289905 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.810509901 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.812924559 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.81287329 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.812505712 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.813509264 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819988104 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814394784 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.818728299 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.814387518 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.813018588 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.810226497 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.813520137 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.814558568 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814464354 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.814998064 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.81396886 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.810713284 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.813812912 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.816229454 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.818362685 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.814007363 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.810876509 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.817932334 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.815510758 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820597181 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.815410761 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.816846978 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.822478754 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.823322096 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.82577504 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.821602937 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.815430292 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.815341701 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.823633086 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.836992865 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.821319475 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.811865242 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.811347694 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.814449165 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.821783632 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.826294964 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.824191027 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.814973007 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.816875948 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.816780144 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.815664127 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.815611079 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.822151434 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.817475082 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.815848426 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.816421374 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.824613315 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.836317724 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.814705849 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.817179431 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.816791473 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.817201704 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.816930553 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.826434093 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.818079811 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.814587049 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.815363977 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.815599374 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.817050806 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.817248578 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.815109807 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.817350513 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.814171591 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.816439421 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.817165497 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.820451949 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.823730348 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.818262432 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816941477 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.822440414 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.816544952 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.816726958 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.82436387 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.816785779 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.818000654 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.818083616 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.822206114 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.813426543 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.821012696 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.824499498 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.818086957 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.818803874 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.817772697 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.81832127 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825721684 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.841570891 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.816653213 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.817693783 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.822608909 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.830348457 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.81877094 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.821029678 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.818669869 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.815891856 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.817544389 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.818802259 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.818574579 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.81837463 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.818629465 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.818975354 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.81806775 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.818833095 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.819439673 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.819694528 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.820186197 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.81941775 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.819691689 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.820992195 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.819867178 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.82033086 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.823918506 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.821074123 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.821120815 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.82097406 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.816013271 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.818933579 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.821110909 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.821235846 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.820960122 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.819829887 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.819787419 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.820512527 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.821163941 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.820424966 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.8191668 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.820815253 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.824340587 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.821430774 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.824277617 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.81947683 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.817844861 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.819824025 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.819688448 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.82018784 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.820414929 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.819252461 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.823881269 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.828425002 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.821189505 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.82072852 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.822866809 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.8231186 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.821079628 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.821855723 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.823385069 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.828624617 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.821344861 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.82678223 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.821691314 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.822475237 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.82136586 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.821149993 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.82089974 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.822526847 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.824059774 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.828616111 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.83361074 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.830102845 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.822759748 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.824832088 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.823668869 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.826388323 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.825388639 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.822279861 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.822323369 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.822847581 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.821884788 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.822315859 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.823131052 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.822591529 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.82221522 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.82224792 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.822714677 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.823684714 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.822851953 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.824242851 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.8241565 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.821450088 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82273952 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.823758067 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.822829283 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.820452941 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.823616956 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.822394854 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.823067812 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.824141551 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.829600505 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.819140711 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.823968786 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.823570735 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.824026959 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.823127329 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.823248416 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.826636576 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.823630203 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.829864681 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.823536759 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.823322662 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.83069685 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.82378025 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.822805688 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.826451696 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.823887922 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.820847164 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.826318466 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.832084288 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.823952938 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.825431143 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.824528921 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825185023 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.824256772 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.830898733 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.821567363 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.82406974 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.824457092 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.826672515 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.822221995 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.826094859 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.826126758 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.825409598 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.827004445 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.826086478 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.82518858 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.82611931 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.826210832 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.826186421 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.827011646 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.828300795 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.833033386 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.830281711 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.826748911 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.827047774 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.827202953 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.829431739 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.826984593 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.827865824 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.826258394 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.839823218 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.835240105 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.832217664 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.828160479 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.827166159 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.83246314 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.827357939 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.830332635 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.826423203 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.826941796 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.828064479 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.82703203 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.823779577 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.826752748 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.826580012 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828868776 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.82872469 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.83093838 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.827192785 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.827098111 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.828123088 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.82822197 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.827071646 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.827087495 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.828531991 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.829463588 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.829417706 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.826729727 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.827208749 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.833354306 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82634168 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.828042567 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.827537125 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.827859017 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.826765088 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.829593432 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.828294422 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.831546766 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.836223317 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.830840176 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.836795483 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.829160654 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.83646364 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.830083051 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.831044237 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.836495653 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.825658464 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.827973412 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.828856327 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.83065376 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.835506462 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.831041754 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.830210221 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.834104655 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.830133372 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.830527148 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.8290084 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.829927856 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.829009241 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.829600766 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.838184433 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.830808238 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.833009776 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.831426488 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.827963972 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.830574063 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.829527332 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.829484175 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.83289656 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.831352734 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.830464081 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.830290302 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.830572314 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.829260497 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.830510908 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.830133077 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.827815477 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.83027133 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.836394102 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.831117437 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.835921724 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.830471561 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.838264209 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.832014493 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.837178583 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.832567597 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.832131497 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.831759904 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.829939859 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.832295235 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.831516727 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.832052729 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.83126227 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.83141191 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.834795052 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.831107735 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.83307436 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.832420503 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.831889968 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.832244324 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.840719403 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.854361133 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.833773118 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.836380457 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.829372259 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.832934001 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.835988398 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.83218305 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.831428372 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.83471697 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842742832 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.839257632 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.83191197 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.833639549 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.833639138 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.833997381 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.832025331 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.832659553 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.833386546 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.831643706 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.833038861 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.83463466 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.836022589 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.832088974 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.834052624 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.833246115 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.834858481 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.842825763 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.832871522 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.834445991 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.833739726 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.833583018 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.834794679 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.834548701 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.833642428 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.835182172 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.833882356 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.834657931 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.84063869 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.840210488 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.836440705 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.833004102 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.834815857 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.834185045 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.834318781 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.835423715 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.834492162 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836530573 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.835583198 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.835215955 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.835159776 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.834624134 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.834451833 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.836255603 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.835342657 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83704317 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.841314486 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.836453355 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.831891868 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.835582568 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.835420606 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.834202384 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.835645168 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.842144012 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.838366523 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.845023644 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.843546265 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.840116759 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.83648557 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.838521757 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.843827177 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.8353015 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.837011329 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.836637615 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.837020839 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.83683236 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.838426219 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836731987 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.842477225 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.837242857 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.83659157 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.843836751 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.838345322 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.836531637 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.837864759 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.841098212 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.837016298 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.833595633 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.835639115 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.835562766 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.842520662 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.838257924 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.837837433 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.838331084 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.834895725 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.838077041 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.841219067 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.837513053 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.838581894 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.834495446 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.837786726 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.838037822 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.837729573 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.834192257 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.838389805 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.836549842 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.840419518 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.845251906 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.834517016 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.840989826 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.838073344 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.838607578 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.839085189 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.838615494 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.838199598 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.835540174 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.838326942 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.839150146 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.839905816 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.841029593 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.838473768 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.83965014 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.839067292 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.839695503 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.840783814 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.848864482 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.845129721 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.836691604 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.838611318 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.840670599 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.840749457 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.839584893 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.839396273 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.838596702 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.841706087 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.8388618 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.84035673 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.838265165 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.842241697 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.854474326 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.839533694 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.839203539 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.839682087 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.842729969 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.839507418 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.837405359 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.840248822 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.842038274 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.842160515 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.848218003 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.840940695 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.849271631 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.84003274 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.841196497 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.844430467 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.843267959 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.849016611 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.844658337 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.841263068 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.841342268 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.845264061 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.855144053 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.840926365 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.850007972 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.868806695 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.840884875 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.842365912 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.842450137 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.840216977 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.841042939 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.843644083 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.842501045 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.842765575 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.842328153 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.842374867 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.843216235 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.847854738 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.842880647 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.842207286 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.841484967 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.842563501 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.842828511 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.839167312 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.842277491 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.841682859 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.842689177 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.843517546 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.843760087 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.842223347 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.855400188 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.851913736 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.842933077 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.843705266 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.840146728 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.846206208 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.84535763 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.852218633 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.84881944 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.843510663 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.843645453 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.84352398 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.843756128 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.839552364 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.843871886 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.842411303 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.843562701 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.839196925 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.856113456 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.852318122 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.847783918 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.843661262 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.84399527 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.842738418 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.84428682 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.845023431 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.843640334 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.844425766 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.844750486 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.847762704 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.844727572 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.843761015 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.84788292 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.851333947 seconds)
  done (took 1092.084902458 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.841625611 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842016708 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.84220112 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.841638205 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841355131 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84179517 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841813698 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.841461856 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.842091062 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.842683187 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.841592508 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841597842 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.841738977 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.8427793 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84197321 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.840711674 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842646286 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.841817921 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.84257037 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841934641 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.840985256 seconds)
  done (took 40.447109307 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.845373709 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.842257642 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.843199885 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.845593146 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.841814405 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.845211319 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.843895595 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844957193 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.845362295 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842420781 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.845381372 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845208316 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.842598234 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.842533992 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842514651 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84443071 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.845915281 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.842939501 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.845444067 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.843972168 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846097663 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.843425935 seconds)
  done (took 42.339908816 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.847709755 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.847958077 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.846047261 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.843643347 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.847430847 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.844283709 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.848144231 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.846960742 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.846679111 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.847541072 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.846626284 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.846977064 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.853929521 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.851996795 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.850208164 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.847852475 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.990687446 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.84957566 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.849479737 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.848133453 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.845139462 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.852743648 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.844442711 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.844973745 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.846632522 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.846705252 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.848183715 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.84751058 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.848968749 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.848486569 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.852223956 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.848526016 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.847883612 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.851655635 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.848192544 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.849837625 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.852253487 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.850552543 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.845626825 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.847683111 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.858051973 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.866891076 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.849313509 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.855815167 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.848198963 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.84907884 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.851944695 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.857178449 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.84729191 seconds)
  done (took 92.524260596 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.848264127 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.849352686 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.845663817 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.848902717 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.849619531 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.849230792 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.849984154 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.849687676 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.845720072 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.846930798 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.851156774 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.847138111 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.847039358 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.849693976 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.850433381 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.84725096 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.848524641 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.847397499 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.846963581 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.847500542 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.847638855 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.849918355 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.84961341 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.847046494 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.849918826 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.847876834 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.847116841 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.850192466 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.847157904 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.848064855 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.849244137 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.849980321 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.851468112 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.848134773 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.847429936 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.850157549 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.851096951 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.847921191 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.850827762 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.848233111 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.850271078 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.850876764 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.850257175 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.850765708 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.848354731 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.848766651 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.849246925 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.848559834 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.848756429 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.850605031 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.851091175 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.849738433 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.851295659 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.849431206 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.852280397 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.852001668 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.84886741 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.848819123 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.851834616 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.849684492 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.84857124 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.850794769 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.85030504 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.852920041 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.853228096 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.850482769 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.84873257 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.8519425 seconds)
  done (took 127.527875451 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.854064117 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.855559144 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854927926 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853970641 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855687696 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.853825844 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.854581665 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.854681827 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.853919403 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.854502551 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.854612037 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.85281391 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.854473056 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.852382565 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.854590658 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.85450694 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.854594159 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.85450588 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.855495915 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85546585 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.855164874 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.855412231 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.85509302 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.855603749 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855140858 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.854934987 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.85515041 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.855711929 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855799461 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.854867907 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.856014676 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.855832458 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.856003455 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.85583596 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.856187398 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.856198871 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855760891 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855520589 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.856572613 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.856377353 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.856234131 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.85618953 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.855610106 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.856875253 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.856506233 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.856613848 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.856247665 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.856260519 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.85494331 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.856289974 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.85689255 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85658973 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855998503 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.857665568 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.856515493 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.856845908 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.85818212 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.857497684 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856771186 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.858068273 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.857676126 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.855367395 seconds)
  done (took 116.826506653 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.855429464 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.856085401 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.852958278 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.852949961 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.855109659 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.8526335 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.85482298 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.855715801 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.857161996 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.856199886 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855357211 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.85339936 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854146942 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856359599 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.85408441 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85479655 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853974999 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.853590565 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85578751 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.853930246 seconds)
  done (took 38.874200706 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.855701345 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.856783637 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.85485314 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.855150088 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.857555981 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.854393771 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.856968123 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857957267 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854558103 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8573127 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.857067067 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.857582925 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855575244 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.854853395 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.858478655 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.853965601 seconds)
  done (took 31.478450859 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.854819546 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.858638895 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.858841263 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.860058513 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.855273431 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.85635441 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.858347126 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.855852745 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.856781895 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.859114685 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.858163108 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.858696707 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.858440364 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.860928711 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.855446757 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.858472613 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.856540431 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.856178134 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.8585528 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.861104037 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.856193804 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.856098777 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.859297464 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.858450007 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.857442238 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.856915057 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.855879926 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.85604163 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.856066882 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.859253061 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.856297897 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.856645656 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.857051793 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.857481627 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.861629247 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.857225585 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.858798584 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.858905213 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.860169067 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.859988518 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.860514782 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.857487343 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.860277883 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.859971243 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.85749497 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.860192189 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.858391602 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.858197887 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.85700271 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.857776872 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.860095378 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.864088156 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.860449892 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.860774001 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.860646149 seconds)
  done (took 103.987845448 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861289625 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.861022019 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.857756273 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.86023448 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.861290117 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.858609827 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.860853692 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.858452173 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.857462119 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.861268922 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.86056613 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.861034398 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.858419221 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.861514288 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.859702933 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.861151517 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.858471247 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.858417618 seconds)
  done (took 35.260541921 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.859468526 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.859438781 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.861804013 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.858374385 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.85895616 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.861970482 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.859737245 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.861795666 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862104844 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.859438474 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860881914 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.862028742 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862564626 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.862167842 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.860241317 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86036684 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.861712388 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.862750584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.859553825 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.859522599 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.862728836 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.862755456 seconds)
  done (took 42.724895765 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.863152629 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.862365774 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.878814617 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.882598615 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.884259977 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.897371199 seconds)
  done (took 13.054205739 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860456327 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863251203 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.860158837 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863441684 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863251874 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862761572 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861438539 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861530881 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864433363 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861959329 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861161727 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864112744 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864369908 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860969063 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863714106 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865205322 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862661084 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862234676 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863651119 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864031314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862301656 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864307864 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862696332 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862390501 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862841773 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861783652 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864721476 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862675034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863005946 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864095118 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86496609 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861455907 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864969537 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861875596 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864551538 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864619494 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86306898 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864732092 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865146061 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86393559 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.866403484 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865522757 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865909064 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863020645 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864649888 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862628946 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863637523 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864217205 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862844442 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867050411 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86552593 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862845741 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866034185 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866481074 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866631052 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867377039 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864470546 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864093179 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866375113 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865801061 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864541627 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86697079 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864140922 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864143438 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866860165 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864294805 seconds)
  done (took 124.804934291 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863940921 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.864971399 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86525467 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864717043 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866094604 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864141195 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864312384 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864737595 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865056319 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864279925 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866928994 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863739915 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865103624 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866606274 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865394941 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865155577 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865622154 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865190922 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863774637 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87035908 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866841629 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866739718 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865541147 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865207268 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865077465 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869532096 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865417158 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865589042 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865723336 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865601769 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865423374 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866476873 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865930372 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.867663618 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868320868 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865998703 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865799793 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866867859 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8691959 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868470556 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866105164 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869266942 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867060968 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866149986 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867784185 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866463111 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867031056 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866838459 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866600006 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867232148 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868427823 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86832386 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867336965 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866948807 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867911287 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867283646 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868086996 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867591631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867271444 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870320799 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867182635 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868048446 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870485461 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867021556 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867745199 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868312339 seconds)
  done (took 124.986953882 seconds)
done (took 2544.871832377 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.919612923 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.890251828 seconds)
  done (took 15.601277448 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.031349352 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.985878831 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.870519197 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.87180838 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.871896404 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.890801274 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.889150874 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.872845481 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.871480853 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.869583848 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.87173982 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.058503102 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.927132093 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.874696753 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.872176254 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.965424032 seconds)
  done (took 52.391627299 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.876470921 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.877629956 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.890927154 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.880751577 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.875733328 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.889281606 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.910366493 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.878804332 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.911795096 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.892131757 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.946161569 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.889379615 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.876935822 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.928834153 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.891082707 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.892207345 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.965126114 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.954138124 seconds)
  done (took 36.023532163 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.955565781 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.878606321 seconds)
  done (took 10.63788664 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.889656642 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.915330768 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.875644441 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.89997336 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.896241384 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.88331119 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.917074071 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.891501122 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.890296397 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.883895136 seconds)
  done (took 70.742417511 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.88608627 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.880776681 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.880747148 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.880559473 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.872965446 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.876895715 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.878772453 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.876552172 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.541562402 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.916897431 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.887669494 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.885338024 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.881044577 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.881164441 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.879822356 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.904239327 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.001997671 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.878007133 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.877724299 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.887970342 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.882008107 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.937866326 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.895066206 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.884388984 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.91081196 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.543311525 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.889340599 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.887743129 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.001278148 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.879174687 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.881150278 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.880551483 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.885056465 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.294303257 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.150136665 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.881980617 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.897267423 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.890520163 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.879173529 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.996764386 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.883625978 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.887952829 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.658109307 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.125436103 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.98027002 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.9253383 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.195624671 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.901484536 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.883896587 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.912553081 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.884453729 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.885354197 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.89648947 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.375043841 seconds)
  done (took 133.006032075 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.879652225 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.230590727 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.048209923 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.87917207 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.166672568 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087550903 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.880207668 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928213645 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.881404834 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.113825643 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.135965381 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.987348885 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.881000837 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.879017588 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.881131859 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.877107366 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.039605503 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.953890207 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.881471176 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.878373362 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.912947137 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.125523156 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.003973646 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.881340749 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.910663816 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.093772205 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.00477779 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.986409353 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.674198771 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.87847272 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.94668797 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.882556608 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.879796545 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.878235522 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.039392204 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.97870997 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966853345 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.883426473 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879720925 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.879108494 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.553296762 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081879971 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.979376493 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.023664705 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.081440335 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.088792395 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.665424621 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.879156348 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.632781238 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.047791151 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.113183984 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.119203783 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.006368437 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.882890559 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.137278436 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.879441682 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.879105284 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.132565106 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.026591783 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.982333033 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.885147278 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.882937694 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.880712042 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.128923317 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.884730746 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.979025421 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.883766305 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.881422052 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.981317897 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.982155875 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.020940962 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095676945 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.915561955 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.784558377 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.421827193 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.131500467 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.950520964 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.134010935 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.884814547 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.880167517 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961931477 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.722508449 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.137883869 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.134602718 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.136623418 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.918402142 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.605746288 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.88105997 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.11038437 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.106775998 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.147407248 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.092820228 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.123775205 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.21263055 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.882339132 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.880436949 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.113940613 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.022950391 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.884338107 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.228504461 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.116569462 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.431751086 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.906207549 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.194084827 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.017678159 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.885360262 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.525898633 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.882011111 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.116551919 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.925775304 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.884275117 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.884627778 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.106669945 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.87563034 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.883627605 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.543091303 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.948747366 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.889771089 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.117709669 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.886261634 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.156760649 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.884700066 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.124705761 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.365213839 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.917674871 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.060891199 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.089003811 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.886503735 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.1315858 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.130760309 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.004498857 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.1076303 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.583579577 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.885236267 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.174815897 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.886631997 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.883765375 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.056628259 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.887387729 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.033440486 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.887658977 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.181445084 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.912672123 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.128207779 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.888165977 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.14575747 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.921846114 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.93762245 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.888255735 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.02052417 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.885945183 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.714970409 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.044405732 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.887062026 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.886605344 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.444976507 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.888699718 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.035990264 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.118772083 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90815198 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.959281324 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.554220118 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.882511168 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966520253 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.908394048 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.28056705 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.883151878 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.13991105 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.887785674 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.883268508 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.882283614 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.124595056 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.07052911 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.882759634 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.881858944 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.790262085 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.8807121 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.878015958 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.060959409 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.226603502 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.875667796 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082176862 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.880742216 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004744083 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.879618982 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.950357745 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.210980811 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.872225667 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.873376909 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.874096118 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.871375822 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.875080747 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.081296877 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.898716657 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.401804682 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.011130811 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.14828185 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.185185877 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.119759897 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.915918713 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.87220886 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.12913143 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.873220283 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.935045284 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.873547901 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.893632249 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104249688 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873777715 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.080199407 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.153535621 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.72146904 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921158415 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.870783566 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.870450298 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.871689668 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.017565191 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961702297 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.876243884 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.874286077 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990645392 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.997064531 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.086967629 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.874667799 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.933830234 seconds)
  done (took 904.77581129 seconds)
done (took 1224.972087235 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.871750789 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.873541609 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.865221285 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.872089599 seconds)
  done (took 29.282514199 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.873074317 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.870628968 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.874392391 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.870729434 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.316836041 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.871117019 seconds)
  done (took 13.472221814 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.879100044 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.86806634 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.86728608 seconds)
  done (took 21.408992361 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.940795809 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.254568628 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.975224213 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.294443395 seconds)
  done (took 10.26046474 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.873137504 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.873550183 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.872867953 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.873472701 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.87533015 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.875227953 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.872481266 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.87210932 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.874363868 seconds)
  done (took 18.65905526 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.04928648 seconds)
done (took 98.932278581 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.034326489 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.956258912 seconds)
    (3/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.045629359 seconds)
    (4/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.889934828 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.093947242 seconds)
    (6/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.954855405 seconds)
    (7/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.159624195 seconds)
    (8/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.892321876 seconds)
    (9/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.330901482 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.369030779 seconds)
    (11/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.979118853 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.909546156 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.050154851 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.911040311 seconds)
    (15/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.722255906 seconds)
    (16/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.904267045 seconds)
    (17/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.894102926 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.055762114 seconds)
    (19/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.876300506 seconds)
    (20/309) benchmarking ("sort", Float64, false)...
    done (took 5.775680173 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.918863563 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.892812263 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.120232826 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.895595475 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.893709639 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.918303515 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.288547569 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.980671391 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.985670342 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.019046081 seconds)
    (31/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.033755889 seconds)
    (32/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.906612265 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.916433279 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.916253587 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.197702242 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.068759856 seconds)
    (37/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.877822343 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.2150505 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.911796836 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.998586823 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.544790025 seconds)
    (42/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.901285848 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.355219694 seconds)
    (44/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.997061097 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.932351853 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.847782793 seconds)
    (47/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.065199317 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.113961342 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.192505158 seconds)
    (50/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.897513031 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.572457668 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.298339877 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.885473822 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.314706231 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.913940097 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.553032702 seconds)
    (57/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.883054602 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.940478075 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.329526046 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.137064892 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.605000705 seconds)
    (62/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.084552606 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 3.068663981 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.917857465 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.910110844 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.893708923 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.964494607 seconds)
    (68/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.215533883 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.078551191 seconds)
    (70/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.28267219 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.323243138 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.188808176 seconds)
    (73/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.885225784 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.406863147 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.85984718 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.921409671 seconds)
    (77/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.141789241 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.964827538 seconds)
    (79/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.976355697 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.298178403 seconds)
    (81/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.471588504 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.163914871 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.002635976 seconds)
    (84/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.096788874 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.119651464 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.301203929 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.989249521 seconds)
    (88/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.090105781 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.172808258 seconds)
    (90/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.10868109 seconds)
    (91/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.034685733 seconds)
    (92/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.988056527 seconds)
    (93/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.72195067 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.155824975 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.274396307 seconds)
    (96/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.1343904 seconds)
    (97/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.524188963 seconds)
    (98/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.092144657 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.590470515 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.138142061 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.042270723 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.258942221 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.899538013 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.92311377 seconds)
    (105/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.03086689 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.921871458 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.706024285 seconds)
    (108/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.909987638 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.993321435 seconds)
    (110/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.120766137 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.253885474 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.899934188 seconds)
    (113/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.088498663 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.093766829 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.993112795 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.922076108 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.073152314 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.921085722 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.968061331 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.251886344 seconds)
    (121/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.167591238 seconds)
    (122/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.881696616 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.303119449 seconds)
    (124/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.484992314 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.905683207 seconds)
    (126/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.054884864 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.92715939 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.075461986 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.904546278 seconds)
    (130/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.408248462 seconds)
    (131/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.929449245 seconds)
    (132/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.137983333 seconds)
    (133/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.035619658 seconds)
    (134/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.063375395 seconds)
    (135/309) benchmarking ("sort", BigInt, false)...
    done (took 7.886288793 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.930929978 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.940542195 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.180369194 seconds)
    (139/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.922888045 seconds)
    (140/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.855320255 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.965584419 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.140844611 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.184712187 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.146651667 seconds)
    (145/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.912232254 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.829158574 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.923185885 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.030324304 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.889263687 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.526722754 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.209292807 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.91974549 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.875798085 seconds)
    (154/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.6058423 seconds)
    (155/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.000635976 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.912459872 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.008795106 seconds)
    (158/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.343163377 seconds)
    (159/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.991006336 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.966600931 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.812661837 seconds)
    (162/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.085400215 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.899581598 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.278829217 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.891839607 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.045789355 seconds)
    (167/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.953247836 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.89281493 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.893810187 seconds)
    (170/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.002630715 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.176535712 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.889869749 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.309953935 seconds)
    (174/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.902428516 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.127048504 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.408696794 seconds)
    (177/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.849564643 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.817337057 seconds)
    (179/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.190586653 seconds)
    (180/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.139585394 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.17005807 seconds)
    (182/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.061421277 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.905245207 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.717417244 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.150125262 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.077917647 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.990178485 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.88643913 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.710180187 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.908595897 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.173511906 seconds)
    (192/309) benchmarking ("sort", Int8, false)...
    done (took 4.797649568 seconds)
    (193/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.086226664 seconds)
    (194/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.38302167 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.032626091 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.250068151 seconds)
    (197/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.887730542 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.064615588 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.973040182 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.555334543 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.220596702 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.195654407 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.005107135 seconds)
    (204/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.882732371 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.459023583 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.004448719 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.884574139 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.391460238 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.988757038 seconds)
    (210/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.980565499 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.130059301 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.296032821 seconds)
    (213/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.408439908 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.897846789 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.225571192 seconds)
    (216/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.805100999 seconds)
    (217/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.036916136 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.181343851 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.742998071 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.088518423 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.125168794 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.754503057 seconds)
    (223/309) benchmarking ("sort", Float32, false)...
    done (took 5.621726423 seconds)
    (224/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.384311955 seconds)
    (225/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.991975948 seconds)
    (226/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.063470517 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.801580701 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.587055231 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.884211373 seconds)
    (230/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.173189053 seconds)
    (231/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.726815351 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.910211383 seconds)
    (233/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.918245115 seconds)
    (234/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.320431518 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.881886276 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.13420357 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.950446438 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.216478551 seconds)
    (239/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.949542436 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.224817933 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.885895748 seconds)
    (242/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.962248451 seconds)
    (243/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.958541804 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.87393812 seconds)
    (245/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.00819897 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.931288909 seconds)
    (247/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.070587471 seconds)
    (248/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.140897719 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.026434254 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.976737797 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.008580176 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.893171504 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.002849342 seconds)
    (254/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.319399893 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.292138554 seconds)
    (256/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.40314519 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.874413146 seconds)
    (258/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.935059845 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.849453268 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.640030772 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.851014906 seconds)
    (262/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.996232271 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.88924476 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.958391254 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.890273389 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.987536497 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.211264586 seconds)
    (268/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.870830331 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.174777434 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.957682986 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.970339308 seconds)
    (272/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.003100656 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.887979485 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.201059535 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.43426006 seconds)
    (276/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.007844737 seconds)
    (277/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.854364942 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.068554519 seconds)
    (279/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.128928401 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.403503494 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.709118462 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.222736302 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.005018521 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.23123267 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.162184808 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.812474619 seconds)
    (287/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.28753816 seconds)
    (288/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.161081009 seconds)
    (289/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.046194926 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.639996897 seconds)
    (291/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.870241586 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.041612733 seconds)
    (293/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.161975315 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.031169276 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.604089241 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.874056576 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.048358156 seconds)
    (298/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.863286167 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.965367653 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.99375476 seconds)
    (301/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.873091413 seconds)
    (302/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.266809063 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.879738788 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.953938282 seconds)
    (305/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.353720813 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.305216667 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.100601598 seconds)
    (308/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.013428142 seconds)
    (309/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.870915626 seconds)
  done (took 1015.034452 seconds)
done (took 1016.915302555 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.902252754 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.895040046 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.879612909 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.899852558 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.99069322 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.907814102 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.889032605 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.880880105 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.927299233 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.928967599 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.877127851 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.904501723 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.881078032 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.879852259 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.879541648 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.894317414 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.195255052 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.914744683 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.89881362 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.890565937 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.897016657 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.877730466 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.930682782 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.90637293 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.884846069 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.882901989 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.883353039 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.899897945 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.991608957 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.88225131 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.883951954 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.892780844 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.195528932 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.9147446 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.877512535 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.900556528 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.893384446 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.89082447 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.884900062 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.912782978 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.282773501 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.925981779 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.884117133 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.880838393 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.881512792 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.886778572 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.881991608 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.887182766 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.895442724 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.896529099 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.274896255 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.942377344 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.884890398 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.883057082 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.89440539 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.883639368 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.885075124 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.899045437 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.902056048 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898237356 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.179946675 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.921180565 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.88507008 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.900993758 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.891160092 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.309919697 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.923425725 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.88883558 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.283019836 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.930486196 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.309638397 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.937143674 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.884819328 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.897113069 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.913800087 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.198640143 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.913482449 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.882623507 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.891954861 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.882098167 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.893912088 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.897612377 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.889717487 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.884718531 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898088022 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.912407544 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.894925402 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.884550397 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.893580882 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.904332038 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.89231682 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.896853761 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.88769802 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.880605877 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.894566154 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.888014108 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.887706627 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.886918419 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.889322567 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.892491246 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.282360577 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.941695503 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.879724652 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.884585813 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.880398467 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.896391287 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.280140456 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.92762382 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.905359268 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.92792246 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.880627277 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.177065042 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.914838512 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.895669202 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.882408015 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.879353017 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.872705855 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.173440896 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.3058031 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.93293514 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.872183031 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.871027834 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893067258 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.882927605 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.868723153 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.187533446 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.90703578 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.884642631 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.991757122 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.877405423 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.899912036 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.865202221 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.871584966 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.898379328 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.883789813 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.897456038 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.867850471 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.880262081 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.881083929 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.863814368 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.874265304 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.872846841 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.865295861 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.866995203 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.86430572 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.891056694 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.874441698 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872564838 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.881969302 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.98131477 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.859918417 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.150002766 seconds)
done (took 295.351286449 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.926418724 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.853549462 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.947728418 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.850057075 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.934131056 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.934509235 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.844137882 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.845167435 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.844174952 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.269889306 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.840491287 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.841566136 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.839592354 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.836263898 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.922468411 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.839857093 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.836277119 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.184582669 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.83967121 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.911521591 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.835864394 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.835507141 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.837534324 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.248979794 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.839886434 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.835832395 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.907369211 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.83261702 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.173731596 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.829270936 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.824260265 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.171189028 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.920875312 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.845000658 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.837641826 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.834335458 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.910794361 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.831345091 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.908049065 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.908347602 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.92663693 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.864629567 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.824668777 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.825959648 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.831701114 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.825474057 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.823638162 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.855553349 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.824322065 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.826321367 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.204322737 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.839124304 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.825985108 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.826244794 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.825947943 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.85821045 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.826062977 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.829160764 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.922689799 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.827049215 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.891637812 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.205724121 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.20740692 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.8274893 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.82754071 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.827971178 seconds)
  done (took 182.08176929 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.892780542 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.907587941 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.893588664 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.832548234 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.878474504 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.895047347 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.832508858 seconds)
  done (took 14.875333276 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.833120257 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.829022403 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.878491721 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.880414646 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.828394404 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.983651643 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.829868239 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.838271491 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.827118103 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.881044617 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.831315605 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.831051463 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.837626721 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.822064557 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.879242255 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.840853707 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.946397318 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.829007226 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.831077127 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.980920837 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.82752341 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.835490041 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.863081023 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.84087286 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.833002486 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.83577307 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.415275636 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.830374204 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.828844224 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.830796961 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.828201513 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.872149843 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.830928532 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.831228142 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.828363663 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.945500585 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.831053698 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.829031817 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.830615497 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.824178792 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.829379768 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.832277078 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.831155108 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.827518971 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.833424722 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.853086151 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.829790316 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.829878036 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.832679023 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.833188709 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.86467247 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.831263742 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.828219318 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.829413751 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.884938599 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.838740749 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.832307624 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.829727268 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.831542077 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.828514455 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.98133788 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.88083413 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.833725659 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.882054447 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.832163382 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.831932709 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.833508462 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.83216729 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.927576616 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.832583778 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.881901625 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.830269442 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.988245202 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.853169913 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.832813171 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.83488917 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.835673234 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.833117478 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.831348711 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.84110503 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.830810893 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.834819142 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.838304728 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.831549025 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.833050756 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.944649361 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.941253222 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.831061999 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.844660621 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.841444254 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.831450907 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.868422816 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.835975233 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.831199938 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890026375 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.950064991 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.891110785 seconds)
  done (took 202.009135813 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.838420334 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.842364918 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.834770211 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.850156202 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.835549918 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.833915452 seconds)
  done (took 12.783771489 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.839170736 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.837778251 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.836749642 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.837401605 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.834859185 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.83311243 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.839126171 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.836616428 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.839554709 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.835532222 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.837669205 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.834457127 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.834517775 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.833216199 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.837169666 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.838457407 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.836731827 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.833693105 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.837643655 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83589246 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.983492845 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.834368978 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.835042229 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.837410613 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.84175184 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.839640217 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.847471032 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.838954631 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.836330127 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.847211487 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.839191542 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.834677624 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.839349182 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.844706859 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.841490704 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.839295552 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.843471777 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.836622605 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.835224139 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.837009723 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.835609571 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.835277766 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.838749189 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.838913681 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.839704698 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.844160519 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.841552801 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.845793145 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.83761402 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.838353613 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.836908807 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.838794814 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.836915254 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.836970142 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.841368436 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.84378947 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.84085397 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.838109721 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.836710432 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.839341255 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.838961407 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.837709303 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.842143223 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.841914793 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.845560215 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.838146721 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.839480354 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.84299028 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.839546749 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.839355313 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.839086128 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.835333519 seconds)
  done (took 135.279189281 seconds)
done (took 548.819275784 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.015746366 seconds)
  done (took 8.767258477 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.026109031 seconds)
  done (took 8.834869655 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.408932288 seconds)
  done (took 10.17751849 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.860502341 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.868695558 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.849611237 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.837503147 seconds)
  done (took 29.207911915 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.886635606 seconds)
  done (took 8.649535626 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.860529718 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.843770875 seconds)
  done (took 15.505981599 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.854132237 seconds)
  done (took 8.613156504 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.228285475 seconds)
  done (took 9.010339839 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.846839047 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.860929918 seconds)
  done (took 15.480646848 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.819112907 seconds)
  done (took 8.575274196 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.339904287 seconds)
  done (took 11.189498872 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.856541784 seconds)
  done (took 8.715004019 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.902918754 seconds)
  done (took 8.660866035 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.937300013 seconds)
  done (took 8.696971367 seconds)
done (took 161.838788165 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.838321234 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.836002108 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.834733298 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.83611177 seconds)
  done (took 29.100914873 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.867785073 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.874337087 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.862239042 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.874160847 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.867084258 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.863920335 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.856018515 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.854905663 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.870050283 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.86272718 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.862215008 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.862461359 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.866288743 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.854320358 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.86100252 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.863352006 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.870560858 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.86377659 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.858070314 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.865651539 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.829714451 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.872836399 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.867572886 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.830552583 seconds)
  done (took 46.434824587 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.024537283 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.902627754 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.984207536 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.881300383 seconds)
  done (took 9.539309135 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.881269485 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.881819905 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.894597729 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.934902135 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.960648206 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.900527513 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.857000941 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.8516499 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.838260783 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.885284381 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.957214948 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.877934555 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.970464449 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.831962811 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.015961398 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.831028189 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.831959899 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.884768188 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.935377222 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.948397917 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.832922621 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.882828707 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.886767894 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.877971123 seconds)
  done (took 47.199952219 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.830682351 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.838277418 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.835951616 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.830555911 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.830101358 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.831077981 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.83839431 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.832477888 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.853445973 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.829754148 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.832215727 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.826626911 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.826099874 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.825687957 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.827622206 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.838824941 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.841348632 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.82532024 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.82876158 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.831455404 seconds)
  done (took 38.403852217 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.821214707 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.664253526 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.165163693 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.068114628 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.813062178 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.813070494 seconds)
  done (took 31.089454619 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.830472393 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.823831855 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.816868008 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.874263249 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.959765955 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.82606262 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.816624088 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.830456037 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.868252972 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.883070298 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.836764915 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.848525242 seconds)
  done (took 23.952493341 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.816406415 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.8122437 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.81370526 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.829809052 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.82777256 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.824312722 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.824568749 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.813957497 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.830075381 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.839066886 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.824850577 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.831499742 seconds)
  done (took 43.629908982 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902236337 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.70045777 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.455894117 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53669369 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.348625465 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023944139 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.332293492 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986090922 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.817973738 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085535693 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.367138292 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054902857 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.066702386 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815140097 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.88882877 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.274368312 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111507087 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042945049 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839322116 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.525789965 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976584523 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467099477 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.559902555 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.985674116 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06911257 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.993084528 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.119189755 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.811755513 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992791094 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895295604 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870127602 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861188951 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134489955 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074722811 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990223927 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869447295 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.515239594 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.579627709 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.854010642 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.540384477 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.532845793 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.991134898 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869551235 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865185387 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.796577974 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468383237 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046959808 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.870535321 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.566718836 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.8666316 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874436659 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95534147 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.867174572 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.680411919 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817808488 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.142799805 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.862995532 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871719669 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434557643 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936270732 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.564918877 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.812318473 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.963457197 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.587778285 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343608818 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.027340373 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.873832963 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875097735 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80564467 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.551908113 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993218074 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01629655 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.891351111 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520235309 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184363267 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.503579281 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.951794767 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166166809 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.742033327 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.815215633 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098214703 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.825499973 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807772969 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.733809141 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808634974 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142176675 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909200054 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.520686252 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91307436 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.044329628 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.884856954 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893908471 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880949383 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095041291 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.754533931 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875080989 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.373786147 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.152452699 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892900031 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.045790955 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808552137 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.877624439 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127965265 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.084409153 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.189733043 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.34817453 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034856925 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87556992 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.965253421 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.874362015 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.89022486 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.146590549 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938641487 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938956722 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012640184 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.84651312 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191669111 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911438992 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.061513509 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.440119038 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146174877 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.204187522 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.134050594 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965569324 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.886272065 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.883788374 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.614544237 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.507084974 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.108092288 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.885998916 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457595179 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.903648854 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.890184862 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820335942 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.509079972 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.466202906 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.001495969 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.109378833 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.913737227 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162301752 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820846167 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031873758 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.002143096 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.108063424 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.533270245 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.965633518 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146103802 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458154811 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.226163015 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908380939 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907428282 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006203052 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910041493 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.415975151 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.149307329 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.894451804 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.892096292 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.613229352 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.953479572 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900977258 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.898038371 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691897368 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179074349 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.922062728 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.898101644 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.824834281 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.908130461 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977890146 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.898683575 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904541615 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.424366976 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.648512439 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.909230167 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.55960102 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118037307 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902023469 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.568991733 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086198272 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.984531544 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.178193626 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967827753 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.833645635 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.603134739 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.603603719 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903046979 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835964644 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.901386891 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910700092 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913912798 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.10159936 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.178274815 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952211932 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.611862796 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.017965848 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916385101 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.909888612 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907260391 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.431434243 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.980249012 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.603033837 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922372786 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041888949 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.920557346 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840069492 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.911718707 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91157283 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.908405212 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.86083005 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958936746 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.62361886 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237617519 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163743872 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.557429784 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923671401 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.595589336 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.034633505 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.934791409 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.417606371 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.069263135 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.922126108 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019021209 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.944496544 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.600386639 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.712782026 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.505779653 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247500651 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.260987362 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382164723 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.554504506 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.159320614 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110550402 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169557643 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.463489664 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996860046 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113165966 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879814437 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024136765 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.580810554 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290445004 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949239119 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164808637 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321945855 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.505620434 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095479971 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147596441 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970906238 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.95061331 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.862886082 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.458159098 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092920335 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.522424359 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.161506854 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105437729 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.472839621 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.043774431 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.936502037 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401480481 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022708809 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.647831613 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.300318399 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.553221371 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.513183628 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309255511 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.937658192 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.381000731 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293531851 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363350148 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.033259035 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872893094 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.948838419 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.950363435 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.938536832 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.916662498 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.783425398 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.188241693 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949595138 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174858095 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.285758201 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21104861 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.888667748 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.941926291 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942299146 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236245723 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.809653355 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069785467 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.474046026 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.430806876 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948776193 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.871376148 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872153394 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.639084912 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.940390442 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912727322 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175746311 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.049977299 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.893789447 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384510936 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27937531 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.192619579 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.95254514 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.218835985 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222321421 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.674884731 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966934078 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.040373727 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.489189781 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.695566532 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.163530883 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17776829 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737176105 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.170387023 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.584254527 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.913515532 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.939876052 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156862195 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.160322576 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.505985887 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189914309 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.666746396 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.950417087 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318655908 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004737422 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.502036533 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.147210774 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.034526453 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952244098 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022447932 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95186431 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.953946316 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.953500606 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98809536 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.514503034 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.074684926 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.957441232 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032695465 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.018855111 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.530640971 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.950591662 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226294221 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306416418 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275220696 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008850329 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.943668116 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947472135 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87466622 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079438133 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.38878503 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215387524 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.07331251 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.083978999 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971072795 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.464506641 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.298647263 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267785669 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216688696 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.837324397 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944815655 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.034162876 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.164434772 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95271738 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.153010096 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184700299 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271174549 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414819342 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.141049723 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.229866505 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219691156 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.320078982 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.955241782 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.541881483 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.954298317 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.490862913 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.991254921 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.537620086 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236784619 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961528554 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169528742 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.972506327 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.152221461 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.404534233 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.674674145 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311499066 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.939151644 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.009721318 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233117934 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35282791 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269100766 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028614891 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962143168 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.650728061 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085832858 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.830183829 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.172207572 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.953268711 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163055512 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.661861578 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.961155686 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230237995 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267616382 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.951195145 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.847755479 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981594518 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.962430733 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.176613538 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22181042 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20398843 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960295892 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.954212772 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.768520212 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.229063841 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017580382 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882650762 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.954484855 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04900205 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197845984 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971075532 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.471447659 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.65541277 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256011913 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.873731067 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974513244 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434021839 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404336637 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285164424 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.488908019 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184935417 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.511444392 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.87795463 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.340429159 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.958767435 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419285136 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.342241128 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.956899709 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.522808867 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076898178 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.230726017 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.284532724 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.96243808 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.705712083 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.993530675 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176626929 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549042615 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.897375141 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.958495375 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.015914932 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.956016221 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.084240153 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965682851 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.872856213 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883489733 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.80293492 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445013666 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.959680561 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.943500294 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.468074325 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.578378787 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074033675 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111440423 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959733311 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.676777277 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.247406565 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.210080354 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.516551983 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.0370318 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.958233258 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958043208 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.882649874 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.152710208 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.154609252 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266704189 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.371975148 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.075843087 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95779472 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.16832715 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16596287 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.518586774 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111546724 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401217006 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078235267 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.883785893 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.670583589 seconds)
  done (took 1700.094579522 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.033182027 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.961298831 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.975272463 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.056824785 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.992893613 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.040522526 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.018852083 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.041537054 seconds)
  done (took 57.997457056 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.962959084 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.139233092 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.969830347 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.962514568 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.989536944 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.966065646 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.172018725 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.973444603 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.015755866 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.974215369 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.964710887 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.975047191 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.289296406 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.9901042 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.963736394 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.966221045 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.972229621 seconds)
  done (took 76.163543513 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.965135132 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.144600502 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.984115696 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.981305956 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.841930834 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.969561695 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.951006437 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.980184759 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.965503626 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.137003298 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.298326761 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.969305528 seconds)
  done (took 91.069827027 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.980093607 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.969796078 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.971462958 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.969867485 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.970489024 seconds)
  done (took 11.753087211 seconds)
done (took 2208.210969266 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.203534431 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.151518624 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.190862444 seconds)
  done (took 6.220895007 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.113517064 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.162035314 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.281332701 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.285659361 seconds)
  done (took 10.726620892 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.273371753 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.33835208 seconds)
  done (took 6.494125008 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.293177997 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.98285197 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.35310155 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.967384624 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.966379925 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.968309972 seconds)
  done (took 22.791370357 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.969154994 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.974332997 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.970358499 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.972410925 seconds)
  done (took 9.769576854 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.951871551 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.632699475 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.951777026 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.96924959 seconds)
  done (took 21.388394962 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.718704903 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.093563898 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.715058281 seconds)
  done (took 9.410038238 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.620658312 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.296323692 seconds)
  done (took 9.800047564 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.123505691 seconds)
  done (took 4.006160071 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.998898793 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.243975403 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.532451321 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.544059368 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.629598632 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.218992548 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.316162648 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.203250225 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.415957628 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.459779865 seconds)
  done (took 26.448198245 seconds)
done (took 142.769647702 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.544284585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.000511986 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.170264461 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.342938148 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.202894703 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.170936566 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.177443239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.334959202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.02079418 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.010216727 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.345195775 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.23087105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.129899547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.987308288 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.138648897 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.989403639 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.202040753 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.368758822 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.047319187 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.247813122 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.199988213 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.983358276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.173896773 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.99497638 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.203397034 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.122562981 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.524968448 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.991302794 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.153651204 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.534321752 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.124635693 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.38321662 seconds)
  done (took 171.936311889 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.973747951 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.972014735 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.969286048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.970524587 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.511159258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.970855223 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.972603041 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.969178269 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.432251669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.424988582 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.970580085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.495359557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.971222233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.970616674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.968264376 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.971517849 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.590321253 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.970648922 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.969727024 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.968954293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.970517046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.344023976 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.972254715 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.353838723 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.589388111 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.972122137 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.968556578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.970479172 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.970334277 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.971056571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.971550521 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.971506697 seconds)
  done (took 212.930334143 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.972350128 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.974140964 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.972776401 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.972439412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.990709171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.973522418 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.975496605 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.972767598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.615252265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.584174431 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.973541754 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.975914453 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.97716827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.972055414 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.972716853 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.973244647 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.972982918 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.955182403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.972024226 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.972491827 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.978539537 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.567875304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.992136197 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.598867397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.982686007 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.98687291 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.972512198 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.991253466 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.99055585 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.98746491 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.990234751 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.973197544 seconds)
  done (took 223.624295014 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.227408533 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.981320961 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.981489407 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.904187041 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.981207621 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.979707893 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.973429946 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.234384559 seconds)
  done (took 20.178115214 seconds)
done (took 630.56311312 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.420115055 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.2704326 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.163076909 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.002308954 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.242862469 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.036972152 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.000451302 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.07112423 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.627349779 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.074612155 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.648334366 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.021743 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.740663784 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.027001058 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.127360003 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.055148911 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.554415302 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.634154428 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.184634424 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.052911622 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.170695943 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.924981274 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.082587558 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.645285972 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.76083733 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.971688579 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.054368518 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.553949244 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.008311738 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.162720307 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.745087715 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.32538537 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.015010467 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.996538379 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.052231745 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.032403342 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.267323467 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.01592518 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.123117977 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.728618649 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.063781481 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.537449435 seconds)
  done (took 107.085428878 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.97021724 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.967067384 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.967063632 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.969347292 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.967862808 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.971208806 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.968914967 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.969050495 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.966821475 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.966014457 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.968444452 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.96846536 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.96740245 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.968828114 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.966810245 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.968612416 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.970186602 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.970626153 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.968071933 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.967871184 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.96874883 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.967979546 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.984909634 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.969662313 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.970048661 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.971791363 seconds)
  done (took 53.104448074 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.983680945 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.134707437 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.223845065 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.006076504 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.98283771 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.987636776 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.004480995 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.987341453 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.986996511 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.986698631 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.091516683 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.988933827 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.003373096 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.221812569 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.0015302 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.982863673 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.981020074 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.979328536 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.138121651 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.997172922 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.005353065 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.988247902 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.002737519 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.995919469 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.986180205 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.985794067 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.98792146 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.481422485 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.989472371 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.087565932 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.036466852 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.007970004 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.388240169 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.232735456 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.042208422 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.995250523 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.986175853 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.097789418 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.991651491 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.985558335 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.002698204 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.988515875 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.222651326 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.477230128 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.996374699 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.980870371 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.490893384 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.102794501 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.024568248 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.994172584 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.224066427 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.999492464 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.98395161 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.988101372 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.01800552 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.990606242 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.984698472 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.339833522 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.996989312 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.005471379 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.991918575 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.986930563 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.149213868 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.996522993 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.135565627 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.992174278 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.995980994 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.984389253 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.229590279 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.004578577 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.476100732 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.001148499 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.988060964 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.090825169 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.142835568 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.521655117 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.999523647 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.14924436 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.405997064 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.011393238 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.994827541 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.475501248 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.017010022 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.995491576 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.987167578 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.984999903 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.983690929 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.034867148 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.003234939 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.425195418 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.49015526 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.356297745 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.013737507 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.998094032 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.988899175 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.337354516 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.994191518 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.984308613 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.218479944 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.48901059 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.999964885 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.991326561 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.46829443 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.006644128 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.007012249 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.997892266 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.229847345 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.006280787 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.031204453 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.991591628 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.994272852 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.991123195 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.007806042 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.994413582 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.985700484 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.464562812 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.117263559 seconds)
  done (took 245.967800465 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.987531809 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.008066171 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.981371681 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.985318397 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.982172682 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.988791998 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.985206222 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.983201152 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.990048945 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.981851868 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.983503516 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.985311561 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.981431633 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.985136605 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.99168693 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.987992672 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.590448334 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.985886267 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.995785808 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.980518357 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.639789768 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.987670204 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.982167297 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.978646118 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.986464959 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.98503101 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.991860471 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.987709891 seconds)
  done (took 170.779733864 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.98760161 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.103132862 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.009723117 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.018573425 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.997150821 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.98674866 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.01321208 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.006270848 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.998013191 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.987329629 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.986675008 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.051709378 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.999151629 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.086719646 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.01824255 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.016725149 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.094051029 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.995281917 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.989019589 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.988235903 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.018214253 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.986230524 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.049555386 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.116064931 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.005630654 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.10786363 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.996790618 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.991086471 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.990276726 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.107501283 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.006401882 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.053096572 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.021099946 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.009112878 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.110757961 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.108940853 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.094060673 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.019546552 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.995431796 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.989298427 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.989223945 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.976647286 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.105160287 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.010950912 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.99034911 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.0930542 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.007190407 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.990214192 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.000614666 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.987980348 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.005117429 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.012005952 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.058288799 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.126424088 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.027538903 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.014140763 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.018510649 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.278583185 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.998697362 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.090025606 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.980149992 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.111109365 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.017840149 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.978485068 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.991097536 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.99936875 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.021250585 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.020780552 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.096094863 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.998777391 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.091300195 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.02483779 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.996289196 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.989738141 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.99442385 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.111674581 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.110516561 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.024492596 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.02773852 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.024849784 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.986992728 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.992612224 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.981315419 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.010887716 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.997063613 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.108484256 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.11056415 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.998306648 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.996724325 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.993696943 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.995972884 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.021450297 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.116676649 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.02935365 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.084424151 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.059664242 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.070515846 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.011241764 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.004264148 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.996192736 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.058257977 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.009088843 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.003083494 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.32421703 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.065490597 seconds)
  done (took 215.430138324 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.452793483 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.04260288 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.050220376 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.32048503 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.338490451 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.01204437 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.040968045 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.045570014 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.068852196 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.234355501 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.125855822 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.064999047 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.02952357 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.018748535 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.044025372 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.062285241 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.047121134 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.359376851 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.148163265 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.18214112 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.022454348 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.355691608 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.319669357 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.429128218 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.07961795 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.375084975 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.695440935 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.184497687 seconds)
  done (took 65.062244773 seconds)
done (took 859.321187334 seconds)
SAVING RESULT...
DONE!
