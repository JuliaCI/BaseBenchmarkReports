cset: moving following pidspec: 11402
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.314430623 seconds)
loading group "string"... done (took 0.585092332 seconds)
loading group "linalg"... done (took 8.029260899 seconds)
loading group "parallel"... done (took 0.168527654 seconds)
loading group "find"... done (took 1.210130059 seconds)
loading group "tuple"... done (took 1.867698792 seconds)
loading group "dates"... done (took 1.28336119 seconds)
loading group "micro"... done (took 0.197930231 seconds)
loading group "io"... done (took 0.992375361 seconds)
loading group "scalar"... done (took 39.347342793 seconds)
loading group "sparse"... done (took 12.230705233 seconds)
loading group "broadcast"... done (took 0.978779043 seconds)
loading group "union"... done (took 13.67419584 seconds)
loading group "simd"... done (took 4.877051047 seconds)
loading group "random"... done (took 9.198391557 seconds)
loading group "problem"... done (took 1.695290583 seconds)
loading group "array"... done (took 21.379051849 seconds)
loading group "misc"... done (took 1.619384261 seconds)
loading group "sort"... done (took 3.316718962 seconds)
loading group "collection"... done (took 17.936650348 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.555450515 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12918039 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140973465 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123992154 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152459168 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 63.14309893 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124226734 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084468559 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.876839462 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151719824 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115044476 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420881962 seconds)
done (took 68.517155132 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173472239 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088278517 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080024583 seconds)
  done (took 1.322681205 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066426871 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128971622 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068416485 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06845825 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067986621 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067488044 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067350655 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067413156 seconds)
  done (took 1.69043047 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073554728 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069736603 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066667397 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068737071 seconds)
  done (took 1.434155656 seconds)
done (took 5.858144008 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.798817693 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210110869 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189731172 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.414005461 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137628096 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.181656329 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653545188 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330038644 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.205173709 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095567015 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113731251 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.364384388 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12536492 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.651886781 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081096883 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097411398 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143752683 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437227254 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072729083 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085642288 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093304959 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131919977 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.09081357 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077464076 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152455479 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071021351 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144175982 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084360737 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069221551 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.220834421 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175895146 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660973041 seconds)
  done (took 10.555056798 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101979508 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100000296 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069190218 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126025149 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09831195 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071041272 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075883297 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068374989 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093177855 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129168755 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091636381 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108656669 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066942847 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070200646 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083670978 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197671513 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084968505 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082025366 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069197345 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079329704 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10766607 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078701113 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080665479 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080532198 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129099366 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169857665 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096756717 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098591034 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067615004 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082164254 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115829313 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127821141 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06665734 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067129406 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126034427 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095782369 seconds)
  done (took 4.657779846 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.011983284 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151379534 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090279987 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135190792 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065462834 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110330459 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068932795 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083280519 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238015224 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.369269048 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.628835009 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.148166651 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117207838 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105162596 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071210514 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069352302 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068018085 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.257471537 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099143758 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108436218 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083866111 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071334846 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069713185 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065440664 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072600626 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065018191 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069938946 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088382821 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077243856 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.333486952 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093358809 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125480438 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069014251 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.846318977 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.16814557 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068694796 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105977905 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16113789 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066131841 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094036362 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142595029 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068371619 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064995293 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.296695122 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066141613 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071878598 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067218271 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085241713 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109836419 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120136732 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066102733 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06736435 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168652801 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065208559 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081871148 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.222293034 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153056669 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069474334 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296162251 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092847253 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072208214 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065917306 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.191261269 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066254686 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116853065 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069016583 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068255319 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070040812 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068948915 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379529118 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066157044 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.931259859 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070457805 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077757248 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070914206 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072123402 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07975304 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079818466 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092021003 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068441422 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074828149 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068010454 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069568556 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068032761 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094172275 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.389881886 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067823667 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072582366 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065454647 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092780561 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099089466 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067809673 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066101403 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102335948 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070925263 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066609592 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068654386 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06390483 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118244217 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070447005 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112611807 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067778577 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.175724511 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097685297 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070221825 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101237695 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077457778 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071409166 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.46471906 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065862352 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073033032 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066838406 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067942829 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066920754 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078220833 seconds)
  done (took 21.816636685 seconds)
done (took 39.196530858 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242344752 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085721143 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083338746 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083940031 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083749566 seconds)
  done (took 1.827648131 seconds)
done (took 3.056624501 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126246152 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099405262 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064977982 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097822328 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068330099 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101497912 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100793729 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083763645 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100054798 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065099074 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097504722 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065256881 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065055925 seconds)
  done (took 2.381104033 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081985605 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083299393 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069969033 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081994632 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06286681 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082600469 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081319023 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088614395 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081211329 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072885704 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06299244 seconds)
  done (took 2.068830814 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081930635 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083623152 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069075562 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08191275 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062865299 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081933365 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082006693 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087889109 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082495791 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073677936 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063468031 seconds)
  done (took 2.062589415 seconds)
done (took 7.72793681 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075637168 seconds)
  done (took 1.279373003 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.533555826 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.61079545 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.07881192 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100565829 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193086727 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109452393 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.238620607 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083420822 seconds)
  done (took 8.326357222 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094477168 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081605117 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070037943 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07070374 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.068954434 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070238952 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069294932 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069614304 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070948426 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070278175 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070435399 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.0703979 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07049112 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0695571 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07072252 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.0693034 seconds)
  done (took 2.448423334 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097200742 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095259914 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073402963 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07521219 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07341812 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072545831 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074864873 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074588202 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071486114 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07309452 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075696432 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0739163 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073409817 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065055045 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073965984 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076670841 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071941032 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074802656 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075468538 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076361841 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075961936 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064507005 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073592205 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074734856 seconds)
  done (took 3.124779378 seconds)
done (took 16.3935541 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116175762 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078104242 seconds)
  done (took 1.404694989 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078441537 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080241776 seconds)
  done (took 1.379776603 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077400251 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062900193 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08440534 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074263123 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063517263 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063307226 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.083005534 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063575508 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063666118 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063875695 seconds)
  done (took 1.920721306 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064998238 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072604679 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069337952 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.07897779 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070575444 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064822411 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069362161 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065868208 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073518074 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063798972 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068991225 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083469543 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068732347 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085413516 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069078702 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068866507 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070228005 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067296279 seconds)
  done (took 2.498474652 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063157242 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064022011 seconds)
  done (took 1.358156259 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06665635 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064379048 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067333146 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066459547 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064081709 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.0630947 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064202724 seconds)
  done (took 1.680703117 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402240534 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122311662 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.331480947 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07068712 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080652355 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258696294 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064912764 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069770497 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06984741 seconds)
  done (took 2.740050262 seconds)
done (took 14.210181361 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080841381 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086576937 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098087097 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.411320245 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093151733 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06852584 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11409013 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181638518 seconds)
done (took 2.373892108 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220649025 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.076945284 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.488802802 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207713926 seconds)
  done (took 3.005721501 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347524495 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081088878 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076972643 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067150678 seconds)
  done (took 1.813708759 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.18230881 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070327285 seconds)
  done (took 1.490915322 seconds)
done (took 7.771792379 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065171128 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090230895 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064624117 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064468253 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.065147751 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064473717 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065071556 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06533593 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064650181 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064706436 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065343153 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064794771 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064868026 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064880304 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065010162 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065245745 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065046949 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065269655 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065242081 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065708333 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065895011 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064787504 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065311472 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065325268 seconds)
  done (took 2.858865967 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081646128 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066926379 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068470698 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06837189 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069288453 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069235104 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06876195 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067544986 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068890189 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06690837 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069528317 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069911669 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066945302 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069638524 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066779693 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069370038 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069065521 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067512067 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06701466 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069541042 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068777272 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067463283 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069793115 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069170119 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069429704 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069643746 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067611536 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067306503 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068762831 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069223303 seconds)
  done (took 3.315541879 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065951096 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061211391 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061975814 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069906777 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061604031 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062000438 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06119792 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062070586 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062219283 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061381719 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062396067 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061352957 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061889388 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061904069 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061961112 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065555479 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079085563 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061661355 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061526522 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062454349 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065792159 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061453358 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061516027 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06151791 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064189964 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061078743 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062177261 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061654867 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062321152 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0613827 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065179982 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066022413 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061700823 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06990615 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.0655589 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061373185 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065385998 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06127342 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062246796 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061347433 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061187615 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061407911 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061490605 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071768484 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061588385 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062602611 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061710555 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062502524 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061697548 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063633132 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.060951288 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060844171 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063242375 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062480057 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06626147 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061188532 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061959027 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061160582 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061932874 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061681512 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060922916 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060962816 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064880548 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062170559 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078570977 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070060498 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061166375 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062517664 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062000684 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064505545 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062864306 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.0766447 seconds)
  done (took 5.819644664 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085540084 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087137977 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066478739 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066273451 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062343113 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061731892 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069995727 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062067546 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066693875 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081572532 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062088397 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067160686 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066645204 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066890822 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062233285 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066909301 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070565978 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062745113 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062238635 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066535431 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062557913 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070202447 seconds)
  done (took 2.759622297 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146286609 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068651859 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105827491 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072390512 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070785069 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072720716 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068517554 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068213844 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068235565 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068891127 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068731967 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068133276 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071287437 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068403665 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068954535 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068971565 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068041674 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069159026 seconds)
  done (took 2.616314673 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078136062 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067364419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086950633 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067224614 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068074908 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067581254 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072003655 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07232959 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067116284 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067399819 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072598832 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067499767 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067702936 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067518598 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067323561 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068241277 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067410061 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067812648 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072246918 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07155223 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081449194 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072479058 seconds)
  done (took 2.814097323 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078765063 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067379978 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081971488 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068334444 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062420017 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062413067 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06822512 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067104964 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068386949 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066583744 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067180193 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062383996 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069605891 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067312361 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069439979 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067502662 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066424451 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067370067 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066607716 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062132585 seconds)
  done (took 2.615104904 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083507971 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065039025 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065019172 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071559217 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06552917 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065377472 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072119686 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064946345 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065310252 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085798264 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065270205 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065711756 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071508239 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069118048 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065261133 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071607019 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073828396 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071443275 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065216823 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065616352 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085812351 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065173797 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071516522 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065462935 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065233945 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065696784 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065297623 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069520078 seconds)
  done (took 3.201050146 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065298819 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064632833 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064733079 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064786166 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065210871 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065029274 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065110306 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065344411 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064697568 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065162197 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064629006 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064898426 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064643234 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064571419 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065009723 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064903529 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064820929 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.0649575 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064921659 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065137302 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064710348 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064620886 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064699338 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064746028 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065043053 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0648174 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064817653 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065383759 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064666862 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065160963 seconds)
  done (took 3.210767532 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075066372 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073340689 seconds)
  done (took 1.411472407 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063614289 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078809257 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061319775 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07284865 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070346164 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065083574 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071052623 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070890353 seconds)
  done (took 1.812014655 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085578071 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075043409 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064202424 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075893557 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075236011 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084711469 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126402803 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06391049 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07459855 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06505019 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082333017 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066523178 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074590176 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069019361 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074781436 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078510839 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061920799 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.0693517 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065397195 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062434896 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064662265 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077842763 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0739002 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062709491 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069375472 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091622483 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079883273 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063518024 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071083829 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076271145 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073911238 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061358518 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06417188 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064230963 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062154156 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074850764 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08292863 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071009004 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076209251 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064274617 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071929816 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061787901 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072342621 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07498439 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07955657 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063743197 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063896641 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062155533 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064815581 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069990886 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062121133 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068226779 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061318399 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075698767 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071405017 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079129548 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06239153 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069369939 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070026595 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070734854 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07477313 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070128711 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073598991 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063667679 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079247779 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073900411 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075943453 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061902997 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061165498 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062204288 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077946883 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091883955 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073069193 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063961955 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064268616 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061828575 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070597862 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064287981 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072751847 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074933046 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063332119 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068387412 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075595566 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068235515 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070299703 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070100617 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06196308 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067463 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064876126 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083604657 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062492361 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061930593 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064954461 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078649884 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072789839 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063079287 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064815958 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075076649 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061110495 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063982108 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064565115 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069566524 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077102207 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068369344 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068193924 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076525698 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072662332 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068933115 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07061876 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06070002 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0641454 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065607557 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07468774 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.0609174 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070343196 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067521899 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064152188 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07524277 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06189323 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06355983 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075647388 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075626544 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061877479 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061204467 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070196806 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063382067 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065932025 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076793382 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062290338 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061418828 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061586987 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072004849 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063392999 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071576872 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06825945 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070854088 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.186182195 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062687993 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068707962 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076409911 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067242634 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06966566 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074155277 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069756217 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063541335 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076518838 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070685473 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06613644 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073327572 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067904819 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061790485 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066117029 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071024137 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063070771 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072315763 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066026121 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070883226 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06469104 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062593936 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07012228 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065227775 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067776415 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070579226 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064606045 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081262672 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072727862 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063819235 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06301095 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073659901 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067186932 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064593387 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068207575 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072034913 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.063940488 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062517256 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063135195 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070385051 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071004925 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067083482 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06412565 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072876196 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080988833 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.062978687 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070462024 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063414901 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065497362 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064719048 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07820297 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074072115 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067857678 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070489332 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061192175 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073051724 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075737813 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066177837 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061951578 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066059501 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067517755 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076085926 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067178792 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063920083 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062487413 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069603483 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066736197 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070332984 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063407712 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066232813 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.06866946 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062135883 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069556623 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06436103 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077911384 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071138759 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061949235 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066210413 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062258707 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075018192 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062092663 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065103288 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06661947 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064565562 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062818225 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070173954 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061382321 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076383404 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076186635 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069377455 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066083957 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063476278 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075790844 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069724922 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071899831 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07140177 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073391109 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078659947 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066132869 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070778679 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078603877 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06359521 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060947551 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073241856 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065537313 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063166624 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062657395 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062555764 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070785883 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071071474 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073814376 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061211376 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070482862 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062243772 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066210402 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062204947 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07239075 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07052932 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067897349 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07597493 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064469143 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063923121 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071465028 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063468728 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064177129 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064812947 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070333963 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063926194 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069687834 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065862509 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069187487 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066235965 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061908751 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069842107 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063651407 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069591559 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07220088 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063239793 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069450651 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070406791 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064435352 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.199044516 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068063856 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066756693 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070884887 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069794356 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069083452 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070594882 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061656029 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075560472 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064114106 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076932218 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068686085 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061364151 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070014854 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070484512 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068479685 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064290385 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064079314 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069533044 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06316627 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07136394 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075806083 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065165446 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079177289 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074941213 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070320513 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070385882 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069168368 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069527203 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06635127 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069356332 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066240482 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071620803 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065276595 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073873136 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072580827 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070185063 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071451061 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066273262 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070225169 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065011685 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061261698 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066344448 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066134279 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063092493 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076635148 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063825242 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066484082 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062919979 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064511772 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063298706 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061440461 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071067913 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071344015 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064261589 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074960253 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066207342 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070488906 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079050425 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061578446 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062189649 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062010921 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065274078 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076326656 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064675862 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077329492 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068907269 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066433364 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061336133 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06504131 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062600213 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062007521 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062062351 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072587653 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066287095 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063547004 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063943367 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070474609 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064624589 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076694821 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063020613 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068588978 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063811749 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061492155 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066672225 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066462562 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070916902 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064349739 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065590629 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061799178 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063466975 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06819295 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070164384 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064032979 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069344754 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075977817 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063837344 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070692308 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066187358 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06175307 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070900523 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063210305 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063342532 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066364229 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071343079 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071452675 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064279952 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078129307 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063868423 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072338991 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064426975 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061832165 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063112416 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063807283 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063470466 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066508705 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064813901 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076500431 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061910475 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069360385 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068621144 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067381819 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073554066 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06423595 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069602168 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068941264 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065103587 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069843192 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07692599 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066908849 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071338213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064171448 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069229879 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073230203 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06585709 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074926248 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069054035 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063788397 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069173575 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065267546 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063698052 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06334402 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062592553 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073396582 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.195898809 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066881098 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066815601 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062402642 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069159576 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066058073 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077199252 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070450969 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071151262 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061909996 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061773492 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064578549 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065797095 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069484511 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071113048 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073742683 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07034684 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067826577 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062735073 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078332749 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07352888 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.0720967 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065342384 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071581686 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064532893 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071411748 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06995035 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070930884 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066925888 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073515928 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070431108 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066741561 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074050155 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071607305 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065157404 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07051427 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069491124 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068459438 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062207717 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064452419 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070373455 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072679537 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070762093 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064090013 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079041254 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06503127 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068712055 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066080897 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063508156 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072231153 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062822309 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071081839 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064959672 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064515128 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062269069 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066568905 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06526404 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070412988 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066565959 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062030042 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079359027 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07827488 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070185091 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063096569 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06260811 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062103223 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062069143 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066455332 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064713512 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070727826 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078846674 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06623129 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066442608 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062298174 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064268547 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071580807 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071904019 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061624578 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061983383 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066407294 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070191515 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075464373 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062858833 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064464779 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071701743 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070704332 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062135683 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066930904 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061821229 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071408411 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080389475 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064522318 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069753023 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073761356 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076471134 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06432251 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062095029 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064307487 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070364768 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069421474 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064621501 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064891537 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082802151 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070754344 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066059358 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062956282 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070697263 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066375745 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077531063 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064218308 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064252762 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072495081 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072868144 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070656318 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074255517 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074481043 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069770275 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06974453 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062860485 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06838209 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062893154 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066683255 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064833831 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064019728 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068048062 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070232417 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067960444 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079249056 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077631621 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066281458 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061291229 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066211219 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066582082 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063010044 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065187547 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062460148 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062423312 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062155991 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062900002 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069391032 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072689134 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067903873 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063867271 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063437467 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.192057699 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074387992 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070573322 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069788372 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061062569 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063895969 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064305057 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072643093 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066229371 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065369579 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070244363 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069693944 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070584193 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062246032 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075076183 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063240436 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069916808 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066380116 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06451005 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064537645 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071611404 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068081888 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064972854 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070570486 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071214907 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065876478 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062508539 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063317052 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075370678 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062993952 seconds)
  done (took 42.563684732 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10013273 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0630717 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062298269 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063003064 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072126822 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06342474 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062823473 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063573551 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063663253 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065456644 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062491607 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062621736 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069968463 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077785771 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072393837 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066720209 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062452529 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063392141 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062600432 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063487473 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070222212 seconds)
  done (took 2.743388174 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069863055 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077321588 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074483647 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079623883 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071149064 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067215397 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074948847 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067123095 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075259155 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072345297 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075496455 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067947915 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07288782 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072754858 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072799882 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0840792 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075527275 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071357016 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067654001 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07502317 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067351728 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074759024 seconds)
  done (took 2.924652139 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0636483 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062876516 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069199753 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061096834 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06276722 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061461428 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06617424 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061180925 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065073519 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065530785 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065641159 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065846443 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070088234 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061883894 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067165131 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061401401 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106932572 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065499592 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063395996 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.063852394 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061559389 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070614593 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061484635 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062252326 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065719294 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066087774 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063470754 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061694507 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.062846017 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065429744 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062837606 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061463613 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069921809 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068967757 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065425845 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06558504 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.062685822 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063340321 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062176097 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061762234 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069666899 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062102237 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066452725 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07007356 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062003958 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061402016 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069637795 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.062735732 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061440938 seconds)
  done (took 4.540013332 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074559731 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110587051 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068012123 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090461859 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076747451 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069098759 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067582883 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092461147 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063586678 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064286597 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077850394 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077566468 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065898208 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067312607 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070542957 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065644394 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066259155 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064540354 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069015036 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064877324 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068872205 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069756407 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076313809 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076858128 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066549135 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064746513 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065074217 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06677612 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076541437 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069311587 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066841297 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067678955 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076972409 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068755761 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064771605 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06483978 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077343211 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065710541 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065203688 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063390312 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064945081 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06681072 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069470104 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078093191 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065690593 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070412624 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065255207 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063027519 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076829168 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065245965 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069506244 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077980088 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066194317 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065694 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06666175 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076843458 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065456492 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063840796 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065487935 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076800661 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063588358 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066256357 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077875701 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064745577 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069242129 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077612773 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070119536 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066368487 seconds)
  done (took 6.256296624 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072152008 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093541284 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079018392 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07947762 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073016778 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073409872 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073667269 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073189224 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073652857 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077089151 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073805062 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114811149 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.0690508 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075126157 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073111765 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073404942 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073319102 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073135012 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07356488 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073183588 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073467585 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07937808 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073634353 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079387224 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076361899 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069027438 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073178465 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07330796 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079544677 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07307922 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076307793 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07315378 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073255034 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079884018 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076375078 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073387604 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063281703 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07314726 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073581083 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073173635 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0693415 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079664047 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073283005 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069452115 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073145884 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072926662 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079187147 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076175024 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075330154 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076810632 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072988117 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079257736 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072970785 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072990187 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079354699 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081865281 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079280635 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079672607 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07325477 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079306872 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079194829 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081922019 seconds)
  done (took 6.064773157 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077752954 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07006805 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081619699 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062577259 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061854317 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071854032 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062083693 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061774335 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070546693 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072978372 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0724563 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071952324 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074752843 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072461599 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072038842 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074762815 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073043982 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072278395 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070625095 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072184228 seconds)
  done (took 2.781150178 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075877185 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0813217 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067533345 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072117915 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.0672482 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07238974 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066607686 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067584081 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068018125 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067685395 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073761841 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073535427 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068301345 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072798762 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073494049 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072392531 seconds)
  done (took 2.489395407 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083167591 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070135979 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076973789 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063752732 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067527709 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062493077 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063369262 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062568924 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062577761 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07626167 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063223317 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074934736 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063228341 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062649288 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062604104 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069046694 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063150854 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.0636294 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063827763 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076459682 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07031004 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064661026 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067212551 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063293524 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068973623 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071017582 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065408944 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067115645 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063680654 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063723155 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06916346 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070274787 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06291198 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064430087 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062585796 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063358903 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063352752 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.080910366 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069025707 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063278692 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061862549 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068461102 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063514127 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064360334 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062583051 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064215112 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062395747 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069957892 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063353001 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.0688282 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063346566 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065538827 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063948026 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070787238 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066576923 seconds)
  done (took 5.016291426 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078074946 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067604011 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06239653 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061309489 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067051672 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067830366 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06782217 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067159084 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068625598 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062070461 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068262741 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067349787 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068534045 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067695544 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068454837 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067560075 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061744333 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068115574 seconds)
  done (took 2.571224618 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073241164 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066898159 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071651934 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066544069 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066612717 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066681401 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062443517 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062520761 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062371431 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067249909 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067389558 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06672518 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062584078 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066619865 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067084259 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067199068 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066463165 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062182767 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067495288 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062531295 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066534711 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062484727 seconds)
  done (took 2.806379231 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095167724 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083066383 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14078531 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079576417 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087074718 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072262418 seconds)
  done (took 1.913313643 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09222302 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097813277 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066981123 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066742588 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073072823 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07031878 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070312059 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070742965 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075023872 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075427809 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070592959 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075281686 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075323899 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077210409 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073316343 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073117871 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073256925 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070644637 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067386763 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079962325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07102513 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07540284 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070758579 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070368312 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070641946 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076978883 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075222786 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0759591 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070355636 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075440936 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072964691 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070832123 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075156428 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075566223 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067234061 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074802682 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070924742 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080155629 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073224063 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076986673 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067111544 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07322885 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075272505 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07461729 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075060883 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070916902 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075010998 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070609417 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071099438 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081584748 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072874711 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076843903 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072857869 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075233055 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074911231 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081484341 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075068924 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076563174 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072807424 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074988373 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076752556 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072867863 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076430288 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075586822 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072383431 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076536177 seconds)
  done (took 6.264940739 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103561326 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06766042 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070745125 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07530308 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076950875 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070998886 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070819806 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07083861 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071004314 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067965983 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105906916 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071346681 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077369317 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077368327 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071482087 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070816686 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071263181 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077448591 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068034951 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081770059 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070507162 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077114491 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076872597 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077078893 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075361111 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072852403 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070504598 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070313841 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070540328 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070648239 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074597021 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070876773 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076647297 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067484946 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076853983 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070963989 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070507426 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074464301 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070617033 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073047062 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077363796 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080108705 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070394813 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071116202 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075466407 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070461079 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070386356 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067593529 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070363826 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067318018 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075366339 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075305992 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075639346 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076573963 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070568662 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070666552 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070659461 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070381657 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070345007 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074322621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076707886 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070600583 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081701514 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070672299 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070777042 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076997948 seconds)
  done (took 6.255283212 seconds)
done (took 128.866682989 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208812571 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184895016 seconds)
  done (took 1.743609294 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073860843 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104106197 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082307022 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132836343 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071117671 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106217907 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104325292 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083756072 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071174386 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071045197 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071355155 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073712899 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136088517 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071642823 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071374433 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074325806 seconds)
  done (took 2.767317727 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104361376 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.165781511 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107810508 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069322281 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103920676 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076810759 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069047204 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08219501 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075944089 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071029976 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077125671 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075688504 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071127067 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077562576 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075413651 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077323415 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071156006 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077119486 seconds)
  done (took 2.899695428 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103104191 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094254224 seconds)
  done (took 1.56531667 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172100015 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134428092 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202738826 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.338653726 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.150950144 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.424142094 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.137881047 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138872407 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113731996 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134271131 seconds)
  done (took 3.3121561 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103220196 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190552744 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292831413 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120376983 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076107014 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111085835 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122108166 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081659163 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079489221 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079145587 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079224788 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078195831 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100560279 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076551721 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075710542 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078105757 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103625382 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075079013 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07589319 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076223828 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104001263 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.0700476 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07650703 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074911319 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077706327 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077683259 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071058306 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070000783 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075937522 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075890672 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07918943 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108497727 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077809527 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104041231 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074591763 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104834139 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078588151 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074234369 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075712087 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074487257 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077395785 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077201346 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077946203 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077609641 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070979766 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078315385 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070895382 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069767527 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08005483 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071223328 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079959917 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07873454 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103364918 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071131684 seconds)
  done (took 6.180893746 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107729741 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106791068 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070739727 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112014001 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104615415 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070372039 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105957483 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098837203 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107745979 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070805565 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069029014 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070880653 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079647739 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08144972 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11571628 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108060165 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073028944 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070778428 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108516821 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107598758 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06973891 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102261563 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098111334 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107268074 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068702722 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07053058 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06921837 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070725193 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075981336 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077767784 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069623303 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079075549 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083527647 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077243745 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068502835 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069202316 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06939241 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078572333 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078838181 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078000358 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077169342 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068229494 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068730777 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070382849 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070247277 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0682938 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076951606 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078415223 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077226561 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068619664 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070980562 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069184784 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070093609 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077915346 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075990058 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079178861 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078012607 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06870397 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06900624 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071934148 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080020664 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078109681 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078329903 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069785568 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079138283 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069232837 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079790177 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082482601 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071362104 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070337157 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069375959 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06897653 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069893054 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076533213 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07652307 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070292551 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069307693 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068917588 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079357419 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077371318 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069243518 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076353537 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068107286 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068952872 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070194011 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070478375 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076227268 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077685124 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070234208 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069154505 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069011657 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069048277 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068442796 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076055 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078654658 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077319519 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076703004 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070186522 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077799328 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076694904 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070009306 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077337282 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068989318 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070491577 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070693337 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077011484 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076307621 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077917351 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068588561 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068892677 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076364414 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079194523 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069069938 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.0764535 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078115125 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076790573 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068044479 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079724991 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069397113 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078047033 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069114825 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210504229 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069691556 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07813908 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069791408 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068897571 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069220541 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078090897 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07051565 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069559959 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070260016 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069635531 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077598802 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080876144 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071106304 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07691426 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077060189 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070690734 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077258721 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069458744 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078195599 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069803247 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070281485 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069136425 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080292086 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069759278 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06904721 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06927461 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078990446 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069170621 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079004286 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076756122 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068792435 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080229038 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078718346 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076577203 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078671724 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070269607 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068995814 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068703682 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068795675 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076054443 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078297308 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071050354 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069366067 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076710416 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079326726 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068718864 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077606729 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078240914 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07815532 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069511467 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069945135 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079704785 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079474481 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077120549 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077488589 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077750319 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069404895 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076748921 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077135031 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069526995 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083020051 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069702105 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081226177 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077567102 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075834883 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077694983 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078914672 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079008317 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079798164 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081708445 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068865209 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069158788 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077929397 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068959832 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069307924 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076795895 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070287122 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070361067 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081330974 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069379909 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078948083 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068221321 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077888559 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068562933 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070203431 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082281373 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069453531 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070754874 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077662546 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069636574 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076676232 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079169436 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076806992 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071660512 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070144038 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078037099 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077927393 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070011211 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069651408 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070287936 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076886683 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075927377 seconds)
  done (took 18.51925807 seconds)
done (took 38.37153311 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208352926 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152182728 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183564102 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114527295 seconds)
  done (took 2.125335449 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107059331 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098121225 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087806774 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066100795 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093359575 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065773671 seconds)
  done (took 1.919121424 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.336665975 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211134346 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.19172534 seconds)
  done (took 2.138322849 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.221180486 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.204765768 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.458711218 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281488084 seconds)
  done (took 2.661615048 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143393576 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081919571 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064259229 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.077804668 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123285753 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.174341113 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092704576 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126993462 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072343882 seconds)
  done (took 2.408743295 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145413077 seconds)
done (took 12.815397677 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.201135131 seconds)
    (2/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096868299 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072287526 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.199844822 seconds)
    (5/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075737706 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.128914298 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068698085 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066256089 seconds)
    (9/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.193457165 seconds)
    (10/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088592638 seconds)
    (11/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072666154 seconds)
    (12/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.169261253 seconds)
    (13/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.226801999 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076117074 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.096551456 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.118052531 seconds)
    (17/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070308995 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075606884 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.145451155 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125936628 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.395785285 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074675119 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.168331136 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074801478 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080166646 seconds)
    (26/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077758636 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084197846 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.126817202 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.09901718 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13699977 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.224919116 seconds)
    (32/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.181747943 seconds)
    (33/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.117279749 seconds)
    (34/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074966799 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.164518846 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113888063 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.099171223 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.177487631 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.174514572 seconds)
    (40/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077120042 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074491086 seconds)
    (42/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174419654 seconds)
    (43/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070130294 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065364351 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086885057 seconds)
    (46/309) benchmarking ("sort", Int8, false)...
    done (took 0.157234863 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092627317 seconds)
    (48/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.178157969 seconds)
    (49/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074733769 seconds)
    (50/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169308847 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094605917 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.155928189 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07593388 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09951901 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 0.066533237 seconds)
    (56/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.23226979 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072645389 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074423462 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07366106 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065676873 seconds)
    (61/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074697321 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090369744 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065429298 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074921954 seconds)
    (65/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.078721654 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191086695 seconds)
    (67/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.191252111 seconds)
    (68/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.129639016 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121789747 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06456045 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.199774885 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131058149 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065442851 seconds)
    (74/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077922852 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216471516 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195135376 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076489684 seconds)
    (78/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066444906 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.195121106 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121782758 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10401122 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087862446 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113299419 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.084850171 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.065969876 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07487969 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066475647 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09187281 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112265201 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136104261 seconds)
    (91/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.125005583 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.27209287 seconds)
    (93/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073391442 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.231200373 seconds)
    (95/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072017929 seconds)
    (96/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075786018 seconds)
    (97/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.187768694 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086615589 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066235 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090883355 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069399757 seconds)
    (102/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076539997 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072939667 seconds)
    (104/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079930346 seconds)
    (105/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.231937316 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075096256 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092886709 seconds)
    (108/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191508769 seconds)
    (109/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180779734 seconds)
    (110/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.132283932 seconds)
    (111/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078640648 seconds)
    (112/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.127688407 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074098107 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074630299 seconds)
    (115/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076952418 seconds)
    (116/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092355455 seconds)
    (117/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171848474 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135219401 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065784484 seconds)
    (120/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065488996 seconds)
    (121/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078515005 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06600188 seconds)
    (123/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075891033 seconds)
    (124/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066471308 seconds)
    (125/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.125900402 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07397036 seconds)
    (127/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069789132 seconds)
    (128/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.164414855 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.228390077 seconds)
    (130/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066150658 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066379629 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073911051 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092737036 seconds)
    (134/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.135940681 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072846118 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142876182 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080704942 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073334287 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.169816796 seconds)
    (140/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068145321 seconds)
    (141/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066673921 seconds)
    (142/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072973714 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07448256 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073879382 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06661798 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066003161 seconds)
    (147/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.078198023 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092410396 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065878903 seconds)
    (150/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064846329 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120041153 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087938803 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072601211 seconds)
    (154/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.178015577 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065583072 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142357078 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076119289 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066656056 seconds)
    (159/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072059772 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079378371 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066437978 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140858302 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173408691 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.193913086 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065908802 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066012222 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.192596843 seconds)
    (168/309) benchmarking ("sort", Float64, false)...
    done (took 0.130375436 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126859079 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06580025 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123392515 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077997301 seconds)
    (173/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.136368225 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.177697664 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073189446 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067454775 seconds)
    (177/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.124124994 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066847715 seconds)
    (179/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176395501 seconds)
    (180/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066079731 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07267054 seconds)
    (182/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074348577 seconds)
    (183/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170042462 seconds)
    (184/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.125258813 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065426449 seconds)
    (186/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066668187 seconds)
    (187/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069582908 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086881618 seconds)
    (189/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06537596 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170569783 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077154934 seconds)
    (192/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.078206654 seconds)
    (193/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.077888071 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086859244 seconds)
    (195/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074155563 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066262561 seconds)
    (197/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066476602 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077496718 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065463195 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.228891608 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073257108 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067303929 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087113134 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066220504 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072433017 seconds)
    (206/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078952411 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065618136 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065757853 seconds)
    (209/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.222100088 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.173356521 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073871273 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078468912 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066403465 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074208803 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074355533 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076261875 seconds)
    (217/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.196025104 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136294479 seconds)
    (219/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065981512 seconds)
    (220/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093656693 seconds)
    (221/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06679696 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067520148 seconds)
    (223/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066262922 seconds)
    (224/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070480604 seconds)
    (225/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.193517329 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066806579 seconds)
    (227/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065379558 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073993188 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068107508 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066664853 seconds)
    (231/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065993398 seconds)
    (232/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066387846 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070610466 seconds)
    (234/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09010057 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066479128 seconds)
    (236/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083675935 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065976469 seconds)
    (238/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.0685766 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137629964 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067702231 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088965192 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068307467 seconds)
    (243/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069514975 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.1180402 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06585318 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090368506 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066141023 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066394654 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074840615 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066585882 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065083244 seconds)
    (252/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065052993 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066395158 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066460343 seconds)
    (255/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069203827 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06631545 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.21416229 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066249636 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086500868 seconds)
    (260/309) benchmarking ("sort", Float32, false)...
    done (took 0.132930365 seconds)
    (261/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075918217 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066817856 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181027468 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066076604 seconds)
    (265/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078524946 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066671806 seconds)
    (267/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072788652 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075708158 seconds)
    (269/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074615128 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181761294 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073235577 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086538874 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066541577 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065966658 seconds)
    (275/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078300222 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13183564 seconds)
    (277/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066524994 seconds)
    (278/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069912484 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067233309 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066769753 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066617964 seconds)
    (282/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065502017 seconds)
    (283/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.077803087 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067031765 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066209698 seconds)
    (286/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06619802 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066647171 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065825281 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126167865 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06680643 seconds)
    (291/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068473266 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074249719 seconds)
    (293/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076145065 seconds)
    (294/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07795416 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.069170257 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073757943 seconds)
    (297/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067135395 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072610593 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087213791 seconds)
    (300/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065089188 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065848977 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132332988 seconds)
    (303/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080899356 seconds)
    (304/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066336974 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089863728 seconds)
    (306/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072390853 seconds)
    (307/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068254493 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06578586 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067205527 seconds)
  done (took 32.841497537 seconds)
done (took 34.255206618 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.0863721 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098577168 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073871563 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093281518 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081401452 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095931512 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074166437 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079333313 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081177192 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080215758 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078997221 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07222355 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075309393 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075475414 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073495854 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096951778 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079972473 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074412009 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074196908 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065948062 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074618079 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066161392 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.0654097 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072650947 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077169195 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072952184 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075825082 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075290247 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066649912 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066417476 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070909558 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07464816 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065948353 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078911687 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075107926 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074235129 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07573724 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078849177 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066135222 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066846135 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07552707 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066510861 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074058849 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07285028 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07055292 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072471543 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073967951 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078433291 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096845227 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070477833 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076036588 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07686118 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077461885 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072183455 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070955401 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074207798 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071839935 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096657538 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074045978 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070303101 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075431967 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075037276 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072591446 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07382645 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074068131 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076243589 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077805368 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072393395 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076432309 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073396898 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065957864 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073960981 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070599747 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066010558 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076639209 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078421509 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065179634 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070516157 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073612263 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074268556 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068584226 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07008146 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065306643 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070828575 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07046696 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072009198 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070818665 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073716432 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06581843 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074968926 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07318621 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073813274 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066212226 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078523381 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.0661324 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072190645 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066211268 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066309206 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065547854 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071278391 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06602907 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070211227 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074591993 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065708484 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070508858 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079355915 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065768868 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073243996 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065433733 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066022989 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076891418 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076390955 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065783682 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070336752 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065577315 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071564181 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065102093 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065527787 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06556106 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065764619 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070185136 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065980793 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069768252 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070604053 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077359118 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06538656 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069936002 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070169625 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065641261 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072103333 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065856017 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065426159 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064904676 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078937234 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070033114 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065433593 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070933886 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06990583 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073113158 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065037449 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073870037 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071248581 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069954922 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07169597 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06501453 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076245533 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069601325 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069537611 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064758665 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065647917 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06462052 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06551686 seconds)
done (took 12.548820737 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069165141 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.116174592 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09195417 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092056967 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082037189 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067500855 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073743484 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091237583 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067717447 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096131592 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088022129 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08836049 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109163243 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065807692 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06669533 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067514577 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067810267 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078304391 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093884917 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088916526 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105558841 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066684559 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085563721 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086637665 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083340773 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.089940616 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067378901 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067654417 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069343235 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086603001 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091390978 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069680598 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067656871 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090403765 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084331797 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079440639 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066962017 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.074957492 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067331956 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066304422 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067961205 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087348815 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07472769 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074951832 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068163599 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074469791 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068088331 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08201501 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087355574 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074937946 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082210465 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090215254 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070324868 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082453185 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065677181 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082249517 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075842585 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066629147 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066914111 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071742753 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066990891 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069235897 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077408174 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075232563 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071361228 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081088337 seconds)
  done (took 6.640529492 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083894008 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093329876 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083560009 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083555333 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066429498 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067006987 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066753159 seconds)
  done (took 2.039346936 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069840794 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086967371 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090222866 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090203675 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083284788 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090912826 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074785518 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067263597 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095238858 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066362718 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086385491 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097419576 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07085634 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078470861 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091687104 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067000348 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091092342 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067418226 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067929537 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090744942 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071454961 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093750348 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078010818 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067072722 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079305073 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067282751 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099259232 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075798272 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06846929 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068331336 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068443291 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093834243 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079074661 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078391758 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068479683 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081900031 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080694934 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070496059 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078278902 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079476556 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080614797 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068596471 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06613921 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068653576 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069862863 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078707941 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065811477 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068383181 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06832032 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086575724 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065830491 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079003221 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070535304 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072949812 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072583529 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072819244 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075104403 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069044797 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086182565 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068635558 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084224108 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08334726 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081056703 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083510567 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067135641 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07934351 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080274076 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068108044 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068917708 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068590933 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083419686 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070110396 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068515285 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07842576 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066569732 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091286202 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090805702 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066506114 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08006654 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06776209 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068784874 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078810846 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09079247 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072530607 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068618372 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07105825 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069144553 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070373683 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066077095 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07086607 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068643703 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072330353 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06823115 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070691362 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069856413 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083672602 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06660046 seconds)
  done (took 8.86106414 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069586593 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068418041 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.0694213 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067561745 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068244347 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067993324 seconds)
  done (took 1.935133206 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099084701 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068631991 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080824493 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068427627 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103805794 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083788083 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083597434 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085585819 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081664235 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079600254 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083121 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086417801 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088125236 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070194762 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083083378 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069102029 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083502516 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07234013 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079213281 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070556248 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080928951 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070003906 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070530287 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087318799 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071804679 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069500198 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077133781 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079410217 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079462687 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.092654931 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070088475 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071283932 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075806952 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085429353 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083081352 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075424828 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067818117 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074259652 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070573842 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071315551 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085583097 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0701021 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070517746 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074696481 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.088099293 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07561568 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074083352 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076347804 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082661417 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074343521 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074334117 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068974847 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071424268 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074090919 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075551384 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084999968 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074094771 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082784741 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069946995 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075547448 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067696186 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071604381 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.087147221 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070940657 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075030181 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073983722 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076171039 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070109806 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070099721 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067764595 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07379136 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067852175 seconds)
  done (took 7.034624573 seconds)
done (took 28.023296938 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.513824512 seconds)
  done (took 1.993288242 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619237095 seconds)
  done (took 2.126636652 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.660395062 seconds)
  done (took 8.16553223 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.411295964 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.642373164 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.743164933 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134751405 seconds)
  done (took 3.473610366 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.695103107 seconds)
  done (took 2.211002701 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23354509 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223941735 seconds)
  done (took 1.976214764 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347278487 seconds)
  done (took 1.853644638 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.052674079 seconds)
  done (took 2.559844593 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.251336441 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.169252778 seconds)
  done (took 1.930853866 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.442419363 seconds)
  done (took 1.948639581 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.237355922 seconds)
  done (took 5.745642696 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217071942 seconds)
  done (took 1.762005613 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233900322 seconds)
  done (took 1.742743081 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.735651701 seconds)
  done (took 3.246725564 seconds)
done (took 42.255998612 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083398389 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085453252 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085408841 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081516579 seconds)
  done (took 1.82975448 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075302779 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070967345 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074495218 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070652107 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074669754 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070920783 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07273259 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073558706 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07093985 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071338025 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071180673 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070856586 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074213908 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072567877 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07032652 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074934321 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075073663 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071549711 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074031389 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07133431 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069399066 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074083351 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073682502 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07026361 seconds)
  done (took 3.251669325 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078894773 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073544321 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076522147 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072061864 seconds)
  done (took 1.818746955 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076943823 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088071401 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086711421 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077708534 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089099023 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084285397 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067713833 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067427545 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068781801 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077850095 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067113007 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093247261 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086440743 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077127982 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079335139 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063973543 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.0657269 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085281211 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077945409 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077819782 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068924055 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077331589 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06682075 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087247644 seconds)
  done (took 3.373199512 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086616853 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066850429 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086345155 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092602682 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093901776 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066629915 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085085293 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094227072 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141795146 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066692225 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072582505 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066754325 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105200409 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067126344 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086008893 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109905477 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113096876 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070882012 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099413422 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069447359 seconds)
  done (took 3.262964618 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083834293 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070466102 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070914081 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066178631 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076992916 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073486794 seconds)
  done (took 1.970543257 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069093546 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068830558 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06792673 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067852149 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07320956 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067937666 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066699383 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068617281 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068533658 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068167366 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067558248 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066875133 seconds)
  done (took 2.345999415 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.195016908 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069897201 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072614569 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067251609 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072800423 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067461924 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082738159 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070146191 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094437825 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067855704 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067899116 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069856287 seconds)
  done (took 2.521220608 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191690117 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074505073 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221650417 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144842841 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102663504 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110064319 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111176929 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108177685 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133584602 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097624455 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153602535 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159587665 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103768062 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129463647 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08767639 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119973674 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144879153 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156328826 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099731786 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154166503 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135554194 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122768522 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141782596 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096901429 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101806832 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113057016 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072117046 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077186164 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15854588 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123155965 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135648303 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105397181 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090219945 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165788081 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161510251 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132556622 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141785695 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081838487 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.118213269 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129091721 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193478151 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08768747 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151707699 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103763895 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078386428 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125458813 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111561614 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117707997 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101818966 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087820722 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275286398 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173173712 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127664187 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083968793 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116729582 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105096439 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109880345 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11387644 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215818014 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149719475 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121444628 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.06982467 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106823823 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142405685 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12561367 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104874016 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117934122 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089880679 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125530499 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151617038 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135602645 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133288444 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.135858265 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085307801 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114954514 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130748213 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123034529 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162725421 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118128546 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071888878 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115785873 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095791965 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078654157 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142259247 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07410128 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164894685 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096597364 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121765092 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125554421 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105157852 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105230466 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149639043 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134276489 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101281109 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084673493 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099611326 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114531809 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141960344 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085004195 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10494913 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110487461 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078388232 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128421699 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073582141 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116081996 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093648341 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115159306 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267278777 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079134924 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119032288 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100656493 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099665457 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126149651 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148918291 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085894963 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078855098 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15706563 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116278584 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100086742 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134589074 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149287262 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117480632 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094297613 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137794736 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164052489 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088192424 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15286944 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099710547 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081885016 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103327891 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117985134 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106785072 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118097229 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079525304 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115573563 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157930651 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072645134 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093582156 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126989596 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079489331 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078745186 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101150896 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100542736 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094190975 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098710899 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10150813 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130701068 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118166789 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102686397 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119135153 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097195825 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155948306 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085475749 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100026233 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101136887 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071385327 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12626867 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147118429 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076835082 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150974762 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117029057 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111559089 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114156896 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081988915 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13045681 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077519314 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071240572 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133795279 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.256481152 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106243849 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143995601 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110143051 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118496398 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115486046 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125387471 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123225297 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123092501 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110015999 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086686947 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110524065 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15885145 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071512208 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089223664 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080276645 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099264775 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091188703 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081647262 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131831068 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119075369 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106483958 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11096909 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094108029 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141464686 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077528991 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119314391 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117836132 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092591935 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145708998 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143901312 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126068744 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098361664 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129717949 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072167523 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073444265 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087563946 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118179924 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081956566 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081820114 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108852919 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142100913 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123896545 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129362701 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118709249 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114916569 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148680543 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071749492 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116534352 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135852427 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115875139 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101635718 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088415197 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095790946 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135471962 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099941783 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198628268 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109777564 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119131234 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297817735 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100047448 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078641488 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101737641 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125374767 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098297276 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13546174 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095942327 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084269274 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103020639 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076578901 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095792047 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12947843 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112411606 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129429595 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.10875151 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122833922 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076524159 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107508222 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117912896 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118033055 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082023317 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115044447 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157515418 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101679854 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11231781 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142957389 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077334846 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134655282 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162424505 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136290777 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082480013 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101015967 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116458255 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120123925 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116625598 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130999942 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100742092 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129991883 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10728976 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083107064 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084541137 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093027415 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100141486 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108886105 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100534712 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110360366 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093205638 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129966501 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099598493 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107346751 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113200729 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097555056 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09329475 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09344554 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16419941 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113508653 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158782338 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09753536 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135489775 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298903231 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074446712 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078014603 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079965317 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131119959 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082935649 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125692033 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109145901 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112013143 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117473751 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130106676 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093753602 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070185492 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10534446 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126589114 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117602476 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093623761 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099872326 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153331713 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114527337 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076856776 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108174901 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111814847 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101187989 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16453981 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079989238 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106261507 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075752273 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078673484 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121281503 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14360534 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081223036 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101113384 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115214665 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106937412 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120690139 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09503273 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107864994 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125628278 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138903537 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121286353 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087659486 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106715185 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12277861 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144421347 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100198265 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097914021 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164487689 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142659661 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151972097 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085079898 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110190397 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109807527 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105570681 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12827652 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082023087 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151166661 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079677813 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126761776 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097540809 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087496338 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272701809 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110256656 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086652489 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140598001 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113297737 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080980793 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079472948 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107170947 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113917946 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099011137 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073864648 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137349542 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072451527 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127262153 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159512211 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078291041 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102222155 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093395846 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08064254 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100000351 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098022138 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08364012 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097140493 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160705045 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085530822 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143844751 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126897878 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109802399 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130363156 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100534898 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643033215 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078163395 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142790681 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111198114 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169780394 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095643118 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113247681 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107108709 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1155614 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134282925 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098348091 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175357771 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123464483 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113290299 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077006162 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098919173 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099568771 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086243656 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103036457 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109229023 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109338029 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092368912 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113034691 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116198885 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080459504 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09360556 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146126054 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111334671 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141140257 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.279784526 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083455453 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114038183 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127841627 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079322564 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.114077825 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142410964 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102212665 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119696133 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081202756 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097295498 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164285246 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.0714309 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149264378 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114907973 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106551694 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111809484 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.10638983 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124001774 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09962552 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116447687 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09084392 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14162494 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110215621 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082170194 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077884385 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102555747 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106971046 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095578235 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095230948 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097036691 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142734709 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071180731 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09510479 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11080434 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141367696 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161025029 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102664865 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081666853 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11646413 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152407468 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109991044 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116120445 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079632222 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079315703 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07971623 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099001175 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120777843 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109866708 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114536151 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108598827 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15178184 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082114799 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223070033 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093084 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101933949 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087455649 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07850667 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0934663 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093599139 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10023916 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107717058 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313294774 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093886404 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088461614 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090847415 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074392116 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081610346 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120061398 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106689925 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112618743 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117992891 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.0810443 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100122847 seconds)
  done (took 57.286538901 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.117983799 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.097271034 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097720096 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.1433961 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121850158 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199416439 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150749835 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189286347 seconds)
  done (took 2.73440436 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068664218 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095756059 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104203554 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082923241 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06737276 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068641884 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225382173 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081523795 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067397214 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091366496 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078048316 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06942592 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.456366311 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06686724 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068551244 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076995025 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068182058 seconds)
  done (took 3.443349697 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.383442688 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613794332 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355416724 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076897122 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.990402395 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090315104 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.212696307 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139549475 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082548282 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539449508 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365303384 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134103804 seconds)
  done (took 18.601168461 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083253931 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077081631 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09110829 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091386549 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079071 seconds)
  done (took 2.034980868 seconds)
done (took 106.038558488 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082268776 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.441742489 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069737942 seconds)
  done (took 2.150432868 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091320831 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.09028374 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090275905 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08712202 seconds)
  done (took 1.98217039 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.0756221 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077190809 seconds)
  done (took 1.766501122 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.208940212 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176001221 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098007643 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083460319 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081315483 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08203124 seconds)
  done (took 1.864439538 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07311221 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073165508 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07345288 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074235395 seconds)
  done (took 1.906679018 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069147527 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067256986 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069163369 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072183081 seconds)
  done (took 1.891451291 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084765251 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085266898 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080287805 seconds)
  done (took 1.865165672 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101410429 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091810907 seconds)
  done (took 1.808021873 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08192912 seconds)
  done (took 1.696598494 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091242414 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100330524 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130225704 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11519534 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13663417 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115392007 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088997139 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086529554 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079589503 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092772498 seconds)
  done (took 2.650554656 seconds)
done (took 21.759371593 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079556606 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370062668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.3602635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091295624 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668632061 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357783906 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987872185 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093545128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143475476 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07009113 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086756561 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650897564 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980183299 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332186543 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967381951 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330282019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653969635 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069476424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068542267 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070250361 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975055215 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068831291 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069700707 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069377026 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651717736 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375656808 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071059678 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326597483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069603828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073947057 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35897146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071030764 seconds)
  done (took 16.212440597 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070948891 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122680153 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073431935 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085317095 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071434978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070804965 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072502068 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069803842 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123117607 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069822183 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087622324 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06933494 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073418623 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070621486 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09001051 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06925469 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072956588 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070586086 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07018969 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071564643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08869821 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069784363 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07128806 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073463359 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070615884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084016432 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071666633 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070306252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070406828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074446767 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075698384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071649438 seconds)
  done (took 4.097991383 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117441917 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12675979 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074525687 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107249909 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113254148 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071297713 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147639836 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094326948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13012917 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069981585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087279548 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069499903 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105118222 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071457023 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091501698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070736261 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073041812 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070744861 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070016044 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07090974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089440823 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070067175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070925975 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07089645 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071593638 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085268438 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072052762 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071133414 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070372276 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07503839 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076056884 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071855881 seconds)
  done (took 4.357617782 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071330321 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073669082 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081409075 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082513519 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068659493 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070818234 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072094657 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06850765 seconds)
  done (took 2.220725396 seconds)
done (took 28.513073906 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07882901 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068442935 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072159793 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087557116 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074470572 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079924393 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066185493 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075466084 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072353379 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072804704 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075035909 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068152377 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071180711 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066795676 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073429661 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067414346 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081855345 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071436993 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081134843 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081396153 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070401718 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073997648 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076143945 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081556693 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081988873 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081618196 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07770641 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073795559 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068755765 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071296573 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07119188 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080208124 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081735536 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081836364 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068266705 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.0687045 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072633407 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069643967 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082694908 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077259421 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070004241 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077602349 seconds)
  done (took 4.749296024 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084927846 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089617519 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083505972 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080185847 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091345509 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083170735 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087375542 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078546226 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078139244 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08644932 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074735531 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081739794 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079381588 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073081388 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077600459 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075432978 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080073419 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074475518 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078019872 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078448847 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08784873 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.074056451 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088097675 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079823422 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075490082 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081865703 seconds)
  done (took 3.744705955 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07416909 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086260095 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093323819 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144219117 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112193381 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08074565 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082333584 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092642711 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09708738 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069252499 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073930604 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093148106 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09397917 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075069947 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069387928 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085374673 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08455156 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071202828 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075980851 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097672393 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089861702 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086484332 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094989999 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085692699 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068566439 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071777942 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073433198 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087717453 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071599079 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079991897 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07166605 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072561092 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070475782 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079699428 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071175203 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068166956 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09311509 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080102534 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081303847 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069289758 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078503149 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069746016 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093902498 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12913301 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067874555 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07279652 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072962295 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080602856 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068291796 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095757832 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080696901 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068274326 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069278694 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068003068 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068043691 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071219368 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070496104 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071103467 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078363598 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07557489 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090187497 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073531482 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085800005 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067824061 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078844808 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06785205 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070351926 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067814893 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097055598 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070279475 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113113291 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069436119 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067203608 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079496586 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079309193 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075101067 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068190814 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085897969 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079995609 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072894114 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077099909 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071617035 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072361477 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099305075 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069110609 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068082814 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067503092 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072352572 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072256548 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069590042 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080617901 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067932341 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072231802 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086291414 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068858815 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070072257 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072288399 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071348388 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068222452 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079587083 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072632971 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06975636 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078958365 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069298682 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07231953 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081973463 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075724099 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067439435 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070807602 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072420036 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070181064 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070070584 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072155046 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070700782 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075464073 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075464567 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074165492 seconds)
  done (took 10.790885539 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164520584 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157190155 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071353224 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149344748 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07728155 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080917603 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151610358 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096164538 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069115241 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070839959 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069286528 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11080929 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106016489 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116808438 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082052568 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069746515 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092180902 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115236461 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154222311 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148389868 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091508349 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077205801 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07222144 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071226444 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07145383 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078669724 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086248552 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077696974 seconds)
  done (took 4.458708908 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078194168 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103978933 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073424197 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.0920083 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089097875 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069487772 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071070297 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071024363 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085825165 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078348169 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069555487 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074855772 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073539606 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072899515 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070138257 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075938325 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076537373 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06859294 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073278045 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07493852 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079676703 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094111651 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072706564 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068807388 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072291293 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069075433 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077214368 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081688132 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071815903 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105407306 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066963095 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074262772 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083700574 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070065287 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068860726 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069503907 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069534962 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069501439 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07064598 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06815642 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068393957 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073183 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068055348 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077249429 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082269767 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071206622 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071569701 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072034921 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072357874 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066740257 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072211324 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072205324 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071911596 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076702858 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073600135 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072180902 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070348426 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09612013 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075913915 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069022646 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068345198 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068243054 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071712478 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079028759 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084933732 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071641575 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068042177 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069365736 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082271102 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082164881 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068797681 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073900415 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067159975 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071350963 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071943947 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071878804 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070485867 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068118689 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06902789 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072335635 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070563133 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069235996 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068495803 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072016378 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067557184 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068073654 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070207436 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071065982 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07781847 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06895056 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073123062 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07039732 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068163611 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072077093 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07455098 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072564739 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079724037 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080252969 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06967491 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067796174 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083708047 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072086961 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069110092 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074880735 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074130619 seconds)
  done (took 9.441762741 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092040389 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069589979 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085593715 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092457771 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079242965 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075209501 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079767173 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069090695 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085488528 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074294513 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076775242 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068110898 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.0800456 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079110926 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070175149 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080161906 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073231672 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087006824 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084028728 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068311919 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078097565 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081654438 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081086718 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083564081 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083284281 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084420672 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081153061 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079151567 seconds)
  done (took 3.905772682 seconds)
done (took 38.718388324 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.733793524 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.881765113 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.708224439 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.889881764 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.839445524 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 80.354020969 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.863610421 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.701642163 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.030486149 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.751297967 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.037642955 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.936616574 seconds)
done (took 138.514823642 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.761836517 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.853837974 seconds)
    (2/2) benchmarking "String"...
    done (took 1.951200869 seconds)
  done (took 5.446889947 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.902951336 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.413007845 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.945351449 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.699232354 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.707510932 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.954485882 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.467894058 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.150057572 seconds)
  done (took 29.978994052 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.915255278 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.926589612 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.411370645 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.448646781 seconds)
  done (took 15.38958149 seconds)
done (took 62.217741954 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.714042842 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.703556395 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.742057505 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.700956272 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.794504143 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.719932193 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.810559974 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.95060006 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.702598226 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.708463504 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.705535324 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.124907633 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.703946823 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.821575367 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.707662167 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.703411242 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.791459823 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.173992106 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.856155558 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.712198321 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.725209204 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.741941433 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.706759779 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.706507859 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.747527866 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.703304651 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.088624875 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.716264386 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.527616497 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.704229499 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.753796397 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.011910419 seconds)
  done (took 202.624085601 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.702275497 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.927652713 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.985431614 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.70821485 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.361538453 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.893486726 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.799857057 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.49152098 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.704790737 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.731788608 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.996293535 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.70177593 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.032726065 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.650649282 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.740738589 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.733536291 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.96695694 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.017220381 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.742410908 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.850630158 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.707888531 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.922234814 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.878581719 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.952445717 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.747594702 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.73848168 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.728243015 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.707504101 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.887449551 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.923892851 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.713228897 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.731341671 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.902713517 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.574103625 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.706031591 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.706707065 seconds)
  done (took 168.911779688 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.886226213 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.704558945 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.703965105 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.70490431 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.709691494 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.703132857 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.826121506 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.833845024 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.358662417 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.033881765 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.760841039 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.703805087 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.474998686 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.708526875 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.769191624 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.717005291 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.705149763 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.718959967 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.731420389 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.708080221 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.707055152 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.828200706 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.719941791 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.705959384 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.715520876 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.705887051 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.711538157 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.092364288 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.70488758 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.818916872 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.70561023 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.707868243 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.711143448 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.94581578 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.707373394 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.707380114 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.520102081 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.298912222 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.708937756 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.786478852 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.707902065 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.71070143 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.705406893 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.923297257 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.706904553 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.707198712 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.706096546 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.707092987 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.811772907 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.709029553 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.827880113 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.709978147 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.176790903 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.706748099 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.707933521 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.92725473 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.259183047 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.70967144 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.708875261 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.708623383 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.708530665 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.713191983 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.133531541 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.707947098 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.777040576 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.708063619 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.708564095 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.713269617 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.706375136 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.896518328 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.709466612 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.106218058 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.722814619 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.827167423 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.829348536 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.711659877 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.771996791 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799594716 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.708609573 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.707574956 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.707134871 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.707680747 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.788711431 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.707905824 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.786390028 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.718659239 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.70951165 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.762203408 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.776940691 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.709086966 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.517134675 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.711642592 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.708164025 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959324594 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.773045974 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.707463282 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.710410763 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.70806311 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.788184139 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.836044992 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.412390274 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.711196711 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.015063737 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.783506668 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.711530831 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.818729755 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.712982835 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.78792843 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.716414418 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.710115351 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.745075829 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.71076325 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.720669523 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.709194302 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.081862541 seconds)
  done (took 392.397870011 seconds)
done (took 767.522400851 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.316523552 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.279459809 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.372369442 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.298534341 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.271109793 seconds)
  done (took 13.186568565 seconds)
done (took 14.836278653 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.787542641 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.794909498 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.728564682 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.789712096 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.725309472 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.790082122 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.774473472 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.731870641 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.759364485 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.732926042 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.761550285 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.732121055 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.717270537 seconds)
  done (took 24.476473641 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.936513861 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.932295433 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.781879014 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.94331068 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.755156442 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.937280221 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.861219654 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.850345139 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.853411851 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.721457674 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.72269347 seconds)
  done (took 21.947411398 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.945871402 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.94811903 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.786970238 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.945057305 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.757554617 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.946239966 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.867985597 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.8571662 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.849964113 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.721166542 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.718542285 seconds)
  done (took 21.997611858 seconds)
done (took 70.073311757 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.714929604 seconds)
  done (took 3.366283339 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.734056106 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.887098575 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.71471166 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.715262631 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.7149996 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.715149346 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.714671317 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.715059882 seconds)
  done (took 15.563703832 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.714606443 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.714308854 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.714850012 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.714566854 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.715273758 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.715055255 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.714157597 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.714755746 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.715084863 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.716290496 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.715540393 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.715334464 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.714319215 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.715114364 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.716039756 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.715639106 seconds)
  done (took 29.094466126 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.718345603 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.715215995 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.715951829 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.715142369 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.715804199 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.715741759 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.717288701 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.714633026 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.715959769 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.715107834 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.715579016 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.716138828 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.715908381 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.716565299 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.716280813 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.716079561 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.715176565 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.716045973 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.720756431 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.715599396 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.716541284 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.71651952 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.71475989 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.716838673 seconds)
  done (took 42.842991866 seconds)
done (took 92.518617102 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.410217754 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.540876296 seconds)
  done (took 9.604033029 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.719678934 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.716224249 seconds)
  done (took 5.163069581 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.716501306 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.716382509 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.71658853 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.716501347 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.716978374 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.717001483 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.717269941 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.718011189 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.718342964 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.717360926 seconds)
  done (took 18.825264084 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.716321944 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.718027105 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.717342235 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.717816577 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.717528985 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.717853747 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.717916496 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.718076625 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.718145356 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.718288893 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.717907768 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.718819047 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.718491183 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.71940376 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.719381725 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.717891136 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.717548007 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.717823897 seconds)
  done (took 32.580659795 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.717145884 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.718991459 seconds)
  done (took 5.091477995 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.717496942 seconds)
    (2/7) benchmarking "second"...
    done (took 1.718637091 seconds)
    (3/7) benchmarking "month"...
    done (took 1.717896626 seconds)
    (4/7) benchmarking "year"...
    done (took 1.718662381 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.718606037 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.718778769 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.718254788 seconds)
  done (took 13.684106513 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.718947984 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.881511605 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.946519375 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.387827884 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.720281075 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.721958705 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.653999488 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.72111528 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.722369141 seconds)
  done (took 19.130440538 seconds)
done (took 105.73425049 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.56809124 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.718211201 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.994379026 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.854880651 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.739422775 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.718777908 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.739548507 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.003687395 seconds)
done (took 41.994943825 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.789134684 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.399012979 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.417674702 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.751345086 seconds)
  done (took 15.22511447 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.724660795 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.022965359 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.744364605 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.557580303 seconds)
  done (took 21.710534468 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.085295171 seconds)
    (2/2) benchmarking "read"...
    done (took 2.069597844 seconds)
  done (took 5.817513223 seconds)
done (took 51.201364992 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719231335 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.720591512 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.720270561 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.720077063 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.720540174 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.719879321 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.720315927 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.720108488 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.719925467 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.719988906 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.719938395 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.719717754 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.719595461 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719274823 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.720961458 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720766004 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720909446 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.72017262 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720908386 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.720855268 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.720765504 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.721056486 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.721106878 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.721448701 seconds)
  done (took 42.94641 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.721444305 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.72071294 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.721379601 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.721179007 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.720405628 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.721419964 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.722274826 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.721339019 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.721686751 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.721872881 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.721238418 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.72173315 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.721827559 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.721741278 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721518756 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.722487719 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.722066546 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721565778 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722282761 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.721743936 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.722509596 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721628667 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.723261639 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.722610007 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.723400517 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.722843304 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.722828112 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.722198489 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.721575822 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.722560663 seconds)
  done (took 53.317508571 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.722697366 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.722057069 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.722646901 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.72270233 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.722468835 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.72215129 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.722988394 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.723168872 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.722354557 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.722804077 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.722670267 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.723240916 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.723160924 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.722186313 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.722589766 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.722739367 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.723653056 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.722958123 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.724140253 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.723380935 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.726134311 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.723738093 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.724286269 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.723989187 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.72447977 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.723571412 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.72338895 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.724285464 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.723367055 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.72485548 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.724209657 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.724319084 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.723004228 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.725078325 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.723873633 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.722582492 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.724897455 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.723693612 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.723889037 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.723989137 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.724161477 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.724470316 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.72440138 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.724254811 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.723476679 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.724900922 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.724562212 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.724607446 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.724422195 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.724157045 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.725275929 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.725835935 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.724670738 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.726079887 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.725258149 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.724502866 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.725969529 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.725325981 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.724767028 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.725239829 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.725323063 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.725487551 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.725606659 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.72534375 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.725653804 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.724843179 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.725734501 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.724678326 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.726092309 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.725630547 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.72568271 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.726441885 seconds)
  done (took 125.803963968 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.726204185 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.725827982 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.725737758 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.726301183 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.726451401 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.725100862 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.725634647 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725992625 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72597665 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.726677274 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725437289 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.727211564 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727381134 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.726210332 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.726970094 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.725033268 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.726710022 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.726431985 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.726748347 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.727119154 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.726468128 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.726677407 seconds)
  done (took 39.641263989 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72632242 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.727720247 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.72646524 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.726785877 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.72711344 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.726897363 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.72719356 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.72755035 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726526306 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.727106616 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727556597 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726632549 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.728357087 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727236764 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.727395394 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.727374106 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.727382957 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.728080058 seconds)
  done (took 32.754137673 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.728399414 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.728252211 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.727842549 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.729036566 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.728410338 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.728257219 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728053341 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.728225232 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.728368863 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.727959719 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.727565949 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728115952 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.729197116 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727903149 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728967091 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.72848515 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.727822189 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728779637 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.72744236 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.728785372 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.72907984 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.728560497 seconds)
  done (took 39.688679289 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72868297 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.728905181 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.728860739 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.729221884 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.729947823 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.72945149 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.730417776 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.728981179 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.729116985 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.729831924 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.729710664 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.72861807 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.729913434 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.729847907 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.730062227 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729382831 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.730398224 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.729667563 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729497668 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.728790217 seconds)
  done (took 36.25564842 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.73019859 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.729544082 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.730521135 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730048681 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72963189 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.730720075 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.730342614 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.729359114 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.730095365 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.731070956 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.731013042 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.730030989 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730105125 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.731197778 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.731031088 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730387301 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.731026496 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.731312508 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.730670611 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730958381 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.731315656 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.731262934 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.73179299 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.730384611 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.731249504 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.730837867 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.731679178 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.731237941 seconds)
  done (took 50.125647666 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730795669 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.73069237 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.730603308 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.730332192 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.731250205 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.73189084 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.73192165 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.731599288 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.732092164 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.730147607 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.731725064 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.731166253 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.732421787 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.731931138 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.731463145 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.731371721 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730926639 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.732065352 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.732058409 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731064716 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.732120486 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732477101 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.732494755 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.733368901 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732578366 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.732221441 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.732681524 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.73175306 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.731998146 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.731975133 seconds)
  done (took 53.620162788 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.756763532 seconds)
    (2/2) benchmarking "in"...
    done (took 1.752968769 seconds)
  done (took 5.178567879 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.731873098 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.732774204 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.732183989 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.732645333 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.732177914 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.731897424 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.732000559 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.733148948 seconds)
  done (took 15.527385972 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.73373053 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.732062435 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.732134482 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.732981884 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.732549118 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.732673786 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.740172243 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.733659631 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.735387009 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.734218703 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.740181574 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.740910787 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.737115213 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.734576191 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.73513466 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.736090672 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.733896465 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.732992803 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.733568317 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.73385126 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.734208974 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.737095303 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.737631449 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.73315949 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.736839068 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.74465323 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.739454433 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.73250679 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.735298715 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.73932475 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.735550717 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.734708371 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.734312256 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.734682065 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.734817385 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.734883531 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.743112445 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.736186305 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.74095454 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.735228865 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.734450524 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.73388867 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.737693358 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.737189905 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.737546694 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.736114965 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.734415399 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.734804128 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.734568632 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.738364073 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.74321858 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.736299809 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.735395356 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.740126189 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.736972024 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.743244364 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.735312233 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.739885003 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.745499097 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.745736457 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.747180711 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.744441263 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.739030662 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.73443587 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.744880801 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.760944982 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.743669824 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.736257528 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.735506137 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.736198711 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.744067573 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.749163402 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.746371 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.73749231 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.736459432 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.736086391 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.738285056 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.736452799 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.7441176 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.74130857 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.738272853 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.735917627 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.747716347 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.761333996 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.739025356 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.737800838 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.736791517 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.737658174 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.739384043 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.749528032 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.737294849 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.737488078 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.737684293 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.739249132 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.738591843 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.737230383 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.73614777 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.738918901 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.737296326 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.737592111 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.73763663 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.740916435 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.747196256 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.738002839 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.738045295 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.745518576 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.737911782 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.738888971 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.74583768 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.73832036 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.737960829 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.739537738 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.745464831 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.737700371 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.741953617 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.746879104 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.738741231 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.740740177 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.738540139 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.738306273 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.749638933 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.767305001 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.739893194 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.739079543 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.744705273 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.751434856 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.738674564 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.74302738 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.739425619 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.739036719 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.738766461 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.742254002 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.739592563 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.74060859 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.739431738 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.742331813 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.739061994 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.738900575 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.739574758 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.741510427 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.74139687 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.742209032 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.742554953 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.74425839 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.73970236 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.743195924 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.746304649 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.740507917 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.742618688 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.744063833 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.740190079 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.739889022 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.741622963 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.741042265 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.740892127 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.740704036 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.741513745 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.741309266 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.740915828 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.739651621 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.740038184 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.74102455 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.746512829 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.740314653 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.745005649 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.742314644 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.740497553 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.740100581 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.740632053 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.740758434 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.740507744 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.740797156 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.744420514 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.748836316 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.740546133 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.740687387 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.744202884 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.741690301 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741771487 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.742280017 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.744867905 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.751155012 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.741467118 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.748903087 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.742913256 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.742078813 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.741087926 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.742957479 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.742178187 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.742308534 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.745326669 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.749350936 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754157144 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753131009 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.742498932 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.746109475 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.744205757 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.747369971 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.747092323 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.742899328 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.742739734 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.742709429 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.743945644 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.743220298 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.745683717 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.743318572 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.743065956 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.742795034 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.743389439 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.744263236 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.742172105 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.744835648 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.745237941 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.742686127 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741983699 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.742985949 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.74539464 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.743409079 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.743004323 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.743858898 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.744115758 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.742274539 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.750066307 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.743194463 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.747092993 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.745979598 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.745188969 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.742588775 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.743218712 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.747151166 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.744769504 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.750233048 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.744948124 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.746163679 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.750771787 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.744583787 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.743297332 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.748496561 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.744704931 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.744817599 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.74769284 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.752153527 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.744887404 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.744760213 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.744745026 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.745808468 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.744280782 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.752418235 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.743692831 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.745203748 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.745487866 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.746824358 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.745011146 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.747490188 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.746587155 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.746095831 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748127344 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.745209735 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.745364283 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.74731743 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.745215546 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.74498467 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.74596283 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.749875333 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.754380766 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.75159534 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.746793641 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.747352239 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.746536842 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.749383107 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.747235267 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.745361256 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.746853962 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.758099718 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.754084233 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.752591104 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.748768265 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.74544311 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.751796583 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.746773191 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.750849039 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.747502722 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.74814247 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.747074161 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.747350437 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.746505903 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.748228694 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.746115373 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.749913155 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.74854062 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.749421679 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.746588547 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.747848884 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.746285194 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.747006605 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.746709837 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.747923856 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.746381505 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.75040785 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.751595226 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.746729919 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.748956529 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.754664458 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74892545 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.749667521 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.747543641 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.747993385 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.746772081 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.748297312 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.747702285 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.751834598 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.75639755 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.751203581 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.758570948 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.751692395 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758459268 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.748314103 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.752161949 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.755991513 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.748115497 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.748284329 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.749183005 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.748877165 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.757189966 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.750046119 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.74889131 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.752611308 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.749010656 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.749519059 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.75099567 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.750249116 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.748596531 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.748626348 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.757642575 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.751335421 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.754527184 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.752889193 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.749140835 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.748512822 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.749027634 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.749170471 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.753829258 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.748983186 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.750736673 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.750350202 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.749594261 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.748748776 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.749792717 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.749793755 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.749752692 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.748248264 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.756835017 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.751122279 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.754534156 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.748840501 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.758841569 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.750298376 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.758085568 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.749803056 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.751219274 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.750153108 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.749113556 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.750841122 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.749238033 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.752020998 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.750072826 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.751289664 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.754976155 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.750588163 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.752610519 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.752021306 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.751458956 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.750672169 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.760521063 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.774012761 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.753094188 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.754253159 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.751324287 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.752262081 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.756213864 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.751696757 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.750222828 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.754104251 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.763169555 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.759624428 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.753034365 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.752082355 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75283768 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.751782364 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.751238396 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.751004769 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.751397052 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.752064545 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.751923432 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.751639443 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.756452061 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.751239172 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.751661147 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.75300788 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.752855073 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.763860825 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.75259371 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.752819034 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.751900693 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.751899026 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.754021443 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.754088159 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.752799372 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.753831556 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.751974384 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.754631704 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.759776434 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.760073438 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.755950516 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.753257034 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.752391887 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.754273377 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.75349604 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.753117042 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.752560686 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.753293651 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.755391916 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.752094556 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.754223076 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.752263569 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.751818351 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.75363603 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.753030276 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.757359288 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.762500775 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.753543231 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.753764536 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.752643531 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.753097924 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.753691941 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.754838623 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.760946394 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.758004957 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.765017862 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.762326368 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.758969212 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.755371812 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.757721749 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.764512566 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.753120349 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.755725818 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.754077039 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.756168531 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.754015601 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.758986374 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.754221288 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.761836347 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.755201565 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.754273543 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.763374247 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.756663829 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.754630602 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.756598774 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.760627315 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.755937629 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.7543407 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.754345585 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.755434389 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.762688891 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.757593061 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.75404555 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.758037007 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.752639618 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.756701791 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759500203 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.754744835 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.757661523 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.754914969 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.757490425 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.755229292 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.754973076 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.755432274 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.754852263 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.755394348 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.758936927 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.761866391 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.75573258 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.75944986 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.757310018 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.757608476 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.755632624 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.755865762 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.756467242 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.755442095 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.757165915 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.75678112 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.758193123 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.760634875 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.757267914 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.75732946 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.760121179 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.757016268 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.760299099 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.767079136 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.763909113 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.755536019 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.759450304 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.758338745 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.760944143 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.757221057 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.757634515 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.758430285 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.758607559 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.75720109 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.757014928 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.757110013 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.759940407 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.773316957 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.757834258 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.75863608 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.759359107 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.762061315 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.757168064 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.758511053 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.757842988 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.759537313 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.760693968 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.765645643 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.758350677 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.766049094 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.75841528 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.759069622 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.761262805 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.761743682 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.766165012 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.763000626 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.757899637 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.758725827 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.764109353 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.774870154 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.758576048 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.767942222 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.789737658 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.759375426 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.760419211 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.759258717 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.759683523 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.758559013 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.761234737 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.758587547 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.758704477 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.759440688 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.758996121 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.760061163 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.767290897 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.761455941 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.75900062 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.758735543 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.758396242 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.76077986 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.758945849 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.758737193 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.759174558 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.760204812 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.760601122 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.759530838 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.760463241 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.772121087 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.769215394 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.758662333 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.759548684 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.759850164 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.763970653 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.763464841 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.770535953 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.76635625 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.759684097 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.76014667 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.763717638 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.760354669 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.759547822 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.761740518 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.761143472 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.761775229 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.760892871 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.772964899 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.770119929 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.766345849 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.761366347 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.760425492 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.76131439 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.762004162 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.760587017 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.761481557 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.763160745 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.760869681 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.76624478 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.761850598 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.760008752 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.764347545 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.767794541 seconds)
  done (took 1044.387323325 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.760754246 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760334715 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.759724041 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.760003238 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.759700187 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.76002182 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760933257 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.758866185 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.759583567 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.760013131 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.759142267 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760082847 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.761392208 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.760178848 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760603087 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.760688185 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.759442239 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.759859489 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.760337399 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758651037 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.759382356 seconds)
  done (took 38.656574353 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.759426873 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.75997881 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.757693992 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.756206257 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755708671 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.756800027 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.757487075 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755568771 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.758415516 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757450441 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.75659776 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756358142 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.756186126 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.757400275 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756416473 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.756258988 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.757453307 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.756469294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.756280082 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.757253948 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.754934984 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.755570269 seconds)
  done (took 40.348298087 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.755290432 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.755860367 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.756325881 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.753848888 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.755058738 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.754572866 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.7557249 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.754999595 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.750811156 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.752878824 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.753036769 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.75292361 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.759369432 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.759281718 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.753016152 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.750832066 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.896444534 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.751091213 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.75245622 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.750664803 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.749282129 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.757732729 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.751316346 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.74978031 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.750347511 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.750355308 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.751014374 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.752448493 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.750738603 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.753092456 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.75619251 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.750733192 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.751844342 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.753819629 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.751372008 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.751659355 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.755121405 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.751249199 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.750586658 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.751578817 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.761456397 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.774204473 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.750528843 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.758568201 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.75141659 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.751555101 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.75535943 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.760661501 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.750828181 seconds)
  done (took 87.772388886 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.750510405 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.750771267 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.751298112 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.75078199 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.751593635 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.751497649 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.750680473 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.751944294 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.75106515 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.751153681 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.752021049 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.751858538 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.751650667 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.752284033 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.752450901 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.752283262 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.751340372 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.753069392 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.751430767 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.752796347 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.753906886 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.753156889 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.75194679 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.752487902 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.752534406 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.752483924 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.752359476 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.751152831 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.751701162 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.753408253 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.751586506 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.752345761 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.752176345 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.751842719 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.751793206 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.75239546 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.751947538 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.753264261 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.752731955 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.752607371 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.751626077 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.751231306 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.752540069 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.754439119 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.750875888 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.751658425 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.751957331 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.751572428 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.753218248 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.752473269 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.751962581 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.751640812 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.751968927 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.751193417 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.752811724 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.751089444 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.751105397 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.751687956 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.752484256 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.75211802 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.751277812 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.752145865 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.752655565 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.752460964 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.75190561 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.752318738 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.75293252 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.75195009 seconds)
  done (took 120.827827615 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.752793748 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.75111587 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754034627 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749699022 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750063979 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.749605134 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.750725418 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.749412945 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.75248216 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.74931916 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.749174348 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.748733704 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.748779857 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.749046185 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.749266898 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.749227981 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.749149432 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.747968178 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.74944347 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749497696 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.748513051 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.748530883 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.74872274 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.748743694 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.749854216 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.751072991 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.748464825 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.748563696 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.748208033 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.748373404 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.748169792 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.747684404 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.745381349 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.745695623 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.745788377 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.745209471 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.74648106 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.745070752 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.746287932 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.74593947 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.746597077 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.746190308 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.745453253 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.745174918 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.745996352 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.745175593 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.745718401 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.746251253 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.745475121 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.746081877 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.74508698 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.746721872 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74568228 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.745847839 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.747217461 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.746093854 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746519015 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.746540333 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.746488465 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.746577699 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746411352 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.746373222 seconds)
  done (took 110.054924117 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74560396 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.745901933 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.745506301 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.745807288 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.74636095 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.746118564 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.746291271 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.746042022 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.746492099 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.746773881 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74666925 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.746902505 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748091801 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747003857 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.746895902 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746953521 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745259188 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.745988668 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745670565 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.747151182 seconds)
  done (took 36.610619098 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.744066283 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.745103314 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.744920701 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.74345254 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.7455279 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.741105783 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.741283245 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74095736 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741159108 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741683379 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.741572285 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.739208098 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739063482 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.739649888 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.74028003 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.738919469 seconds)
  done (took 29.549035631 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.738581235 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.738427528 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.738267053 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.739281793 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.739184203 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.738408036 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.737614216 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.738003264 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.738047219 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.739107945 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.739384554 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.737323051 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.736374964 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.737509221 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.737411156 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.736712326 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.738396321 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.737754093 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.736519735 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.737228108 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.738414254 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.736212311 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.737605415 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.73732748 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.736680135 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.737570268 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.736607377 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.73742356 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.737194466 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.737624471 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.737186119 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.737237645 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.736358873 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.736550805 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.736993411 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.736170678 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.736155801 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.736198667 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.736904851 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.73644665 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.735784508 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.737072091 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.735903074 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.735857888 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.735986261 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.736783172 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.736461735 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.736746972 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.736549783 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.736504174 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.738023207 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.736282117 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.735617143 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.736598348 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.736155065 seconds)
  done (took 97.221958959 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.736709433 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.737145993 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.735836983 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.736204429 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.736474659 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.735748431 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.736922217 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.736132812 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736529222 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.736429809 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.737044709 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.737633051 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737927154 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.737320664 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.736506726 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.736132485 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.7370627 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.736734095 seconds)
  done (took 32.932348913 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.737043946 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.736898473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.736280134 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.736200122 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.736915858 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.735808375 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73707646 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.736548026 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736404941 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.73687356 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739684741 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.737136506 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736953655 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.737966784 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.736956993 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736370554 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.738300811 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736423002 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.736368587 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.736299151 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.736706361 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.737321305 seconds)
  done (took 39.884702527 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.736706582 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.737043289 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.750726834 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.754990823 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.756169988 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.767006643 seconds)
  done (took 12.174566946 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736062705 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737499123 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.737047919 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737386806 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737109951 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736657185 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736331765 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737112195 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737481579 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738465903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736099492 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736827104 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736921324 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737335429 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736821155 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736376714 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736586364 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736511945 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73726953 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737061921 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737040086 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735766451 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736470926 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736873487 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736316035 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736800776 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737696222 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736061862 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737175831 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736661067 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736412174 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737131986 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736712073 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735924419 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736808646 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736205585 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736594136 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737380185 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737130181 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737707651 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.736710707 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737479023 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737380172 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736852506 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737092346 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737762154 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736574474 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.73619513 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737571817 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737468806 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736551825 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737524016 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736381975 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735217921 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735833734 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.738610474 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736647361 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736752633 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735928787 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.738120643 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736367646 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737488553 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737165398 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736580402 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736286156 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73618184 seconds)
  done (took 116.306340681 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73572121 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.735034974 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736214954 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736285575 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73645889 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737437876 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735284458 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735809324 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735691031 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736049668 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736493225 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737075971 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736182515 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736389696 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736939183 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734809706 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735672744 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.73808843 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.73641591 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736373249 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736807923 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735832375 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73666978 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736403988 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736870479 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736751506 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736081621 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735754242 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736460774 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736922828 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736512203 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735796959 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736736338 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.735620281 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737629383 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734834918 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.73594033 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736379965 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735941894 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.73592836 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736957102 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736678558 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736777469 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736873718 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.738173555 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735728511 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737435717 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736422295 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735854018 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736653907 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736749644 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737947535 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735494226 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736295483 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736472488 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736170108 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737118815 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737899568 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73506432 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736310117 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736600577 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736671309 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737053478 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737350699 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736375683 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735956274 seconds)
  done (took 116.277779962 seconds)
done (took 2419.526579545 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.798553952 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.74206206 seconds)
  done (took 15.21269998 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.901364811 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.85176763 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.739037189 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.777396368 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.739140212 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.768278207 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.76668452 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.73981828 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.739406873 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.740489361 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.740130548 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.922967273 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.799698425 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.741129213 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.740563971 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.832949835 seconds)
  done (took 50.217993921 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.742027052 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.742959617 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.752669714 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.746665903 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.741691773 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.753768789 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.771962674 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.745543682 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.775520798 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.75413142 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.808812602 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.752775246 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.742399922 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.791333922 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.754158833 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.757254282 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.833881778 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.817250822 seconds)
  done (took 33.457817797 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.819395121 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.755087105 seconds)
  done (took 10.25575192 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.753637098 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.792102193 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.823020777 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.752022238 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.768197652 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.773228567 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.778845875 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.769991798 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.763172595 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.778285731 seconds)
  done (took 69.430806665 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.747579804 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.746054859 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.74357943 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.741832403 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.739317569 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.746687102 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.74124584 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.743386989 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.402705572 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.777064988 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.750157955 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.747685963 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.742591584 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.743987632 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.740862272 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.764423704 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.853474295 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.739081008 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.740031628 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.747507208 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.742992608 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.809062686 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.75559859 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.744984904 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.77334486 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.404208341 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.752708037 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.749601856 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.852989564 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.740681221 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.742997485 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.928978274 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.747579367 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.208520773 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.006413514 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.749318724 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.757059604 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.749470904 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.741364772 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.879977311 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.744201319 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.749247966 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.647847145 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.987977032 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.838516123 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.786130095 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.038590004 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.760194594 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.744608741 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.771563405 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.74610038 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.744109941 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.755881749 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.257095301 seconds)
  done (took 125.78590718 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.741285008 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.088192679 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.906685442 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.74221345 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.022912335 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.94640669 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.742895214 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.787925346 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.743823259 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.969559054 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.993151198 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.844329535 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.743263864 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.741137647 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.742567975 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.743714675 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.895676017 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.811691475 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.743331298 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.741654481 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.767863881 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981585175 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.864047906 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.744738583 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.768385516 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.950589071 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.861929243 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.843004089 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.524839706 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.741591821 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.803489687 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.744239899 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.743293929 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.742138067 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.897274221 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.833677545 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.823157255 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.744537292 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.742211291 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.742074696 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.401523913 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.939474694 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.83639363 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.871396504 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.993820912 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.946422545 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.51994307 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.74199534 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.482143426 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.904449028 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.968024965 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.970368725 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.863496781 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.744879854 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.075160001 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.741774537 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.744320006 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.990561891 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994483915 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.83777708 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.744626089 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.746773763 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.743515957 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.979242717 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.747794572 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.837212599 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.745379219 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.74368742 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.838850159 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.840351575 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.989355974 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.954761676 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.773612323 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.084405202 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.24243967 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.988309082 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.807841172 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.991601023 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.747242771 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.743561686 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819896493 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.584127237 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.99570421 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.98523952 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.98673047 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.777459019 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.457079754 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.744610389 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.968586716 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.963985785 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.001984762 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.989844893 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.978879234 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.073150381 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.744675488 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.744438488 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.965151994 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.86714156 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.747485761 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.086830913 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.973572193 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.269115833 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.772670583 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.045575281 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.875234709 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.748111218 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.378243908 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.74475391 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.973468587 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.78358823 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.747734685 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.745353196 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.962880824 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.734611902 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.745976354 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.390738341 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.805930984 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.750091117 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976417134 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.747994264 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012536584 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.747893985 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975894132 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.803021958 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.775855825 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.917926865 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.99119692 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.747402038 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.983316308 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.987650346 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.86010603 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.966105239 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.449292995 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.745482451 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030145277 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.748581282 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.745966689 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.914573884 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.746859737 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.915204427 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.749420058 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.037287034 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.767209269 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973985664 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.750013789 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.999054992 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.778613317 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.797137369 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.749963094 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.870705653 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.748752054 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.571946744 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.902537762 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.749174832 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.748818618 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.298096342 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.74846968 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.892782246 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.971474766 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.768051555 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.817638455 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.406690356 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.748535873 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.826892561 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.77184872 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.142035983 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.748615451 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.996619402 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.749960782 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.163127094 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.748022502 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.981249599 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.93020064 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.752291085 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.748119793 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.657168408 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.748171292 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.748235138 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.928581178 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.090635891 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.748258962 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.949225745 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.75049764 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.874991713 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.751009404 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.824286783 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.080021483 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.748453975 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.749539075 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.749780517 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.748910783 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.749992337 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.955324868 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.772651377 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.239395402 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.884191699 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019637999 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.057066858 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.987674008 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.790009063 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.751479947 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.002932931 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.75183774 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.809744536 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.752210335 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.768154312 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97450801 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.754248712 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.011271124 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.016787365 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.595494277 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.795749932 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.752436093 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.750642406 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.750673837 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.892723094 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.837783934 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.7529279 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.751143045 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.863599161 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.871504145 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.958597477 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.752241377 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.791643865 seconds)
  done (took 875.543834525 seconds)
done (took 1181.578171166 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.751428964 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.754217649 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.751712252 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.752807692 seconds)
  done (took 28.699406148 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.760276013 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.752064089 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.75302838 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.751932353 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.752042548 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.752293796 seconds)
  done (took 12.208172188 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.753670559 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.751264645 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.752323021 seconds)
  done (took 20.945176671 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.822691513 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.137707417 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.884277392 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.167193855 seconds)
  done (took 9.698612371 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.754657859 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.753003911 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.753526097 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.753967661 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.76124216 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.761101749 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.753518385 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.752803984 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.760995046 seconds)
  done (took 17.494720768 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.018918266 seconds)
done (took 94.755532845 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.850901274 seconds)
    (2/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.848445941 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.817931112 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.214382977 seconds)
    (5/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.779931549 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.128102068 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.848967953 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.133488348 seconds)
    (9/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.085440641 seconds)
    (10/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.760401369 seconds)
    (11/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.754315285 seconds)
    (12/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.853256101 seconds)
    (13/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.754465416 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.806903555 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.766687885 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.693213101 seconds)
    (17/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.815177217 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.912295301 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.868554622 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.609655786 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.020590582 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.779092957 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.754553529 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.89967558 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.75428551 seconds)
    (26/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.819723668 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.260456388 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.049541924 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.109563432 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.782217414 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.198874929 seconds)
    (32/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.870882091 seconds)
    (33/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.614651238 seconds)
    (34/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.771690969 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.866329649 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.880784268 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.067655142 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.758140657 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.956391853 seconds)
    (40/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.760387512 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.021770382 seconds)
    (42/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.859240235 seconds)
    (43/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.821264071 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.858284733 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.834969319 seconds)
    (46/309) benchmarking ("sort", Int8, false)...
    done (took 4.655056449 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.757824774 seconds)
    (48/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.110163559 seconds)
    (49/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.783010439 seconds)
    (50/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.853855669 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.716939039 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 1.978223089 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.856535546 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.181260382 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 5.416753903 seconds)
    (56/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.062408901 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.948341628 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.784928028 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.006656608 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.090589603 seconds)
    (61/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.853205437 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.3658646 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.915110006 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.777610688 seconds)
    (65/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.934541732 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.064993449 seconds)
    (67/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.130857888 seconds)
    (68/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.846833777 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.886393654 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.843260098 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.527634202 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.793605726 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.89181908 seconds)
    (74/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.931462248 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.103015682 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.75916477 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.776647909 seconds)
    (78/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.872307793 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.945324504 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.885891163 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.757032506 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.159872881 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.893421854 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.998045895 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.903081469 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.889518965 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.053977472 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.373015969 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.897796255 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.891508033 seconds)
    (91/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.833618466 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.042105148 seconds)
    (93/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.91631286 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.07500763 seconds)
    (95/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.898859579 seconds)
    (96/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.885315262 seconds)
    (97/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.234330911 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.647494011 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.022214338 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.843079541 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.099370144 seconds)
    (102/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.760594834 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.881850238 seconds)
    (104/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.660261927 seconds)
    (105/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.093357791 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.768083515 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.75721817 seconds)
    (108/309) benchmarking ("sort", BigInt, false)...
    done (took 7.740862123 seconds)
    (109/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.761623876 seconds)
    (110/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.75929719 seconds)
    (111/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.988718809 seconds)
    (112/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.865612148 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.977094787 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.780837243 seconds)
    (115/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.888929276 seconds)
    (116/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.796220043 seconds)
    (117/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.00146349 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.763320179 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.84866192 seconds)
    (120/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.841668419 seconds)
    (121/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.75900115 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 3.399924095 seconds)
    (123/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.794972835 seconds)
    (124/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.980899497 seconds)
    (125/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.841116947 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.789290713 seconds)
    (127/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.820043665 seconds)
    (128/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.884992693 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.852847377 seconds)
    (130/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.849848908 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.99160951 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.994968566 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.534415486 seconds)
    (134/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.905606428 seconds)
    (135/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.092902974 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.762432027 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.595429904 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.000302496 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.868929342 seconds)
    (140/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.763773451 seconds)
    (141/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.941978132 seconds)
    (142/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.137143242 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.762149922 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.170180444 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.783266777 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.33135136 seconds)
    (147/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.965599446 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.43594206 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.44521317 seconds)
    (150/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.779286504 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.761393147 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.006017511 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.846428714 seconds)
    (154/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.975635346 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.94734193 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.763857208 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.767070749 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.877889386 seconds)
    (159/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.830641664 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.24422435 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.960338595 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.763575973 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.764145298 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.088363229 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.10811334 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.140720839 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.129676377 seconds)
    (168/309) benchmarking ("sort", Float64, false)...
    done (took 5.538408527 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.866459575 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.762960934 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.967236653 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.760804709 seconds)
    (173/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.020265575 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.982787277 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.91443679 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.762638887 seconds)
    (177/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.943282991 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.763269272 seconds)
    (179/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.859754042 seconds)
    (180/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.763334314 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.209957866 seconds)
    (182/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.810992455 seconds)
    (183/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.841647737 seconds)
    (184/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.876131128 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.032783233 seconds)
    (186/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.106377882 seconds)
    (187/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.837170088 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.745911138 seconds)
    (189/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.862303198 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.867337028 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.768851948 seconds)
    (192/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.016960653 seconds)
    (193/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.897957849 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.712379012 seconds)
    (195/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.77250381 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.206764404 seconds)
    (197/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.958626284 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.444732616 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.43795461 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.972449991 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.919551545 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.762781698 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.692588252 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.945293903 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.975581431 seconds)
    (206/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.317806563 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.028266807 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.083554164 seconds)
    (209/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.769638593 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.914338568 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.997925841 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.427144856 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.028587498 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.791013068 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.968098022 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.518076077 seconds)
    (217/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.505644896 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.766132587 seconds)
    (219/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.956337118 seconds)
    (220/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.801812285 seconds)
    (221/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.765088874 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.789377128 seconds)
    (223/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.994492715 seconds)
    (224/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.85132914 seconds)
    (225/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.158390624 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.068519611 seconds)
    (227/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.86312948 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.786214338 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.764163289 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.206545193 seconds)
    (231/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.678841096 seconds)
    (232/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.967796838 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.857825634 seconds)
    (234/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.778280905 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.89492342 seconds)
    (236/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.765084753 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.731098564 seconds)
    (238/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.846116788 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.764044407 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.927864504 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.759258736 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.76931318 seconds)
    (243/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.471006194 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.776237621 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.097641812 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.384885663 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.517603715 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.021838425 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.85206053 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.156621115 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.873226111 seconds)
    (252/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.768297264 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.950156048 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.771921025 seconds)
    (255/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.345853905 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.069953511 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.948110703 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.191595161 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.675362942 seconds)
    (260/309) benchmarking ("sort", Float32, false)...
    done (took 5.467096605 seconds)
    (261/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.796556041 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.078756364 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.769550462 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.101329092 seconds)
    (265/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.934390065 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.883951403 seconds)
    (267/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.783331547 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.094729768 seconds)
    (269/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.789156344 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.766338101 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.787151465 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.709700716 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.028914275 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.174360157 seconds)
    (275/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.275595603 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.89870983 seconds)
    (277/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.226277993 seconds)
    (278/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.929595099 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.55508094 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.771198512 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.402249964 seconds)
    (282/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.912856727 seconds)
    (283/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.950274388 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.784217293 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.354477801 seconds)
    (286/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.921363776 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.108632393 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.155925018 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.919912236 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.18062853 seconds)
    (291/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.78362006 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.899400023 seconds)
    (293/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.245044221 seconds)
    (294/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.281079603 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.099851479 seconds)
    (296/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.87634245 seconds)
    (297/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.776112338 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.1359182 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.809779604 seconds)
    (300/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.928338846 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.166410688 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.783315763 seconds)
    (303/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.665387247 seconds)
    (304/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.928370463 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.567699271 seconds)
    (306/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.803380358 seconds)
    (307/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.85564333 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.990501822 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.006599223 seconds)
  done (took 971.588151023 seconds)
done (took 973.34457403 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.807344425 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.797314871 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.781638338 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.803249425 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.893840759 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.827058805 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.79400831 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.784286058 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.830952076 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.829981761 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.779436618 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.825243426 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.780916725 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.782065039 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.7813182 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.796965502 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.096053674 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.815798504 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.801615954 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.794141864 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.798139872 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.779626682 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.830606251 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.825300921 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.785539144 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.786906345 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.785071226 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.80053609 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.894103868 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.785671377 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.788106604 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.795288796 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.096972206 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.812875434 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.780250475 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.802472235 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.794520467 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.794323486 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.786209216 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.814157935 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.190352084 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.823001957 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.782669742 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.783044335 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.782887214 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.789210853 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.783751946 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.792100263 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.797305973 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.798092021 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.172836728 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.84210174 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.788059613 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.783972459 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.796360005 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.783661948 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.788075459 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.799120749 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.802548574 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.799668625 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.078083266 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.824046833 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.788303915 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.802312875 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.792432007 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.210331404 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.825187064 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.792180178 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.180434979 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.833121314 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.208578017 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.836142534 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.787130596 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.79913322 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.817453917 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.093035477 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.814057145 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.783182376 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.794053412 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.781794965 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.796961953 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.799162901 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.789761427 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.785280652 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.799740332 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.830155389 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.797855425 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.784862158 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.796651951 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.805103234 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.794423075 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.797002229 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.787976033 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.783100651 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.800398919 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.789753968 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.789057504 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.788742811 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.78905932 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.798681209 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.179683419 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.844191174 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.782405451 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.783586813 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.785753861 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.800180082 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.178636998 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.829096844 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.808336152 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.83633571 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.786122911 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.080566458 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.822372446 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.804580245 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.798573824 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.789965778 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.785509426 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.080082053 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.208613229 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.844973419 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.787346227 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.785072304 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.803249867 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.789192577 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.78463693 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.096959689 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.820881295 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.804482166 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.911614909 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.801752194 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.822045181 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.787539844 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.793389712 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.838368197 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.804274275 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.818773068 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.791035611 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.801783494 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.805562066 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.784589415 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.798688974 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.801675005 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.787940127 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.796095812 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.786003641 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.83761532 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.802228315 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.802432564 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.809455707 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.910909661 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.786423053 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.082052018 seconds)
done (took 281.150936329 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.872516904 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.787630631 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.878514687 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.787495891 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.875722736 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.860417561 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.786780454 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.786088046 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.789176817 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.270125719 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.786876483 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.791597989 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.786348741 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.787016243 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.858499632 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.786489222 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.786194473 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.221623069 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.787435303 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.867370395 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.786182341 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.786113607 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.78699046 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.287837408 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.785709469 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.785365975 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.866846799 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.786652681 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.239222902 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.786563221 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.786707192 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.238141192 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.865829888 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.815008677 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.794705376 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.792788966 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.876881678 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.798075889 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.853940454 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.85628637 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.882183311 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.819644468 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.786671471 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.788032845 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.791199741 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.788838042 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.788948194 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.821193371 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.786343707 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.794983972 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.222776446 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.792927413 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.795603523 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.789287967 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.788688593 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.816128914 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.788576827 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.789162073 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.868597434 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.789458241 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.856139292 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.289540189 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.272844133 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.788113737 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.788339219 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.789944544 seconds)
  done (took 179.72777308 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.855914329 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.865167575 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.853873558 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.793626111 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.837007714 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.856495011 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.794265354 seconds)
  done (took 14.57736364 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.796856186 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.789498804 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.839040582 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.839736282 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.78994823 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.946453673 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.789686637 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.802055218 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.794646865 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.817218472 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.791225191 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.790293872 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.797238841 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.788019064 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.838577537 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.800720512 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.905700381 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.791572936 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.791463409 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.938409716 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.794132061 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.79800344 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.81592801 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.803219951 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.792190294 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.797052947 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.362268217 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.790726546 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.790804016 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.791089518 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.790234571 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.831781406 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.790949908 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.790766297 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.791179964 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.904506836 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.794114002 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.790718255 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.7909934 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.790663068 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.790535658 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.78994067 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.792098742 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.791542616 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.791452891 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.814685833 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.791301037 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.7909984 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.792735715 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.790639479 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.818591613 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.791577051 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.793403828 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.796277656 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.834948762 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.798579715 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.79327798 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.792529627 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.793160441 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.792300174 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.939996755 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.840893533 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.792521292 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.841639524 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.792665756 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.79296779 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.79122872 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.792698094 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.880881206 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.792488972 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.8416305 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.793055438 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.952177059 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.81537603 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.793585181 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.796176751 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.797726589 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.794327247 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.791912429 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.800589622 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.793774414 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.795441769 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.799560069 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.797487184 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.792674448 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.905514107 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.933370568 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.792892386 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.794894607 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.79955937 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.793191932 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.836985911 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.79386506 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.793010824 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.849552737 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.908843964 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.820246155 seconds)
  done (took 198.141579756 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.801543556 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.801381465 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.795791741 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.809962319 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.79599085 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.794795491 seconds)
  done (took 12.525204783 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.795975574 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.798623734 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.793456718 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.794210131 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.793834538 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.795262211 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.79391338 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.796789023 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.799680698 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.794071598 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.795717896 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.795121195 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.796324276 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.794200481 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.795809439 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.79358695 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.794531777 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.793908288 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.793517377 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.794399189 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.046919331 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.795218807 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.795745057 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.799175691 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.79867282 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.796409569 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.809519954 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.795183961 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.795364237 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.802808294 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.800825244 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.795561895 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.798682819 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.802556526 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.799372403 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.798692263 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.801496885 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.797107903 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.794812968 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.795852116 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.795918485 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.797170581 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.795344506 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.795977034 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.798292949 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.804267859 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.801479781 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.808022489 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.796429968 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.796353084 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.796358128 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.797103826 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.797438719 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.797901911 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.80023945 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.802886875 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.801130218 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.796207586 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.797170538 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.799602023 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.801111612 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.797789076 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.798668026 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.801735075 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.804196418 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.798012317 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.800495373 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.802040001 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.798089344 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.797753687 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.798224157 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.797223817 seconds)
  done (took 132.422670841 seconds)
done (took 539.134659678 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.032914953 seconds)
  done (took 8.762674695 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.879317975 seconds)
  done (took 8.668761518 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.347161286 seconds)
  done (took 10.080837271 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.815264791 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.824917096 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.811689982 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.803973267 seconds)
  done (took 29.01201155 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.069778806 seconds)
  done (took 8.79931561 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.819705863 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.795665275 seconds)
  done (took 15.408211938 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.887471071 seconds)
  done (took 8.618405194 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.105419482 seconds)
  done (took 8.845701234 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.802173555 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.808296878 seconds)
  done (took 15.361170453 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.799793416 seconds)
  done (took 8.528911223 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.946737055 seconds)
  done (took 9.773442065 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.827004328 seconds)
  done (took 8.624015968 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.847983767 seconds)
  done (took 8.578077313 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.857926433 seconds)
  done (took 8.588020539 seconds)
done (took 159.381776885 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.800165833 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.798863218 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.798223691 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.797291269 seconds)
  done (took 28.925346944 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.831059224 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.831441184 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.832510223 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.842390097 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.833291679 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.830924199 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.825433819 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.826589563 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.844688589 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.836344202 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.834679913 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.836306644 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.833341699 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.82645006 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.836504837 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.834747032 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.844084384 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.833588604 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.825010901 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.835257745 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.799455408 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.842010521 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.834388001 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.800615703 seconds)
  done (took 45.683093038 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.989940331 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.870714552 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.953584394 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.851738188 seconds)
  done (took 9.396959736 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.851056053 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.852515598 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.863966719 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.910664381 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.925840727 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.861814166 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.825022085 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.820530631 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.806762794 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.852802893 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.927713392 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.847381287 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.940473733 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.799886322 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.9869192 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.799792336 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.79949739 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.850135059 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.903217852 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.915783394 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.799448843 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.850708791 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.855200273 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.849693061 seconds)
  done (took 46.428706065 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.801673081 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.809235858 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.809223942 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.802808508 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.802632941 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.802030527 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.808295766 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.803512011 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.824638068 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.804383089 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.800773309 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.8080994 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.814235367 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.807618549 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.807652545 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.8203758 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.821729709 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.808393253 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.811434491 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.815812413 seconds)
  done (took 37.918470424 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.806530059 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.652952657 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.151971249 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.05806917 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.806045835 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.805714458 seconds)
  done (took 31.020602403 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.820088329 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.813958024 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.807764696 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.865580309 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.949752499 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.81558935 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.807152665 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.818837066 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.857169013 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.873547401 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.82888791 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.837991256 seconds)
  done (took 23.835626811 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.808239656 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.808821476 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.810569051 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.821910133 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.819784628 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.815200242 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.815166633 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.807194359 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.821558984 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.8269701 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.816483134 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.820246443 seconds)
  done (took 43.536979285 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885625009 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.681349075 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252579894 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264854766 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.331514508 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.010179921 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.80689599 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.891991271 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.808327611 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078611305 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.145400835 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003968409 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.050811684 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.596104 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.812887384 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.279820545 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09168937 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014501304 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834122576 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.46313469 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909108413 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355379752 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.415618034 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.911908866 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011432763 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.931988114 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.071413749 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.760421079 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856182874 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811722969 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814431102 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.809158211 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079743825 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928409379 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879264511 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814018659 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.220306332 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.51394738 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.823351864 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.474084917 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.312546404 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.921763847 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812343295 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810245868 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.73589149 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354304663 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899886181 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.813163878 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.509523816 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.809951678 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815140658 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883587515 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.810581608 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.617114852 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.493231877 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.076630527 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.80975355 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811949188 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370613288 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792089249 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450095821 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.743394922 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.902352603 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.464662136 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254113086 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.959802154 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.81086408 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.811772035 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.736381644 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.471655057 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916837402 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945783834 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.827553044 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.450154977 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103655869 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.195959563 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.855132414 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074340423 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.639367596 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.744243017 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028074561 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.760675856 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.738966973 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.679597247 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.73781337 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015990046 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839686516 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.419702406 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841088507 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.892481219 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.816968257 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82588319 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813059242 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.024133796 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.706100775 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811996783 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.085078318 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062425766 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828723558 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.896775829 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73851141 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.814320308 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057376287 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.015306597 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.098634161 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.278703942 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89468832 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79789869 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.826504832 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.78463095 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.822961387 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.075442344 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867296255 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.788343304 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922763165 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.762246496 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051911152 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816336963 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.912639019 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.152641914 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.041496143 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.139604503 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.052592779 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876102024 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.818130023 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.814841727 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.474206316 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41447465 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.029859071 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.826621957 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340901994 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.821230311 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.815895801 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74803823 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.476614236 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.158088755 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.885337299 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.029244241 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.800824118 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09150428 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740271249 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951000054 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.803490447 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.027118082 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.448329421 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.888814083 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062402554 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.104176259 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.094194478 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823018629 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828341113 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906000582 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830750641 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.293117762 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060851461 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.816345177 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.816448732 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.491172138 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.86452774 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815582481 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.818036081 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.341042811 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085439992 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.834031525 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.817621896 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.689477862 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.827530551 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876823422 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.818017062 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.819137523 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.339888139 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321683572 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.821507366 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.483421176 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031196463 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820684853 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.422221516 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983815309 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.828705985 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0823313 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875971197 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.742434755 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.51657465 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.516731102 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817033219 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.742797303 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.816320665 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818604828 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821850915 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.002612565 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.084903126 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863123241 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.469251152 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.914202884 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822038525 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.81872637 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817053931 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.311449976 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.803416015 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468053893 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.822564674 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946273009 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.829039829 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.743877012 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.820804861 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.819293144 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.818235582 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.761657835 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859271436 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.459253963 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008420682 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061218163 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.215174774 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820705612 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.473278482 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.921123894 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.828079289 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.089379236 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355741427 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.919144202 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89176255 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.818014901 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.466045813 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.539107151 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377367852 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109831233 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121009255 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155133111 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.209940788 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.142645577 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.898062146 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039622271 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.334202367 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870112819 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.901170758 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74940626 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827456151 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.447645284 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158633808 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82260083 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030295831 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106168637 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.140840738 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939809607 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.017154307 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842449029 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.652810876 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848450992 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.350375795 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830303144 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.227259071 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008093815 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8954994 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.089163315 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.885345466 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.814673466 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160382974 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851477272 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.515950055 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.16719916 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.242941241 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.265957261 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030378979 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.816077021 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.253987962 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157234092 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.019041897 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.942103437 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742844533 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.82042469 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.820286767 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.82765113 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.790264316 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.655982411 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.060430122 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821181768 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041200748 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.966742604 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179086968 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.717648695 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.818401084 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815516916 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053926062 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.510657722 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978079894 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.15681342 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.402936886 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826072262 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.743695509 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743262309 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.517596568 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.817520113 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.780744745 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017181315 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.928415365 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.497286301 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256818004 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132879806 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.059604556 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.828716924 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.082662987 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086910288 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.3079315 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837411046 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.914225201 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.089156771 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.502933105 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.031339919 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.043414758 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347762289 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034254108 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270927955 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.784105968 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.817190485 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024258003 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.032899854 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.15770094 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983248931 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.527641411 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.826792532 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194780053 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874878944 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.156576891 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994184702 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.903515096 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823794385 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893882337 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821502417 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.82359334 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.823577111 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828243184 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.162259691 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926731496 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.829836722 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894675246 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805313015 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.388676965 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.827266044 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084442377 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165691946 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139413932 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87977853 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.819618701 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827050986 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.744809802 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947977549 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.258320541 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090836404 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.939109356 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.953170916 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840192026 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.10111301 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.114939255 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134947952 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092079862 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.702347905 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473699605 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.944510797 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.036139916 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825079809 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.022749152 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026926186 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119229009 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382420993 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.062540634 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017527564 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092486032 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.186136765 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.820579799 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397911007 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.829082707 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236741146 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.849700682 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.154008594 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069647282 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824876488 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939790787 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.824685562 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.024218487 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.271512455 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.474773392 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159966075 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.675270778 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.824189505 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094106094 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139848916 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119612342 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89605191 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825767292 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.512340003 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953122986 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.686457463 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.037577392 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.822914933 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024012703 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.531689062 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.824668545 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086843904 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12180298 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.822573845 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.70798266 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847335012 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.826138818 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.036372929 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025302169 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061940253 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825304467 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.823381033 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.628740295 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091652684 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878284762 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749165691 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.825542036 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869722078 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.051190802 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845131358 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.340469259 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.525289531 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099428466 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.723810167 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839559629 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.241880204 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.199039624 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141184735 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.347518708 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031518779 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.369812895 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.693851862 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204508577 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.824878883 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.244512584 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208643054 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.825145174 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.352634179 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938467782 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.087975539 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146722452 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.837172634 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.558718137 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.846627467 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03880881 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.179514126 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755215085 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.829087649 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.873236531 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.825172152 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.806764936 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833605792 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.745029358 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304932674 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.671562917 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38160052 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.827454212 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.829822781 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.199671827 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372506035 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937632934 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841529852 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833642747 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.517247124 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.110913786 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.067681068 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.352590921 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.924312615 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.82753539 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82640803 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.745022392 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.011341199 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.011927613 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103042113 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.198646708 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.9398045 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827027349 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.032592086 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028676358 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.169263288 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948417505 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.969508004 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945259595 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.766928636 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.530733394 seconds)
  done (took 1635.134189162 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.85729517 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.870400623 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.848838264 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.86511962 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.894093037 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.874374372 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.90860215 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.899566457 seconds)
  done (took 56.777711524 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.826137829 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.988708338 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.831302692 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.827876753 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.867400875 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.827732743 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.000607182 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.838767716 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.881729668 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.831866456 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.845934744 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.850253136 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.10594234 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.847760514 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.827110367 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.830693297 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.830939081 seconds)
  done (took 73.701207477 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.828982432 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.089543202 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.859806585 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.830571792 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.83742364 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.843554444 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.939224088 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.861243125 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.832341884 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.080997731 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.122807651 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.847731195 seconds)
  done (took 89.7356817 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.839947955 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.82987152 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.829817376 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.830348373 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.829450579 seconds)
  done (took 10.92835215 seconds)
done (took 2134.774459324 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.057742766 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.021943249 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.067920054 seconds)
  done (took 5.850141835 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.968538581 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.021443027 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.133835452 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.139032223 seconds)
  done (took 10.027312235 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.136610371 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.194020731 seconds)
  done (took 6.092268103 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.144413911 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.858669819 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.240840431 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.830078993 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.831733141 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.833803076 seconds)
  done (took 22.261633328 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.831143705 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.830023075 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.830296181 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.82964714 seconds)
  done (took 9.083123313 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.827842101 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.514128057 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.828171399 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.839845153 seconds)
  done (took 20.77220138 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.976510064 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.946294447 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.973440405 seconds)
  done (took 7.657471267 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.971593315 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.056838037 seconds)
  done (took 6.788857584 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.986271787 seconds)
  done (took 3.748589439 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.85870267 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.100468283 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.335517547 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.352328229 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.416373038 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.713484002 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.11844744 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.051501292 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.289200519 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.269417603 seconds)
  done (took 24.26830696 seconds)
done (took 131.613947216 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.176033078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.863481157 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.037173488 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.182602222 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.060361186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.02961789 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.048995464 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.169811993 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.867429473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.853369549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.188796873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.065181768 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.997456059 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.843416579 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.004656183 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.843472312 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.055970706 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.20192154 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.876596388 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.116971332 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.062554376 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.833086681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.027599987 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.851354181 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.063082455 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.981637677 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.378895866 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.8489759 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.019291996 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.395547683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.987745636 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.253437708 seconds)
  done (took 166.950755889 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.833793969 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.833948771 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.833086075 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.83309138 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.35563212 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.835015287 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.833256756 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.832094489 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.304493397 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.292569347 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.833487871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.343848692 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.834574685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.83293632 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.834484288 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.832543638 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.476544872 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.834501465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.833284194 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.832346458 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.833074297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.183159588 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.835376235 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.194060256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.458746107 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.834773566 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.833487072 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.836198335 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.833585463 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.833310524 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.834333602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.834713376 seconds)
  done (took 208.386506846 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.780716014 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.836002065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.83601282 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.834563831 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.83738446 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.837222214 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.83783788 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.8349741 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.615755234 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.604970034 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.835799638 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.8367198 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.837220811 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.83475638 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.836201049 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.835920541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.83568638 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.836914403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.83601975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.835715434 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.83477731 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.416437702 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.835478768 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.429250619 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.84047252 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.836141346 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.834535529 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.835301176 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.835157144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.836823291 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.841660458 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.836543602 seconds)
  done (took 219.195302437 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.077716918 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.836709463 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.837427653 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.748747714 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.83709003 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.83632127 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.825118515 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.082597719 seconds)
  done (took 18.856418337 seconds)
done (took 615.161963477 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.230712087 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.070906346 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.014239611 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.860799524 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.126332063 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.907776323 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.855734023 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.922124025 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.684990502 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.929214188 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.491252272 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.881097725 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.588222196 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.885193164 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.979437963 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.918186042 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.406758996 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.504373912 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.034492918 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.946520356 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.038722322 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.749516282 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.937260021 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.709068409 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.613599682 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.802162332 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.885573619 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.41084636 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.87052038 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.012063049 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.53158676 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.117318951 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.869512243 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.856236071 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.911904947 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.889786731 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.061477662 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.866928186 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.983107505 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.549352624 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.952532245 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.753211584 seconds)
  done (took 101.379210929 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.847041204 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.844229643 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.844855868 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.843411119 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.853764598 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.844385538 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.844517442 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.844383463 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.844549266 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.844531509 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.844745351 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.854515704 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.845611283 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.85332807 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.844132718 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.843849205 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.843407808 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.85364582 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.845058992 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.845250448 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.84504509 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.84452045 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.839957432 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.844413209 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.845118445 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.84505462 seconds)
  done (took 49.77427434 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.83942714 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.008801665 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.088717977 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.859236355 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.840946078 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.843329735 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.858366675 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.844829567 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.842001727 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.842290369 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.942513234 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.8461318 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.858544078 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.089052011 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.858126686 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.840171292 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.84078853 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.84092306 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.014996904 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.857812984 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.859830247 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.845475071 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.860216731 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.855247786 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.842561201 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.843090289 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.84483318 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.337612221 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.850953405 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.942147698 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.88515846 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.868088848 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.279549191 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.099276012 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.895776356 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.853097723 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.840942137 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.946763123 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.847765741 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.842668498 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.859960251 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.84731382 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.090385181 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.375102074 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.857360496 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.841347423 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.346262857 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.958018444 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.883586699 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.853198056 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.094991582 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.859525542 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.843044907 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.844205265 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.879844572 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.84998632 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.843625797 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.203614584 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.854672456 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.861258074 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.847825632 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.844896989 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.028407608 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.852126536 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.010015339 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.852676243 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.850868099 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.844855295 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.094203049 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.860572469 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.389626049 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.859020353 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.842765045 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.945074051 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.015612992 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.370500254 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.856809147 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.028356556 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.295316458 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.867009681 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.850509861 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.327638017 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.87097706 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.851737031 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.845199052 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.845641926 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.843580418 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.887273985 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.859493883 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.299270069 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.388650326 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.221280249 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.870845776 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.859803449 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.845632517 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.205567602 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.851928684 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.844604587 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.085181002 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.393040495 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.859901876 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.850361354 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.368593606 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.860607374 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.863480198 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.853207776 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.099272244 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.860274774 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.887842055 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.845486479 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.851721979 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.848585969 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.864324291 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.853689598 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.845428181 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.358772568 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.9674485 seconds)
  done (took 229.663349652 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.847081119 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.849187101 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.844719805 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.847654491 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.844124118 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.845438194 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.842974682 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.843842392 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.84601322 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.844005419 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.844559343 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.844644544 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.847146836 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.849165579 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.420562796 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.848284087 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.450092941 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.845955523 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.84517771 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.849482111 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.524928329 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.854257171 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.846274153 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.846218425 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.84556692 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.846345446 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.849374947 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.850414527 seconds)
  done (took 167.342166259 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.847367555 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.032099752 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.867714837 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.878283839 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.857302155 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.847514492 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.984628904 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.870299499 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.853996368 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.847436869 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.848264974 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.907800266 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.861671693 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.946164031 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.879261246 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.955353855 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.950984269 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.854196378 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.849389455 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.848324166 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.877521397 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.859859651 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.9095288 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.975566543 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.867175221 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.96264739 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.86977627 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.850978603 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.848801102 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.962279666 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.871424543 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.909241733 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.880895676 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.866562582 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.967277628 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.965322573 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.951771435 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.954298959 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.856426307 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.850569857 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.852553209 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.851162464 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.96393643 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.871607655 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.850647953 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.966811929 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.868620195 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.850165743 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.849231874 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.850937514 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.863125927 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.867905296 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.915021046 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.980573203 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.887142409 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.874064681 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.94911292 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.981928358 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.851185414 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.947451053 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.856046627 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.963209129 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.870977214 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.851760232 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.851429051 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.853910635 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.880403617 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.960109812 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.955932593 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.858508094 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.94899045 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.886430983 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.862717936 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.852017173 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.852549102 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.96431204 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.969848831 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.885942311 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.889663786 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.883993032 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.862438844 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.853555735 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.855096401 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.86787822 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.85681187 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.96566281 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.970368365 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.858098593 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.851848633 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.851868665 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.85095863 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.875595193 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.972305167 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.890046147 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.957479241 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.918296378 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.926417531 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.86690031 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.866105037 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.856778395 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.915151516 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.86720213 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.864443589 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.16118846 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.912844104 seconds)
  done (took 200.915604181 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.222933438 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.900270489 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.908054322 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.16388854 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.210315832 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.784239153 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.899038619 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.90077608 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.924817627 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.090364562 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.979318882 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.918309883 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.889614095 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.874417666 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.898497464 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.92378469 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.905910963 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.234194287 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.123504461 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.062325477 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.890507799 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.200864284 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.213408353 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.469327083 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.950173772 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.289564423 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.458696104 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.033238667 seconds)
  done (took 61.109870396 seconds)
done (took 811.953371103 seconds)
SAVING RESULT...
DONE!
