cset: moving following pidspec: 3925
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.058904467 seconds)
loading group "string"... done (took 0.62029936 seconds)
loading group "linalg"... done (took 9.91192727 seconds)
loading group "parallel"... done (took 0.186432022 seconds)
loading group "find"... done (took 1.567117747 seconds)
loading group "tuple"... done (took 2.190499829 seconds)
loading group "dates"... done (took 1.528402042 seconds)
loading group "micro"... done (took 0.236868076 seconds)
loading group "io"... done (took 0.592185775 seconds)
loading group "scalar"... done (took 46.795372707 seconds)
loading group "sparse"... done (took 14.421477042 seconds)
loading group "broadcast"... done (took 1.273522703 seconds)
loading group "union"... done (took 13.052310216 seconds)
loading group "simd"... done (took 2.744766685 seconds)
loading group "random"... done (took 11.0655578 seconds)
loading group "problem"... done (took 1833.480958663 seconds)
loading group "array"... done (took 27.602951212 seconds)
loading group "misc"... done (took 1.202654814 seconds)
loading group "sort"... done (took 3.991476146 seconds)
loading group "collection"... done (took 20.227929029 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.788734576 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.150127161 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.223319359 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.391525582 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.256391994 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160230831 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.179246304 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.595011984 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.040576368 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.294632226 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.158526251 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.615351531 seconds)
done (took 6.6111895 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.325202984 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.411698064 seconds)
    (2/2) benchmarking "String"...
    done (took 0.187392281 seconds)
  done (took 1.271492035 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.0792815 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.194001787 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.1198876 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.119689459 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.119319547 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106059204 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.11986164 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.118932256 seconds)
  done (took 1.560944509 seconds)
done (took 3.910426761 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.575553177 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.96163177 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.616683223 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.180850328 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.213205187 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.187847984 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.330777515 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.168212859 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.14074726 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.12778585 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.213489849 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.448981315 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.516861546 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.127138211 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.108171798 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.117751925 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.105104729 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.783785439 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08805667 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.140459855 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.616703101 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.132125162 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.128180617 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.133514024 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.212389407 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.143976708 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176109128 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.093715267 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.763448632 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.109552072 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.245867206 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.088719909 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.184256178 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.268111073 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.102071288 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.097950059 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.764453454 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190965677 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.12606136 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.122228067 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.748981779 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084150111 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.262262721 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.123473457 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.121804438 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.204482725 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.123774475 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.101413914 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09380078 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.105498547 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.183911321 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.503399732 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.111576656 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195588137 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.100100035 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.781736097 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10398002 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.166317937 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.155954034 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.123206651 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090795481 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.1174106 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.174387571 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.116786148 seconds)
  done (took 21.518529036 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.169748631 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.177060866 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100243479 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.164705062 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.15144486 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08687326 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.105496206 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082868268 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.135458535 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.266825346 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.149829749 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.182495919 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095840659 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092367398 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.151480072 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.26107121 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.130231972 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.129966309 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090590606 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.113907337 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.150070925 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116705808 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.100389222 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.117670373 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.180851865 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.226844601 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112745958 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129723988 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.1073345 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.123704639 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147913708 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.171655809 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.081557337 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.106150693 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.19787626 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127619318 seconds)
  done (took 5.723205166 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.240881119 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125889562 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.252728158 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.190288491 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.159337364 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.193094428 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156970734 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.319290468 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.272639095 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.149777948 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.188511448 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137336312 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100134144 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100433181 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085891246 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.1012614 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.772676695 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147750178 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204080924 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162625152 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110845488 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.10429876 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.747494904 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092842275 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.104564001 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108893763 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083459828 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.236792074 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109149698 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.536125844 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.104818488 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104584987 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.115828172 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.166083425 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140050707 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.145382695 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.152756957 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110639408 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087479343 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.251810043 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116974094 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084213364 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.136974588 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.14168101 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.142362139 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105464557 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.103109326 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.259717624 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.106906682 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128683077 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.178713402 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.208155919 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.146104717 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.104363919 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089281034 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.401761745 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.106793909 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.113467496 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.105188977 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.347843107 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.150064876 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.088560957 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.101784148 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108701355 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085231097 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.817884029 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116307124 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.209572132 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0847084 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.189924767 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105198788 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097324974 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10891922 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108407195 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.109707365 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.103781398 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083312027 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.104496453 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.101465841 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.092274218 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.127163698 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107661334 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.101510901 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154436714 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.122466106 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.123965682 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131943016 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09207333 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.102358429 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135325167 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086599959 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.106257341 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.182839937 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113405554 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.12686963 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106069705 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.134511079 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.102543647 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.250224282 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.100506509 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129751557 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106411764 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121084759 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.129678817 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106376668 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106865227 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.084495453 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.103044834 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165687614 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084852422 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.102731066 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.089526056 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.106355432 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.120500856 seconds)
  done (took 26.681903578 seconds)
done (took 54.586946732 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.552107597 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.132314476 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.133552102 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.133070717 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.13137553 seconds)
  done (took 1.839033462 seconds)
done (took 2.563865975 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.404782121 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201981371 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.129754549 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.201448505 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.115055959 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.224327027 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.190303539 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.128050113 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.238719426 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.091448289 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.218086528 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090702543 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.114907331 seconds)
  done (took 3.106131176 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.107620411 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.132735766 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090907284 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122946622 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.103137195 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104767085 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120392861 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.14970363 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101793736 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114003553 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102430047 seconds)
  done (took 1.972048108 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103132026 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.127515005 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091641803 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119877893 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.102274179 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102068059 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119845569 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.130542847 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102860322 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114923979 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084996986 seconds)
  done (took 1.922240422 seconds)
done (took 7.717106328 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.283112715 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.75076625 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.158278972 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.226862642 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.409897677 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.260817611 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.657618063 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.172120045 seconds)
  done (took 13.845325227 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.143292379 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.153750384 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091781624 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.112262503 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093692208 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.110050093 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107018715 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093753898 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107261135 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.108355004 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093637705 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.109049606 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095294173 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.107623483 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.108125946 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094228666 seconds)
  done (took 2.53256277 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.149037939 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.145286899 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098002773 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.121831508 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.115075663 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097062473 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.119694934 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114960633 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.111404308 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097855208 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119980964 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.119783491 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102650583 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.112828616 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116833198 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121159605 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096489468 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.117681504 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117871785 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101082174 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.123150936 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.114023675 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.119690821 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105266331 seconds)
  done (took 3.588881135 seconds)
done (took 20.693313384 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.191379149 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108290812 seconds)
  done (took 1.034922457 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.161627771 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.16294543 seconds)
  done (took 1.063428379 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.139500457 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092353278 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.153200962 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.127645955 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.107789989 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.091012659 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.16345183 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.092261079 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.107149571 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092585254 seconds)
  done (took 1.909272697 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097493046 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112790893 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12072424 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.159123318 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.121504621 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097126342 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.11303193 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112790398 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097930508 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.108881327 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.117456773 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.133260356 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100933694 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.134882867 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.113371715 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.118786052 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.121969091 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09984414 seconds)
  done (took 2.824555101 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.211595812 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.109685558 seconds)
  done (took 1.065272476 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.098636966 seconds)
    (2/7) benchmarking "second"...
    done (took 0.108343359 seconds)
    (3/7) benchmarking "month"...
    done (took 0.112248276 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097054452 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.107342851 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.105810443 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.091828109 seconds)
  done (took 1.465040079 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.56495087 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.283509043 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.40250562 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.132591245 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151351634 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.393444271 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.151612104 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.12187966 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.122180258 seconds)
  done (took 3.129014498 seconds)
done (took 13.234281015 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.099960435 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.251634595 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.622457362 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.131033438 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.108140591 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.151622626 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.342248736 seconds)
done (took 2.457089946 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.395492708 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.168880233 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083437453 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.106394906 seconds)
  done (took 1.498120328 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086430297 seconds)
    (2/2) benchmarking "read"...
    done (took 0.116213927 seconds)
  done (took 0.952637324 seconds)
done (took 3.209413973 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089899127 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.103392815 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08847888 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.104578241 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.088686508 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.105356876 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.141269412 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08696411 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.106348413 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.105818977 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.088136226 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.105609659 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.088063836 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105325512 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088206007 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104542256 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087593049 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.104240268 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104941546 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089315376 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104561155 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088402409 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.104456538 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088832077 seconds)
  done (took 3.164797606 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.115473522 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.110616409 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.113473728 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096234239 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.114255932 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113278562 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.113101478 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092575518 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112846013 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.108098478 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096900151 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.113691526 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108610798 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097270635 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110589102 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.114194126 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.112775492 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093717711 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108814699 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.113360092 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096953931 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109894194 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.115024003 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097166964 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.114820863 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114746452 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092857883 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110576683 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113905933 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.113581281 seconds)
  done (took 3.996271698 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099001707 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.102733095 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090254333 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116938785 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.10306755 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090719601 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102816741 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087485882 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.108846398 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088759504 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109249922 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.105521711 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08714698 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108202802 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093552823 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.110919777 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117240581 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087319008 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.103923699 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092324917 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111030743 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087026712 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.107211575 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106418156 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091054955 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.102918561 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090069352 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105255524 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090874984 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.107026717 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.109686567 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093179671 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.106334774 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101727266 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110158661 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.106962215 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095921717 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10481343 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092179088 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.104511123 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.104236158 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090808609 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.103042196 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097659347 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106089535 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09081837 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.104728679 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108856595 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.09253272 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.112355048 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087020944 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.104946393 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.109906972 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093137203 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.111004169 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086781749 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.109196634 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.102627735 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093840596 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.107035656 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086679397 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.104015614 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09471546 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.109139715 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123665337 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097468002 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.103886015 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.108197451 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090469243 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.110202734 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091364481 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.114616832 seconds)
  done (took 8.040840121 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.106434707 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119357251 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.09118418 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109258209 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106929149 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090317276 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113709994 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104383458 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090314972 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114847015 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103752266 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089683279 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105657672 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088695868 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105586161 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106004438 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09731692 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104565054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.103226796 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08958197 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104461037 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112384751 seconds)
  done (took 3.025532316 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.277325451 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098755598 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.163676077 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.126257139 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.131813062 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12618737 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112959391 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098390909 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11337713 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.120070818 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118830539 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097641449 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.131898947 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119359648 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118624105 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105126945 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114737753 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.121931876 seconds)
  done (took 3.063114106 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.110977551 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.111775646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.136606573 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094475289 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.112190134 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.110318112 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103643968 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.128214178 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110740935 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.109841741 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.105881955 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111653197 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.111387986 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094378264 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110983566 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111209039 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094979769 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111878264 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121576582 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103438838 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.120580568 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121537305 seconds)
  done (took 3.21671548 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116733349 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110542386 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.148445092 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.116353371 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094225633 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109759177 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.117822025 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095202006 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119814036 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110063453 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096819333 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.111462961 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.119918527 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095728662 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.118947627 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112507222 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095582241 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112640785 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094222038 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.110968447 seconds)
  done (took 2.976856782 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191752602 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12667929 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11116246 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14205702 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127417823 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.126212886 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124529742 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128294219 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127084233 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144217128 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109755306 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127577156 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140755187 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.135754991 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126413618 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124901325 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.142540037 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.142048817 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126512223 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127486306 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143792358 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110102875 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.141657491 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126242497 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125659429 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108248067 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1233466 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132393317 seconds)
  done (took 4.440241091 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091203999 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107490787 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091515043 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109011272 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090704658 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.108491193 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091254146 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108206954 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106997529 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091667657 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107872334 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091689829 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108365211 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08960061 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108575517 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.106899008 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091668695 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.1084318 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091141617 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108747559 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089846091 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107163311 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090801499 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109377128 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108743427 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.090707792 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108750428 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0901631 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107269653 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090934638 seconds)
  done (took 3.780910485 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105421456 seconds)
    (2/2) benchmarking "in"...
    done (took 0.136911044 seconds)
  done (took 1.024087104 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.10235111 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130137288 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.108686544 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094300752 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.12275254 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092504981 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.122000478 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123193092 seconds)
  done (took 1.67738245 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.163797892 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.164829702 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.099446526 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.125181755 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162720492 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.155430189 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160968373 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.11806467 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.098391405 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.108722594 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.158779728 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.106680425 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.099141717 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112107988 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.116561979 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105565383 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.112500323 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.120565937 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101875107 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.111820319 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116112989 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10534461 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117521226 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.122924539 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.09185472 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11923452 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.119779259 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106005272 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112019681 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.119130652 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.095730233 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.111082054 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096914229 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.117320132 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111636729 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.16110964 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125608178 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09615595 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.116846148 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116554464 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104791871 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.113362658 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.099065007 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.114417939 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.120199928 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099174026 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.119705036 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.111479689 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08977731 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.111203096 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094678951 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11135822 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.110290513 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099636508 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.116960104 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.125459972 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095641149 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.113321259 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.112999555 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092824235 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.114519139 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.112717119 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100951344 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.114787698 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.118831167 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.098426616 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116925294 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.112111098 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095833879 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112201302 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.098195446 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.132686593 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11859436 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.116538294 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101392826 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.113443597 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095239768 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119198256 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116879549 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10051999 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.118762954 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121343176 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100851119 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111985533 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.112648737 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102135403 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113354787 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095997096 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.109176981 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.128354845 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09605284 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.113661157 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.107915741 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096017392 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.112027279 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116251298 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.090846197 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.119363428 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092923134 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.118056834 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118478007 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096944967 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.119639139 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119110742 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100628229 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.116659376 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.160190729 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113144191 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0932643 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.115621887 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100557282 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.112442799 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.119575793 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092646335 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114734164 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.111623585 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101254005 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.118192561 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095765861 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.117523491 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120874855 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.118797591 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096754483 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110623374 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09403062 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.116718384 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.123491952 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.100676639 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.114939263 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.112605998 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095282363 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.118675093 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098000866 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.115997984 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119574224 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095354335 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.112400343 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.11389945 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10952324 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.118956901 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.092834849 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.117462122 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.119692625 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.116942077 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097000618 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.119543073 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.092530625 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.109844564 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.118608051 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.094034103 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.112698317 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123247845 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.093584015 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.116170287 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.094540673 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124483363 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.1150159 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10063475 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115656928 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.118969943 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100234155 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.109451797 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11517519 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097334632 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.121710534 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.095309654 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.114256885 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.112746136 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101038376 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.110881924 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.117736062 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.090741522 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.124594064 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099726703 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.116197864 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.116810479 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.094134455 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132611886 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.129380809 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100731555 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.118656276 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.119164453 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098321337 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.117822637 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.118613474 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101149322 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120888934 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.115357921 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.098368322 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120605311 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.095515984 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.120487894 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116993711 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101786214 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.11021441 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.114288779 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.091255159 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.118393623 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.102110828 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.120061986 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.120961029 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095661033 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117366396 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126080818 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.095590272 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.119612643 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.090177709 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.120011781 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.125274093 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101147861 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121909678 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.121375433 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096759719 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.11518737 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125791323 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097243923 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.118594965 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095429451 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.111665931 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.110455396 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100754981 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.118200237 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.094184352 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.113943072 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.120866555 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102247086 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.117809016 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.110568689 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099060876 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123975191 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.113306877 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099053363 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.114623098 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.117648015 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107833619 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.111726307 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.114196468 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.101800696 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120210873 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092987687 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.120004806 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117551674 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100635448 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.117437836 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09738516 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116822075 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122617414 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.096021325 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.115302724 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.115068648 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097867093 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.112240251 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096203263 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.120970493 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.115930899 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.095005759 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124673581 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122588833 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10087403 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117855382 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.120315524 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102099681 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.123287307 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117917293 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102437803 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.114465759 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.091730462 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.116342223 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.111728765 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096055851 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.114564325 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.120768667 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.097537437 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.119173709 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098185108 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.124060033 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.117216798 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102097415 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.133258078 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.113411954 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.111485316 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098000602 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120756987 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.095059036 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.115647241 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.116706689 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100790982 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.120204424 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.122674665 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.096031854 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.11527327 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100907183 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.115959746 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.122693804 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101591035 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.12139215 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.11485882 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.0965443 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.113739216 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121354146 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088019509 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116094553 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116574824 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099249438 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.117298884 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.11684515 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.096087599 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.113283692 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.095096919 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.12276714 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.118123612 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099517424 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.119590683 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.1175339 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.095934601 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114790473 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103434646 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.11948542 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.124910456 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094062963 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.111839698 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.112668401 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100719624 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120532113 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101562119 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.116226414 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119924336 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102391411 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.118591048 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093972405 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.127172903 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124282506 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103526465 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.128227041 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.112511986 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09615144 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.128341623 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.116227839 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097142734 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.116884218 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.092784221 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.123385727 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.123206895 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.101725978 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.119318349 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.113657456 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095492508 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.123475567 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118285376 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099783188 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.117262465 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100708378 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.114813957 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119182678 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.1014869 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.120411677 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102656937 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.121785469 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.120244737 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.096399004 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.12429816 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116539249 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.091465689 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.112302665 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.096848506 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.124204834 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.114025746 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100201834 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.121147815 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.116731035 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.097587757 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120731276 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.095964713 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.123815548 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.1219397 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.097602384 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12970236 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.117492913 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.097557816 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.121824957 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10012502 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.112446311 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.119302635 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097621874 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123176279 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113995096 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.096393151 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115403009 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116696134 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.092274605 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.11671429 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096100903 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.117644196 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108658849 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.097802936 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.122380968 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.113401128 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09197286 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113641126 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.09085322 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.117211151 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.123394638 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.096959523 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.128321145 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.122702187 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.097644081 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.119110632 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.123216525 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100301526 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124639727 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.116386408 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103829486 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.115618922 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.123558243 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.099922217 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.124502595 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.096855285 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.115430436 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121022691 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101201352 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121052745 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.124367794 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103088826 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.114544137 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.092331585 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.119161251 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.1175225 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107742896 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.126129624 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.117526294 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098213857 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.119042698 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096226138 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127101543 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.115462126 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.096262171 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.122114349 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.126328589 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.098717935 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.11634844 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.120441998 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099540386 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.124672078 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.121278329 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.093384502 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.121378059 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103306594 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.120124173 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.117813815 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.097323634 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125315756 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.121978424 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.096902986 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.114762158 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.129291689 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.101347986 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122234602 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.115036149 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101450295 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.118806222 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098644826 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.126108722 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.120312188 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10188106 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.121333282 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123293691 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108090048 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.112759826 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.117563558 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110341188 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121670886 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.123798473 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099316349 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.12075272 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104066546 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126081816 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.120756606 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.093572314 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.115267192 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.119214637 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.093393705 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.119770968 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10776835 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.119865006 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.117478306 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10057849 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121844895 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.118770769 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097664043 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.111729572 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100129164 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113626759 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120968007 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088769933 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.110888336 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09349742 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118835785 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116453282 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.098575314 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.116952195 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.118223286 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.095069474 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.120677269 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.125711415 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100834731 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.12470223 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100591835 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.119848407 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.121850969 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109735221 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.119088613 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.120897728 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111269743 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.12605542 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122277856 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.101462264 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.126881248 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.125328134 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098663449 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.126266741 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.098535751 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.121472841 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.126914521 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105664145 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.136142485 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.121463418 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.093994962 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.124009317 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.119435258 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.094401706 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.128101764 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126056548 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104542482 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.123275613 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.096370752 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128306618 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.127825511 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.122609169 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.099015864 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.120173733 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100089195 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.118959346 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.121293193 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.097849281 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.127048028 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.12614935 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101978129 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.12868975 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.094409068 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.130984392 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.126927077 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105562972 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.118051847 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.115913273 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.094668042 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.121753782 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105053742 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.125186854 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.120299337 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101267174 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.122432433 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.101646658 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.123257827 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.119749391 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101722993 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.120004432 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092084708 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118903469 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.115466235 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097292697 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.11392922 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.119520002 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099180173 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.118795263 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.128630666 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102711572 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.120698459 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.11899397 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101743534 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.12193946 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.099147615 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117581399 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.113866831 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090581602 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120657273 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123959473 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101921562 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126552112 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107267131 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.121717022 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.126354529 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107456439 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.127240117 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.119223767 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.103729988 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.121441129 seconds)
  done (took 67.636570328 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.182375158 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106915148 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120891423 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120504462 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.151689917 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102153576 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121801107 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101914874 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123248155 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130500414 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094392975 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115076192 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.140454703 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.148500174 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.144682688 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.131343173 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115939675 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096768481 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115879144 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097442649 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.140874177 seconds)
  done (took 3.45445005 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.124546078 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.141710094 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136653878 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.137826814 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.126891715 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132466156 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.133882658 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111492039 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.13672714 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12731751 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135339316 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.132193749 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128434609 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.128160988 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107658233 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12878485 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.137342658 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126378137 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133338189 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.132372675 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107423097 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.133694105 seconds)
  done (took 3.692647701 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.109801257 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.124622442 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.104501083 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116304966 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.118699215 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.093674693 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.126198046 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.093429557 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.125293806 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116237815 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091040689 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.119339358 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.125808483 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.099434928 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.119240676 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098209191 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.131570323 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.124040304 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104471758 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.121697539 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.136474351 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.093083268 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.117990509 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.090670462 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.128333973 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.120641699 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097858025 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121525574 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091275804 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.119671755 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.115137787 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095619399 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.118329353 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112852039 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090402354 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.118826279 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.098095745 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.115225089 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.094094041 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.120874695 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.116104467 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.099073376 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.124276592 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.114844631 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094048337 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.11786053 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.119246584 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095138912 seconds)
  done (took 6.196442614 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.168586415 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.19140605 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.132199768 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.166324347 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.139508593 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.136037454 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100108259 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.163142407 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.123161772 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122823071 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.142179658 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.141612552 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105583667 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.128697189 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.132313694 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.129521432 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108349275 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.12268412 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.134601874 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101430348 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.13344171 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124525496 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.140819292 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.140172397 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.1270777 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103970545 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12203365 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.134179187 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.145819437 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.134975889 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106773791 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.132415896 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.140779968 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.12983802 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123374277 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103866085 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.141450194 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124052902 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126631871 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098755124 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.130752395 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133806874 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10635883 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.143430941 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12854292 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.128630369 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123973872 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.098467913 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.139638542 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124651439 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.133662929 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.144374115 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126008994 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110201777 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.132404028 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.142873068 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.124758167 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104920388 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.12579244 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.139918907 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.122589656 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105712559 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.141503548 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.123032816 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.13584527 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.142421282 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.131410418 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110853177 seconds)
  done (took 9.778623664 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.138678669 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.134730256 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14487659 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.141629635 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128157875 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.104904742 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.126769512 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.127002713 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127424251 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.135891901 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105945985 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.238542184 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.101178065 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.136135659 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126897779 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127810137 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105150804 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128522633 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127818869 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127624607 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.106213108 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.142467116 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.127678474 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.14166165 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143908251 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123532189 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105440613 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127716448 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.141120366 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127981369 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143837582 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128011102 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106400971 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.141699149 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.144303719 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.128456606 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.118871901 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106477379 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.127813932 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127573854 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123823602 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120116368 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130028937 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.123394948 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126974568 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107307417 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.141834763 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.143522799 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.135374947 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136625349 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128050603 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.141301092 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10487847 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12823834 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.142381133 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.151441477 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142514778 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.142960064 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128125721 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.143163753 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.142604458 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.152698115 seconds)
  done (took 9.006971544 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101130098 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121926782 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095467906 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116432124 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095235219 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116515505 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093688812 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116652136 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11627928 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094891275 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116547907 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094849205 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116309882 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094519993 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117896034 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116964882 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09550339 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115740089 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095103118 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117015521 seconds)
  done (took 3.021223519 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.113492105 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.149860904 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124431423 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107619373 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.122457814 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130062327 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.120485599 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100029066 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121066218 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098131108 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.134758617 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.13289907 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121132064 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.129340642 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111024696 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.129100049 seconds)
  done (took 2.817642365 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.129632383 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.147102712 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.177339953 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.125815558 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122874958 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106587095 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.122968957 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.12306672 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.097093263 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.128153503 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.12543055 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.103167446 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.120776788 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.120877575 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.099939018 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.124881948 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096843715 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126130293 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.120590455 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.180024478 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.128729033 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102329148 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122058381 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.124611143 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102655345 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128296812 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.130711339 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099443718 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.123301812 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122683012 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103704479 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130876775 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120664062 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105388653 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.121486575 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122282697 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.099051888 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.122456351 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.12452217 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.099620399 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.123310313 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124021864 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10067652 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.123914543 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096913099 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122556672 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.119223444 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107356095 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122922306 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.123735411 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099947048 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.12700157 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.126577476 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110801717 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.13041849 seconds)
  done (took 7.474589433 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.120006501 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.129658559 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.143848384 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102579724 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12912788 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.130440368 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106618801 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.131610264 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.129607591 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102784758 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.130329713 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102884146 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.128605525 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122957831 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.1012708 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123514152 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.117587257 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100914277 seconds)
  done (took 3.03811989 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112831918 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.126687573 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103241321 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121002421 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.12113424 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099205615 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118986002 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.097170952 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120917898 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.120309567 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098646391 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.120196244 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119193041 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.099644336 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121016345 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098344229 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121141364 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119402242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099268362 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.119790518 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09860214 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119771768 seconds)
  done (took 3.362963143 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.119247652 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.1869215 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.13367874 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.187952532 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.122048001 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.119100951 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130511219 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098461803 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139062776 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118614602 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.095982097 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.119256719 seconds)
  done (took 2.459234539 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135925283 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167765987 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123089798 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0988389 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136379264 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128370486 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128428008 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105454588 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140709013 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147318095 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129499488 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139587305 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140453471 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143274642 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13575411 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13592052 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106365312 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12946185 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122893768 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152201265 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10548802 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141154278 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129390581 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127742934 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128921002 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143983457 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117496992 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147832004 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131189667 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141993034 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13633978 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128953841 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142728816 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146589305 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099705318 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141266148 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12895809 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152898992 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136961318 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14588986 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099324683 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136067037 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140932227 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139218029 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141772384 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129014479 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116923146 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130901127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129807112 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.161588094 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135592462 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145284323 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136200317 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140797984 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141477297 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16295945 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147168333 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145241379 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135825571 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146253254 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121873421 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13696557 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143168702 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145912909 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135917589 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145065436 seconds)
  done (took 9.806259077 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17824295 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101975758 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129180985 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146792714 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143624958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129480685 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106834647 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13027477 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12981413 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101681218 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.207195872 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106881232 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144752347 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14397829 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128917273 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129870083 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12966941 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123015078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124948481 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162634487 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128215183 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144649853 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143528936 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144366447 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146329619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136455126 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107432764 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130938184 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128986949 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12979304 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138317354 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107877975 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144138014 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125360793 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145404354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128681599 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108041522 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13905859 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130135045 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135309506 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144255999 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154577646 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107418823 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13321151 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147485747 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130173784 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130148963 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101104362 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128681471 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126245509 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148337175 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148104026 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.148340874 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144866886 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106749866 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131079638 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130074599 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12915628 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10946585 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136391729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14399358 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130394643 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163329162 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130268042 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106968542 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145231299 seconds)
  done (took 9.699951882 seconds)
done (took 180.602626314 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.171421801 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.186118781 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.161943557 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156219538 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.11703863 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.152061479 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.126669621 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.161961575 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.116600215 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092535577 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116858494 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.120587639 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.159204282 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.115975692 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092620706 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.121009246 seconds)
  done (took 3.062738083 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.225680059 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.317791534 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.137875383 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122125352 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102082891 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.119704631 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121091844 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100235285 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.117912324 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131082615 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.096948794 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.119959244 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.13148388 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.0956679 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.117428641 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.118278437 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108461259 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.118873338 seconds)
  done (took 3.309382654 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.128195572 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.176048344 seconds)
  done (took 1.211869103 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.139678134 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.229145379 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.306480164 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.178629716 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.148696523 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.146013829 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.181887603 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.138227864 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.213606325 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.143303883 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.144220773 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.123673925 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.12710382 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.132523689 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.134944183 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.124866676 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.131419541 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134664882 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.133134885 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102785725 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147243875 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125062689 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.131576197 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.110075252 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.225134365 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.142374977 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102013591 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.125509157 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126815386 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109025706 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.131151636 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.143327158 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.141517778 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.214747585 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107856043 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.211466768 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132708487 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.349462745 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.132103644 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.123233955 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.107160281 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.130278521 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.140980579 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.124038998 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.1019219 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.132925718 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125913868 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102056777 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.134307687 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.136900594 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.134675989 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.132192798 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.187104773 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.135712994 seconds)
  done (took 8.882273602 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.932642983 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.166807802 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098633493 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.081164408 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.155842024 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11660438 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.932429059 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146512742 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.26564561 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.927065159 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140555853 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135990357 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.275775653 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.303874063 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.198044426 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.380359909 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.790143624 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.138125196 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129339758 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.197242688 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106379894 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.155000116 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146178498 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.461362855 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102164327 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121983012 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129183016 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112564534 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.211132124 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.097261724 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126752774 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.232756892 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291930754 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.24303871 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12409183 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120443919 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097853116 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.220657964 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.31082179 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.260295748 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.193003718 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11798806 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097708711 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135821587 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.145184902 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117944654 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193758356 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.226383555 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.202081011 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126914607 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135320746 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13234577 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111391791 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.211660968 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118957593 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.382051944 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.384977867 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120919435 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131701737 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120064176 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.331425496 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097785182 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.268393631 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151731313 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.253236874 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121330071 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862315347 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.216753921 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097012716 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131959828 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130888421 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105371572 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135582216 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.186189183 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.420974911 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115653468 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128074463 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121752835 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.260469509 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09772732 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119756115 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.191379351 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124937169 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132822875 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140607779 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114541661 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.222662484 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278141738 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139057689 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132758672 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127450374 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135473417 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100706426 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.263032225 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.262284978 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.185033865 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.268193845 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136453073 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.191373845 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.21649299 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.135049576 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.198493271 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.13174378 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.142271605 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136286688 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.258726672 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.163072987 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122045581 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103672781 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130660817 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.166485512 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125246045 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131542258 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.196040838 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.505912017 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.193980509 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.122188536 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125765963 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109015137 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.212125509 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130440982 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.300531358 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108373546 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.220680158 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130171132 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.093874547 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.132463806 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.215605267 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113780003 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132737909 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136828341 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132543162 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.279405922 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.261433327 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.138766069 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.275533898 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.195807661 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133184213 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.224198882 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131625927 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197751123 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1335524 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135451122 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100435225 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.848577511 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137759404 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131911957 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127065546 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.21162449 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096932778 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123705843 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.120703938 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095307022 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.829974932 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127065301 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.095054562 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123069961 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132806853 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12992768 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107485951 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128311152 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.212921833 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.278459112 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.135727059 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106394937 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122110642 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.186440025 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.126117704 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.121453741 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09765912 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.121721457 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.134127586 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104224519 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122932838 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.223655491 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.188918442 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.263882507 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568220856 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12220678 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.097023554 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.299119086 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096681288 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.373908939 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109814777 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.290374998 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.195684108 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119267715 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381259216 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.219321122 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.226297358 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.100514011 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.22443958 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094265795 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130423394 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.213331468 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.097906253 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131723869 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.209709226 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116449222 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139598663 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.229943317 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098568374 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.280166833 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.094381735 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.221271581 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100705452 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136849363 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.375546956 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099158753 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146278706 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.211055441 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104396004 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.122121291 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.656898446 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.09858771 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135914389 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133130284 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.264956008 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.217122117 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10915808 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132212385 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136423011 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.189288418 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.263555359 seconds)
  done (took 49.933079525 seconds)
done (took 67.305106096 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353663023 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.297862 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.353556762 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.248366175 seconds)
  done (took 2.281237614 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.256649931 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.171334859 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.228105163 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096577213 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.240387329 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095775758 seconds)
  done (took 2.032067882 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.569636818 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.463336513 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.393341882 seconds)
  done (took 2.378170814 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.290833742 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.28619262 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.381173919 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.516406147 seconds)
  done (took 2.563123437 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.309676708 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121577316 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.140058949 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.193570412 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.271017029 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.293380262 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.16938651 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.220853107 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.151293007 seconds)
  done (took 2.870460557 seconds)
done (took 13.074608615 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.399847501 seconds)
    (2/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.356190119 seconds)
    (3/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.258595519 seconds)
    (4/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.177908756 seconds)
    (5/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.168587618 seconds)
    (6/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.138236515 seconds)
    (7/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.251504545 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.175655942 seconds)
    (9/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.218184549 seconds)
    (10/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.176502725 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.105589694 seconds)
    (12/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.118749232 seconds)
    (13/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.268971458 seconds)
    (14/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.14742375 seconds)
    (15/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.179387915 seconds)
    (16/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.279675315 seconds)
    (17/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.153947217 seconds)
    (18/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.285648183 seconds)
    (19/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.114554536 seconds)
    (20/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.293766961 seconds)
    (21/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.145365719 seconds)
    (22/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.162700102 seconds)
    (23/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.236280744 seconds)
    (24/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.115881287 seconds)
    (25/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.142402563 seconds)
    (26/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.169612048 seconds)
    (27/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.120445247 seconds)
    (28/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.106588479 seconds)
    (29/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.326642099 seconds)
    (30/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.10582391 seconds)
    (31/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.160720236 seconds)
    (32/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.128987491 seconds)
    (33/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.329984458 seconds)
    (34/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.104861209 seconds)
    (35/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.162342794 seconds)
    (36/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.227023162 seconds)
    (37/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.140878339 seconds)
    (38/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.223550076 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.119527209 seconds)
    (40/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.214658334 seconds)
    (41/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.222629973 seconds)
    (42/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.236236322 seconds)
    (43/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.152182646 seconds)
    (44/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.101377132 seconds)
    (45/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.305655861 seconds)
    (46/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.175887503 seconds)
    (47/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102820241 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.132154095 seconds)
    (49/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.140164857 seconds)
    (50/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.256986396 seconds)
    (51/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.227386508 seconds)
    (52/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.127118674 seconds)
    (53/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.120283187 seconds)
    (54/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.092306554 seconds)
    (55/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.189380138 seconds)
    (56/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.229786346 seconds)
    (57/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.106110292 seconds)
    (58/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.133856513 seconds)
    (59/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.213387076 seconds)
    (60/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.211894016 seconds)
    (61/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112014516 seconds)
    (62/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.123793976 seconds)
    (63/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.126702663 seconds)
    (64/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.237617562 seconds)
    (65/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.281066792 seconds)
    (66/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104393035 seconds)
    (67/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.170428434 seconds)
    (68/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.180274847 seconds)
    (69/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.101702654 seconds)
    (70/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.223983005 seconds)
    (71/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.133818002 seconds)
    (72/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.106216154 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.163500235 seconds)
    (74/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.154810303 seconds)
    (75/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.185561484 seconds)
    (76/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.089372454 seconds)
    (77/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.17207655 seconds)
    (78/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.144046487 seconds)
    (79/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.14361904 seconds)
    (80/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.135992913 seconds)
    (81/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.114235207 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104209225 seconds)
    (83/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.224039395 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.146085748 seconds)
    (85/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.208960336 seconds)
    (86/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.169978919 seconds)
    (87/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.089000787 seconds)
    (88/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.231519112 seconds)
    (89/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.132576184 seconds)
    (90/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.124611695 seconds)
    (91/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.117950022 seconds)
    (92/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.141917087 seconds)
    (93/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.088856142 seconds)
    (94/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.132519889 seconds)
    (95/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.095893352 seconds)
    (96/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.120242601 seconds)
    (97/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.16519306 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103847061 seconds)
    (99/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.132227012 seconds)
    (100/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.093810779 seconds)
    (101/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.183562265 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.131104911 seconds)
    (103/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.143275643 seconds)
    (104/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.244596535 seconds)
    (105/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.207222991 seconds)
    (106/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.106693216 seconds)
    (107/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.115037438 seconds)
    (108/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.12767582 seconds)
    (109/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.114927703 seconds)
    (110/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.108933336 seconds)
    (111/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.207917283 seconds)
    (112/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.164042046 seconds)
    (113/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.219573578 seconds)
    (114/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.138029501 seconds)
    (115/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.089547791 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.122997618 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.131551224 seconds)
    (118/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105617291 seconds)
    (119/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.164802313 seconds)
    (120/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.093955438 seconds)
    (121/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.207522217 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.142096291 seconds)
    (123/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.224736487 seconds)
    (124/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089897653 seconds)
    (125/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.11534663 seconds)
    (126/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.139059489 seconds)
    (127/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089167696 seconds)
    (128/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.114212307 seconds)
    (129/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.135244453 seconds)
    (130/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.115196052 seconds)
    (131/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.088985962 seconds)
    (132/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.121038949 seconds)
    (133/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.193666082 seconds)
    (134/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.207809024 seconds)
    (135/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.206557452 seconds)
    (136/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.089676544 seconds)
    (137/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.131554927 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103601867 seconds)
    (139/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.115064308 seconds)
    (140/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.088064699 seconds)
    (141/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.162732884 seconds)
    (142/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160095263 seconds)
    (143/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.089294884 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.13038402 seconds)
    (145/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.178566396 seconds)
    (146/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.182498451 seconds)
    (147/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.106677233 seconds)
    (148/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.115504695 seconds)
    (149/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.106258571 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.131350287 seconds)
    (151/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.114483127 seconds)
    (152/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.089246724 seconds)
    (153/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.142216342 seconds)
    (154/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101132412 seconds)
    (155/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.130665184 seconds)
    (156/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.14109006 seconds)
    (157/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.121825021 seconds)
    (158/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.123139168 seconds)
    (159/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.095426297 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.129735877 seconds)
    (161/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.15748442 seconds)
    (162/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.1447995 seconds)
    (163/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118995559 seconds)
    (164/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.115381024 seconds)
    (165/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.088472794 seconds)
    (166/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.114725889 seconds)
    (167/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104974887 seconds)
    (168/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.131432974 seconds)
    (169/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.132574311 seconds)
    (170/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.209216872 seconds)
    (171/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.115565309 seconds)
    (172/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.135272087 seconds)
    (173/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.089399154 seconds)
    (174/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.134082268 seconds)
    (175/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.089892097 seconds)
    (176/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.115339598 seconds)
    (177/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.089122804 seconds)
    (178/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.132614131 seconds)
    (179/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.207488901 seconds)
    (180/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130328522 seconds)
    (181/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.090235237 seconds)
    (182/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.115590644 seconds)
    (183/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104232795 seconds)
    (184/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.115703973 seconds)
    (185/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.089073223 seconds)
    (186/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.15949604 seconds)
    (187/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.094693351 seconds)
    (188/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.131806357 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.131166603 seconds)
    (190/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.210365099 seconds)
    (191/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097007339 seconds)
    (192/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.132570589 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.096954272 seconds)
    (194/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.150786698 seconds)
    (195/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.133071435 seconds)
    (196/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.10565351 seconds)
    (197/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.144643212 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.146811676 seconds)
    (199/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.089834103 seconds)
    (200/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.116395722 seconds)
    (201/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.108997238 seconds)
    (202/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.122224418 seconds)
    (203/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097682665 seconds)
    (204/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.115589801 seconds)
    (205/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.089351066 seconds)
    (206/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.115835756 seconds)
    (207/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.09025438 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.131378683 seconds)
    (209/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.115657725 seconds)
    (210/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.111889313 seconds)
    (211/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.116033856 seconds)
    (212/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.096654969 seconds)
    (213/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.132768465 seconds)
    (214/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.089685358 seconds)
    (215/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.132830568 seconds)
    (216/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145390673 seconds)
    (217/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.089758655 seconds)
    (218/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.115795427 seconds)
    (219/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09786337 seconds)
    (220/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.116014269 seconds)
    (221/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098406478 seconds)
    (222/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.116578534 seconds)
    (223/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090298241 seconds)
    (224/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.115850851 seconds)
  done (took 34.225987557 seconds)
done (took 35.181800141 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.529318183 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.140166429 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10894187 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.136770404 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.191176441 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.140193244 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.116269475 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.140451869 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.140434428 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.131857501 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100042332 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.14057568 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135211303 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.194388718 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111827676 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.129828442 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.128197019 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113628726 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.143362148 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.144560558 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.193839573 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127971439 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114561688 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128914988 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.193350016 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128207489 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109102893 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.137461891 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.140590349 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.106454993 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.135412141 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126950401 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.119022404 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.143791154 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125179732 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.106530425 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124857501 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097607037 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.13520088 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.133912655 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.114807948 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.135219865 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.138898932 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102290745 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135051503 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.131686866 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099061172 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.141205194 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.125108211 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109469143 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12874953 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.144611201 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.105949036 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125436579 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.09837222 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.130010926 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.141011095 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099231516 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.142399117 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125992306 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.101966767 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126761542 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.108623552 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126534534 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133136349 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10149143 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134379463 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.136933444 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.106419939 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129940968 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098476795 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.133446804 seconds)
done (took 10.665107682 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111400509 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188924072 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.194285756 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.226693056 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.159245179 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11817047 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.149558008 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.158948259 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.145250821 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.152532192 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137917689 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158015188 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.198801873 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.14177019 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.144721136 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.134518567 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114942691 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.140711013 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.201729955 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.153435745 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164538183 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.140869066 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.163900882 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123420766 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.133223868 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156687285 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13561941 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.107766824 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.134571365 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.150477538 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127837524 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.134292906 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.135769377 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.154665614 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.11795921 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140184645 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.145574667 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.107597872 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.133896863 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.132083559 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.147885954 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12449327 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.132481215 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.145460472 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.108593328 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.140738413 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.140528698 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113872699 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.136131892 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.135755533 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10957665 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.165542534 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142272211 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.142564748 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.142100744 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.132068906 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.141751384 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.139674597 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109633081 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.141064725 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132619874 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106440744 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.136804828 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.162457198 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.135765132 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.113917546 seconds)
  done (took 10.355530319 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130116726 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.168465449 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14441866 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.144398442 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.140541508 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.097400374 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.124641831 seconds)
  done (took 1.976010875 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102062267 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.19623975 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.194158032 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.224502073 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.18885514 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.205342769 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150557614 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.098072134 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164858074 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137247416 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.196078382 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.254649334 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.107632523 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.146280886 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.199262238 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126766249 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.199841866 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126879458 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112501095 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.194505208 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145387486 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160142912 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.142087023 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.099007398 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.188348877 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.129156222 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.277967163 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115921962 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132913152 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.137602256 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132441284 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.238957644 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.190099443 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115142756 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131689545 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.192784091 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.188982494 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139539909 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.206495307 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.13304001 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.191656988 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.138372178 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.112810464 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141236219 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.137814001 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.177251705 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.116109852 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.142126625 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.136241877 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19774725 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.140123329 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.190847121 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.108109508 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.142190952 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.140156166 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141628841 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.120653124 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.139368856 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.198423244 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142557678 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.191169128 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.190509761 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.190811487 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.19091395 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150685025 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.190152979 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.187555899 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.13747547 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.134948455 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11289042 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.191070305 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140684042 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.140085716 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.178031673 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142502441 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.19207524 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.191535925 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107796653 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.142392644 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.132385567 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.108786602 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.126523695 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.180664116 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.140149448 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.107530437 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147876289 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140344712 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.138697944 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.103224845 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152998585 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.137904351 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113025411 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.144171928 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.137706687 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143430987 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.195766701 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.139836252 seconds)
  done (took 16.097783093 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104626931 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.127866872 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105531395 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129825281 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.127788482 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101427795 seconds)
  done (took 1.735984787 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.137582598 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.142048678 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151270336 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.141067918 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.197436701 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.199430837 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.202818155 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139427786 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156572809 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.122937833 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.228868433 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.203815908 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.198669147 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.14565361 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.202334676 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.143307344 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.203186079 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138086137 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.121924776 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137315046 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.147300483 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.114497799 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136007171 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.188924498 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.14458147 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.141661958 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140532968 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.122304158 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.147765824 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.139044762 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.142480237 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.115384428 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.136285462 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.13888754 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.202386367 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.136391935 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107362454 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.146127103 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142439641 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143698046 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.20294514 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136403497 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.120729071 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.148133605 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.137748003 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.135524757 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120862804 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140570353 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.199836343 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.147462248 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.147483327 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.141346175 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.115552349 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.148164267 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136225011 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140392428 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119891687 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.231514905 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.11450979 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.13792663 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.142195206 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143438547 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111944104 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.147231289 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143499252 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.146380957 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.107698661 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142523217 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137831365 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.114598577 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147519761 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143003712 seconds)
  done (took 11.749634665 seconds)
done (took 42.931092319 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.173542823 seconds)
  done (took 2.212875354 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.99474495 seconds)
  done (took 2.036882958 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.61344728 seconds)
  done (took 19.693083799 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.59754379 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.673690467 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.010953586 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179711348 seconds)
  done (took 3.506232206 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.029063362 seconds)
  done (took 2.093003477 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.367066262 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265975077 seconds)
  done (took 1.68285541 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.927351882 seconds)
  done (took 1.986177341 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.519539047 seconds)
  done (took 3.582349553 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.398946765 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.206232543 seconds)
  done (took 1.675808676 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.696971046 seconds)
  done (took 1.762637346 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.208681303 seconds)
  done (took 38.274840675 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258371296 seconds)
  done (took 1.336572266 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.32953509 seconds)
  done (took 1.394521331 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.875535987 seconds)
  done (took 4.940902244 seconds)
done (took 87.228919636 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114105795 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.14167963 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.112857264 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139073829 seconds)
  done (took 1.565926493 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123497651 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.140998415 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.14410259 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.112583736 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.149530609 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.139836458 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.110622835 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.149425723 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.13841429 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.11302265 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.140811703 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.139206246 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.114156755 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.140408816 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.138012355 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.113776273 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.143871217 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.14096137 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.112663046 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.141497507 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.139891088 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.112493365 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.144079356 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.14085338 seconds)
  done (took 4.258814005 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113878505 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.133350986 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.106731386 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132668908 seconds)
  done (took 1.5610952 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124032515 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.157088761 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155434723 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.119075046 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.157740221 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15611413 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.13405098 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.108446184 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.138679987 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.118414468 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13789097 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.161175311 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.155799265 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.112501345 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152352924 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.132228302 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.113804135 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155953879 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.14785616 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.120911803 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.136535524 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.148012733 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.108437112 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153754352 seconds)
  done (took 4.382160834 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.226700349 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.124866548 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.164899655 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.192870899 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.166903492 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.137212198 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.166732615 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.117233718 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.147387775 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.14318889 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.114604251 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.201144192 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.141972816 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.145026572 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.141373537 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.119684509 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.147394857 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.143312553 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.116931833 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.152589524 seconds)
  done (took 4.090964955 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119748967 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.133278773 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09942702 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134050529 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.140267097 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.106591435 seconds)
  done (took 1.820128022 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.104174589 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.126663583 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100898468 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127010334 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.103290918 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.127431433 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.096801469 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127191889 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.126656658 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.099132666 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12620048 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.097952017 seconds)
  done (took 2.448743316 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.325818288 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.103184968 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.137344428 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.132203379 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.137824014 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.102851086 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149034181 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.130688206 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.244426141 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.133820741 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.14992609 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.211485933 seconds)
  done (took 3.043920313 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247749202 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14232512 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273768309 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.413003813 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184093784 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19164673 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.306051346 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216668446 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.220236978 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162626648 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227595118 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180577242 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178013759 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205714809 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162463015 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.189310653 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203087959 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230038608 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173308646 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266469865 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19220428 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195196814 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210514844 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176768468 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16038959 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185176541 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.140424125 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11980993 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228639299 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199120012 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203774225 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174099506 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164658272 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233833205 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283706957 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207029276 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.3751382 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156520403 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.217669981 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.214100557 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296463662 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135266429 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256866075 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179966 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153397264 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209408045 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182266716 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.211313003 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.156396237 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16448141 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216123538 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202768154 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.244344447 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159848448 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331580307 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172270145 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.171193912 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203547884 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219549019 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250148469 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192343885 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.112538324 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.238573562 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210856329 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209487828 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.17072406 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.19888787 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148490567 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201365371 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255599987 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212441525 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195469211 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.243475457 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12559387 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21849807 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19575554 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177995463 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207665982 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184681875 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.110201811 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173255198 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159232649 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148100951 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.212685691 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112574538 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265545601 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156591931 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.215011695 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233635336 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183025637 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185952044 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18914523 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221376335 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140305578 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.142035906 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169873666 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187063374 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182158622 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15252173 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183224128 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168318079 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.121428651 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17772373 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.14332688 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182752774 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.157038475 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193578708 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190204792 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.153761143 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190402318 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173151644 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.185071977 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200965074 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215428353 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153320446 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152651337 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223837406 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183593717 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.160631347 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203119392 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219084431 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.192858615 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159840707 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197904949 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223001727 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164754077 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246438954 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137598115 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155323383 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.176997529 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18378411 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183522716 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.178777246 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150000695 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178809836 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224361281 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.149551671 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157871702 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200869155 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150217882 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118933157 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167221383 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158990708 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.163647696 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.176566319 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.165574267 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181037919 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184227764 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177304167 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18621529 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166343622 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228307133 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153756427 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.185641212 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17000273 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.110088175 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.24338188 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213941865 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149659738 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215741351 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.199131692 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251387303 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189254158 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12120008 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.238038243 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120739101 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.141886028 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193929462 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186827889 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187720408 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.213104555 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247760659 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.197643297 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.177800647 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171877258 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194283298 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.202374532 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213879783 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138364997 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188769785 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226385523 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.113104894 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.147437199 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.150302463 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161551868 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122800486 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154680121 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210931422 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190533586 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211659185 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189137372 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162011024 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212361151 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.149450826 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192374804 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202657468 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161099197 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.216848753 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208473181 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22081626 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135778701 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229861279 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.113225355 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145610215 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.158779245 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196155963 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152502484 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126148678 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166705907 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21000925 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233105754 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172763277 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230298048 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193484981 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252525601 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.112543862 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.18912339 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196406605 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181920936 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.2117463 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155528615 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186302979 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205309808 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168701146 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222687444 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188874917 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194608084 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262412141 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.181526311 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15271876 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173558167 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195273102 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163620486 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190033275 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1677988 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126948118 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180105827 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.16181525 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150728338 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209759526 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166700335 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242937754 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.181186621 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203655459 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146497888 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1676354 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186158597 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137600159 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.139878142 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197743484 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250484886 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169149508 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183907422 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20404583 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150162537 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.338723922 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220831958 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213724168 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162159434 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166635934 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187157117 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185346977 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190917083 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209982844 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168109919 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208584989 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184160274 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.16573538 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157640039 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17265722 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175482768 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.179992404 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.158281117 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180943685 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.132860551 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249246049 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167572159 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183242807 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190164532 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.171366028 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149642589 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163832844 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261171594 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183779585 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207815517 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.182034478 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19655688 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217292363 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145862778 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116812739 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.150430294 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209258257 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15456668 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184184832 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.205243464 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253063758 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185193227 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196480069 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159854051 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.146163804 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185172137 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140906988 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255138809 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165604532 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160540226 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221448232 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.175224394 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151580752 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190438742 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313302278 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168793688 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201327671 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.140857942 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.303761916 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116715701 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154076829 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184521556 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198295363 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.173360125 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.210923219 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190780983 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16791082 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186367842 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161777208 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215004512 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266998082 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20007059 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204771438 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.168866921 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185247126 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188655001 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203711248 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164734723 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.17158514 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186944871 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210850377 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.248548543 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.126970379 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187490455 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187980655 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185818392 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236228542 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124131249 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247862483 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120838875 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22655389 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161945242 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11744578 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182760463 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.235876836 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125209001 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230998171 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183055738 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122461079 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150877572 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176786718 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183567232 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166589739 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.149947798 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210880972 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.14779272 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188805968 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207819975 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120643903 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181685846 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168869202 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155684305 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168245287 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166873135 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125935007 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.196603817 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210822758 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.156119782 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205997173 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232433034 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191411094 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18463137 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166345221 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.656181222 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.152772957 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210535877 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169273452 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249733578 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14157114 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191866325 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188670907 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172700099 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229314208 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174213693 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.215500907 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226540575 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.187377736 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121127152 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168524834 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169910929 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.155814504 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176869705 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187794736 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163319056 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.161954398 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.186809169 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138074061 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.168305845 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161060134 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21256389 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171303654 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213032146 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244289096 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129989552 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194064763 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238184728 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15091015 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.190608008 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2007508 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165426375 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178947891 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.124767396 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.161193984 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207564209 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.145584903 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186807164 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186329838 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187853725 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189674822 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.159522282 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186433711 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166219983 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186374908 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117553723 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.184144435 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184511098 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154983708 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.151568328 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181348319 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186142124 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.183359033 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151312725 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.16780492 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208404022 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.144957558 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155937719 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309655694 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186005388 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223131531 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.179789768 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157648922 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167050117 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183749898 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181104714 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186019537 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.151239122 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122797523 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.155866468 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.209991699 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.182666648 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18072359 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206887402 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18679863 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216795857 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.169019143 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.292543614 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159552877 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178650576 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.153665272 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.122529351 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163914387 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15561164 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168062848 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214307178 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206007752 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.177828513 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.168352344 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150464891 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.113793924 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152217756 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185806997 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179611834 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183681449 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168718002 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.138131572 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167475866 seconds)
  done (took 90.732771894 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178299889 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.179803105 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.184090272 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.234768012 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204214892 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292822075 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.244964146 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262948285 seconds)
  done (took 2.963323438 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.148546916 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.126586042 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.161989368 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141859405 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.143593672 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.462249251 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.154499884 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.112299598 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.207123333 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.184135228 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140063008 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.667459097 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.139675494 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.141640544 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.134523811 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.141468509 seconds)
  done (took 4.388934604 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.686142467 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.594304926 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.380116147 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.282659202 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.260959311 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.181361168 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.819286173 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.21456679 seconds)
  done (took 13.601695798 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.146939383 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.162635244 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.364025072 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.232033463 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.180993456 seconds)
  done (took 2.283051697 seconds)
done (took 138.202539702 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121062284 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.164474872 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.145767919 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.1349091 seconds)
  done (took 1.741331217 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.167371394 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.132047696 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101740548 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.130785114 seconds)
  done (took 1.729217573 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.563311687 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09757138 seconds)
  done (took 1.888142864 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14611729 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.163218894 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163293969 seconds)
  done (took 1.672842476 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.127363535 seconds)
  done (took 1.319278709 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118101249 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.146218608 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.198943894 seconds)
  done (took 1.661999984 seconds)
done (took 11.207233222 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143610211 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.450834452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431181889 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152685899 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710852205 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.423356807 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.062705719 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175432424 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.21146879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134274305 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.124718623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.716087715 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.053141294 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.360035927 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.040976181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.388486771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691086673 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.137683323 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.140582129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108215173 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.037658987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10339977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.136996779 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137421016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.685753622 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.440895431 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135097907 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372566164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135355165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140395889 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.395984077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135451054 seconds)
  done (took 17.696635463 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157551493 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.203135205 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144784504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137492133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110859264 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137090092 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144152593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119709398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.243799875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.105714668 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158016507 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.102960744 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.140786538 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135127625 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.129016492 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.134824325 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138174812 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.107284687 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143894924 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.107206042 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.157237047 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13473112 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.106430673 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137285845 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.134262216 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.118596868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136355428 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.150403502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.104524242 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141361986 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.140530221 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.105275706 seconds)
  done (took 5.565556904 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162185262 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.212384365 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147695625 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.171517352 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192257288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.106129785 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.259760317 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176487591 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.213240131 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.105024827 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158873088 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136580917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.146845462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137223269 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.160662805 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.104697401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.140089058 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139265731 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.113350475 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137664138 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.157446259 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.104124442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138705972 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.107152303 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.136273403 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.150797646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.104997781 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.150584321 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136017569 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110531168 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.143666093 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135456934 seconds)
  done (took 5.905386441 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124695644 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.150764354 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.158065896 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.128124874 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.146900328 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.117740859 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.148693685 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.142971291 seconds)
  done (took 2.318541119 seconds)
done (took 32.682493988 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136324623 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.157284966 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.124559215 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150617372 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.21123511 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.13882123 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.12293086 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.140414252 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.118767311 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.161248126 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.135910611 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.111167218 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156953193 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.11444519 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.226250514 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.120375137 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.198582303 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.195715245 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.143958281 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.118855187 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.144235741 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.201814848 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.149123088 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11131074 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.205363116 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.141577068 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.192477061 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.146345833 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.114592049 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.139203398 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.194874879 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.116655017 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.142730611 seconds)
  done (took 6.177661536 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.218158237 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.224529452 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.109944634 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.142449629 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.222885807 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.142778556 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.212033481 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.10983695 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.141314521 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.109849072 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.141911434 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.210943393 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.219760222 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.234072125 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.25384261 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.255884848 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.210014073 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.22232018 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.207682701 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.224180718 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.211255125 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.108573309 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.253997229 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.226894116 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.109363418 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.142577324 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.249666511 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.218560889 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.247173561 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.209759138 seconds)
  done (took 7.00837368 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125511706 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.15475499 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.162439459 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.179366966 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.182931816 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.154009292 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.151391125 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.130224008 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.163843508 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.136465869 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.117414671 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177327458 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.155268945 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.117543858 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14396722 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.126079129 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.166536043 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141320788 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.112683792 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.160086115 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.157486294 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.125266745 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.155147543 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149174607 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.105935563 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150409194 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.142534279 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.12006792 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.146815565 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.146857418 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.11193104 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.143264163 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.109599649 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.147733339 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.142389675 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.11915439 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.164951578 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.149220175 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.118118267 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.175800096 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.148243303 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143147552 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.127975482 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.186984545 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.139985428 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.118532066 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.152366913 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.116692054 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.137839775 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.160033375 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121532363 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.14004227 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.162915468 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.105440639 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138743765 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146944228 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.108324631 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.141849611 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.11532876 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.144434219 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.166466445 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.114179724 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145454944 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.141509507 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.112079451 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.139127632 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.106311681 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147820098 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.163309045 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111391794 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.171933006 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.139927948 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.117163676 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.149215417 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.144903647 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115801648 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.139685593 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.145470245 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116149879 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.145357059 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.115344747 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.144202254 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.143384462 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.127177712 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.161587968 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.152387597 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.149842714 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.118612873 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.14297425 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.108685407 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153528933 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.140507086 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.111535811 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.149380268 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.108848214 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.143381223 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.151226919 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.115738269 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.137394982 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.157890626 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.113798032 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.139559359 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.156034019 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.108925221 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.143873314 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.118041736 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.151169242 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.139847543 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.116627771 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.150459248 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.105545992 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.144961366 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.143242847 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.10765344 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.157126277 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.150971039 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.111938704 seconds)
  done (took 17.457646284 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.319954199 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.326747767 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.25168793 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.388420695 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.165292327 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.208556581 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.287875929 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.274704292 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.108408249 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184640528 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.201033372 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.28234118 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14107664 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140211109 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.327618324 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.390502963 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.174591106 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.186839079 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.185160555 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.165567185 seconds)
  done (took 5.953846453 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137493352 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.184874468 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.171917982 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.174619248 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.147221378 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.123373762 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.139090066 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.167616378 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.115522187 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.147243294 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.138026555 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.122302945 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.148411953 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.149101667 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.127296093 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.188831653 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.145451416 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.113807199 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.163351654 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.14722704 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.152372543 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.169386765 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119760374 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167805355 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.156673871 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.122112458 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140266679 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.146158206 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.111181172 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.145987943 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.113308377 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.161317528 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.14810684 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.146147291 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.117268675 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.15394706 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.109921711 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.140502656 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.139352338 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.111743264 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.159079383 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.116769701 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.144046212 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104505366 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.153740195 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.143075497 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.11917399 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.150344953 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.154968011 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.123922263 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.150262072 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.152032385 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.115083863 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.16037655 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.110244208 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.156799037 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.154131671 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.153385498 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.115149956 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.138055707 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.105564472 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.144811766 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.145219868 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119436698 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.150542323 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165673208 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.154657331 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.109568183 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.146821923 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.111263178 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.143498084 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.16020908 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.168889761 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.113635869 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.144520986 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.128558097 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.144442571 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.099910524 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.117748473 seconds)
  done (took 12.357938888 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143718748 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.145837639 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.161028886 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.14739906 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.161663459 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.146448269 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.11437882 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.161847235 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.119324627 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.155334087 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.155117412 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.120675309 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166704415 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.154669668 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.112353975 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.155500386 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.151714389 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.1857735 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.12805402 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.176188433 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.159839524 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.112442351 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.156075445 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.153947798 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143806454 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.154816476 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174880105 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.150771294 seconds)
  done (took 5.429529934 seconds)
done (took 55.5890436 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.387982977 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.554965971 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.318752413 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.328603585 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.331074605 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.379259271 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.320225809 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.512443921 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.169705752 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.305727866 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.323972396 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.31657324 seconds)
done (took 29.499173701 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.393611019 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.969165013 seconds)
    (2/2) benchmarking "String"...
    done (took 1.639434724 seconds)
  done (took 4.866182666 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.317361595 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.31591929 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.558090153 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.310079218 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.314072286 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.311964009 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.317671853 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.315584186 seconds)
  done (took 16.681788649 seconds)
done (took 27.500535442 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.398338496 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.667034058 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.617632588 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.328758586 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.326871258 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.309804548 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.305727937 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.316997859 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.331483715 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.310941367 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.321523123 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.627822937 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.3246011 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.778459975 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.313234177 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.332360669 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.333235731 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.673078244 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.313880288 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.36911809 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.304159683 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.325725267 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.337582365 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.336305139 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.337898373 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.32278545 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.359222331 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.303995412 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.657588493 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.32775756 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.303871726 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.332717525 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.361849259 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.313266048 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.429760007 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.343076495 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.784961485 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.32868788 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.311318429 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.317970583 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.81849997 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.754072816 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.329224955 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.317586811 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.33412535 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.356639874 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.312221317 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.095749131 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.328683 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.320951361 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.391852829 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.74841535 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.321422713 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.321930538 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.314678297 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.75417719 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.331900156 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.336112487 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.384495324 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.341112563 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.314422636 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.312884246 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.33700761 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.321992875 seconds)
  done (took 152.477894443 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.323170214 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.320801544 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.318732782 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.387042878 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.31889367 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.31987082 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.322974846 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.321987472 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.318245578 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.34812881 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.319733609 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.323389505 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.327583108 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.287251977 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.321540757 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.347287948 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.320785752 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.324641572 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.325900873 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.319883963 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.326020089 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.321888191 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.335309691 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.317381872 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.325127574 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.410568325 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.361191217 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.33484379 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.323534639 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.317482531 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.324285469 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.317191791 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.998931047 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.183952821 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.331126025 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.368256437 seconds)
  done (took 84.660104297 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.323652118 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.318251629 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.325159133 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.363799376 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.316414652 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.967707791 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.964510478 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.130477901 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.655218875 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.321602928 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.964514651 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.66182974 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.317079383 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.420233239 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.332870268 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.322702247 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.338257631 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.363083016 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.319418896 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.324427341 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.96826262 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.335940818 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.373335762 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.5070476 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.335937326 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.357890362 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.727914072 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.319790341 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3610587 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.358157164 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.662782259 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.373744945 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.318804035 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.326729205 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.813222139 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.440961743 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.319009884 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.362250301 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.318225524 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.616003708 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.315472476 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.324717669 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.324955378 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.102408764 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.325060035 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.966835615 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.323268548 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.363411779 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.32032264 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.325355 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.421885429 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.276894683 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.334832157 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.325125761 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.321831889 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.324688343 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.323617696 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.326880032 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.362275172 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.176518348 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.447158172 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.343520658 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.326691239 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362778002 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.321661206 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.552477993 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.318732158 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.227724571 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.390664725 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.443456851 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.96296171 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.324513243 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.426639809 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.441105969 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.317228487 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.325293656 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.326022108 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.327845539 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.44114335 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.316922241 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.800815652 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.507595197 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.337660883 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.859396894 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.42448428 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.321695619 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.852701462 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.322730953 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.326686626 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.196048766 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.419836432 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.321399408 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.330112838 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.329123011 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.806140308 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.961116859 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.698466744 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.321293946 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.052361698 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.325324482 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.812292803 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.966978126 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.101592165 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.329553413 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.445109505 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.510599208 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.339244893 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.329211792 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.908270239 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.321592996 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.388743487 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.329170917 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.328964416 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.733478871 seconds)
  done (took 385.692817164 seconds)
done (took 624.071259958 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.058504896 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.993552502 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.144662961 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.028781463 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.990538908 seconds)
  done (took 11.459071797 seconds)
done (took 12.708835293 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.539092054 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527761014 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.391193379 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.532859441 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.357893461 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.55310887 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.518529025 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.349259941 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.44444356 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.415754535 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.439944759 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.383009055 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.360399236 seconds)
  done (took 20.05962673 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.610976371 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.328847221 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.412269916 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.615511692 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.364819881 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.623538034 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.666427417 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.328234248 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.479937105 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.370907325 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.342908139 seconds)
  done (took 19.39556543 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.651062989 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.328442264 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.394008238 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.618135933 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.36979269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.621180046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.670034278 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.329626521 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.467110083 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.340318364 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.34062316 seconds)
  done (took 19.37830657 seconds)
done (took 60.084312422 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.377066863 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.501902747 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.361310305 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.348148289 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.337582059 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.343951199 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.34388786 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.34159144 seconds)
  done (took 12.208511018 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.337747219 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.33561617 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.338840945 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.337041488 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.337332543 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.333597086 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.334977483 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.335444879 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.334810259 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.339432651 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.336265896 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.337201904 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.337530488 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.336764443 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.337592081 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.338442815 seconds)
  done (took 22.638954503 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.345547748 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.337436398 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.33862367 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.337652985 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.337602547 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.338584612 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.336820849 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.339874166 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.339342196 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.338314797 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.340230401 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.33670217 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.338015278 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.337010701 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.335773987 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.339127428 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.338867619 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.338496114 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.342578931 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.337971658 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.338811213 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.340175073 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.336598682 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.338644308 seconds)
  done (took 33.380735235 seconds)
done (took 69.477980118 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.332591132 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.346320588 seconds)
  done (took 5.926752948 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.405431597 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.400427462 seconds)
  done (took 4.058841075 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.344848715 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.337972774 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.340352299 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.33915959 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.336594932 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.339592638 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.340296997 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.341798476 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.337418812 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.33867449 seconds)
  done (took 14.6459509 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.343162419 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.33765419 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.339463473 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.339619805 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.337706632 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.339744573 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.338844414 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.337924971 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.338473988 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.342479315 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.338563008 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.340043166 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.337781696 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.339765002 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.341607981 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.342387943 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.339276529 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.340843949 seconds)
  done (took 25.367741096 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.357949492 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.358415982 seconds)
  done (took 3.967429907 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.486488583 seconds)
    (2/7) benchmarking "second"...
    done (took 1.380420276 seconds)
    (3/7) benchmarking "month"...
    done (took 1.457741764 seconds)
    (4/7) benchmarking "year"...
    done (took 1.45130979 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.379167763 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.364216584 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.385296359 seconds)
  done (took 11.155784168 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.349406244 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.544273634 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.649847136 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.907284278 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.342352285 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.38802628 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.219571078 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.390815266 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.377020682 seconds)
  done (took 15.421717775 seconds)
done (took 81.792072993 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.338020802 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.370621757 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.338041816 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.350648368 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.686024167 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.327691507 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.333211562 seconds)
done (took 17.002869992 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.337301252 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.32617035 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.339701275 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.339372686 seconds)
  done (took 10.595847335 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.351002914 seconds)
    (2/2) benchmarking "read"...
    done (took 1.701422084 seconds)
  done (took 5.304927468 seconds)
done (took 17.155369728 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.344602916 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.342178445 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.342375458 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.341766276 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.342469754 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.342592489 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.338917848 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.342721197 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.341488509 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.34036599 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.339145287 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.340073166 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.340650456 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343555163 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340089631 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343120938 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342911536 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.339182324 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3447076 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.341991103 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.344874068 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339490706 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.34296313 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.345892145 seconds)
  done (took 33.462098659 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.350206128 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.340821332 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.342362636 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.343493508 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.341895312 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.343642383 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.34575932 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.344268976 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.344545428 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.343422101 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.343685094 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.345798941 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.343435536 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.343017029 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344158137 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.342101735 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.343517671 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346313674 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343287431 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.347325511 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.340840733 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343435303 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.342844036 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.34277765 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.344161562 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.346955544 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.343551227 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.344926971 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.345155457 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.343178404 seconds)
  done (took 41.577870582 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.35199996 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.350125425 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.344314334 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.34582445 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.344927274 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.346085188 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.346828603 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.343271899 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.342300886 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.347140593 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.345245761 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.346078418 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.346689233 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.346726467 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.343864388 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.343618141 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.344075328 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.346137195 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.34707431 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.34255233 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.343292401 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.344764538 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.347434836 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.346713268 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.34624166 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.344965066 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.345207852 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.346660355 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.346932769 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.348022995 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.34617465 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.34572203 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.346449873 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.345269878 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.346645193 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.344600373 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.350346865 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.352657894 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.348596924 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.344824133 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.347680895 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.347940457 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.348293733 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.347966038 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.345415578 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.344886504 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.346469079 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.348313308 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.345237078 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.346931578 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.346180729 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.348216316 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.348461226 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.345663326 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.350727145 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.346448263 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.349134687 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.349089147 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.348348155 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.349257293 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.348544859 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.346984394 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.35125487 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.350027876 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.348572086 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.34855274 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.346390349 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.351159804 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.347760822 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.349950664 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.347942485 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.348571985 seconds)
  done (took 98.24308539 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.352642221 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.349888916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.34636459 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.35140694 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351610687 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.349202161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.350360556 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348133503 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346700244 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.349527898 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350497625 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.349235639 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34802348 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.349689639 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348497943 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.349760148 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.349193633 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.35022984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.351692449 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346590043 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352644287 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.3500514 seconds)
  done (took 30.950250563 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352491852 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.351504834 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.34850702 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.35011922 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.353160577 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.34983677 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.348317554 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.351989142 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348005922 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351884683 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348402088 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349335508 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.353792921 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347068449 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351043529 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.354255725 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.35039169 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.351223118 seconds)
  done (took 25.572846669 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.356298433 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.352475424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.348777386 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.350121068 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.351200071 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.352229674 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.350002745 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.349649718 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.351344535 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.35049443 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.352411369 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352100658 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.352919882 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348111097 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35134115 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.349141744 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.348986949 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35173196 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354169699 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.352726445 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.352467198 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.353228194 seconds)
  done (took 30.993350568 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.357649694 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.352773003 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.353358996 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.3516916 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.35254075 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.350345137 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.348803291 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.352775964 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.352820249 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.352576184 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352942363 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.351382192 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.35481851 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.353557018 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.35403888 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.350814165 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.353040334 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.350826061 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.353700289 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.353730728 seconds)
  done (took 28.316388035 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.359597075 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.357060136 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.360384864 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.360124559 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.357165397 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.356208008 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357943511 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.357600912 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.358886419 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.359945252 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.361458174 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.355585082 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355455577 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.358800147 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.359249604 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359263209 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.362378105 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.356636348 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.359907495 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.359933501 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.358544182 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.359878366 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.355438177 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.357595265 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.359850825 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.356810987 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357840837 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.359840338 seconds)
  done (took 39.305211067 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356722021 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.354514626 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.352669276 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.354445127 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.355546626 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.357640575 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.35665095 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.355621265 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.360033255 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.353597713 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.35606336 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.357210739 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.355219827 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.355593886 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.355604151 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.358005462 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354582445 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.355635377 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.356582009 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355511871 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.356139101 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35747827 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.3551005 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.353293983 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358969262 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.354682757 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.357281609 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35607659 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355613338 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.359681327 seconds)
  done (took 41.944154159 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.402012577 seconds)
    (2/2) benchmarking "in"...
    done (took 1.394827156 seconds)
  done (took 4.062437755 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.361764289 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356926517 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.355894277 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.358069865 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.356040484 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.357557297 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.357604318 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.358373777 seconds)
  done (took 12.12689808 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.358635408 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.354799447 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.355473689 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.354182139 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.356084667 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.354625835 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.363222058 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.363866956 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.354394781 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.354471009 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.361663134 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.36324751 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.358745343 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.356758217 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.35714717 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.358005656 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.362403084 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.357793606 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.364087679 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.361148343 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.358923308 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.359492021 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.358207247 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.357879418 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.355664589 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.370349181 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.361847178 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.361968064 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.3536863 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.36053791 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.35635284 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.361498041 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.358800686 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.361671461 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.36398639 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.360828314 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.365060865 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.380772895 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.363375182 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.362300909 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.364461881 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.357245985 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.356598702 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.358865135 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.358564607 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.362686196 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.362233799 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.357286137 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.355905701 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.358714699 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.371352005 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.355493326 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.363201105 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.361938179 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.360291266 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.36640713 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.385720339 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.361964876 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.367750847 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.368343373 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.373271626 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.369590577 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.357452478 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.360107002 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.367735634 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.372308391 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.367364385 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.362820477 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.363159428 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.361272494 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.36312301 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.374765031 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.373593844 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.36074791 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362474347 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.362091476 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.357924683 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.364272538 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.363464156 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.362607504 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.362008403 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362969537 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.367867994 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.375241085 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.361429503 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.361412422 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.362375544 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.363257339 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.360211573 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.371697672 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.385582185 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.364493565 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.355691801 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.364926039 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.358269925 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.366544133 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.36091214 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.362191436 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.36177344 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.362778506 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.360310362 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.365356295 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.3674425 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361726955 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.367090031 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.367131289 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.365486973 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.357382925 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.368666508 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.366114953 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.361227462 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.364712256 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.366730905 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.363127895 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.362237448 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.371346104 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.364389893 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.360563938 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.362932082 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.364215424 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.366657612 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.380252479 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.366391598 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.359128043 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.360292061 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.377745817 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366084141 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.364227118 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.366791963 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.360768552 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.363481946 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.361717601 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.364449443 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.359701452 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.366840532 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.364390945 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.363497733 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.363652827 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.36150194 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.361288394 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.362000086 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.360783611 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.36199319 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.364589453 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.362865385 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.368057647 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.367955091 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.361763066 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.365837419 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.365574189 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.363213976 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.360852733 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.362294911 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.365223925 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.362340262 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.364838172 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.363667093 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.364080612 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.367525452 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.364212558 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.364125138 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.361380859 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.368998402 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.364715949 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.364995482 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.365336898 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.365545221 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.364888206 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.364692014 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.359965579 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.365656185 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.359024796 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.360064995 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.377951466 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.367248672 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.364293764 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.366247164 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.364142039 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36893783 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.369948471 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.36561495 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.370236443 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.369406762 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.369748244 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.369322205 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.365495053 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.36690013 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.364134873 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.364262709 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.370789769 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.366315557 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.378206246 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.373518945 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.378706747 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.367797011 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.375352123 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.364233873 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.374100365 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.369159147 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.369144283 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.365545058 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.364720743 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.363529788 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.367747923 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.367558575 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.368700177 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.363725601 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.370199525 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.367988508 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.364829541 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.37236851 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.363142131 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.36951161 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.37227974 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.366756621 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.366588951 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.366978576 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.370223869 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.357648412 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.3651992 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.370240544 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.365113258 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.372111952 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.366284906 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.364822913 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.369008416 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.366296194 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.363129882 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.36969601 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.36516975 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.367988456 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376880341 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.367686455 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.368764657 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.372409527 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.39171058 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.364502918 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.3692915 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.366904856 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.368019463 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.366681321 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.378662607 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.367585996 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.366192431 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.372212495 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366836164 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.369731575 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.369761679 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.374317111 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.365458526 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.373769875 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.36775486 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.370767174 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.368227118 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.367872861 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.369584849 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.368370107 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.373978822 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.367331713 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365405439 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.371501979 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.370335949 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.369120835 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.370021265 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.379866443 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.369220517 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.368507656 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.372732513 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.369095662 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.377775942 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.36483125 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.373938547 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.367476733 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.378911222 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.384351512 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.376016961 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.371783651 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.371449438 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.374174723 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.371665881 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.373247526 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.366672637 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369455477 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.371371429 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.369721613 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.374548732 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.367296648 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.3725846 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.368657374 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.373326789 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.374048996 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.372546942 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.365821029 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.373305345 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.374911281 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.375348369 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.366254771 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.374975674 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.369239644 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.372401976 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.372342523 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.367912626 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.379350863 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.373954815 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.371330463 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.370448186 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.371829721 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.371210932 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.375443577 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.376477485 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.373644967 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.378421973 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.371266709 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.377718837 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.370748559 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.378717229 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.375105365 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.373140073 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.380431898 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.37038699 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.365919799 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.371177331 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.372984285 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.37579649 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.378527649 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.372054503 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.375915135 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.375519573 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.375185262 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.373943142 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.371230937 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.375230669 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.373162698 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.382606322 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.394568325 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.374641854 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.372515299 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.377635146 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.371384791 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.373292597 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.370435847 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.37310207 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.376815076 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.373259288 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.371302848 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.371246535 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.373509373 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.376583994 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.37852263 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.375515841 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.373360771 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.378409047 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.375060629 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.376834999 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.377274213 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.375622217 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.3763776 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.379830227 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.377217948 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.372949847 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.374735265 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.376856607 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.369351711 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.370924409 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.373423755 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.376821761 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.376528201 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.38194949 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.371881615 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.37277808 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.372098991 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.376333263 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.370590121 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.379121499 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.389682978 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.375133046 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.380759097 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.372209964 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.371738814 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.380286847 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.376063134 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.369101462 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.375124215 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.381698193 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.381169422 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.373355987 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.370887099 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.37361727 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.371826328 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.374658368 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.372993553 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.375445771 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.378228308 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.367522084 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.374370087 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.378679848 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.376602216 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.371395523 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.374509891 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.375139948 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.384825989 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.381181939 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.37548345 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.376779187 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.377239837 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.374262119 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.374742881 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.375338556 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.373248373 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.377945541 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.892186619 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.380849542 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.38089467 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.379025057 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.377219961 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.375782873 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.376459667 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.380465418 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.380081204 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.379622284 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.379006995 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.377028641 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.37733612 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.374547418 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.376739564 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.378428549 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.377138492 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.375694246 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.374565938 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.382343315 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.372977979 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.380747229 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.37817961 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.376412335 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.373877313 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.379646319 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.382444211 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.381480601 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.385324815 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.38274539 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.384653632 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.377835564 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.379874579 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.38348168 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.374776213 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.37719388 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.37708201 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.37693535 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.379183128 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.379011688 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.380170724 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.385428071 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.380056122 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.376624919 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.384576741 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.399680779 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.379278974 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.378244217 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.38229466 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.378165396 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.379499304 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.378951039 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.376795549 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.385524513 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.379705491 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.382902412 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.376966955 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.377550117 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.380529301 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.386177861 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.384476461 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.376866197 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.380622683 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.37742776 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.383126096 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.384251295 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.381001728 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.373549029 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.379322165 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.381258689 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.382104336 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.377720674 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.380755753 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.377990029 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.37837165 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.381733898 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.380164837 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.380180049 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.380743353 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.377316275 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.383146743 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.380139221 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.382030022 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.377845395 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.383916473 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.392688786 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.383234108 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.382366107 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.389696759 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.393828903 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.380147545 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.378840509 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.384179327 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.380521074 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.383547372 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.382758329 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.379797355 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.382835162 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.383568492 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.380233339 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.379606761 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.380269275 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.394207917 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.406428486 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.376036136 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.379369992 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.384392891 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.383675362 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.382623996 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.382869133 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.382224797 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.382460745 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.387675753 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.383216793 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.38795418 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.403519272 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.382297181 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.388976222 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.382972613 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.388674708 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.383108968 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.384257775 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.382452977 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.385545465 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.392442307 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.387036699 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.389448016 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.405919434 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.385781755 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.382707877 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.381114838 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.381846187 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.381504534 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.382512631 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.381535021 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.385631371 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.385303017 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.383421728 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.383527581 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.385975471 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.385496823 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.385414543 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.383663453 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.379643482 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.384013409 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.387632118 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.383838354 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.386156009 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.380203226 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.383258093 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.387325729 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.382719193 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.396027018 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.395016449 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.387779028 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.380277029 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.384184638 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.385868801 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.389582289 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.391683935 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.394352373 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.385291505 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.38551314 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.385466233 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.386931992 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.386820545 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.379037811 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.381076713 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.384670997 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.387467141 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.394166931 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.40061614 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.385201225 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.385369475 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.386838881 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.388895111 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.38094768 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.387061544 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.389154451 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.38374874 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.386962581 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.391998194 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.388467322 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.384534121 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.385380979 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.391374118 seconds)
  done (took 820.140750749 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.388343845 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.384399072 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.384807361 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.384829823 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.386531089 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386742056 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.384808479 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.38870868 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.386830422 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.388366678 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.386427666 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.384319348 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.385354717 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.385266308 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.385430078 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.387852444 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38569694 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.386151832 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.386634139 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.389296012 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.384655321 seconds)
  done (took 30.403569843 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.391248284 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.389607423 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.386804076 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.38772156 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.388844293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.388543812 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.388024249 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.389466903 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.38733256 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.386179473 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.388553191 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.38834805 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.385938075 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.387413137 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.389345716 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.39152283 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.387149446 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.385482703 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.38759353 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.389230833 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.385999285 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.388732214 seconds)
  done (took 31.833288519 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.390520474 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.388555227 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.386886572 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.390941 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.39092325 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.389490281 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.38874093 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.390718262 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.388350149 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.386512258 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.386084324 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.387873798 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.39165254 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.395080053 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.38705813 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.391859931 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.388986904 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.394196335 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.389497915 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.391483774 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.39406726 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.39280963 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.390340586 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.386212231 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.393147783 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.392674884 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.390581652 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.388673684 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.387072765 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.394554747 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.39311551 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.386915713 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.39430245 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.388675028 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.388533389 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.395979987 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.388125304 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.392627652 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.389560013 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.39500451 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.411479491 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.390354672 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.397752524 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.394982106 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.392135804 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.390237779 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.399906709 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.390466828 seconds)
  done (took 68.083169799 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.014857437 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.030504341 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.02857999 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.02693777 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.032722827 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.055159784 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.030658273 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.038619521 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.027019364 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.020840852 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.026736536 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.026971 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.028472928 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.034520979 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.030994042 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.027788029 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.052884839 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.031902036 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.029391231 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.025205928 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.021900571 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.029752659 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.035665701 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.034774724 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.038376952 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.029167882 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.029595131 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.054234698 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.03497235 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.033830847 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.028904975 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.031285997 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.032313112 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.023084686 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.028975644 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.033969643 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.032246662 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.030829585 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.05866317 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.03117748 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.039440779 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.03597574 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.034589624 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.034741814 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.032883482 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.039399757 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.041583222 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.041564445 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.033135876 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.0582195 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.039994413 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.040967008 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.042269047 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.039873872 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.039896197 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.037705575 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.045382697 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.043386701 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.040717017 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.03716939 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.06068072 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.042894352 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.043521972 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.036721275 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.037518062 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.034841168 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.04225939 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.038121236 seconds)
  done (took 139.731883249 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395558553 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.396291755 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393759195 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395615861 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.396807967 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.398258867 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.393299458 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.398174787 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.397075236 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.395129145 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.397313191 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.398615333 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.391893301 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.397324031 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.391955809 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.39566064 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.395438563 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.39923047 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.395793191 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.398760262 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.397436467 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.399561775 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.396135119 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.397605025 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.396808822 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.395057978 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.401305408 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.39574006 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395771351 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.396284534 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.398423243 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.400194779 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.398424634 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.398786771 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.395677948 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.396547181 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.398939095 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.3995505 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.397296722 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.399725283 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.398824079 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.397704542 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.40001875 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.400043287 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.396882755 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.399047913 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.396659898 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.401143833 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.398132633 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.394661844 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.400198173 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.401212672 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.400296391 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.397233045 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.401054996 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.399474187 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.398557887 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.397635255 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.400207011 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.401827216 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.39848867 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.400177074 seconds)
  done (took 87.96189987 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.398186809 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.395663304 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.396083177 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.397127829 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.394608227 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.395369057 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.397710856 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.398131502 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.39785216 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.398497684 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397150179 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.397630592 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.399127882 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398905208 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.397714264 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398980065 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.400202101 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.400514089 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.398408988 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.397870958 seconds)
  done (took 29.259131842 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.396725264 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.39567645 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.396886296 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.397658987 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.396591931 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.398227467 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.397446316 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.396294819 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.399333576 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400404574 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.397532029 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.39691065 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398865548 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.399906067 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.401200356 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.400085125 seconds)
  done (took 23.671921417 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.400871532 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.398201789 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.399432571 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.399317558 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.401693493 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.398237044 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.39861111 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.400307493 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.399682879 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.398956039 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.401476981 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.400209769 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.400711508 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.397986967 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.399518474 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.398324317 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.400687016 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.398191325 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.400547509 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.400915693 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.405270608 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.398377323 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.401675143 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.399724757 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.402281174 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.401390839 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.403308075 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.402773047 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.401342873 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.402736321 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.400867175 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.400504757 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.401710678 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.39950725 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.400541867 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.402704707 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.401425508 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.401220607 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.399118316 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.401549136 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.399302917 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.404308403 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.404534068 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.402667368 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.401093499 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.402098029 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.403258119 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.402483136 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.399951318 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.403929966 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.399433682 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.401497618 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.408581623 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.401272486 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.401736065 seconds)
  done (took 78.363011587 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.407504808 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.402682402 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.403779862 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.403309094 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.402779738 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.400770978 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.403105007 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.404536297 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.402048277 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.403527331 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.402094759 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.40417262 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.40071312 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.403851441 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.401823433 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.401407045 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.403429168 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.401527016 seconds)
  done (took 26.559468265 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.406511694 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.4041321 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.403170844 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.404683279 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.398840674 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.405202541 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.40433037 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.401983098 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.403063137 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.405284025 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.402931039 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.403542803 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.405086072 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.402673678 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.407365691 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.40232038 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.402703047 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.404671738 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.403045498 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.405992597 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.402645657 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.405603862 seconds)
  done (took 32.192663351 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.401887483 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.399433363 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.400857178 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.419120597 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.416809013 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.397880653 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.401997812 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.401699953 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.421959095 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.464400808 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.463264862 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.420397132 seconds)
  done (took 18.316479482 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409355755 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405363284 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.406666007 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403461773 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404897505 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408173871 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404119615 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400939384 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40579721 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406123618 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407996952 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405303007 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.4055072 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402787277 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403453611 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406292843 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406013312 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405077899 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407577707 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405932504 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406464933 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405116674 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405490722 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406840813 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405640402 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405401218 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405619441 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40304179 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406616208 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408788716 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405414631 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403499391 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405848407 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407722521 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404597366 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40659719 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406402502 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407559255 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404538379 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406961521 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.409262851 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40729892 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407791901 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403032861 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406994672 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405935971 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406662935 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407435769 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405259549 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40847653 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408447381 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407772782 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405795551 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405688114 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406184192 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409731162 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40588232 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406174155 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407077389 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408774041 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408146383 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404828387 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408768339 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407271448 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407380263 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406887986 seconds)
  done (took 94.124574083 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41038948 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.41015947 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408321255 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407292939 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408974238 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404101714 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402874288 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405895571 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408438468 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406400758 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408123719 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406935592 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408701603 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406479368 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406687697 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410790007 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40902777 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410262498 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406470406 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410942094 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410679523 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408654903 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407223606 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404562911 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407666899 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410680324 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409364575 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406499987 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408695843 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409417422 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410306312 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410574561 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409470882 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.412115396 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40916298 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410644046 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409740419 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407488637 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409738086 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41226043 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40973111 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411734666 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41052584 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408115831 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411283658 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407683714 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410971694 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41144876 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411281172 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411510348 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413274031 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411788072 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413361141 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412364178 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411961285 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414034205 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411037537 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410717962 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41111001 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410530988 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412010149 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411757925 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410654344 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411848125 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412474252 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411680817 seconds)
  done (took 94.353756169 seconds)
done (took 1962.807752864 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.573461282 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.530358642 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.408305465 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.416543522 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.403636768 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.434849789 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.419212827 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.402594335 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.407925801 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.410728456 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.407064733 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.599364824 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.404500129 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.403135995 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.409384579 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.50631749 seconds)
  done (took 28.453009914 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.441924867 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.41920167 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.546881094 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.431878666 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.4423788 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.641082672 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.46865395 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.416056944 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.62012882 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.434992995 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.40535254 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.442240502 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.412214552 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.405194835 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.43280192 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.637820522 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.697100683 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.403512883 seconds)
  done (took 31.014516722 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.943197823 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.449945525 seconds)
  done (took 5.711986841 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.439360376 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.413835309 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.412267016 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.411780865 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.404903472 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.401876892 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.414887921 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.405962777 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.41704156 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.56421018 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.413668967 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.425654379 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.433810489 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.414106998 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.420546406 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.461365431 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.591608018 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.419016997 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.414881999 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.419582286 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.415516928 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.517050038 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.462147925 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.416306948 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.557457609 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.402648461 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.416696927 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.419705668 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.55944452 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.420042868 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.410317456 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.41305251 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.419393648 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.419896495 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.924974213 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.421710065 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.435899583 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.444264921 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.418599375 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.560420346 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.417419404 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.417453774 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.405781494 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.921666666 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.583328601 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.547647724 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.423557243 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.415679072 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.412491624 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.483655411 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.410288369 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.413767779 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.47636125 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.285187669 seconds)
  done (took 90.10209813 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.451840524 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.406688877 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.590059049 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.434314725 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.405135528 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.419405762 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.408885577 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.754486323 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.413874986 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.407182675 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.768322377 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.050632325 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.434973794 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.469249104 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.267414203 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.481410541 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.408419428 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.426856506 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.409277409 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.40768887 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.004022904 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.409366971 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.427374805 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.514656322 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.453143894 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.993528908 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.409043543 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.425732795 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.430625119 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.407084803 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.002939542 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.42826194 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.478246451 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.408707043 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.713123832 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.855038477 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.822063516 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.408720632 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.457595729 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.409451257 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.434269592 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982039555 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.828326495 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.407826153 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.408660288 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.981560026 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.405666564 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.414095378 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.414819523 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.666036271 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.409738518 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.408408743 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.422479011 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.429090691 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.410423124 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.498809736 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.498462563 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.977178732 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.405292882 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.40780802 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.426011164 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.411602099 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.417628236 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.415731489 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.426063054 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.820079342 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.616591051 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.416969094 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.82660179 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.994832428 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.431083779 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047106309 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.429035946 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.429467421 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.595417928 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.41221706 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.426238948 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009198796 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.413177425 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.408280025 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809829509 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.408420195 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.75801974 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.442021394 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.414819814 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.018866089 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.415121607 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.426888335 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.419153235 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.423040266 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.410087314 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.411982651 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.739524674 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.444906829 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.414041575 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.412566188 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.457327334 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.408576061 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.434437384 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.41546034 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046915703 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.438829408 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.416484157 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.414605567 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412868667 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.430999112 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.415273473 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.415816649 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.689825609 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.413389437 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.436481122 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.417359307 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.41433617 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.412357776 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.508975838 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.416212319 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.77619431 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.411686498 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.411246299 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.436656588 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.413772466 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.466414461 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.407877317 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.411922591 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.329135741 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.6786142 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.429031366 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.415480837 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.414016777 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.413612696 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.409327871 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.408325948 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.478016198 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.415368889 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.262113579 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.436220738 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.420907281 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.415270875 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.430144975 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.41628364 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.416550192 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.415857113 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.723872799 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.7157665 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.626560258 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.421813986 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.410933138 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.255973512 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.439807407 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597010957 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.437930396 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.413719587 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.666774548 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.62424782 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.416883574 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.411626871 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.416806365 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.68173768 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.414171836 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737508548 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.022655298 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.428690279 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.420841696 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.277397696 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.170154187 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.414694951 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.417427524 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.760863025 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.429230854 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.416064003 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.415249968 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.416308386 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.413083218 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.438395096 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.419435461 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.414639645 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.419296157 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.73560261 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.60962785 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.437832091 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.424254689 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979387972 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.440364495 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412859277 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.420729016 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.418535378 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.416047048 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.486495632 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.416744248 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.438729868 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.416228589 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.422898778 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.993809315 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.414606642 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.417556323 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.61144085 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.182354181 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.434418062 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.418768487 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.436451122 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.334870981 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.005597606 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.438175986 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.790889509 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.423047603 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.460003906 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.413994462 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.438279366 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007861326 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.417366437 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.438459776 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.14548895 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.434841773 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.840111023 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.412902848 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.418045346 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.094377991 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.436348577 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.421376629 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.417058728 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.420015595 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.745926707 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.419071787 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.426784566 seconds)
  done (took 519.220504376 seconds)
done (took 675.818420699 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.418524081 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.415451662 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.411097914 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.416702044 seconds)
  done (took 10.990333657 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.431647995 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.420977933 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.428513476 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.424276919 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.429581354 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.424195869 seconds)
  done (took 9.888662682 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.418195267 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.411390055 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.417587447 seconds)
  done (took 8.577039153 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.662914185 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.433754679 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.79254514 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.436685158 seconds)
  done (took 9.656927221 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.429762061 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.430971404 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.431301474 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.43088005 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.432801344 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.43403281 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.429640148 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.431956381 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.434451751 seconds)
  done (took 14.213007073 seconds)
done (took 54.653709706 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.592680416 seconds)
    (2/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.621543789 seconds)
    (3/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.410481468 seconds)
    (4/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.674439955 seconds)
    (5/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.521748425 seconds)
    (6/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.461745933 seconds)
    (7/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.511530823 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.482874453 seconds)
    (9/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.469482599 seconds)
    (10/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.540606665 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.44981767 seconds)
    (12/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.423183057 seconds)
    (13/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.515044385 seconds)
    (14/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.454600765 seconds)
    (15/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.567183415 seconds)
    (16/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.459882174 seconds)
    (17/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.442491205 seconds)
    (18/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.407648967 seconds)
    (19/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.446573204 seconds)
    (20/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.355251338 seconds)
    (21/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.452860628 seconds)
    (22/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.576636967 seconds)
    (23/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.642245437 seconds)
    (24/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.568065247 seconds)
    (25/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.480235971 seconds)
    (26/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.512176175 seconds)
    (27/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.551974653 seconds)
    (28/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.453248741 seconds)
    (29/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.557520849 seconds)
    (30/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.456986278 seconds)
    (31/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.518908519 seconds)
    (32/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.484732277 seconds)
    (33/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.22992915 seconds)
    (34/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.473555119 seconds)
    (35/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.534853068 seconds)
    (36/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.517252195 seconds)
    (37/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.457581681 seconds)
    (38/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.729170584 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.512830366 seconds)
    (40/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.643263851 seconds)
    (41/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.144343493 seconds)
    (42/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.614015751 seconds)
    (43/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.455360666 seconds)
    (44/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.562575056 seconds)
    (45/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.412669186 seconds)
    (46/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.627816493 seconds)
    (47/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.422470676 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.455601727 seconds)
    (49/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.462866992 seconds)
    (50/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.117381873 seconds)
    (51/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.442519 seconds)
    (52/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.57565532 seconds)
    (53/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.618329084 seconds)
    (54/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.416908165 seconds)
    (55/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.805113919 seconds)
    (56/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.542015219 seconds)
    (57/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.531845068 seconds)
    (58/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.466458361 seconds)
    (59/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.42707048 seconds)
    (60/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.585871232 seconds)
    (61/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.449625391 seconds)
    (62/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.434684265 seconds)
    (63/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.421070018 seconds)
    (64/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.895257388 seconds)
    (65/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.535418003 seconds)
    (66/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.61871129 seconds)
    (67/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.460575979 seconds)
    (68/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.548362659 seconds)
    (69/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.689066983 seconds)
    (70/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.182200941 seconds)
    (71/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.635675372 seconds)
    (72/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.453257404 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.663895214 seconds)
    (74/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.659095259 seconds)
    (75/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.456604294 seconds)
    (76/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.424100889 seconds)
    (77/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.484431089 seconds)
    (78/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.496424698 seconds)
    (79/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.459351638 seconds)
    (80/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.526896918 seconds)
    (81/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.545221143 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.511768738 seconds)
    (83/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.435577551 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.496138295 seconds)
    (85/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.084698682 seconds)
    (86/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.52635711 seconds)
    (87/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.651521655 seconds)
    (88/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.407345744 seconds)
    (89/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.473812219 seconds)
    (90/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.65464942 seconds)
    (91/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.229429295 seconds)
    (92/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.47885773 seconds)
    (93/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.17958219 seconds)
    (94/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.461758918 seconds)
    (95/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.646700387 seconds)
    (96/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.487525198 seconds)
    (97/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.506928537 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.511765241 seconds)
    (99/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.461415801 seconds)
    (100/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.487041072 seconds)
    (101/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.648263906 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.55525813 seconds)
    (103/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.506643004 seconds)
    (104/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.117448705 seconds)
    (105/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.585313322 seconds)
    (106/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.468734658 seconds)
    (107/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.826645435 seconds)
    (108/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.670584856 seconds)
    (109/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.480242442 seconds)
    (110/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.802094689 seconds)
    (111/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.530963992 seconds)
    (112/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.448524293 seconds)
    (113/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.53929342 seconds)
    (114/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.657182248 seconds)
    (115/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.413253653 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.550669562 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.451181251 seconds)
    (118/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.584062511 seconds)
    (119/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.475613039 seconds)
    (120/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.487603033 seconds)
    (121/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.291918776 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.460021906 seconds)
    (123/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.562685292 seconds)
    (124/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.620478889 seconds)
    (125/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.552352968 seconds)
    (126/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.597115549 seconds)
    (127/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.596896534 seconds)
    (128/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.504924268 seconds)
    (129/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.491350164 seconds)
    (130/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.401678308 seconds)
    (131/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.096164636 seconds)
    (132/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.603360456 seconds)
    (133/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.475449628 seconds)
    (134/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.276345666 seconds)
    (135/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.159442813 seconds)
    (136/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.240333005 seconds)
    (137/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.484731484 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.525406811 seconds)
    (139/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.599106892 seconds)
    (140/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.570759283 seconds)
    (141/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.455220838 seconds)
    (142/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.470791372 seconds)
    (143/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.416377828 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.658257784 seconds)
    (145/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.468912757 seconds)
    (146/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.421779755 seconds)
    (147/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.464410838 seconds)
    (148/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.598390865 seconds)
    (149/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.462545096 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.573205543 seconds)
    (151/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.651578677 seconds)
    (152/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.537763926 seconds)
    (153/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.526056853 seconds)
    (154/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.359343734 seconds)
    (155/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.594238631 seconds)
    (156/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.445104165 seconds)
    (157/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.443790635 seconds)
    (158/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.529374126 seconds)
    (159/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.600534522 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.600410317 seconds)
    (161/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.443060201 seconds)
    (162/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.554057935 seconds)
    (163/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.506309354 seconds)
    (164/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.41951156 seconds)
    (165/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.601150778 seconds)
    (166/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.671006129 seconds)
    (167/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.537539605 seconds)
    (168/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.457788156 seconds)
    (169/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.457617538 seconds)
    (170/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.588296743 seconds)
    (171/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.557713717 seconds)
    (172/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.639553903 seconds)
    (173/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.54243953 seconds)
    (174/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.466771228 seconds)
    (175/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.565580116 seconds)
    (176/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.209096649 seconds)
    (177/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.622454527 seconds)
    (178/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.443357153 seconds)
    (179/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.594875075 seconds)
    (180/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.563766178 seconds)
    (181/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.418970699 seconds)
    (182/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.424334589 seconds)
    (183/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.510579665 seconds)
    (184/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.71747057 seconds)
    (185/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.455677438 seconds)
    (186/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.484736502 seconds)
    (187/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.491005387 seconds)
    (188/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.432071586 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.698781703 seconds)
    (190/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.422697691 seconds)
    (191/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.597498449 seconds)
    (192/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.464059759 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.485069546 seconds)
    (194/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.467251379 seconds)
    (195/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.470961155 seconds)
    (196/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.457042434 seconds)
    (197/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.440439034 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.553062018 seconds)
    (199/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.122334869 seconds)
    (200/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.569763636 seconds)
    (201/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.490353087 seconds)
    (202/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.608492206 seconds)
    (203/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.524561124 seconds)
    (204/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.223186053 seconds)
    (205/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.120029659 seconds)
    (206/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.218407483 seconds)
    (207/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.550532865 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.543834288 seconds)
    (209/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.506946037 seconds)
    (210/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.689387584 seconds)
    (211/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.603430472 seconds)
    (212/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.554175633 seconds)
    (213/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.471692906 seconds)
    (214/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.566083184 seconds)
    (215/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.449820518 seconds)
    (216/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.622775563 seconds)
    (217/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.213525508 seconds)
    (218/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.105386417 seconds)
    (219/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.622408431 seconds)
    (220/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.252929929 seconds)
    (221/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.508020685 seconds)
    (222/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.54195436 seconds)
    (223/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.124893181 seconds)
    (224/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.427657457 seconds)
  done (took 395.790334921 seconds)
done (took 397.121338427 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.490332389 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.621518779 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.436696217 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.439053454 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.482762008 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.442100874 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.482325636 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.443173276 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.448702648 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.448783093 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.439762857 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.44967797 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.450115449 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.478345365 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.548536745 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.451013394 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.437394504 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.445848202 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.487691782 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.500707093 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.479623522 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.483508537 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.458997205 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.436688264 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.485609889 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.486974026 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.444449982 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.429095688 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.444111756 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.485907329 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.42983042 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.446176382 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.496874563 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.493925504 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.481053665 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.447593984 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.48110903 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.620694621 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.482087827 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.479089293 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.452357445 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.494869254 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.447859028 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.45217213 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.497436798 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.460427597 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.484527938 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.562970434 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.431448864 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.440825182 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.486899685 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.50817273 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.450235495 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.434446002 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.433625014 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.565138008 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.445964378 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.488769356 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.449961863 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.483311544 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.555381552 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.487041158 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.507179193 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.48640593 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.450424264 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.453294371 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.447093504 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.508690035 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.447585484 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.48421232 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.486090535 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.452248205 seconds)
done (took 115.500289657 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.56949267 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.441820481 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.581455884 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.445064969 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.61136356 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.589740279 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.443436124 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.442829216 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.443239745 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.272073383 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.444165456 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.443908207 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.443058998 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.448002885 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.572397139 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.443320241 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.443244809 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.157646007 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.445288608 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.58226911 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.443171162 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.446556574 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.443841201 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.263204128 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.438835965 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.437670114 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.584343672 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.445327026 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.156867153 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.433480936 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.443181921 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.159179194 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.585309618 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.463283175 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.455157257 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.453395653 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.611231788 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.464829203 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.566321009 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.572172479 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.583190047 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.48418047 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.439736593 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.443502291 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.44786187 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.445854584 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.447315432 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.475849679 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.439529603 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.445899477 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.157625625 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.457488942 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.446216454 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.445446874 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.446258826 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.475787167 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.447472882 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.442601874 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.587210055 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.446724451 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.571897495 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.267286786 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.274269794 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.446905072 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.442373253 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.451730964 seconds)
  done (took 115.937753434 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.511747966 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.521190119 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.563398 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.461347803 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.495605923 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.571108493 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.46160688 seconds)
  done (took 11.930817135 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.451281257 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.449045611 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.497347007 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.496529169 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.449203077 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.598668481 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.44578667 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.455090338 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.448588832 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.500831414 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.447665345 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.448633664 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.45553987 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.44111403 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.49932324 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.456009683 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.559278753 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.445971643 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.44837505 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.59585052 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.448977571 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.456538592 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.504541177 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.456178176 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.450728867 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.452108802 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.211880627 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448532841 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.450429688 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.447951107 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.447998193 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.496358675 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.451218475 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.442985117 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.451359251 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.559817465 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.449586682 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.449945979 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.449775301 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.446460894 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.452837642 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.447752153 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.449200373 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.45051782 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.447934085 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.46859164 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.450906202 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.4493876 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.449637091 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.447371321 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.503076844 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.452178022 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.449013061 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.44894262 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.505349993 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.459899226 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.451287052 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.450822606 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.447868414 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.449687918 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.595718344 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.501853042 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.449518284 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.498188712 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.448179727 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.448848549 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.449348603 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.448508725 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.537218894 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.45039557 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.500251076 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.449678392 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.627817036 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.47096398 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.452828776 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.448226834 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.44930806 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.452060323 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.445821464 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.453608124 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.45114111 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.444888357 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.454461118 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.452526638 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.451352015 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.601454671 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.555685118 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.450862338 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.459915205 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.455346737 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.450049073 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.50692007 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.452540322 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.450303952 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.503019535 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.563908921 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.507331738 seconds)
  done (took 148.837614513 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.461158756 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.462370481 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.452042125 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.478282208 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.449800585 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.449967164 seconds)
  done (took 10.103295269 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.451621196 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.454741402 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.451324721 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.45270106 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.451703115 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.455354218 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.452583557 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.450720315 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.457707629 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.453020513 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.452544634 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.453023238 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.456093608 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.453697263 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.45269061 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.453461995 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.451593864 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.453343267 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.453335897 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.452207842 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.44789636 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.453578429 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.455535772 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.453188742 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.458498117 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.455318683 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.469665277 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.455453371 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.454043992 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.452676546 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.475678571 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.457137412 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.453401068 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.456923493 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.458971505 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.451999727 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.457514884 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.455524499 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.454948941 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.454399342 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.459399761 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.455175159 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.455141624 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.455998344 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.455069334 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.457847514 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.463085149 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.473728257 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.453989008 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.457363595 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.458573982 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.457562364 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.455385915 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.457731754 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.45604897 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.474268124 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.462612833 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.456243294 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.459989838 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.453236699 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.459386579 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.457299718 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.45622948 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.460693698 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.456614763 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.456283429 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.453729254 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.457908012 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.458482451 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.458144629 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.457797357 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.457882427 seconds)
  done (took 107.219760732 seconds)
done (took 395.373846598 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.49286723 seconds)
  done (took 3.846744513 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.454372779 seconds)
  done (took 3.811058475 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.846123564 seconds)
  done (took 26.210189761 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.497753321 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.531237461 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.460980136 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.445409541 seconds)
  done (took 11.29244379 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.912442238 seconds)
  done (took 4.268625952 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.452752221 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.446730694 seconds)
  done (took 6.256355342 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.801420444 seconds)
  done (took 4.159074967 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.034024209 seconds)
  done (took 4.396454056 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.466352392 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.463365892 seconds)
  done (took 6.296082589 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.436297864 seconds)
  done (took 3.790185476 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 39.183011902 seconds)
  done (took 40.540637 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.458434958 seconds)
  done (took 3.818803153 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.492946577 seconds)
  done (took 3.84625257 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.661445154 seconds)
  done (took 7.016481618 seconds)
done (took 130.904775022 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.44562626 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.449114987 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.449036625 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.448092949 seconds)
  done (took 11.145491973 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.511188147 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.507569709 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.509615167 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.507415073 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.507618964 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.510497523 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.48098543 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.481777935 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.508938481 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.508102265 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.509502358 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.506904676 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.506991965 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.481345889 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.506555811 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.508019798 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.507673495 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.508768119 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.483572559 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.508571303 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.455465317 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.50879425 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.506676756 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.456590758 seconds)
  done (took 37.346730207 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.971289521 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.525903769 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.609888437 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.509211419 seconds)
  done (took 7.973626947 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.537529164 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.53573529 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.548802949 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.586650923 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.599762961 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.548890861 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.487107721 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.478756067 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.46741924 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.536171178 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.587809118 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.52743795 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.618505303 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.459798785 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.668042295 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.456446149 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.456799729 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.535096268 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.586969368 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.605307098 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.459569484 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.536044595 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.541303718 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.528594348 seconds)
  done (took 38.25370528 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.468310211 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.474947878 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.460549379 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.473753404 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.45992182 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.460830424 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.461912543 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.468897619 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.459466368 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.458458543 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.460107514 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.474302631 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.466592619 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.459890095 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.468230831 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.460762558 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.465516787 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.464127701 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.462096425 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.46707485 seconds)
  done (took 30.653468136 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.448344977 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.452003614 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.799981863 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.708951999 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.452897303 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.451011405 seconds)
  done (took 14.671846795 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.541252456 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.716126182 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.455326364 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.880951737 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.959004978 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.454072925 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.458871974 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.747629509 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.126061768 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.109574145 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.52793337 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.538746079 seconds)
  done (took 21.876440367 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.461406561 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.453588529 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.455002504 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.468916597 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.523334871 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.478637062 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.466372622 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.451279026 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.524875116 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.540937902 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.479688668 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.523583433 seconds)
  done (took 23.189857296 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552615452 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.454678458 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.470719297 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452732089 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453252446 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302433267 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473190572 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.225958763 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.479901738 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733123452 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46447272 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553446812 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.71453889 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468448348 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.456634865 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.465863366 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690883643 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048673298 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458965555 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466534772 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492613991 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466905499 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464049253 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.7028182 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.455866426 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457151993 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.722482335 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45860695 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78561005 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473084757 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470974755 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459128966 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735315165 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16106317 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573090063 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.698603829 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462904263 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.457939269 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.468485538 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.469022785 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463430062 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.460909421 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469462795 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458093645 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462011618 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465633546 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226309994 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.483662358 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.458052406 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.461411479 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.761499377 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559210183 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.464363831 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456258991 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496165895 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456744614 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.46586684 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593244993 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063553087 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476992008 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469707983 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.463621634 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45807358 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473486889 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170966711 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.487356935 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.465681651 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.463917996 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458360928 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.471290047 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48068858 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45883507 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.482427922 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459788334 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438796562 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486877144 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462886472 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118949748 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46254785 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.480035169 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695541014 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460066044 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461164696 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.459139837 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.460579361 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.310399061 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471449585 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.446437322 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507252047 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257356113 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.722647368 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478305589 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491983984 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.683877146 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.447497334 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463477342 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.462994528 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462662332 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477123763 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.227099178 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477886398 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.463499098 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72038296 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.668557422 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469466576 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.452092886 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990167936 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482242094 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.481195382 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.471924593 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.703286565 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.131001665 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498497958 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462857153 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49138557 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.462576602 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352419416 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466115921 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.564739705 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466760579 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769268526 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.406529649 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465787554 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530978081 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469302549 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.463187517 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478045991 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466779549 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46283785 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.697701362 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488589443 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.474098723 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.462571524 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463855458 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.475067536 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476338402 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.460907267 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.687379375 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465690633 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744282965 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463905134 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461363065 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460345851 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.686044412 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.476802485 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.798342947 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.726349861 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471961756 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.476216188 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475056741 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481763946 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566366851 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486295257 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.47431233 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.721133263 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.469006194 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.469195907 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478580787 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.469159893 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47312183 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.469727186 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459074559 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132456275 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486122694 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471098867 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361009118 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.479898189 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533276687 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.473972387 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.708075288 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.464300781 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463045971 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.490839353 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.480314903 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693160068 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474817894 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.477477928 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546420546 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.990427047 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156837884 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498368355 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.463780334 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.466287485 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.468546541 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466483559 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468589809 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.466362483 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711007113 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.48027768 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.468549809 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.144981784 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487238091 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477753897 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.47637498 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478827344 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.474693807 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468775506 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.467637503 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467038146 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476285343 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.480020143 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60952713 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.48310102 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467904937 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.985663938 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475945631 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.465075974 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467469324 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500718549 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.485031987 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368136612 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.746392853 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485442977 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767622024 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48666293 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.487129032 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.46793534 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468525188 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481369156 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.470996939 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475273558 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.476543239 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483377168 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472338852 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041603226 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42902071 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087667353 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491023851 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.498667386 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.471447422 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250030739 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485796611 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467642523 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736695442 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252828261 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486061928 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994309178 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.498923748 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.36553208 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774031115 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706660222 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467370335 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.494814929 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.77800291 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.685431987 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503856816 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.481589394 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470271876 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.452453701 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098878896 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490817788 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552779313 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240675083 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498091883 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.474753475 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.508120616 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.472911391 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925699168 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.488692458 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469641578 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48467105 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.483941431 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393901582 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.494893767 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471756936 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181178247 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.499319798 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.995900769 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487642319 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.714391865 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.480730915 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.476257943 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.469742799 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.497417774 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.728871386 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771459803 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473815588 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.480683282 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094855582 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.359000013 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.4792022 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471749132 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363401252 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48218629 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803575723 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.491365098 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.477761814 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481302453 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.468918234 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472152683 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.470411482 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.47779203 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474024569 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064075843 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.491098089 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469104967 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507461868 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475308872 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.729587342 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.487143174 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.154647894 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722727017 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470446697 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491789091 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.47846154 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490971124 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.462832157 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.473545182 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472001987 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507642768 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.696910388 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.490933564 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.457395846 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.469992291 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.684477879 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.472146272 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488990619 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.749217952 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.471861137 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.47914373 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450034556 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523649124 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.47255245 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501525573 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.485436183 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513279929 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563610016 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.718277095 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.483803976 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.482676319 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934153097 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489738341 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496206905 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.492445018 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569057629 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477707747 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.482757632 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.251303813 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156728781 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48690198 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.156261253 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800266673 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.476749246 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473964409 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475728614 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634916904 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475544601 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750807452 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473908359 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.467352486 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516289319 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486154614 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477457198 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70876986 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.752294033 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471285656 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486787918 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475232532 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.473902218 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485294017 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.687128555 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067401524 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146583979 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478377159 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.474614051 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.271950489 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769560233 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473041343 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477774873 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474218909 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.482804037 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.504003073 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.4843691 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47718043 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62109386 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782448833 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193145937 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.502197213 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.507916861 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.995219604 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473654889 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.751932476 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481159636 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.725431623 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154449885 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317345536 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745472028 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545151549 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.722281822 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.474670747 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637395477 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.490833012 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479674643 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481147348 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478956736 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.478401492 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.486909378 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162351338 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764032809 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.482553352 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.493101633 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508663482 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.48577565 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.702404251 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.337687572 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.704856281 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490372889 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.484933172 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479238658 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164002814 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805090718 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482113849 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.483653558 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.745952702 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.476316318 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503043533 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.999290946 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.478029278 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114067785 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.449360371 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499004152 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477681572 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.29970976 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15938802 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.502534339 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064650404 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474317143 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488176843 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753260435 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.48830513 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48052852 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779035022 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.485171823 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.47966611 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.74408517 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.151699349 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.405638819 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.484228461 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494743587 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.500863894 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479488643 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498264658 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478605717 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479110992 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.974602651 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496488005 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479817893 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488916945 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.487024716 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512870412 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.479010378 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47903212 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.487644652 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.492612741 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.468709571 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489430982 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616440499 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103807959 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496945851 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.154932116 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.804538234 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.736583259 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493595673 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.464154709 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.48231784 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478185018 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476910585 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480466796 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.486278715 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110481095 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.483807377 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.489671463 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.482678924 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.478075896 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.688253293 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.476116135 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724950685 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475552746 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493433607 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.462848162 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479304367 seconds)
  done (took 1029.826130767 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.511028623 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.51526503 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.487928629 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.5201877 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.488695506 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.594093894 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.563834124 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.499461846 seconds)
  done (took 21.55873008 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.477085425 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.483430672 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.47560918 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.483814543 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.479932199 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.006197233 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.492875797 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.482272764 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.496974841 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.480489556 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.479166854 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.477309223 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.480994155 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.472315708 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.482579594 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.485460155 seconds)
  done (took 34.618993928 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.775228693 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.746248455 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.000441729 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.564648701 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.474499323 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.471418103 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.868055443 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.495329574 seconds)
  done (took 28.778068468 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.48234383 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.482832086 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.484344409 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.485293796 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.485153605 seconds)
  done (took 8.800208266 seconds)
done (took 1310.050184075 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.486215823 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.481040869 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.484449169 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.482391304 seconds)
  done (took 7.313520406 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.465712421 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.463471509 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.462979387 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.473087166 seconds)
  done (took 10.242970836 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.290709645 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.187839123 seconds)
  done (took 5.857750832 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.008444856 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.999703509 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.002381208 seconds)
  done (took 7.389483408 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.78340599 seconds)
  done (took 3.163713584 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.407754841 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.475246316 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.188139569 seconds)
  done (took 8.450951065 seconds)
done (took 43.79668477 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.475034172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.741675591 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.632304257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.4751412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.631931898 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.631107154 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.241668215 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.491195125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.482099754 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.480015641 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.471058993 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.631735478 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.228080217 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.739217836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.226122572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.726071676 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.636159742 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.479005681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.471285802 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.496881208 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.237013499 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.481845559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.479958875 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.470244049 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.632904609 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.621478075 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.487442707 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.721169073 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.474225718 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.475443533 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.620429421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.485477158 seconds)
  done (took 85.955442043 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.476841119 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.479412402 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.473172762 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.504331486 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.480866977 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.479541584 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.504452819 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.471271914 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.475766452 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.474180375 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.506378261 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.473434296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.508295919 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.473216937 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.511952164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.47333879 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.508876962 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.473054548 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.474871409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.490347632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.488673767 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.479589812 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.474380474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.482820305 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.473160501 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.474501139 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.492004912 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.492192331 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.473718282 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.475033801 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.479094903 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.493509449 seconds)
  done (took 80.875903469 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.477414075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.478840509 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.496697506 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.475071312 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.494527072 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.480152318 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.475000749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.47569685 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.474719159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.505593597 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.48826633 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.476468216 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.495038366 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.474369827 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.475556453 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.47538255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.483169697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.479808765 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.489846277 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.49338897 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.476259084 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.47511407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.476503438 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.475239685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.495720017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.515791969 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.480520779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.482032677 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.478519237 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.475962981 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.480740159 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.496660197 seconds)
  done (took 80.859455773 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.761187214 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.487973699 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.490781027 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.483510813 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.492876969 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.490847772 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.482948157 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.770479325 seconds)
  done (took 15.844709721 seconds)
done (took 264.915662201 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.489786406 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.041275782 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.525061232 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.483539591 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.524141763 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.51114107 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.739370346 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.529856018 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.733809433 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.505932948 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.503071055 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.496865978 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.399861993 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.643476701 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.384837044 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.496543325 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.48623459 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.480420673 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.118024467 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.793279182 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.506262682 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.492054779 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.389727724 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.515340563 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.471882856 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.588994146 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.5939817 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.722523106 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.653799883 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.57303213 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.065979808 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.487374887 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.483636292 seconds)
  done (took 68.8165216 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.48685537 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.614210957 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.490589133 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.491249191 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.617605917 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.511257051 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.487249094 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.492585459 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.492343702 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.490476231 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.491985695 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.491295028 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.494400416 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.544476634 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.618901406 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.506466831 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.487612064 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.610976334 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.485471076 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.488242841 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.541095744 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.490012645 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.493943363 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.543213545 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.492486724 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.492928334 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.611531313 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.513066304 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.493480769 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.610933001 seconds)
  done (took 47.06468234 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.494217428 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.147591771 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.32970072 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.495867718 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.491234184 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.497387922 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.831014644 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.494954506 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.49391273 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.495976866 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.048586487 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.498556055 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.529784133 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.35306032 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.48901429 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.496190593 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.496920515 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.489023486 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.165076696 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.502606043 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.848662048 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.492761687 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.831729263 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.497780614 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.510507528 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.493792262 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.497599183 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.382131302 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.512550077 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.045163784 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.392427954 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.827579462 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.34335376 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.360633571 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.391803086 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.496956618 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.492158918 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.050104759 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.493058191 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.492792715 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.826875825 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.4901095 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.329705141 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.200073491 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.510032258 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.49801983 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.406066008 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.067779568 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.777136511 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.496271693 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.358504861 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.492159068 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.497464429 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.494148043 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.779095285 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.49510208 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.492063504 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.441693535 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.521346763 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.836009993 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.499085134 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.492050817 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.149958762 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.4908969 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.142937757 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.493468252 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.50191066 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.512249939 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.334215191 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.491365578 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.223991651 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.512746123 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.499268219 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.03887985 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.140552116 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.458019071 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.492282125 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.156872423 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.349449775 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.848544241 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.500737703 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.370852718 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.85671788 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.498434724 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.500725007 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.499304907 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.498624927 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.574252857 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.831195866 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.177945769 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.215444802 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.4805795 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.860493742 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.503343548 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.495684439 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.461488516 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.522974453 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.498739854 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.334892513 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.221061406 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.512730023 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.502964933 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.23265116 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.515381496 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.83624107 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.531816873 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.340369125 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.493774908 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.574887901 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.49614143 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.502449652 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.518991124 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.836943173 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.498015824 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.500382644 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.205747692 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.079739709 seconds)
  done (took 210.606747327 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.489947215 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.486603509 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.489653681 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.487862004 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.489874657 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.497282105 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.489931097 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.490613138 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.492301874 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.487852697 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.488306894 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.498875798 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.497582339 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.490116292 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.490037383 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.486231585 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.507796928 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.49073665 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.486519953 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.490816305 seconds)
  done (took 47.222719949 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.502088361 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.158606032 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.134591805 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.500007709 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.499813902 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.497446865 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.562436175 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.500738415 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.501558907 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.856231084 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.696392009 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.520813832 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.499738902 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.49834015 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.123467329 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.493785607 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.854259576 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.169856041 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.504300327 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.167862356 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.493859009 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.497243007 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.497628189 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.170641166 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.881546826 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.832010474 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.563877415 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.188315411 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.517515475 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.502183282 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.168522779 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.503466488 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.496202295 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.171517617 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.521687849 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.517430503 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.501304298 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.564524861 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.583871918 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.874138849 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.255889071 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.860399906 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.513385763 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.68308349 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.501989688 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.492111631 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.179516396 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.520670008 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.491997189 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.503480851 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.50839046 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.131977556 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.517264998 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.130858162 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.521479262 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.501790492 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.168728803 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.133251823 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.146151134 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.698638961 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.515245033 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.83488865 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.504780398 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.179767754 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.523352247 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.504077542 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.504697991 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.701251492 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.192806527 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.838772826 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.85986444 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.861056341 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.503583347 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.571994922 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.519498174 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.938409349 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.57246508 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.917179875 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.859612989 seconds)
  done (took 138.049534828 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.81048378 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.627526742 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.965240215 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.161061382 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.496931545 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.646358876 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.620466079 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.77887875 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.513867011 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.576696204 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.241844251 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.648149636 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.321597143 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.595821096 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.631093563 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.658221273 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.954299924 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.508843594 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.250378183 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.240393878 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.503113602 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.643220954 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.097249992 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.729773 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.495037501 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.158014306 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.520540478 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.231084879 seconds)
  done (took 58.022921426 seconds)
done (took 571.166991508 seconds)
SAVING RESULT...
DONE!
