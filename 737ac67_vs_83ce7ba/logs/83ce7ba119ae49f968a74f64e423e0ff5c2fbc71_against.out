cset: moving following pidspec: 11160
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.050579714 seconds)
loading group "string"... done (took 0.621100262 seconds)
loading group "linalg"... done (took 9.840866574 seconds)
loading group "parallel"... done (took 0.18630066 seconds)
loading group "find"... done (took 1.563822855 seconds)
loading group "tuple"... done (took 2.220743258 seconds)
loading group "dates"... done (took 1.531181856 seconds)
loading group "micro"... done (took 0.241611831 seconds)
loading group "io"... done (took 0.603839062 seconds)
loading group "scalar"... done (took 48.726096821 seconds)
loading group "sparse"... done (took 15.162404794 seconds)
loading group "broadcast"... done (took 1.33263262 seconds)
loading group "union"... done (took 13.816778927 seconds)
loading group "simd"... done (took 2.977061804 seconds)
loading group "random"... done (took 11.820324462 seconds)
loading group "problem"... done (took 1832.486201335 seconds)
loading group "array"... done (took 27.923653601 seconds)
loading group "misc"... done (took 1.229403493 seconds)
loading group "sort"... done (took 4.036289198 seconds)
loading group "collection"... done (took 21.248285984 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.78030024 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146348734 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.221230583 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.388532603 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.244469504 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16682464 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.176638258 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.596290232 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.041041496 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.294263985 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156415625 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.620004739 seconds)
done (took 6.576959378 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.334733811 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.407115258 seconds)
    (2/2) benchmarking "String"...
    done (took 0.183783353 seconds)
  done (took 1.256815998 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076701086 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.191456408 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.115587121 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.115184789 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.103532194 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.117048577 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.116024853 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.116482588 seconds)
  done (took 1.544627201 seconds)
done (took 3.890178389 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.577040069 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.900022178 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.543623066 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.174867064 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.208221305 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.186359051 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.329076101 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160970265 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.122579002 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.110550797 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.234697235 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.363653494 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.511159484 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.043486646 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092106327 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.129201382 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.099849721 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.707621539 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08226123 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.13974522 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.623070684 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.117959592 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119509089 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127365359 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.218936008 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135669289 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17044425 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.092867819 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.687636102 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10448847 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.239541647 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085818634 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.183837971 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.261699621 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.082557188 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109288305 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678636699 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.18337415 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.121852556 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103854133 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682117225 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083928481 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.256149179 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109590201 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.114718478 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.201910201 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.1069976 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.109217576 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.105203076 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.088334181 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.177146606 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.467174555 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106864174 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.178865359 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109454764 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.724568281 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097917505 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159316257 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140820671 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.113372382 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.081165554 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.113483781 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.166547177 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.11260223 seconds)
  done (took 20.550008668 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165044049 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.172747447 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09503255 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143828216 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.147699108 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098943191 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100720952 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079085437 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.134574429 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.242424167 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144471676 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.191780952 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075898398 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.102498687 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146521802 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.255779113 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109600338 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125155285 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102114931 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092535812 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.145963249 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114332534 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112054869 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096586117 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.189510817 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207147427 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109703381 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124930053 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.101831437 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.120458354 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142529209 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151485344 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093705284 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084020128 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.207827774 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106871674 seconds)
  done (took 5.524313457 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.234740642 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119860918 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.247438516 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.185200633 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.15395189 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.187494276 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1493458 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.311565878 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.31771815 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18798029 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133067572 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112755714 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078853945 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098855531 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095350063 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.745463706 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183365024 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155463022 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154939915 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107640957 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099868767 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.400110399 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087931563 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099876291 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086592962 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.096067475 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.228376597 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08675002 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.418854853 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100660996 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112266243 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133759413 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21427081 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.119550969 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.146616468 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106151675 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081495691 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.245785863 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112686505 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077512392 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130993776 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135183394 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136341433 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099240041 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097426651 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.252457241 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100937819 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107027954 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.16641271 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201951601 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.174863216 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101717009 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082570258 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.400250396 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117590908 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089426352 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101639729 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.320767953 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.140254118 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082824847 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096244272 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086871124 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097718073 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.450428531 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094777883 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100964313 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080102205 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.188131577 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.997020513 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08698451 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107441694 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105722685 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08605037 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.121697616 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098587628 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079994014 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098866737 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079018895 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104227385 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.121052608 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102074293 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080785078 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160269894 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.104154365 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118647831 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126172734 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103365936 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081510543 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130435119 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096851182 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085355457 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.192792392 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.091169723 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.124205626 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103481175 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144396538 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098300383 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.221472403 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083597192 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127034841 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.163150315 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102515337 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131661319 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.129867709 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098172127 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085975257 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100600624 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077949817 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.101140798 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159879735 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082639605 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098587045 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084548656 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115415618 seconds)
  done (took 25.081880071 seconds)
done (took 51.82351794 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.544942019 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.128308312 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.127699512 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.12805092 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.126369867 seconds)
  done (took 1.807967949 seconds)
done (took 2.527652196 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.400966108 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.195077435 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.12693394 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19587572 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108886653 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.199691154 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.202623959 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.122898621 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214853247 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.104045056 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193455223 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103230461 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108395286 seconds)
  done (took 3.031214753 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100619508 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.128118323 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085270759 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117782186 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079269126 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117527952 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114907404 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.129724374 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114557659 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107832989 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081135251 seconds)
  done (took 1.894365519 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097720685 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.122144313 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086518847 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114796448 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080557028 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113492631 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111895682 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107010403 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114857977 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09148252 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098762841 seconds)
  done (took 1.858540973 seconds)
done (took 7.495830226 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.268000672 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.787184639 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.153800868 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210646267 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.418489205 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.260491212 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.655401853 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.171948681 seconds)
  done (took 13.869055097 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.122502444 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.14711367 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08901423 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105245665 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088067961 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102330322 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085646665 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103578603 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104137925 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087897982 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103020258 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086387621 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102862387 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086906371 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103654129 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102828046 seconds)
  done (took 2.426975807 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143997329 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142458645 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095338855 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.116904618 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.109519398 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.092633817 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.111264599 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.109650652 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092056082 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.1080673 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.114562596 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099607705 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.113267453 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.106179708 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097104452 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117042338 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10578892 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.096085341 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.111731236 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112527597 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099555046 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.108845367 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114501647 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099494261 seconds)
  done (took 3.434136257 seconds)
done (took 20.45035229 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.188961549 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104234303 seconds)
  done (took 1.016792614 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.155275257 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.15789407 seconds)
  done (took 1.036885279 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117368613 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.101843516 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.148728298 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.123311523 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.101828902 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.086487001 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.140954177 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.102759432 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08530773 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.105168565 seconds)
  done (took 1.840744359 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091504946 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.106806249 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.114523676 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.153092603 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.100224608 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.108256855 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.108015768 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091576297 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10787062 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.103002993 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.097115291 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127093807 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.110345153 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129645928 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092150147 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.234068627 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11603499 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.110281422 seconds)
  done (took 2.829851744 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.087133791 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103064704 seconds)
  done (took 0.919832752 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091568952 seconds)
    (2/7) benchmarking "second"...
    done (took 0.102774698 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091111199 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108448451 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.102499937 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08725641 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102918348 seconds)
  done (took 1.415068665 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.572086153 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.28362478 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.390672227 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.124989238 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14944334 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.40963022 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.148962815 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.120634874 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.121881439 seconds)
  done (took 3.099223864 seconds)
done (took 12.885665996 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093283852 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.247783685 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.61696253 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.125367994 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.085404471 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.16099986 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.336169468 seconds)
done (took 2.399500055 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.370777324 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.161992014 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.093988084 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.100341306 seconds)
  done (took 1.459214317 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081482652 seconds)
    (2/2) benchmarking "read"...
    done (took 0.110909877 seconds)
  done (took 0.930250499 seconds)
done (took 3.135492143 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084525009 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098688941 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.12068812 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.101099128 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.101348285 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.083558458 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.101791766 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083100208 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097852327 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082914037 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098647284 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082652266 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098247273 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08318127 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09943669 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082633971 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.099238568 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082918586 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10019078 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083175838 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100780832 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098714551 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.084467694 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098551594 seconds)
  done (took 3.028534866 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108960119 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.105502514 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110117245 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09049006 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10747685 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106562118 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09001585 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.10293226 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107515573 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.086472006 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108639706 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109444706 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086436689 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.107833325 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10164192 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.093635857 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.107975302 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103032944 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088481838 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.109266427 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106459695 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089679474 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.108890058 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091016324 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.108733609 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109621861 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087424139 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.104906228 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108456434 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092170722 seconds)
  done (took 3.778984868 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.094424849 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096771869 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086707649 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111122836 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080823439 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102017811 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080850507 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098634969 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.101399405 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.084855419 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.103340451 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.085293821 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.098353072 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086232785 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.103415656 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.087793761 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112743734 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097992061 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081601738 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.103162574 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08822848 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097606438 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085073244 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.101118535 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084137984 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.097337269 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08572731 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.100234139 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.08575405 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.100222082 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.103577984 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.088246678 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.100068652 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.095654671 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104346233 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.084163459 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.107093161 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080895915 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.102998263 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096429022 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081659981 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.100051893 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081305294 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.108005928 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.085992759 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101788007 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081108519 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.103085485 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085061571 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.105973302 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.097276395 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.082402262 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.104315255 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.087401713 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10476773 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081339494 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.102673171 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081350896 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.103557399 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.085269581 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.098746684 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.097004502 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.090390241 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.102997143 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100460537 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.109435351 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097010619 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089667942 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.10254531 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.089713607 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.104746406 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094472156 seconds)
  done (took 7.576602745 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100039878 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11431441 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087041483 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103998906 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102985667 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08504176 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111762746 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08559028 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103480289 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110471154 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086253431 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102325231 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087190217 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10419777 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085868123 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104325349 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112439395 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085930635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.101500567 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08605223 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103549472 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110902608 seconds)
  done (took 2.922350164 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.270237072 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092928968 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.157100603 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120448168 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.127944391 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12192401 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089991752 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.1100516 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106887817 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097352428 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114418933 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107512956 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.126580309 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097267959 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113543215 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11668884 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090581396 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1160436 seconds)
  done (took 2.92240177 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105309979 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.107120779 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129609642 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.088247178 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.106185952 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088550727 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11407891 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.122736377 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.104829445 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091033985 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.116144361 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104516467 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089240006 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106024883 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088518882 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10594043 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105625146 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089722513 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116083896 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114168857 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096952302 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11529564 seconds)
  done (took 3.055710282 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107399017 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105231214 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.14488309 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093723903 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.103251702 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102067595 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.095217893 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.10734036 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.113133004 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.088786158 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106481854 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087249487 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.114647091 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105837647 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095844979 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106167685 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088085687 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106951152 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105392678 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087376989 seconds)
  done (took 2.813374604 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.184770474 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103373656 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122502249 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135920374 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121328823 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104565352 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134684397 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121507566 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104085655 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138476604 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120661917 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.120650422 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135450874 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113497367 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121410692 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135562732 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137037991 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135494248 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105262011 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121612169 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138383049 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103686717 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135745105 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122120364 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.120920739 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10503941 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120488982 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130862705 seconds)
  done (took 4.251904653 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08615829 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100453047 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085694376 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.101227395 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085110121 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.103024948 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08540548 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.102078477 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086601451 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102136703 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084583351 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10167918 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0842843 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102019359 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084553615 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100876787 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08503861 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.103216054 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101328839 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085190135 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.101121836 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085395485 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.101166822 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085995007 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10237193 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.086665236 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102534252 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08466091 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101267571 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084683297 seconds)
  done (took 3.562452218 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.099884433 seconds)
    (2/2) benchmarking "in"...
    done (took 0.131192701 seconds)
  done (took 0.99062689 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096292642 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12405359 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085075776 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103287693 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.117248139 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087086797 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11628682 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116289189 seconds)
  done (took 1.60464424 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.157368625 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.157752917 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093323171 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118839494 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.159381688 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.148946327 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.152895426 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.11013114 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091723821 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102047809 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.153009509 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082753592 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111231556 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104562838 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09301695 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.1161727 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.087627753 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.114937985 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.113738872 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.090211124 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110270467 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100414618 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112033704 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.11658415 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085900246 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11260831 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114517551 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101521483 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106198714 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112447338 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091714635 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.104644482 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.093539912 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.111789501 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.087542296 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.155085507 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121911778 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108525053 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092025045 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112479946 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115912887 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.088163704 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112383695 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108049188 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097508569 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.111648086 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.094860368 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.107097284 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084793886 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106200933 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.105941364 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088508508 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.104951051 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093940341 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.111338232 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119139222 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088957672 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105862878 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107857069 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087797977 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109333191 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087722792 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113249352 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.108845614 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094275791 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.112314171 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.119626567 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.088618602 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.108059377 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.089765837 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110980773 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126344698 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094727848 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.112825898 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094885918 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.108801712 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108226871 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095624527 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110432912 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112698058 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.092936994 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115055131 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095381614 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106149599 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106178683 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095499853 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.10750398 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.090931802 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101876941 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121522867 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.090625121 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.106098153 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084437402 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109532013 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087985139 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.109718034 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103286902 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094161881 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.10450105 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094115052 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112902773 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110833105 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097580195 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113003411 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113227338 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093552518 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.153418099 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108463678 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088540091 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.110618915 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095042463 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105048875 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114575907 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089677298 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108648488 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08820109 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.112895279 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.1117556 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.090099467 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.112422173 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096993455 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114183592 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.108751371 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.087556872 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106627817 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.092263656 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116971594 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114049395 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08984814 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.107980676 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.088690229 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.111437006 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.112237377 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090449247 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112723496 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089968189 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.106205297 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10843585 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.094852075 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112385191 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088117434 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110581587 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112957802 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092976236 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.110977674 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112636808 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089016881 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102367578 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09383888 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107850463 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08977774 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119565043 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107717957 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.091064765 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108296043 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117550917 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089311167 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.113991884 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090202615 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112249186 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113386777 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086298289 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108831985 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.091215821 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115541445 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088857091 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.107980278 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.105203814 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096370741 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103395753 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.092252038 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103454539 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10801605 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.096372336 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.108672819 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093348855 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108050989 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124989161 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103250589 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114073613 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094010096 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112543965 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.111249034 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092081737 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.1118583 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095684794 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.113731046 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110843282 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091462229 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113015517 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10824838 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094960675 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109854839 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095303476 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104450582 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089286885 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102944571 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.112596114 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095899186 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.114042559 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.094895422 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10994355 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110810405 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100857906 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108223768 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.093740276 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103376642 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.112634458 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100277434 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.114154795 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09727871 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114405215 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109683878 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090512626 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118959253 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090250158 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113690387 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.108465381 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086762818 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.105530796 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096422766 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.110857806 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088384981 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.105995747 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114696287 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095358519 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.11016083 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085372248 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.112021576 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117547981 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08789202 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113351019 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109654892 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092307025 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122651778 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084951271 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107462985 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116281601 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.094066385 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.107107642 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093731003 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.110403136 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.114556631 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.091952481 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.105821024 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086983754 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111603279 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087830662 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.101376137 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103430127 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.087508616 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100121988 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08729242 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108985615 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086291991 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104360838 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114692884 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094207123 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.113024119 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108675397 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.093553761 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.115958574 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096321437 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110611439 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.113869083 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088697135 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104180656 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089571692 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105357235 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09073025 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108174329 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.114185497 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091393808 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112843463 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.093165009 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116549345 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.11093075 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.096327349 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124998687 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106829085 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085329422 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111800795 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112168625 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090208902 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109196735 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.091097529 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11469322 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.113387406 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097185869 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108674439 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.087610526 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.114816109 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109047973 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097770049 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.114665503 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.095759531 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108861899 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.094920951 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.110192493 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118955607 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08690963 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112241162 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111483146 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094079591 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.111318396 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091042071 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.110048146 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104786877 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090897242 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116644507 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092820757 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.112110301 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113934811 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091767706 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110718745 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088761572 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.116810255 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111128732 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097179062 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.110433913 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086353572 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10671312 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.094583283 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11500868 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.115621309 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088899974 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.112854281 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09651979 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.113756352 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.111276848 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.099972693 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117278387 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.095738234 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12062506 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10570082 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091327696 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119681127 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.087986108 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.110974306 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.110256864 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087651553 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117771192 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.096872467 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115131703 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111059382 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086143094 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.108445955 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.096662449 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.11203821 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.092838638 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.112007447 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114928269 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088166826 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111910767 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096477008 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114228332 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11694469 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095438531 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.114134688 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090314546 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.115085993 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.108219096 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087958337 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105022528 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092402332 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.116732563 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087242343 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.113918545 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.11263113 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090845377 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.111711108 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.096008595 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.109357818 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116691953 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095191253 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.112344253 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101995343 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.108876089 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111380144 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.094031439 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.114404872 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088250945 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112314915 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111840247 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098437616 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112573304 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.095202843 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113845082 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114675811 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.092428463 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.113927228 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.095461399 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.117668881 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086214188 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.116511137 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119261851 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.091091838 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111475995 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09204199 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.110066429 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113223131 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.09675235 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110852733 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100962423 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.116208846 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111668271 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092877611 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.117374777 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093125879 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119163012 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.109107526 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096462372 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105447452 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118078905 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094004409 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.115697482 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091243121 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.107017797 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095619368 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.116455243 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111971425 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097838146 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.116692763 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085270002 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105725618 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.111125389 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092079263 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122427868 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099420355 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.114081934 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112903179 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.093768359 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.11023754 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0986676 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104994861 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.109926322 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094638986 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116613398 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093437933 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.108648348 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.113100628 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093007222 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11784452 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.114007487 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089293851 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112907867 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098197497 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.110527013 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090146974 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.111773125 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117857646 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094924209 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110680111 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087604475 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121819294 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.11731786 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097738935 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109148206 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.110738096 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089644806 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.109277628 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.093593362 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109053255 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112905344 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091358971 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115359053 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101830371 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105818391 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.110726527 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105482259 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115194334 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115411822 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.094385569 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113446991 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098567165 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116785456 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.088120387 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104556105 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105362125 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094766881 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.107962199 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.092278129 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12305181 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114619427 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091978825 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114935472 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095533323 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.112853658 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.092476839 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107682587 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118575344 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092578582 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.119626687 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088117105 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108751102 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.113089116 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097242502 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114047201 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095708497 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.11112831 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.093342193 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109590051 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112088584 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.100006919 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115020563 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.098190508 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113621568 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.112662645 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.093309646 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122905442 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.092067175 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111987915 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120070001 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.096793147 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114998174 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115349554 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10034714 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.119311827 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094447784 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.119076098 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111799411 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094425995 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.120238488 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099527172 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123584419 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115105965 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089327392 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.114904948 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092370256 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108184411 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120225359 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100457725 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.118522057 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114476826 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091141702 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119986437 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101453858 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11500525 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112225573 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092860778 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.115170791 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092665214 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.113827173 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.111268248 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101353884 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.118993857 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096037705 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.12044512 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087893381 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124416646 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118223819 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.099510918 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.110463167 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088286506 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109206923 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.113371598 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.099863548 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.113994491 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.093036817 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.113788689 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.094823148 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115566512 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116546704 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093336056 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.119513996 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.096418381 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.112564568 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118396343 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094211564 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116582933 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.091981044 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.116954855 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.119417557 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096947591 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124771503 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.096672445 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108087531 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107001006 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090138964 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.110059566 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092185086 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10923707 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104641092 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083778276 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111272889 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.093924356 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11116987 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114677036 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096634673 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108506197 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093725256 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115023788 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.11124234 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.091502983 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.117393958 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.093893601 seconds)
  done (took 63.443242542 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.172847441 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101404973 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116211157 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093647013 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.144373469 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1157473 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113421879 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096229952 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116888497 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108229265 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.114359823 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113635181 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.138599607 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146848009 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.144444508 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109988718 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112732307 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115704162 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094093536 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115263013 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.138180713 seconds)
  done (took 3.331331478 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.118110482 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.134347768 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.133444208 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.136409795 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124440635 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.109326054 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.133496862 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130365106 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.135091877 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.128066967 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135955159 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.130331123 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.107308835 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.127323627 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126461304 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126699468 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114568384 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125352487 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132488745 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.133012565 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127161863 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111966781 seconds)
  done (took 3.584804771 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.102429234 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.116779469 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098981 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.112621582 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.096687134 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.112606222 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123716172 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.092543043 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.123473418 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094126956 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110872514 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093543767 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.119202815 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.114150724 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091385941 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.113234914 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.103336852 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.117147855 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.098514989 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.114993868 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.131592596 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.093385611 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.114891318 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.090325955 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.128555997 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.120529009 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097561868 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.117231911 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089901119 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.117555534 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.092515267 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.116931709 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11430306 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086651856 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107755797 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.096867408 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.114482998 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.108405063 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.087829167 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.112722079 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.089567896 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.114778785 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.122020586 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09426047 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.111766723 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090510582 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.113686036 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.087903204 seconds)
  done (took 5.925450194 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.160918452 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.169332111 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.119875368 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.157187208 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132686574 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104787569 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.12037547 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158148881 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.113182844 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.094340186 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.134541151 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.136221299 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128861333 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.127754888 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098070434 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118938697 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.12489292 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102688113 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130710414 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.121445284 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.142931469 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.100763399 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.132246679 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133225805 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126627952 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101245855 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.13456505 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.12916309 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.133671034 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111144235 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.129862592 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.130240141 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.139718839 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.126971435 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110232972 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.119528337 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.136713409 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.118457658 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.097846493 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.114044798 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.100339047 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125515079 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.118386148 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138266546 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121521547 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108964308 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120458403 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.114716057 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124094998 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.119791363 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.12747701 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.138674086 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125909495 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103712309 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.136970203 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.138722258 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.116610971 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.094703303 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123624267 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.137589969 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101633878 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123522348 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.148202196 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.117832546 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10497895 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134515856 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.119133826 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118840035 seconds)
  done (took 9.373339751 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133158105 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.121412407 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136533571 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.141097205 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125748619 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.105168003 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121256706 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.125792131 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105531405 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.136219415 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126454504 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.216370099 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122504758 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.134363236 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105344563 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127654562 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.127188983 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126711362 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10636042 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126976681 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126825325 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.141638183 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106600773 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.141075762 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144112057 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122219039 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105993824 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127619788 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140422227 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127106828 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143107038 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.106712844 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.129146977 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.14225693 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.143883591 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.128291023 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09788073 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128221833 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.128119703 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106660096 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123277871 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140462866 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128808739 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102380852 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125955461 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127772411 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.14267154 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.14459723 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114141931 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137001394 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126235519 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.142255031 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127444991 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10657493 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.141303152 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.152934402 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.143128799 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.141191578 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128771351 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.142640236 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.141985155 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.152888044 seconds)
  done (took 8.861567362 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095266614 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117016507 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096153519 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.115994472 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094958292 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117174033 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095693275 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.115719712 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095180828 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.117055507 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095409236 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.116632488 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096817672 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115431445 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094543069 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116183128 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096419878 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116700096 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114794647 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09556451 seconds)
  done (took 2.939287657 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108956491 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.141593641 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120898729 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110052743 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.121531261 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129698992 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.098390472 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120617762 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120013241 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10026527 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.133843966 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.133495224 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099987018 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.130553959 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.133261579 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.130420362 seconds)
  done (took 2.757677049 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123401218 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.143141885 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.17856176 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.124976783 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121100194 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108596687 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.121245876 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100744846 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.119367268 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.127338736 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104546639 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.124270275 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.099730664 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.122143666 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.120510326 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104635059 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.118753553 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104047101 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.121809466 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.178905696 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.128969157 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103095441 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124011803 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125614743 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10205908 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127847584 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.129126209 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100770552 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.117411539 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.11461125 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.098217255 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.123378997 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.11386634 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.09985689 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113171667 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.094613871 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.115411238 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.121451632 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.104609682 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.120338966 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.100368725 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12102748 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.116769872 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.096508828 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.111844231 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.093261505 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.110477351 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.124244428 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101526133 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.122267228 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099171183 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129237468 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.125529788 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109511491 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131033435 seconds)
  done (took 7.261949259 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115268845 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.123960217 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136624654 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096865094 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123261098 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102786006 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123706365 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123489928 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103167673 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118398902 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102950124 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.1235393 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123499424 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102861672 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.125010625 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101532145 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.112714296 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11605526 seconds)
  done (took 2.905139177 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107576787 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121347332 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106137571 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120744014 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.09969273 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121643098 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119491529 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098306133 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120381443 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100073294 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120131115 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100079566 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119439753 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12092559 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09933084 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121346799 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.099929308 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119628503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.119802317 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098590617 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119944945 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098113239 seconds)
  done (took 3.278817663 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113080058 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180501778 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.131470626 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191574663 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.121877822 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.118600805 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111715043 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.12172474 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139681494 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098094345 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.1198918 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097857051 seconds)
  done (took 2.379424713 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130111403 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165724749 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123256793 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100321516 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136237333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128763145 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128469477 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107302113 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141589396 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146651867 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128858612 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142710735 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119176172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143575722 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134766358 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13532954 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129861583 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106811788 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122985952 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153536488 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12826049 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141329259 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107259147 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12846631 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129028064 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143783261 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115618477 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14006 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12094278 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13217122 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128236664 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100018076 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133792345 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137197497 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113449926 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132947065 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10018958 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166091493 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108077021 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135017258 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114821275 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130292273 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115812246 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13587356 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141993985 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130203888 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137969004 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108407696 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12917313 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.161101117 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137440715 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143484653 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135754897 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141925535 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140539765 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.162919147 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146142305 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143236083 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112694352 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143758224 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140108818 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135942588 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140665155 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147156986 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135935477 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146702309 seconds)
  done (took 9.567124974 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171994963 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098628134 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121427669 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140218446 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135389702 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100364339 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122222302 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121023026 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099568971 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117469653 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175077073 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120965272 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138210803 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138243569 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126498377 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108167772 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124986265 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144046313 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102687531 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183626069 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108135946 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144566973 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144239559 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144211994 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147182498 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136795742 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108831947 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130775382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124652181 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123674546 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10961385 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121131121 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134816117 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11619584 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134981749 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100364341 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121561012 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132412863 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101935973 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128916117 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135398562 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145342452 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122837117 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129907618 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1469243 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109038912 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130764208 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124085925 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109268442 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125068307 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148399529 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148031182 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.148136877 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145778276 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108889847 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13042907 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129461084 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105627726 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12466714 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131050213 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139258168 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103082088 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156339506 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100994293 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122091711 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134903293 seconds)
  done (took 9.321598412 seconds)
done (took 172.176868336 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.164973876 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.18713002 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.162589382 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157972325 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108783796 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12219976 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.142945957 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.152804796 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108571738 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08854207 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109028337 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.099287788 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183492247 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087306009 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108407444 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111699105 seconds)
  done (took 2.930934277 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.219930598 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.318792373 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.139241067 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122057478 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104519836 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.120161914 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.095259287 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.1141262 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109358822 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10247613 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110716612 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090605131 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12396734 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.112154699 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089721741 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.11111228 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123276658 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090937619 seconds)
  done (took 3.137728364 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122622519 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.182242827 seconds)
  done (took 1.14858661 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.137375075 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.228587351 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308285514 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172303923 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.140506391 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138676196 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.183034777 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137163751 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.204852363 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134442472 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.134775813 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095686958 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141554203 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.122921832 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.105440797 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.115296041 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14699857 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.105127076 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.124907888 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.118161426 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.373237828 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.096959735 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123355047 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.124440492 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.195176439 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134332354 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.097244259 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117020467 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116943062 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.103250172 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.123768583 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135441281 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.137493454 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.188418744 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.127800272 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.209567641 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.113758242 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.12449642 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.132530157 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.102940925 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.130439627 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.128869676 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.120839921 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119127429 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116697873 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104117646 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.117855321 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11613062 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105177246 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126017704 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128713192 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130944159 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.187416134 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.137569827 seconds)
  done (took 8.484586372 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.919067227 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.16224955 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09328761 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.04266808 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147284486 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131910335 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.91949617 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117156964 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.283356455 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.923566445 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134224887 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12818331 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.269950617 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.282182897 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.193950383 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.403119089 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.76586411 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133100676 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150525654 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.17203557 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132700034 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.156594994 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144204174 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.456063042 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095174528 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116914305 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131842656 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114417159 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.21587669 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101647013 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130088131 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.23671423 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.296802245 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236759986 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126251167 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099269475 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121076843 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.199241028 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.339675959 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.256454217 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.193842943 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096121904 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121175914 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138403012 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125511415 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120103606 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.217216104 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.204103468 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.227583095 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10565559 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136588945 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136276105 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137693365 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.193029492 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120598382 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.385563369 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.389986804 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123140721 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112073207 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.145348437 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.31175075 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122423387 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.274150165 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.154966847 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.25823665 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12228666 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.86261215 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.193100502 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122973895 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111010528 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.136742089 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130663638 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136972866 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190836651 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406456477 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141622853 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106061706 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122708326 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.283078966 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099484008 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123234153 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.193885172 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126179672 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135253715 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141720588 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116480441 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.220607183 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.283329118 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140604401 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135934036 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.131204095 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11730974 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.126998095 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.244180801 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.285567275 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.189206657 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.266001386 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10879942 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.210724631 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.19699278 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.138882232 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.225982847 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11025617 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.145387084 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139921861 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.262847258 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.165221612 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124439768 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107452087 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133784289 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.168441572 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124213086 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129492675 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.195855275 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.510362371 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.199066319 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.123079044 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105019821 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130609499 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.21194326 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109019954 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.300513639 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131010314 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.215115912 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105131431 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111395104 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123081303 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.190077444 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135715584 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125698429 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10732655 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125264261 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.297700877 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.265076568 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137535811 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252090518 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.219616082 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109281052 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.220476406 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132980629 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.200788401 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133967189 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105928591 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119085671 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842787604 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130644233 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124688122 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098671302 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.23287504 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093554066 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114697632 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092545133 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11109962 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842967577 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101442245 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.11799154 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095523127 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125765636 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12712489 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130771667 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102490802 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.210405468 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.278225373 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.134506614 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122834772 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.093297709 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183816763 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124101135 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115398626 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09299076 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.11650202 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125632185 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099726336 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117523415 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197822636 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.209783907 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.266318052 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572900659 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09883827 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.116810561 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271903645 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119461675 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.34842461 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131005727 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.266036336 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.199659279 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120784618 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381468732 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.220480155 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.212955037 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104088987 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.221342904 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090419268 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125929834 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.211260895 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093686517 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125362915 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182183105 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138826165 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135348854 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.208680106 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114360416 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252482065 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111333823 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.194781225 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119989306 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129037403 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349128076 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116311029 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116333768 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.209015541 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105780735 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.119310461 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.670858183 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092375745 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131038475 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12565908 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.264487582 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.216153891 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105269829 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125238332 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128064685 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187567525 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.256335585 seconds)
  done (took 49.497704495 seconds)
done (took 66.035983568 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.345034438 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.293754072 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.344906472 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.247331457 seconds)
  done (took 2.182534823 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.251663749 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169519291 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.222958739 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.091729551 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.231313907 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.094379888 seconds)
  done (took 1.934053227 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.567393037 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.465930224 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.389224329 seconds)
  done (took 2.298612069 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.272023604 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.299340579 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.369090516 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.500338933 seconds)
  done (took 2.417036544 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.291278169 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116029773 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131784098 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.184712132 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.261066318 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.289475073 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.162329596 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.212374051 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.118862063 seconds)
  done (took 2.694486897 seconds)
done (took 12.399362577 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.359162825 seconds)
    (2/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.231369925 seconds)
    (3/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.267512446 seconds)
    (4/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.329180868 seconds)
    (5/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.31637325 seconds)
    (6/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.252929491 seconds)
    (7/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.158308815 seconds)
    (8/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.181665661 seconds)
    (9/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.283904636 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.119687925 seconds)
    (11/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.247100258 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.204372395 seconds)
    (13/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.140130703 seconds)
    (14/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.205752074 seconds)
    (15/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.217596944 seconds)
    (16/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.178772897 seconds)
    (17/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.199216009 seconds)
    (18/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.123908182 seconds)
    (19/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.272066833 seconds)
    (20/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.123247221 seconds)
    (21/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.209251712 seconds)
    (22/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.214679268 seconds)
    (23/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.250609555 seconds)
    (24/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.09633898 seconds)
    (25/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.125265633 seconds)
    (26/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.082756378 seconds)
    (27/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200758026 seconds)
    (28/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.132711937 seconds)
    (29/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.102079465 seconds)
    (30/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.178937055 seconds)
    (31/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098003792 seconds)
    (32/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.125400179 seconds)
    (33/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.226919765 seconds)
    (34/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.211027483 seconds)
    (35/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098514814 seconds)
    (36/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.15405605 seconds)
    (37/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.133622889 seconds)
    (38/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.095690383 seconds)
    (39/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136809839 seconds)
    (40/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.189693532 seconds)
    (41/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100152315 seconds)
    (42/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.257680909 seconds)
    (43/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.138417318 seconds)
    (44/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.205992114 seconds)
    (45/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082886118 seconds)
    (46/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.157538136 seconds)
    (47/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.201906383 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120963169 seconds)
    (49/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.145533402 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.155266555 seconds)
    (51/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.208563878 seconds)
    (52/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.259247629 seconds)
    (53/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.124796569 seconds)
    (54/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.213012862 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.131729825 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.152134945 seconds)
    (57/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.108064461 seconds)
    (58/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.216513319 seconds)
    (59/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.21532335 seconds)
    (60/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.11061823 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.122782368 seconds)
    (62/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.232745611 seconds)
    (63/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.163362077 seconds)
    (64/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.215973733 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097984258 seconds)
    (66/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.120865057 seconds)
    (67/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.228422721 seconds)
    (68/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.082402567 seconds)
    (69/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.161358115 seconds)
    (70/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.120852296 seconds)
    (71/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082830441 seconds)
    (72/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.16811171 seconds)
    (73/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.215882473 seconds)
    (74/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082340884 seconds)
    (75/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.111385087 seconds)
    (76/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.087142502 seconds)
    (77/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.123401819 seconds)
    (78/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171616863 seconds)
    (79/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.166280488 seconds)
    (80/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.106342072 seconds)
    (81/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083301002 seconds)
    (82/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.191339022 seconds)
    (83/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081473602 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.157522996 seconds)
    (85/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.106352932 seconds)
    (86/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.095099629 seconds)
    (87/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.113821927 seconds)
    (88/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.165483114 seconds)
    (89/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.096637143 seconds)
    (90/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.201214169 seconds)
    (91/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.099136771 seconds)
    (92/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.17232097 seconds)
    (93/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.127468598 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.112992385 seconds)
    (95/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.123387345 seconds)
    (96/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.167229723 seconds)
    (97/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.140252068 seconds)
    (98/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.112955024 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096950666 seconds)
    (100/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.128510513 seconds)
    (101/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.136841516 seconds)
    (102/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.16904117 seconds)
    (103/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.176986163 seconds)
    (104/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.214752631 seconds)
    (105/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.133090445 seconds)
    (106/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083209343 seconds)
    (107/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.20092796 seconds)
    (108/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.124332999 seconds)
    (109/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098663942 seconds)
    (110/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.199474872 seconds)
    (111/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.141247768 seconds)
    (112/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.199117038 seconds)
    (113/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.19843934 seconds)
    (114/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.138728785 seconds)
    (115/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.134581133 seconds)
    (116/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123625499 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099168716 seconds)
    (118/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.105833027 seconds)
    (119/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.141982678 seconds)
    (120/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.125388432 seconds)
    (121/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.106170374 seconds)
    (122/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091486264 seconds)
    (123/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.16676078 seconds)
    (124/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.087908811 seconds)
    (125/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11565598 seconds)
    (126/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.095462723 seconds)
    (127/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134790395 seconds)
    (128/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.161675911 seconds)
    (129/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.107034489 seconds)
    (130/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.198249127 seconds)
    (131/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.134629298 seconds)
    (132/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.132963616 seconds)
    (133/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.092371732 seconds)
    (134/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127417984 seconds)
    (135/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.121392246 seconds)
    (136/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.118458118 seconds)
    (137/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.166680893 seconds)
    (138/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.090766427 seconds)
    (139/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083042381 seconds)
    (140/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.124543071 seconds)
    (141/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.137095515 seconds)
    (142/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.20535577 seconds)
    (143/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083474463 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.124425355 seconds)
    (145/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10082117 seconds)
    (146/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.107385355 seconds)
    (147/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.091086574 seconds)
    (148/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122731958 seconds)
    (149/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100026261 seconds)
    (150/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.137751186 seconds)
    (151/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121220093 seconds)
    (152/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.107270905 seconds)
    (153/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.118769996 seconds)
    (154/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.090033102 seconds)
    (155/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.124002546 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102078126 seconds)
    (157/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.106609785 seconds)
    (158/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.083790009 seconds)
    (159/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126473641 seconds)
    (160/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.137285955 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11304342 seconds)
    (162/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125510739 seconds)
    (163/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.121398218 seconds)
    (164/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.083956695 seconds)
    (165/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082729566 seconds)
    (166/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.1632149 seconds)
    (167/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127244855 seconds)
    (168/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.108285356 seconds)
    (169/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.125283239 seconds)
    (170/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.170274825 seconds)
    (171/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.144933903 seconds)
    (172/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.107641728 seconds)
    (173/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.083506229 seconds)
    (174/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113798055 seconds)
    (175/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.099436073 seconds)
    (176/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.12372235 seconds)
    (177/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120210763 seconds)
    (178/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091584289 seconds)
    (179/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.107515065 seconds)
    (180/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116025691 seconds)
    (181/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123817998 seconds)
    (182/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084328252 seconds)
    (183/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.106231446 seconds)
    (184/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.089651638 seconds)
    (185/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.113757992 seconds)
    (186/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084576726 seconds)
    (187/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.107100199 seconds)
    (188/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083549757 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.122865221 seconds)
    (190/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091696727 seconds)
    (191/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.126954827 seconds)
    (192/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.128365698 seconds)
    (193/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084566773 seconds)
    (194/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.123610337 seconds)
    (195/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083652962 seconds)
    (196/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083840047 seconds)
    (197/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116997924 seconds)
    (198/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.124981492 seconds)
    (199/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.099537631 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.138931394 seconds)
    (201/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.101636733 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124222418 seconds)
    (203/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.082234338 seconds)
    (204/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.106505658 seconds)
    (205/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.084348122 seconds)
    (206/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.108377136 seconds)
    (207/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084141883 seconds)
    (208/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.13356797 seconds)
    (209/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090790081 seconds)
    (210/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.107488732 seconds)
    (211/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099747947 seconds)
    (212/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.133096286 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.139200258 seconds)
    (214/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.091670032 seconds)
    (215/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.107901046 seconds)
    (216/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.108615175 seconds)
    (217/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126793866 seconds)
    (218/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.108674305 seconds)
    (219/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.10850602 seconds)
    (220/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084806101 seconds)
    (221/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.108634893 seconds)
    (222/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083659268 seconds)
    (223/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121280028 seconds)
    (224/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.099625884 seconds)
  done (took 32.236941631 seconds)
done (took 33.122107899 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.513612843 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133610801 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.104627479 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.129326793 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.18656916 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.132308851 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112326304 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.131926237 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.132750878 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100099103 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.116750747 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.107823126 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12749142 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.183683332 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.132212646 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.121224928 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095343626 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.134778536 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.110840433 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.137526494 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.18448477 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122475598 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.108553281 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12110377 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185633049 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121819351 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.104624066 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.130473547 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.132182517 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.101416462 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128752063 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095837628 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.136266547 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.136190871 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093285314 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.124840882 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092786148 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.115444585 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.125779931 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.103291458 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.133526212 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.101075875 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.132791482 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120677146 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.102467472 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.125486889 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117666906 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.108301068 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.11763606 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103392535 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121762161 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.135669239 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.101645698 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.119131331 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092863176 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.119988461 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.132544368 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093186656 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.132678417 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093599896 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.121830335 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117437474 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.105008813 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11779815 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.10028696 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119924803 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.125102586 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.104340896 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.12392856 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096177083 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117366237 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.123299561 seconds)
done (took 10.00768533 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100365443 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18168607 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.189003971 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.191803994 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154601073 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.138403445 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.14166976 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.15161068 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11242919 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145854891 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.157562378 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.148930295 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.193405411 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.134034871 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113770685 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.127658009 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.133937938 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108369148 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.193780025 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147870342 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156894047 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.134023596 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157584768 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118659542 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125987563 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.150113388 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128504881 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.103843817 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.126720012 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.143719661 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.121817567 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.126406285 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127242709 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123355768 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.137352364 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.132026242 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112870005 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12703235 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.125017849 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.100427198 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141113974 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.143367769 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100770041 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138172695 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126284336 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.107557713 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.13573838 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.134366791 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103971058 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.129269127 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129160205 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156117336 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.109131845 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.132992567 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.133807077 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.107373805 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.133981278 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.130444933 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.10487102 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.132852662 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.099109027 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.127277872 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129144517 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153459319 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.104065199 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.134476658 seconds)
  done (took 9.7390824 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.121014483 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160433365 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.136045131 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.136127939 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.107233289 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.115106259 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090967064 seconds)
  done (took 1.791186697 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094467667 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188646331 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186630547 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.186911492 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.207866959 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.197222367 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140291956 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094022888 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.157617242 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.130043129 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188867475 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.220044659 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.126058767 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.112592688 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215164265 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093364982 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.189693518 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119209456 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130047857 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.188849703 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110878456 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.152041503 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.134310678 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093577991 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207091843 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095833549 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.269940982 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111050896 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124797346 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.103579034 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132922545 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204234491 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.181051421 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.136489581 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.12267189 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184766253 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.180991499 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131032067 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.198500476 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097925252 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.182009069 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.130604338 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.131587803 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.106796078 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.130545039 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168372024 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.136466137 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.107831044 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.12834601 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.187704326 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.132302716 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.184510725 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.101661819 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.131238495 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.131199446 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.108610136 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138191264 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.132570307 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.190097267 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133246089 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183122063 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.182938614 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184169197 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184439308 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144124949 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.183040159 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.182797738 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.104316683 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126773882 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.132457706 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184616141 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.105167895 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.131425273 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.169198949 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13530575 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.186213276 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.183691616 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128355162 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.109500369 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123898649 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.102365072 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.118592261 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.173363547 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.134516526 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.103884755 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140326734 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131970207 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108983318 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.123068994 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.145890319 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.106073617 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.131445371 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.136931401 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.104722762 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13727863 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.185284512 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.131811565 seconds)
  done (took 15.149322266 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095283247 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11999882 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.102349318 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121265491 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095455455 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.120852894 seconds)
  done (took 1.59673113 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.128619408 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.134251237 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.143138095 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.108728282 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.190364485 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.21700538 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.19361418 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.133057583 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.126312282 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.144505699 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.190013673 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.19633648 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.215580638 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.111031541 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.192328704 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.136988749 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.193922375 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131888852 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.144154267 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104482539 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140507595 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.136822978 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10418028 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.182232635 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.136528485 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.135768906 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13417376 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.116992495 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.140783307 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.131314419 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.110467515 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.136455411 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.128767329 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.13059791 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.19484561 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103370136 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12958682 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.140609224 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11138871 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.136736247 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.195217703 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130800088 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.142119195 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.139942649 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107650425 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.128353059 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.139403288 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107111774 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.219299875 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.114250336 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.140397248 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.134012939 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.110930203 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.14056294 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.128485847 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.133417017 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.115475447 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.221555189 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.112028682 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.129283723 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.134586011 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.112803686 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131886387 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.138831002 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.135987675 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.115603177 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.128336119 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132821822 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104389246 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.135463291 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.141640337 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.109605622 seconds)
  done (took 11.078525644 seconds)
done (took 40.271756763 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.172065714 seconds)
  done (took 2.110985893 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.002303328 seconds)
  done (took 1.944587312 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.353435185 seconds)
  done (took 18.335030319 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.582334678 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.663857256 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.018152382 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181653759 seconds)
  done (took 3.388617599 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.991331934 seconds)
  done (took 1.951132631 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.331356848 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.285711891 seconds)
  done (took 1.565197638 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.870782742 seconds)
  done (took 1.828359063 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.476876634 seconds)
  done (took 3.433225402 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.392792819 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.200143733 seconds)
  done (took 1.558033795 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.673235246 seconds)
  done (took 1.634845125 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.1303548 seconds)
  done (took 38.096355325 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249921016 seconds)
  done (took 1.226177824 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.316868576 seconds)
  done (took 1.282252399 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.596242774 seconds)
  done (took 4.560198955 seconds)
done (took 83.867813163 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106006811 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133179121 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107871505 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131701121 seconds)
  done (took 1.435826922 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.116028433 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.134084845 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.13609017 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.106575314 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.142103671 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.108585205 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.133470734 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.139286845 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.10577679 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.133440181 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.13163727 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.106109324 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.13442082 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.130497874 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.106265047 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.134395203 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.110919653 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.134767043 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.131804066 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.107694131 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.132030903 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.131814462 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.110261706 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.133128708 seconds)
  done (took 3.956808261 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10588828 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.124817872 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101705814 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.124649727 seconds)
  done (took 1.426971795 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.115721939 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.149061921 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.146946222 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.114428364 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.148473806 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.145721985 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.103190912 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.127277574 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.104421612 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.140563079 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.129133488 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151533073 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.123127299 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.134277717 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.140934576 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.100995156 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.133546619 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.123167694 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.13893234 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.140260453 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101842946 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13981951 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.129001335 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120427106 seconds)
  done (took 4.074296276 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.216892877 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119891151 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.157018571 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.186466391 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.159392825 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.104918419 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.160201575 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.136694758 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.13865031 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.109688629 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.135054092 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.195198461 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.13406366 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.112415438 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.133951987 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.139594653 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.112490401 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.134269684 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.13773281 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.119479981 seconds)
  done (took 3.821333618 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107403271 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123414917 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095056643 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123807265 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.131178224 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102639975 seconds)
  done (took 1.65949654 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09496675 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117905419 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094194111 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.117512226 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098785057 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.118579534 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.092142984 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118624485 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093200659 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.119378196 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093013055 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11814391 seconds)
  done (took 2.252432901 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.312271815 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.098231571 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.128592475 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.122688273 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104591529 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.124044253 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139384513 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097332269 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.264004822 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.123921102 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115735783 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.202287956 seconds)
  done (took 2.805607066 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238127469 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108190425 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296066222 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.403671747 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177843492 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187597837 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.291418098 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183643893 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.236073109 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127688068 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247976432 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170912696 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167685005 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199854502 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127022187 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.182813086 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19355345 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250126055 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16283355 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232923397 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182410831 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185613098 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203698037 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170258406 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152648431 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176110346 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.131921475 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114212865 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218473851 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192005267 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195326703 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164544689 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156540428 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224333171 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273896082 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201129882 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.339607238 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148707179 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.211698936 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.233294175 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263672232 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158555344 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245796948 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145383179 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143659187 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203237382 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177083062 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.232448384 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.119734021 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157281379 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234223258 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194215268 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.207702732 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153680183 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319403506 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164167251 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166758571 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195020138 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212298646 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237488246 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184634187 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.106955974 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228847639 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201760128 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202059588 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164375895 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193050364 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141176689 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197249789 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218436204 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228878215 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186022482 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.20759537 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148316 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181387388 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190563346 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170390144 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199019807 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176655177 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.131626235 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165481987 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126546464 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140205971 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.203356502 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107513714 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257805035 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146997151 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.207343549 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228021193 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177704044 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179954851 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183825336 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186605189 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162989918 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.13296666 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159920123 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177416278 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17423864 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116914455 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17365528 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161534971 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.143114885 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167293947 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.107098975 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17711919 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.149986362 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185913254 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18372056 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.144478576 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182477266 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164267143 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.174820424 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193458149 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209544685 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144458677 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11675839 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241188715 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175000846 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125444039 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220578311 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211925685 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.184640522 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150448857 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189629465 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219307101 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157676195 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209693066 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160113737 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146129652 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169903712 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175148764 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174416699 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.143166704 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141600461 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.170316085 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242258487 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.113243356 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148912557 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192428362 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141912648 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112400443 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160388188 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151681234 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.155935226 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.167554387 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.127045867 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171438293 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179350237 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170021619 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179339426 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159944473 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253311309 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117838651 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.179211826 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163603568 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.133820955 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20825784 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208976367 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145661858 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207201934 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.195895038 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250695875 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183734134 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142866748 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201341443 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115629599 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.135754855 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187647742 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18314485 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180805924 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.208417641 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243746597 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188977724 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.173258237 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166229474 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191362252 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.198546904 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181402128 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.164676416 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18467164 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192207137 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.137571947 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.111098805 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.143522611 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155973088 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145264967 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117038603 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235667139 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189907679 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20917588 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180606135 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15725659 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207180306 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.142789451 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185074369 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.197235235 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158736827 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214163093 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206109946 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189133421 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160508641 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193283266 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.138903487 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137209042 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.122113406 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216834242 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117597987 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148137141 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160007356 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203663507 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198468942 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169730803 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24997679 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190415959 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217118631 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.13583015 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.151725818 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217185667 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172946069 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.175512792 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144084805 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.180926605 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203120022 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164241426 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217599363 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186508543 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192790734 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26019823 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.178850796 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142914685 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163685414 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185778985 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127182573 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184631744 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162839401 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152177055 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172605664 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.152519117 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113584761 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233597178 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157777008 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206605743 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.176750511 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19751337 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140045129 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160397211 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176913376 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160658366 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104067986 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193293818 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24632302 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160996826 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173638419 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195048001 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114709179 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.353171769 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213687407 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209747944 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154560772 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158047951 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177613826 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175788163 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183036268 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203100522 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158798278 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202087729 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175909867 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.1574965 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145722847 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13528082 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167897389 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.172050358 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150350869 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173714251 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.156054211 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210160656 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16151181 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176209027 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183143878 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.162593511 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144648883 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154869003 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25360424 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173699074 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198652726 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.170166 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189014714 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210513168 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136466388 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113511721 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.142211873 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203667914 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144539408 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175692381 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.198872627 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213923196 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174361063 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213803534 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124532593 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.138615373 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179120261 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163460735 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215924025 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157017471 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.153208794 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217825509 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.169160809 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143749198 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182712329 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297630666 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160135008 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193936229 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104536347 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.316594305 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114463288 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144420136 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17703461 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192492539 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.164969405 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.197449402 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183906179 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15916307 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149682128 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153660745 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233347056 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228219672 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194516315 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197943528 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.158664693 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177757014 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182795207 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226318607 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129007581 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.164065535 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180373466 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20522194 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.216184367 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.151072604 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181712526 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182816448 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180963023 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228148106 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123652658 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208728728 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146814128 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188291388 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158375634 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140106882 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175273286 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199058931 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146919713 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195018362 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174422784 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145125523 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113276922 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17105869 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181469295 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162918598 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.144210409 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205360737 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.140688534 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180423149 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198265476 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115217932 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175892632 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161454643 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147808389 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157906377 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130279497 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152500389 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.185521305 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204093272 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.148212778 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199141716 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196357521 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186068239 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178224725 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160189086 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.680730042 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.143011764 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203643867 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161837498 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216857048 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16688528 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184495853 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179546394 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163943012 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188831317 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166104169 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.238668442 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18649682 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17861637 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116413143 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162636231 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165289785 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.148779803 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167737451 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178662818 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126436266 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154861122 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178798537 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163390932 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.160731014 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153184729 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206684166 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162117207 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208041582 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206674603 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15448988 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18568016 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200428007 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144327894 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.184461763 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195671682 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15723868 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170609068 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.118378455 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152041732 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203206172 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.138758112 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179116981 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177295097 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179350399 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181704205 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.15167241 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176026374 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131627053 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17947041 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142929626 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178685701 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175388321 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146532355 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.115711705 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177304595 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181012304 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.178681758 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143104165 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.181993257 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204504791 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.107392049 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148840152 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298485557 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176131144 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214480658 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.172415304 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152489135 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160050248 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173900469 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173979247 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178200502 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115468228 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147443286 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.148761006 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.200073466 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.178876233 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171521802 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198279193 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180464846 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210472459 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.161224238 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282756526 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123425565 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171317138 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.147668897 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.147210425 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126931383 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149567485 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161823895 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209481018 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198823622 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.16883633 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.161718432 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142246309 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107426508 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146749137 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180646608 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172324332 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175867346 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161219844 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102430724 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164072164 seconds)
  done (took 86.652907999 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181581913 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150678464 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.159998144 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.206564341 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178124797 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268831696 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214920335 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237058085 seconds)
  done (took 2.661188576 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.133308977 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.119689616 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.153863956 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134412061 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.134321059 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.45488348 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.147355873 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.107035 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.196430593 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.174758291 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.104649743 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.691788354 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.13988016 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.133498059 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128903926 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133078989 seconds)
  done (took 4.141976063 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.461178807 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551662775 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.913108298 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.260112602 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.243812398 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.189832134 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.743668612 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.203668022 seconds)
  done (took 12.624722501 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136709021 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.151560004 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.354180943 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.223922601 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.171656796 seconds)
  done (took 2.105063533 seconds)
done (took 130.577973931 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.110952 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.154277357 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109211417 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15451212 seconds)
  done (took 1.582326413 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.157529313 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.122850071 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098393885 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120478065 seconds)
  done (took 1.566903005 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.543173912 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092127831 seconds)
  done (took 1.732697097 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.135735957 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.156897057 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.154128822 seconds)
  done (took 1.523647199 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117702882 seconds)
  done (took 1.184646589 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.11390478 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.135577988 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.18882849 seconds)
  done (took 1.512149721 seconds)
done (took 10.169910951 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.132475659 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.529627903 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.423687913 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117098529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729811577 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.414762337 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029497928 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164741313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202800691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097507411 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147240252 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676694211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.048297588 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.470171615 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.00992577 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.374966832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.708163965 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102287745 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134489322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098777162 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007933169 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12413226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100398153 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128630779 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678396125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.433359954 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124564125 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.361045449 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126199035 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102505211 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.418830734 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125978429 seconds)
  done (took 17.407841807 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144904365 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193275658 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136206017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099191133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132457528 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127101217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.111186545 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143564823 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203012995 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126083909 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119304401 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126795699 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131211044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098787498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150492771 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097134676 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.132986327 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127879921 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106624471 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129523732 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118322767 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127359498 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128275676 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101321595 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126067785 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112594111 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127355052 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139789056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098509967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131056112 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103638843 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128206959 seconds)
  done (took 5.150736687 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149157552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.204421019 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137188584 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.162406986 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181276775 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100652281 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221252347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170755494 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202795449 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127424175 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149180701 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.099699491 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.167901707 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126420961 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.124384791 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126112067 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102369333 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130236573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13493925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101697618 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14887463 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097950155 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130253776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129577818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10048516 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14214687 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098681756 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.144388241 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127246121 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104859441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.135332816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127034372 seconds)
  done (took 5.484172814 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.112776278 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.141547416 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121167911 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.153395571 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.135502067 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.112558678 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.140327793 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.10592799 seconds)
  done (took 2.096929374 seconds)
done (took 31.211173521 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125729862 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.146070106 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.118315554 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.141163805 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.204286423 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100562674 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.144403346 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.129740737 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.113375504 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.149383771 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.097510893 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.133485817 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.117812285 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.137810924 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.187637092 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.139762233 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.18941134 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.186453325 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.105374489 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.141552624 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.103829536 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.192216953 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.140261944 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.103832475 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.195090905 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.134108563 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.182724692 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.136654917 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.108680258 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.128939479 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.185915899 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.109519343 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.134277736 seconds)
  done (took 5.734306601 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.202696019 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.216085319 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.10350382 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.134129783 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.213828331 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.102349745 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.231234081 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.104539436 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.131753786 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.104243289 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.131635693 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.203518268 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.210813254 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.224966609 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.243040955 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.213704368 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.20192267 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.21110082 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.199663228 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.216158146 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.201873922 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.132555412 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.214485886 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.217528608 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.103387823 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.134705189 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.238035235 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.212141136 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.240527082 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.20316752 seconds)
  done (took 6.58269077 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.112928583 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145430741 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.125083429 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.205325758 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.174236035 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.14330324 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.112133526 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.155571416 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.153574094 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100413015 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.137833566 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.13622705 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149160121 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.138703865 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106212139 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.14865388 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.15206758 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.102402973 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134846331 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119405544 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.148833023 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.146809702 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114663747 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.140142686 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.098882829 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141655117 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.133632316 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112603425 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136886843 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.108960717 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.137836494 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.133656484 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.103545279 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.139577365 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103956034 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.144197774 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.158046581 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10910429 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.142915049 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.166364699 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.108929695 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.13581992 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.150396157 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.148510547 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.132171477 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.139619421 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.114089253 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.138605418 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099252528 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.153315576 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.141980733 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.102052782 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.152163181 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.098817882 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129875253 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135795633 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102575163 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.132438158 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.108798564 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.136348613 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.156299568 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.108821915 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136201821 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.102473588 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.136289594 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099836729 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.131567931 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.135522438 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.124004296 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135799152 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161431898 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.103830248 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.140574433 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10787631 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136895642 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137689479 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.101649386 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137801805 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108676582 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.137909179 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.110231472 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.134539257 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.133575678 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120622513 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.154963143 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.142477731 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.11145754 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.141726172 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.131233742 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.10253365 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143455025 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101933353 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.135088431 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109692895 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.13153819 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.132516885 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.111806981 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.139398741 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098774065 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.152919685 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.135997934 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.099223513 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.148035158 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.101372463 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.134974961 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.110394691 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.144400968 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.129175901 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.108740484 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.144631925 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099524467 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.13702862 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.134039039 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100366839 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.146951681 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110802019 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.13634925 seconds)
  done (took 16.241177158 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.312379135 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.319617348 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209797795 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.412227754 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124512677 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.231560376 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.286196636 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.23452438 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.13322001 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175823684 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.195224747 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.278325821 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101636898 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.165028738 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.280704131 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.414310626 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.163231102 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.177353305 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.177287447 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125236119 seconds)
  done (took 5.623081329 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.126616461 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.17705923 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163810236 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.165383639 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.107844292 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.144702325 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128509535 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.127111517 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.141352322 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.135859029 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.099645926 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.147650323 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.108508033 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.141735765 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.14964854 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148018092 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.137799037 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.136283397 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.122854066 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.140355537 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.142764771 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.160779584 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.112260132 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.159171785 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.148125735 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.11556551 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.129496832 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.137573906 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103650276 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.13504363 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107875691 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.155027459 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.138486059 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107628487 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.141668354 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.11333796 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.13409879 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.130466855 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.103117521 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.133353185 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.118654849 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.141552491 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105681648 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.127015289 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.114158403 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.134194229 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.141872992 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.112444717 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.145313458 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.117310746 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.144215544 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.143624905 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.107834017 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.150821212 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.102907074 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.149052879 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144834775 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.140391321 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.108657113 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.130353198 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.10023806 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.136396588 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.105876788 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.143942228 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.141579745 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.125745409 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.147147247 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.13285097 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108178176 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.135891938 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.104055375 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.151600984 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.161852444 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.135681716 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.105411806 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154324441 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.105397292 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.124401207 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112050383 seconds)
  done (took 11.49507231 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.134708503 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.137715466 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121418789 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.171271795 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.15306199 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.107775855 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.137061621 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.121305464 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.144651976 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.148405101 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.113466356 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.147558658 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157408824 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.114966355 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.139816433 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.14646359 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.114181176 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.177654137 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.153512418 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.139069944 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.150207705 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135985567 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.115850667 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.145850386 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.167163624 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.113810023 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.1671215 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.140728567 seconds)
  done (took 5.041614946 seconds)
done (took 51.798702585 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.23300561 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.405683473 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.18314725 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.182242891 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.194197172 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.19036246 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.20803907 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.379840185 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.909636551 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.178145393 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.187727251 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.184219499 seconds)
done (took 27.577088149 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.423856724 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.791237301 seconds)
    (2/2) benchmarking "String"...
    done (took 1.511562033 seconds)
  done (took 4.421098963 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.179059506 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.17608505 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.42144179 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.189290775 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.17793537 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.197285545 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.179785971 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.213642323 seconds)
  done (took 15.664237526 seconds)
done (took 25.792276974 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.248602675 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.424496602 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.4371667 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.196054986 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.183335922 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.177519454 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.171822338 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.207487193 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.182234454 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.180829594 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.191316121 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.446372716 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.178171712 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.567593907 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.169289846 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.203769202 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.193190903 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.419155083 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.176945035 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.229598217 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.17925977 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.169886001 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.194198613 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.217140784 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.185199903 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.18751102 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.17756262 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.176962764 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.439629821 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.212479955 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.22426986 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.180509092 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.177631333 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.180129492 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.285536846 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.19401787 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.449729458 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.176373859 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.177266233 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.189739021 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.448735858 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.564021397 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.182566755 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.170266763 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.203629311 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.271753569 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.176536792 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.922148182 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.185263837 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.18177686 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.250907513 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.574782491 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.194638287 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.182546449 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.191355107 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.49101302 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.1853837 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.225490665 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.207519938 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.185348493 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.18719055 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.179794053 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.184135422 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.184158527 seconds)
  done (took 142.402427394 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.18062391 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.187237368 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.186027333 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.247249516 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.18542964 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.185139209 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.181647122 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.182129765 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.186937213 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.215736209 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.183215389 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.186405395 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.186563413 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.147393455 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.185189097 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.200396407 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.186284478 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.190452672 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.190956697 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.181406557 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.182547101 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.186992223 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.203602237 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.185598501 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.226991942 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.279594502 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.227944596 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.2004504 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.188205574 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.183217986 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.227835372 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.247485967 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.774160505 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.046254297 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.193586049 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.19919792 seconds)
  done (took 79.640651239 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.181283775 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.18286773 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181130451 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.21402404 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.181994334 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.73044036 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.73531497 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.957993954 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.716453171 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.568688954 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.419156678 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.184439222 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.277163877 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.196886924 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.185158115 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.198987231 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.22251892 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18987244 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181933702 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.720421881 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.195437297 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.719906564 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.372016857 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.199627826 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.21531595 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.586934793 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.183093884 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215413457 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.511689478 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.229036623 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184011542 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.536940147 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.917758558 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297929985 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187223106 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.21268059 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.185166935 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.464056386 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181928837 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.18309213 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.191162648 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.818497085 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.184814741 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.733965066 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192554705 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.11356225 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.181345235 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.185402953 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.966911354 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.784777289 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.204314538 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.184601566 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.187020475 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.189385841 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.185479531 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.186344163 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.21701567 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.884363643 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.299422434 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.202847189 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.188017767 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.21505965 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.183526272 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.594486727 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.184720504 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.187452467 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.238220614 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.405960024 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.255061698 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.741426325 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191756768 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281796665 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304104712 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.18379706 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.186974907 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188554273 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.188940241 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.295177267 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.185421366 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.598470738 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.361142263 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.205292324 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.525206416 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.284544814 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.185438291 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.566858295 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.189585087 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.184563226 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.921283012 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281764319 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.185855338 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.189868446 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18784421 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.608009141 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.736826974 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.456236689 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.192078412 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.196161489 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.215074422 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.61334535 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.187250741 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.724798899 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.870360437 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.194273737 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302442923 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.359705974 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.205164387 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.19230527 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.191497771 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.529200759 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.192535737 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.249803666 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.186194121 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.588478799 seconds)
  done (took 366.475951079 seconds)
done (took 589.6254656 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.923901949 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.87747009 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.007239109 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.905642606 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.88041371 seconds)
  done (took 10.706249799 seconds)
done (took 11.817156999 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.379007922 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.379855129 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249734068 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.381522994 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223571991 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.397594247 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.361770702 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.207756945 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.293460878 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.27191591 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.293121514 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239627258 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224853476 seconds)
  done (took 18.017731002 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.458194382 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.194968223 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276675599 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.434553509 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237567251 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.472648212 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.49469481 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.19796317 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.341135678 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.208611037 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211634918 seconds)
  done (took 17.648774872 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.467274742 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.197547742 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277892986 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.468276593 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237636257 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.467973422 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.491899295 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.19611701 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.336823587 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2120296 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213339472 seconds)
  done (took 17.686701947 seconds)
done (took 54.468816099 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.237819474 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.364461211 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.228442424 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.211928523 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.207280046 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.210495537 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215158774 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.205262926 seconds)
  done (took 11.00090245 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.203969756 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.206172039 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204869195 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.206131765 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.207856584 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20849173 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.209733335 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.207431748 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208342765 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.205820921 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.207109525 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.205150115 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.207400328 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.205807524 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.202952561 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204424297 seconds)
  done (took 20.417448899 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.207272705 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.206988971 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.205060749 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.207044969 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.202969797 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.202229246 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210254003 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209662353 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.204951167 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.210175358 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.209864363 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.208400284 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.206297407 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.208386556 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208380973 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.205107067 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.207693343 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.207686625 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.213434198 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.212380714 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210136869 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209769695 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210671447 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.208771771 seconds)
  done (took 30.109339476 seconds)
done (took 62.647062298 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.199285928 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.22324313 seconds)
  done (took 5.543119253 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.269985918 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.271675364 seconds)
  done (took 3.666639261 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.210347009 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.209430152 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.207189998 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.211885119 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.208283128 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.205769157 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.211945557 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.210567551 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.210773054 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.210069478 seconds)
  done (took 13.219464873 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.209875723 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.209929484 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210594397 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214026841 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.208660305 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.213668984 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.210635959 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.209051243 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.210563449 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211468482 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.210856696 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.213360987 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.211293826 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210926245 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.213778734 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.211926567 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.212253944 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.20856808 seconds)
  done (took 22.927190923 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.222489011 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.231649406 seconds)
  done (took 3.57637222 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.349643169 seconds)
    (2/7) benchmarking "second"...
    done (took 1.253679481 seconds)
    (3/7) benchmarking "month"...
    done (took 1.329411356 seconds)
    (4/7) benchmarking "year"...
    done (took 1.320219398 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.256191902 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.231957417 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.25585399 seconds)
  done (took 10.120114828 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.209937232 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.405429035 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.511900683 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.820262997 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.207953886 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.258918736 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.010844413 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.260986787 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.245008441 seconds)
  done (took 14.054676556 seconds)
done (took 74.229448834 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.200081848 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.261202768 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.226028767 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.224217977 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.508134833 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.210134736 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.202865602 seconds)
done (took 15.958173414 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.192042243 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.203678249 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.203621292 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.240011485 seconds)
  done (took 9.962870687 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.209640825 seconds)
    (2/2) benchmarking "read"...
    done (took 1.56315175 seconds)
  done (took 4.897148558 seconds)
done (took 15.984394936 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215847412 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.214379006 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.214980926 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.214166724 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.212656774 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.211070494 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214092865 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.214272517 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.212259968 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.213559071 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.214341782 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.219630101 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213899932 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215036673 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214108231 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212590304 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213167745 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211123298 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212638173 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.216153166 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220023868 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.214269368 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.214814365 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.217194271 seconds)
  done (took 30.274590667 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.216760793 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.213858842 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.216288013 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.218743328 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.215722244 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.218824345 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.219789718 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.219454324 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.215358426 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.217738882 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226984752 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216765895 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.220123588 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.223584976 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216304512 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.215554306 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.214343781 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219088168 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215830455 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.213145391 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.218360072 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217737141 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.225997726 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217433044 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.220849594 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217479206 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.219757948 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222257534 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216747815 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21896831 seconds)
  done (took 37.679928582 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.220728305 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220233265 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.213007746 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.214357918 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.220419529 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.212175078 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.219636846 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21847226 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.217219603 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.216589197 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.217537236 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.217073683 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.218686664 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218637163 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.216863629 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214896448 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.219731386 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.221089796 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.216651185 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.218110128 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.215896321 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.221529847 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.22189817 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.218756443 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.2147474 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.220116792 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.216307231 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.219258995 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.217250654 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.216890932 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.219131925 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225424229 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.223473099 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.221046716 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.228856626 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.222889593 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231389593 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234875546 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.227517942 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.228546622 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.228864805 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.229692198 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.223122343 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.225948558 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.22978481 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.223670301 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.220225258 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227479241 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.229080454 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.218377218 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.223620958 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.218845195 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.220501859 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.224214785 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.225183817 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.230364491 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.221311131 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.23280312 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.230544446 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.227108015 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.221285789 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.225608728 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220019382 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223455158 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223058166 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.222829438 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.230871244 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.222153272 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.221484013 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.223159654 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.229939797 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.220019935 seconds)
  done (took 89.123824536 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.231328308 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228014236 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.223112419 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229544783 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230088948 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.231986255 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.224391925 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220938511 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220012822 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.227048811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22022241 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223124659 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221204538 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223095687 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223794283 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.220918566 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.224002365 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226599858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.225793433 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.224691618 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220889051 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.222259147 seconds)
  done (took 28.077864467 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219522293 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226305695 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.225684757 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224473602 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231184883 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229723988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.221991007 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225269743 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220749251 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221955902 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231814149 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228856207 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23383902 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220974291 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219765251 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.227104358 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231567362 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234816331 seconds)
  done (took 23.211201351 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.226924143 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.223589943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.222606476 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224584396 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224437481 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222446666 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230326128 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234200922 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.22492269 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.229205267 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.225333051 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22671553 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.226974152 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225480345 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222673832 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22223349 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.225931339 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221804151 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222657067 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227372357 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228776184 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226789862 seconds)
  done (took 28.103300396 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228457303 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221604984 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.221668648 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.222414613 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230367773 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223941302 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.227753253 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.236721883 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.232539762 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.224129143 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227440605 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.233034924 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.225776495 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22546566 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.233660657 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227704807 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223259977 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227629072 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229019732 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.23116371 seconds)
  done (took 25.689993198 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227726653 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224918375 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230868001 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232347184 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22556809 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.225368719 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232758779 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.228723659 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224700265 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225801329 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.226412405 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224553736 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230039214 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.226675943 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226795724 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22544394 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227054077 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224886292 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223379794 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224719368 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229152991 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23174788 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226169871 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.228992171 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.228451401 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233172378 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226255043 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.232868074 seconds)
  done (took 35.515325983 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229171729 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22642371 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.229087834 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229799455 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.23526348 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.235820098 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.232970253 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.235336572 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226996386 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230229371 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.226236656 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.229874367 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230180373 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.227349247 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231967006 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.230182518 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227199142 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.234994961 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237828211 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228681543 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.235078771 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240528483 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.227088685 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226505789 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230513223 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.233822038 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23204857 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235716369 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233768589 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229140002 seconds)
  done (took 38.079239366 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.28017468 seconds)
    (2/2) benchmarking "in"...
    done (took 1.284759457 seconds)
  done (took 3.704213975 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.228984207 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229322479 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.230351583 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232431436 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236965473 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233703782 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228348485 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231962469 seconds)
  done (took 10.992169546 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226017089 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.234739315 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23320417 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.232018528 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.234970975 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227926146 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246501121 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.264450127 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.238200687 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.240675872 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.238862747 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.235972503 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.234918914 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236905019 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.229018854 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234467695 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.231502304 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.233575131 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.231000486 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.2312694 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239125418 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232144105 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23101875 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.23234409 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230787523 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.237207658 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.237798168 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.235060211 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226947397 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.232552749 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237659859 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.233202822 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.23092056 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.227820089 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.232309285 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.23476065 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236560252 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262245383 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.237640104 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236442876 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234261517 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.231760412 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.233545848 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.236957527 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230742458 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.238407059 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.233017181 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.231994743 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.22604246 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.230301599 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242696178 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226057958 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.233198737 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233318227 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.234815419 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237808869 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.264825232 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.228839322 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237741281 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.240364212 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.251838096 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.254886785 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237777425 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.236274695 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239517183 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.25820376 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243476242 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.261898585 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.235441081 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.24204126 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.248608384 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244082257 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.248776357 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.246812224 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230191471 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.234333103 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234741077 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248525558 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24943352 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.261335442 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.249325329 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236118632 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240514782 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260341603 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.236938198 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.243840797 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.233993781 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.233264607 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.227859582 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243844454 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.261698539 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.235010601 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.230039817 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.232939224 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.238136157 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.236535326 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.228617896 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232583721 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.241684575 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.248602291 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236095155 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230430614 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.246917491 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242247066 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236163823 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.238803908 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.247994785 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239555094 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.238507645 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.244528777 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240024468 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.235205863 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.239580283 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.243953848 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243368811 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.242244851 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.239620992 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.236689139 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.237643933 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.23622529 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240230735 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.251677345 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247130961 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.238436881 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.236415006 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.243776291 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233819672 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.234379202 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.243736247 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.236119682 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.235638233 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24429404 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.250188047 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.231491855 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239823897 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236261736 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.246789451 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.239454434 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.238949156 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.242847759 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243247265 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.245391196 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.244219108 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.253209463 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251117772 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.234319439 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.252475192 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.252042351 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.234452771 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.237426074 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.244539512 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241544553 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.235021873 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.24246784 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.234804124 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241048074 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.233554014 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.245587884 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240702108 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.24097659 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237629972 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238892567 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234436217 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.242551416 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.239143871 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.241274715 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.244467402 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.242809099 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.237984354 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235544703 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.241820338 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.234604618 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.238459476 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.247281005 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.240300868 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.238249546 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.238557179 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243248216 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238207403 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239992442 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.237767952 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.242237287 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.240285922 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.241219645 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.243712553 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239123945 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.238426156 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.234943668 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.237004166 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24142393 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.23536349 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244906535 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249257906 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255050836 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.234765465 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.244176245 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.236791155 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.243818125 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.241789689 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.24458048 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.2421011 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237832221 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233053607 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242624922 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.236920591 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.244129303 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.236628947 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.244278419 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241305479 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.243315387 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240147214 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.237522723 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236831894 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.24445916 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243402206 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240822708 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.232985232 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.239304955 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.236325638 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.238914107 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.240554302 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.242659727 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.244307771 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.244453288 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241680257 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243283209 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.24369025 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.238628472 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.24548322 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241871263 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.254435998 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25074126 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.263869277 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.241073149 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249279737 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266114698 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.239975958 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.242876273 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.248539415 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.244203172 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.244526025 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.25013055 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.246133943 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241767953 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.243698312 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239046784 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251908954 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.250301225 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.248662722 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.241145826 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.247318306 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.242866867 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.241973833 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.244258397 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.250817663 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.2480566 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243732456 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252810373 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.253044876 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245199002 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.246947964 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.241539631 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.24612086 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242661781 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.254346784 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.243492779 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.247448335 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.243061043 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.244107371 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.248179474 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.242117729 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.244939298 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.241010592 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258575208 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.262569832 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247545716 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.249932381 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.249548576 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249470167 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.249490889 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.247512563 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242608933 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244584645 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.245361711 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.243256184 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249819677 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246031623 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.252524127 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249254109 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.256179055 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.248704143 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258799522 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243376076 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.249742149 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.245920083 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247294468 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.245653782 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.24726846 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.245291857 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249324501 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245165535 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.244018322 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251302333 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272405466 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.244386098 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.242788712 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.736908336 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.241545938 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.246512744 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.255649088 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.246394601 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.256068192 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.248613023 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.251010311 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.248752877 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2557131 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.252450194 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.249761484 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.253953304 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.246004819 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.242519116 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.247395696 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.248781596 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253061433 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.276505721 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.245237482 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.252009647 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248450948 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.248938455 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.248521795 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.248866102 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244353236 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.245437309 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25462666 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.272034459 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.256684783 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251349499 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.259845549 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.255453924 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.245936727 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.248060287 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253853242 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.25397194 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.243172077 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.252837349 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.25248829 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250796296 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.247836372 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.251610607 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.252303576 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.252555892 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252412957 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.276398738 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254317236 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.250042489 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.251391022 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257688328 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252021846 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.277859485 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.24864467 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.251161332 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.253389914 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.248530856 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.247350915 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.250269695 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.253508355 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.244319929 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.253575208 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.249551246 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.247064278 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.257930682 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.252743498 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.24585355 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259836477 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284036484 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.250115793 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256606582 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.256945144 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.250832939 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.254669425 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.252268459 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.247652273 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257276963 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262880254 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258097786 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.249429004 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.256514716 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250062955 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258228749 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.254242265 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.252357765 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.249009965 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.252721037 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.24912893 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.254714123 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25478274 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.258407478 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.252068626 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251889171 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.253527574 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.258401456 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.258855607 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.25640548 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254856214 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.254411865 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.251212378 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.251840861 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.255456228 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249405148 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254240676 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.250760747 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255941563 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257004812 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.254089037 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.253392837 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.255295313 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.248172279 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.250325855 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256784787 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.255704501 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256529108 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.253137068 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.257137448 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.252178005 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.252769842 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.256893556 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.251738454 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259087015 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25263559 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.258265187 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253628333 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.255748838 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.257779416 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258179252 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.2495016 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.252321874 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.259888319 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256587967 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.25870834 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.257274964 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257408976 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.250383198 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251963177 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.258261574 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.254679504 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.25114682 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.260189438 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.253295776 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.25467243 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.255165249 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258999123 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.261539081 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.258171631 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.254656491 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2614371 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.2818421 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259153097 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.255075677 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.255435958 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.254211359 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.261256479 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.257867841 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.25213781 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264804111 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.279772289 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260008459 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253123593 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.256835537 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.251869095 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261183531 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255816838 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.256834162 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263789706 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.252602594 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261376388 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257159181 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.256707106 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.253540002 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.255634813 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.256680632 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.260292394 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.259280636 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258706398 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.25623554 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.255352452 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260477244 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258153756 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.25974274 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.264783371 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.254797361 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260150822 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.253972088 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.258704562 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.260233678 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.253616112 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.261128579 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258633309 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257086526 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.257905508 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.266415509 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.257188591 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.256075576 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.256301913 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.26089325 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263386006 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.259975057 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25634464 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.260412556 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.261804809 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259984438 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.258641536 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.258848941 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271753897 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.285053177 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257166443 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.258371734 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262954451 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.269780232 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.260072933 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.263029234 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.259198822 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.258005358 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.266703588 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.259181252 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26237596 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282050585 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.25729639 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.267776322 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.258305986 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.262538645 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.261317274 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267121273 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.263373258 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.258368172 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.269678492 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267689476 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264476675 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285245467 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.288120167 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.259243046 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.26620825 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25489728 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.266035686 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.260326776 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.265273029 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.261808734 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260901997 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.262614364 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.25808288 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266120793 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.267894794 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.267582405 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.265170058 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.257230782 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.257082205 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.264051514 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.260224292 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.264185309 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.263388708 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.261069047 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.261431534 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.258132492 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271769567 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.274661904 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.267878833 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.260938635 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.263903663 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.265611621 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.262728472 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269130254 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.26958517 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.264532584 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.261882937 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.261815725 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269160965 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.265301067 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.257256627 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.262414199 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262641509 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.266704733 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.273623262 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27853615 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.265092892 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.26712815 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262301262 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.26404386 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261139602 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266861451 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264621179 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.259914699 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.264074773 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27063157 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.265422836 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.265228179 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.262994067 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.26802161 seconds)
  done (took 746.447083108 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.266498896 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263192816 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264535653 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266910425 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264360182 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266989419 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266515951 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266072259 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.26730435 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266367974 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.267128196 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267497571 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268828158 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.268214552 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270012209 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267878809 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266835501 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266891925 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26575618 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265199152 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.268958676 seconds)
  done (took 27.770424707 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.267948766 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.267360527 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.267636237 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.267505797 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265768698 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266862531 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.26876002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270435127 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271017761 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268674309 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.267362166 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264452577 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.270311331 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.268350789 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269119158 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270268464 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.270110078 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270167169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.268984332 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268545128 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268476523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.266501092 seconds)
  done (took 29.080723447 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.269134721 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.264080377 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.263083958 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.271200265 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.272252237 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.270535307 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.270764985 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.266659718 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.267319182 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.264696305 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.26341225 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.267061841 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.270785296 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.276495044 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.268741425 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.272618351 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.272673434 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.265952574 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.267998202 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.265993684 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.27277852 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.278169922 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.270004751 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.261786112 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.270643471 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.265556095 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.268943226 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.269103858 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.259694298 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.273658454 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.266463637 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.264907907 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.269687622 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.270203322 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.269313587 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.274954619 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.271215113 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.268574419 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.271833544 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.271721676 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.29017873 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.269430525 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.269734021 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.275141026 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.273506693 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.270854282 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.27833161 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.271086998 seconds)
  done (took 62.130998788 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.877832701 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.911385413 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.905504488 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.903694114 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.905647756 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.899376817 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.902445926 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.908114119 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.904289465 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.906761431 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.91214412 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.895502482 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.897269547 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.901885742 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.904219647 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.904279393 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.896414175 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.904402912 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.894320544 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.905181914 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.904983884 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.902984031 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.899580486 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.909055879 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.89836601 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.905047971 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.903709758 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.912449179 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.905988582 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.902734754 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.894716441 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.897772649 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.906180934 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.904682068 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.907812336 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.905904673 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.914210971 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.905393552 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.909402588 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.904271578 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.916387995 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.907035144 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.908678251 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.897461557 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.905613515 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.907686919 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.899192581 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.901747139 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.906844059 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.910973754 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.90477363 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.905118872 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.905977925 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.915714868 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.910587733 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.904222494 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.906896668 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.905127472 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.902535148 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.902190475 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.906235136 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.904507293 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.914971486 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.900822882 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.902657466 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.900764899 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.925049703 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.906283268 seconds)
  done (took 130.703023632 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27744999 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.274488516 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27297501 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277166071 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274368063 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.274511094 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276372319 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.273000882 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274887901 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277087147 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274035535 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275177576 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.280177381 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277267012 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277301616 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275552356 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.276284161 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27677351 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273385165 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276084402 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.276581868 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.273238305 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274754859 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.274475283 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277863427 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277192805 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276108474 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27623139 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276224188 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276101894 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277941905 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.276784475 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276245471 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277154889 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.277209034 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.27841295 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276374103 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277811581 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.277103153 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.274505138 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276418193 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278243008 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279349489 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.279488319 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279882696 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276173585 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279744104 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.279222235 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279811352 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28087666 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.275547318 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28058441 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27822428 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279771955 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276565129 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.280654015 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278092648 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278036665 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279398613 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278333248 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278264812 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.280357382 seconds)
  done (took 80.364289979 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282689919 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.284253291 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.284909133 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.282121664 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.280254234 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281590316 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28106307 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.280907026 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281722469 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.280577738 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284537073 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27982841 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284354365 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283951273 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283536292 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284446414 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283776846 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.28368242 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282811232 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.281745493 seconds)
  done (took 26.840974005 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.282378097 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281232484 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.284833166 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282448768 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.283598629 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282572504 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.285755246 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286254661 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284498619 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281033088 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28426057 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.279328881 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281274026 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287283826 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283833648 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.285713125 seconds)
  done (took 21.724815691 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.280660621 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.283942737 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.283458876 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.28037146 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.281912851 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.284474841 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.283558541 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.282591453 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.285806281 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283719482 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.283693431 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.285392707 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.282726926 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.282588409 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.280678884 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.281317136 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.283256258 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.286683891 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.28366853 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.28297081 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.282395169 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.284012799 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285056182 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.28558296 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.287196402 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.283659721 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.283884055 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.285365153 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.285703403 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.284619299 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.285092915 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.286752982 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.283775053 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.283617983 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.286517018 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.284882351 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.284952144 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.285654315 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.28471086 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.285986833 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.284536118 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.28434245 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.286191534 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.284940384 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.285832852 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.286743304 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.284513227 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.288091182 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.284967079 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.288201084 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.286944867 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.288249219 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.283505235 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.288329817 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.289688672 seconds)
  done (took 71.848691256 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284558345 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283619711 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.286585275 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.287933057 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.289912144 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.288095618 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.288516811 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289385329 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286715914 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283931946 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288776165 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289756159 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286099098 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288752291 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284943711 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288273144 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285844704 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287981554 seconds)
  done (took 24.362052484 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.286467789 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.288098461 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.287284926 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.287076888 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.287607166 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286540852 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283206263 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.287703865 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286403589 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.286377896 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288092185 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.287220478 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285061979 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.287713473 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285581638 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28848828 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.290276859 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287644237 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.290153441 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286802565 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288799443 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289527058 seconds)
  done (took 29.516923278 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.282796164 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.283197289 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.283135687 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.298215913 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.3000591 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.285562981 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.285501449 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.282916298 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.305598391 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.354266435 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.352302581 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.303131628 seconds)
  done (took 16.810539196 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289325281 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29065898 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291202704 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292248617 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291185546 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290138925 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291554496 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29133428 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291145348 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291158645 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29182236 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290317926 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290042771 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292219373 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289906614 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290215091 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289378412 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292178295 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293104312 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290163876 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291008372 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292808791 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292011822 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292732862 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292801801 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290217352 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292710295 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2914126 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292059808 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289606419 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291388047 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289594509 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292062299 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293046081 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290938139 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291484548 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291840718 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29123122 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291546119 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291820487 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29340629 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292158603 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292247092 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292397117 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290219007 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292652894 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292481301 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292546384 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292068281 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292572864 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292606825 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292021203 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292619218 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29452751 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29323091 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294316027 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29507163 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294324271 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295097883 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293174299 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292837727 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290063012 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293618984 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294945799 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295821672 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29297741 seconds)
  done (took 86.469596359 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292491071 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29344131 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29388103 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295107439 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294492706 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294740933 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290400736 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29227963 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293841262 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295271871 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293729119 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296078394 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295703468 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29555149 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295887425 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29439213 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290858625 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295768284 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295334911 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29455104 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295476118 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292755247 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298501835 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295592946 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295214624 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298268483 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296826057 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295073148 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29661467 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2968732 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295189466 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296973369 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294938229 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295008822 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298588302 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298847135 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296259995 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293331329 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296596888 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29271435 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296421535 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296732361 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295749197 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295691495 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297359076 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296670912 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296128935 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298217814 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296889808 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298886397 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295798341 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299648566 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299844713 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296246558 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297611664 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297159332 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296871135 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297247301 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299533322 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296875985 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297627307 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299516803 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299782955 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295349083 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298039646 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297011225 seconds)
  done (took 86.739052574 seconds)
done (took 1792.386187606 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.455503048 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.411851214 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.291400835 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.304836904 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.289231503 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.312605755 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.303609049 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288530391 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.29157606 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.290113928 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.2941235 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.484074351 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.289172948 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.287240629 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.295536886 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.390414988 seconds)
  done (took 26.483201698 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.320154514 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304030813 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.414411009 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.320284864 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.322945748 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.491655229 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.350791964 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.30296489 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.477984403 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.320170325 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.301888225 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.324329239 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.298572583 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.299946675 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.318196831 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.497394785 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.56093506 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.304855614 seconds)
  done (took 28.735272038 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.766101533 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.331676358 seconds)
  done (took 5.301268912 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.317982241 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.296240888 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.301506304 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.294693642 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.292119939 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.306778075 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.293947573 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.29949473 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.288151923 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.427539379 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.300594881 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.314912287 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.31524806 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.299886604 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.300612483 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.345304489 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.454068232 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.2990912 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.301426649 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.303881768 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.298882739 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.383870321 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.33882034 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.300623418 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.42582318 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.29540184 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.30211307 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.307197317 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.432533759 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.301285247 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.297801549 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.299547427 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.301547251 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.299590652 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.787910297 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.312413802 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.305656795 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.326564306 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.304646958 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.439447976 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.297486308 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.308798052 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.291314052 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.782461632 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.447333867 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.418830842 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.320226186 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.296868666 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.299546866 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.373694995 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.310964237 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.311339772 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.361044906 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.120311746 seconds)
  done (took 83.567940058 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.340310767 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.298982918 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475314721 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.315727312 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290910501 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.291362065 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.298581373 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.591987931 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.305624756 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.293902648 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.588263329 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.888974541 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.321200173 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.354601437 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.155985453 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.36911708 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.293047574 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.309542317 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.295833101 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.295348066 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854477901 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307208818 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.288649886 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.419120674 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330785343 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.835661053 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.295819592 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.29710039 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.314744372 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.29211746 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.829659572 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.323428858 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.357924938 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.295632391 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.579268714 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.680891765 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.640176729 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.292893907 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.343288922 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.298435473 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.315343872 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814665628 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.680252743 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.293994705 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.294756232 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.816511637 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.292727846 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.300827598 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.305127895 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543529429 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.298801549 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.299985294 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.315864199 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.300920381 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.292956178 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.385650037 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.386698829 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.836971463 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295900373 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.289944381 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.341029741 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.294533528 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.301346609 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.300031775 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.31416311 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.660936404 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.493319126 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.295707365 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.677564977 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838801048 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.319710869 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.889541674 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.315186163 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.324420805 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.482231369 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297161166 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.310187532 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837771703 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.300865592 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.29427781 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.646861156 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.296353931 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.584123194 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.312210538 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295149878 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871098412 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.301000485 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.308976409 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.297055955 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.292159245 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.297685349 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.316654803 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.600261369 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.323537571 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.295783034 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.29320732 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.342980715 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.307180009 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.301519813 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.302591524 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.8899125 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.316921479 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.293710406 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.295591849 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295888946 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.29923895 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.297711153 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.299955815 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.569113429 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.298004396 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.326200936 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.294516839 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.294677141 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.309925097 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.426053178 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.299230927 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.613531291 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.294862806 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.304496661 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.303184128 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.292695339 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.336091819 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297303141 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.302296205 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.188911371 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.564882394 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.320624195 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.299583577 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.296144382 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.315030302 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322996176 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294593501 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.341707796 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.303944065 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.107269049 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.353918957 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.314153763 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.298032122 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.312553874 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.299823735 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.302478714 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.298135942 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.594651831 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.581305049 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.515301496 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.306786847 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.299476253 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.103843791 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.345721446 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477031455 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.322763622 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.297880035 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.552101702 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.514818852 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.300115411 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.296708898 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.296833844 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.56296642 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.304162219 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608989996 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.861510127 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.319986513 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.309379718 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.112009384 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.038148114 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.306665753 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.30302272 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.588140172 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.314783973 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.299859354 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.30146403 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.298832673 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.315613729 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.319580418 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.30847437 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.299933393 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.300028553 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.623877431 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492199914 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.320067411 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.299244712 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816842068 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.32558628 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30019344 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.307517211 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.30200852 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.298879677 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.374139331 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.299853284 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.299338417 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.302587836 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.310245241 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83620296 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.29942719 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.305805353 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.491451135 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.020119183 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.3198417 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.302049163 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.324805016 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.223232007 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843835573 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.321186521 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.61851135 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.307896851 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.340300659 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.309841469 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.325403524 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.844591269 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.301417298 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.320915375 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.969782938 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.317476607 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.757168985 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.299028833 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.302223995 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921179197 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.321589776 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.306806827 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.305256666 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.300795546 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.605282436 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.305598729 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.30931176 seconds)
  done (took 491.63226146 seconds)
done (took 636.920531179 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.301262634 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.309086831 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.300709965 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.308469622 seconds)
  done (took 10.430319903 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.316736393 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.306849255 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.31425832 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.309011946 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.316313058 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.308372263 seconds)
  done (took 9.093844494 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.306236957 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.301412841 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.30787111 seconds)
  done (took 8.132897284 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.522898928 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.333312983 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.647504076 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.340661609 seconds)
  done (took 9.06289099 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.317858669 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.316314899 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.319156097 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.316867453 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.319963438 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.322987162 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.316303886 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.314131382 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.318726774 seconds)
  done (took 13.081430564 seconds)
done (took 51.019559207 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.300828023 seconds)
    (2/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.658555591 seconds)
    (3/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.403070884 seconds)
    (4/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.243003357 seconds)
    (5/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.387807764 seconds)
    (6/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.400669917 seconds)
    (7/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.377130997 seconds)
    (8/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.346639124 seconds)
    (9/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.024153234 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.37282775 seconds)
    (11/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.964305085 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.46149328 seconds)
    (13/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.512498945 seconds)
    (14/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.315890289 seconds)
    (15/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.587426611 seconds)
    (16/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.416965549 seconds)
    (17/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.032035003 seconds)
    (18/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.346826647 seconds)
    (19/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.519004026 seconds)
    (20/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.360832624 seconds)
    (21/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.310106832 seconds)
    (22/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.422460845 seconds)
    (23/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.110807514 seconds)
    (24/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.596716654 seconds)
    (25/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.298832622 seconds)
    (26/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.464412796 seconds)
    (27/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.466436558 seconds)
    (28/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.364307351 seconds)
    (29/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.341854535 seconds)
    (30/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.341556818 seconds)
    (31/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.398446106 seconds)
    (32/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.346662508 seconds)
    (33/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.68225949 seconds)
    (34/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.311801903 seconds)
    (35/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.409394229 seconds)
    (36/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.334769598 seconds)
    (37/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.350304018 seconds)
    (38/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.44673402 seconds)
    (39/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.328221375 seconds)
    (40/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.318617436 seconds)
    (41/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.347331892 seconds)
    (42/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.419185319 seconds)
    (43/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.363098625 seconds)
    (44/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.361219719 seconds)
    (45/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.433935966 seconds)
    (46/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.386462615 seconds)
    (47/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.426130431 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.452558916 seconds)
    (49/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.365039779 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.520355386 seconds)
    (51/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.461683366 seconds)
    (52/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.317441696 seconds)
    (53/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.384169509 seconds)
    (54/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.969142809 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.403674153 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.456871267 seconds)
    (57/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.423503005 seconds)
    (58/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.105018249 seconds)
    (59/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.002194427 seconds)
    (60/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.30930152 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.532151595 seconds)
    (62/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.998488813 seconds)
    (63/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.374042437 seconds)
    (64/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.500815848 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.447141492 seconds)
    (66/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.486138278 seconds)
    (67/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.306937973 seconds)
    (68/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.687217395 seconds)
    (69/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.410367447 seconds)
    (70/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.422397412 seconds)
    (71/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.136554173 seconds)
    (72/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.370303124 seconds)
    (73/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.476975926 seconds)
    (74/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.467972676 seconds)
    (75/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.431032439 seconds)
    (76/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.306839643 seconds)
    (77/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.356415544 seconds)
    (78/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.462546991 seconds)
    (79/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.365253798 seconds)
    (80/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.554026537 seconds)
    (81/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.318702193 seconds)
    (82/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.529233183 seconds)
    (83/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.470046078 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.390835721 seconds)
    (85/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.088152965 seconds)
    (86/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.323894853 seconds)
    (87/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.422095364 seconds)
    (88/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.375866029 seconds)
    (89/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.388996641 seconds)
    (90/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.078038302 seconds)
    (91/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.359352919 seconds)
    (92/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.44961773 seconds)
    (93/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.542737701 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.394430973 seconds)
    (95/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.344847323 seconds)
    (96/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.325591139 seconds)
    (97/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.361142931 seconds)
    (98/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.426881391 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.417631987 seconds)
    (100/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.316334303 seconds)
    (101/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.396136884 seconds)
    (102/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.35803861 seconds)
    (103/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.145007723 seconds)
    (104/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.003916499 seconds)
    (105/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.522284426 seconds)
    (106/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.519314408 seconds)
    (107/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.310279924 seconds)
    (108/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.45187843 seconds)
    (109/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.426568662 seconds)
    (110/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.20708868 seconds)
    (111/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.552608514 seconds)
    (112/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.466971439 seconds)
    (113/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.45698639 seconds)
    (114/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.412905874 seconds)
    (115/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.368011363 seconds)
    (116/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.321779157 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.540435042 seconds)
    (118/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.079203748 seconds)
    (119/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.379408296 seconds)
    (120/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.346458718 seconds)
    (121/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.11002835 seconds)
    (122/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.441848018 seconds)
    (123/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.48223694 seconds)
    (124/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.374138589 seconds)
    (125/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.485302695 seconds)
    (126/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.527712238 seconds)
    (127/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.332136855 seconds)
    (128/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.406248915 seconds)
    (129/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.52496327 seconds)
    (130/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.97479302 seconds)
    (131/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.434524722 seconds)
    (132/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.351750834 seconds)
    (133/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.476081638 seconds)
    (134/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.457502704 seconds)
    (135/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.356690787 seconds)
    (136/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.228156158 seconds)
    (137/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.384206213 seconds)
    (138/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.521524311 seconds)
    (139/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.308213026 seconds)
    (140/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.386010509 seconds)
    (141/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.335134726 seconds)
    (142/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.319394921 seconds)
    (143/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.26177419 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.425292757 seconds)
    (145/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.320266697 seconds)
    (146/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.06853913 seconds)
    (147/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.333672022 seconds)
    (148/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.433449185 seconds)
    (149/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.35696784 seconds)
    (150/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.337768138 seconds)
    (151/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.461998238 seconds)
    (152/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.315684971 seconds)
    (153/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.523589193 seconds)
    (154/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.50165278 seconds)
    (155/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.343120283 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.507641881 seconds)
    (157/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.469411075 seconds)
    (158/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.470508852 seconds)
    (159/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.540845561 seconds)
    (160/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.444053063 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.393428929 seconds)
    (162/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.363148699 seconds)
    (163/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.409749586 seconds)
    (164/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.419888327 seconds)
    (165/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.541983226 seconds)
    (166/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.406195875 seconds)
    (167/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.654984688 seconds)
    (168/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.338521055 seconds)
    (169/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.352032 seconds)
    (170/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.48038347 seconds)
    (171/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.382732621 seconds)
    (172/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.460660308 seconds)
    (173/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.455580745 seconds)
    (174/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.390681743 seconds)
    (175/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.316919019 seconds)
    (176/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.472876009 seconds)
    (177/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.336859003 seconds)
    (178/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.44649641 seconds)
    (179/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.010449977 seconds)
    (180/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.357624016 seconds)
    (181/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.348247627 seconds)
    (182/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.313261224 seconds)
    (183/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.417896329 seconds)
    (184/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.481450641 seconds)
    (185/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.502887086 seconds)
    (186/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.003635403 seconds)
    (187/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.078499461 seconds)
    (188/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.486230076 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.471650247 seconds)
    (190/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.374018383 seconds)
    (191/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.357492589 seconds)
    (192/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.398972758 seconds)
    (193/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.314175818 seconds)
    (194/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.385256893 seconds)
    (195/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.489806967 seconds)
    (196/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.530166416 seconds)
    (197/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.437778765 seconds)
    (198/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.368833525 seconds)
    (199/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.347532895 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.427008114 seconds)
    (201/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.351651309 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.425315947 seconds)
    (203/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.363287794 seconds)
    (204/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.412773822 seconds)
    (205/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.505985682 seconds)
    (206/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.418362195 seconds)
    (207/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.314005326 seconds)
    (208/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.348875681 seconds)
    (209/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.381375281 seconds)
    (210/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.12772277 seconds)
    (211/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.384132402 seconds)
    (212/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.435269618 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.515749219 seconds)
    (214/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.341288438 seconds)
    (215/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.443087503 seconds)
    (216/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.474997689 seconds)
    (217/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.392455728 seconds)
    (218/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.536529238 seconds)
    (219/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.322048971 seconds)
    (220/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.510665706 seconds)
    (221/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.378475202 seconds)
    (222/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.087489103 seconds)
    (223/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.369186034 seconds)
    (224/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.415009404 seconds)
  done (took 369.629732552 seconds)
done (took 370.849186101 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376794531 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.51268395 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.329736682 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.329925621 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374385839 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.334103987 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.372647466 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.339372745 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.342282121 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.342388912 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.334866406 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.339272254 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.343371474 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.37668694 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.445672898 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.342285496 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.331888406 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.339208874 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.38366695 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.403593799 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37516452 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376242693 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.353678635 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.332853682 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380452541 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381360831 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.339100061 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.324619148 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.336325394 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.381561026 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.333737031 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.335601807 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.390252877 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.390605008 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373704678 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.339936027 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377194902 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.514214849 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.377146313 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.371358939 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.346193476 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.392181803 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.341071289 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.347279542 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.391581111 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.354664635 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380006622 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.452919989 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.334095228 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.320802855 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380618504 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.403861415 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.347987936 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.325990653 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.325863746 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.455768315 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.342672283 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379840632 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.340793011 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379000001 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.448672304 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38421079 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.403157104 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382634914 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.345085174 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.345194034 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.343442572 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.402839618 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.341827129 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37653725 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377920459 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.34715478 seconds)
done (took 107.757008678 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.454234145 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.334721476 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.472376155 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.340626045 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.499107576 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.478755776 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.336595596 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.339799454 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.337939189 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.127323771 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.339049781 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.340447673 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.33397393 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.335828695 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.46268 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.336713512 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.336065135 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.028097405 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.339107702 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.469501059 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.361035471 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.337722422 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.342592787 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.128124819 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.333385164 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.327648665 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.471786215 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.342435284 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.032140026 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.330447036 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.33227841 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.027854581 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.476481256 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.362167986 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.353279995 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.352941809 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.497473725 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.35798461 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.457200871 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.456545194 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.476647425 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.381140709 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.329950125 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.333096328 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.339178873 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.341428523 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.339493963 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.372727477 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.334304878 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.341965411 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.028111902 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.353145087 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.342036024 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.342567707 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.343207227 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.371542407 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.339658678 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.34288723 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.479659013 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.341197875 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.454457493 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.131083296 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.130133029 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.342904897 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.335917017 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.345856658 seconds)
  done (took 108.577183171 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.402926232 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.417520202 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.451158088 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.354179829 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.390977996 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.456863703 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.357543633 seconds)
  done (took 11.072607411 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.343749884 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.343148218 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.389326958 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386041074 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.342364335 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.494127773 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.344447278 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.352145437 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.344048604 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.393408183 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.345019314 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.345017072 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.35436232 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.340202947 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.384759167 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.351074898 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.456417296 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.340299101 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.343367977 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.493023262 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344110928 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.352780769 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.392252098 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.352070965 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.345778433 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.341682435 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.103460381 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.346018784 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343926969 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.341803187 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340547155 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.392492524 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.345082868 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.337031547 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339424948 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.457625419 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.346423117 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3455062 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.342721615 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.341152917 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.344783685 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.346224012 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.345122908 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.345465093 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.345774862 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.367005839 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.3457589 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.345354446 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.347294999 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.349260034 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.395246853 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.347528717 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.346351071 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.348724593 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.398932266 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356598487 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.348887216 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.341944492 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.34901948 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347388887 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.499571675 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.398090792 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.345722248 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392103377 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348419977 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.348373472 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.349042415 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.349590672 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.436991466 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.345369413 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.393987885 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.350000303 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.524648617 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.367946635 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.352842628 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.347241358 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.345553545 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.345502153 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.335823757 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.349734624 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.3486046 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.345964387 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.350944872 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349492677 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.346513285 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.502441284 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454069732 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.349940107 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.357252502 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353565192 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.349533724 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.396977255 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.34806291 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.352137886 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394397078 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.461241488 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.399838236 seconds)
  done (took 138.634141605 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.356767786 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.358159027 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.349171388 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.370075378 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.343914191 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.345884526 seconds)
  done (took 9.369209326 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.347214083 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.35291698 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.356208772 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.350817305 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.351403777 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.354400854 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.352921119 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349125678 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.353611538 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.352256687 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.348290235 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.353441329 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.353149398 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.351006489 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.351190954 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.352750361 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.353126206 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.350958002 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.351298248 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351123145 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.342503914 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.353941819 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35017586 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.34700397 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.353443483 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.349902189 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368403856 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.352038731 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.352235447 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.355609872 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.374534748 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.354206073 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.347613435 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.351480798 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.357590708 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.350230525 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359248339 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.355358526 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.353256298 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.354999323 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.356217704 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349059617 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.355407425 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.353573227 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.350587306 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.355255474 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.359639779 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367449481 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.353739961 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.352366573 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.353683987 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.350786877 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.355207414 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.352365177 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.352100652 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374547166 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.358604327 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.351934526 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.352717044 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.348672083 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.358285098 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.35252877 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.348654583 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.358228532 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.353129765 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.35462563 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.347887754 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.359536681 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352822854 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.355832504 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.359833709 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.3525399 seconds)
  done (took 99.733358727 seconds)
done (took 368.619746849 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.277115355 seconds)
  done (took 4.525048825 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.544952145 seconds)
  done (took 3.796623054 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.442019474 seconds)
  done (took 23.698987278 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.371114961 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.419861327 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.381116348 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.341985493 seconds)
  done (took 10.760969342 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.652690238 seconds)
  done (took 3.898219012 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.342128738 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.343137109 seconds)
  done (took 5.934098147 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.593991799 seconds)
  done (took 3.840718553 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.887458289 seconds)
  done (took 4.14207209 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.355106604 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.357710124 seconds)
  done (took 5.965884433 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.329280389 seconds)
  done (took 3.576304765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 38.6927484 seconds)
  done (took 39.942111696 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.352566074 seconds)
  done (took 3.607384363 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.374606755 seconds)
  done (took 3.620970886 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.119527165 seconds)
  done (took 6.366022419 seconds)
done (took 124.923753978 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.338746664 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.344703763 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.337780039 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.338314885 seconds)
  done (took 10.604681664 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.401307343 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.401191533 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.402536851 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.402604137 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.401693614 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.400168041 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.375744786 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.374994761 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.400877662 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.399967498 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.400640285 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.399384495 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.40186715 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.376104874 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.400160232 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.401210493 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.401024151 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.402420471 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.378722562 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.401200376 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.349953093 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.401639907 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.401157444 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.351470588 seconds)
  done (took 34.679845879 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.860452913 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.414569366 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.500463037 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.396946428 seconds)
  done (took 7.419703937 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.42794213 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.428308583 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.44056612 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.479049415 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.49323015 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.440625674 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.377430729 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.372598349 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.358440474 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.42856893 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.479680823 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.419398169 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.506228682 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.350449852 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.557610319 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.350779774 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.349863819 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.430023122 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.480179039 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.492814508 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.349845118 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.428839985 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.42981728 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.421224648 seconds)
  done (took 35.543639591 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.360524845 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.367210126 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.35417974 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.369616314 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.35272725 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.353293789 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.354147933 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.360717769 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.351676716 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.354773387 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.353777859 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.368774194 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.357726245 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.355418267 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.363927104 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.355101689 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.359801513 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.357910232 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.354051375 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.361603035 seconds)
  done (took 28.41782884 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.343111307 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.342655404 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.69347899 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.598762439 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.341818564 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.348258034 seconds)
  done (took 13.91886943 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.424104398 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.581376546 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.34879818 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.719476863 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.80395475 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.350955218 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.350382988 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.612515067 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.94634568 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.92346412 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.414500355 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.423488357 seconds)
  done (took 20.155598845 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.344558533 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.347964165 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.364149756 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.36343903 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.406021402 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.369605799 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.355783339 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.344244612 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.413667794 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.426899652 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.372261107 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.408038126 seconds)
  done (took 21.770214004 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44277853 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350386653 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35088927 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39934847 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354308545 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.196456083 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41452088 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.121153842 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.380440475 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62703067 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362139112 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450548433 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604772304 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365241851 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354420971 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.349171435 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585882259 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85165061 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354493126 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351775095 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405131613 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351536096 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388825653 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583612029 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37612801 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35101197 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.614342939 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352550961 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644499573 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371599018 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361224323 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351870682 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628699351 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035878679 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474629621 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576361559 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384129734 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35408349 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.374917954 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.37737965 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377395022 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360414617 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363036236 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352287718 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353277377 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351657915 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147152895 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.385277941 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.352900178 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353793943 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621649382 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455495095 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.36017642 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355362935 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442045888 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357710375 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.358785393 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485996991 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962446673 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352927999 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360614787 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.380667862 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34961082 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373134827 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006152169 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.380120926 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.360528255 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361178045 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354812597 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35482457 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397644941 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355182359 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.38039472 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35496451 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092345875 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394038159 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361793233 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916145663 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356464481 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.363595072 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586694371 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354164062 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354473165 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.354625442 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356054869 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098200483 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368167623 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.341683584 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425248851 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142049738 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.61071651 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400056101 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386516779 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577511183 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.342620994 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357712329 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.360984912 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364040621 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377896483 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.126915504 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381364768 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.362347586 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614891504 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.567981594 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356541727 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.364978794 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876806832 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380991513 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.398565831 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356607002 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60502247 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.987680861 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394525225 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357784199 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378439312 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35646169 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136374704 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363358408 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.483005906 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35697213 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665083985 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19438979 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365261314 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42626189 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363501554 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358889392 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357165513 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366070956 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35977036 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.575240644 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383835312 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.396311992 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.35743113 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358352529 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.363856888 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365178173 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.368419904 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.57995638 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359735052 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644594066 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358462838 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360105397 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360604665 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.579910887 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.366755064 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.696967251 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61983079 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359143068 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365647554 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376039425 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378303198 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462724048 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380462368 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.360357282 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.622891764 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.365485034 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.366809391 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360421973 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368218736 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36553027 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.368122776 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379934123 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969254424 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360829077 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367271502 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249707337 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.376520428 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428678764 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368770045 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588369261 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.401013626 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36600325 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.36959315 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.368007143 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591025142 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371077088 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.361743153 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446214139 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.873541042 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.005861801 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400182578 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.363182619 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.362603613 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.362635922 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363134432 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362269149 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363173423 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59111767 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401847726 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373913616 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.975722244 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387111612 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362944696 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.3759508 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374298264 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.370422564 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363591704 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.373789763 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368033502 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38609302 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.374644781 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507329836 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.37993529 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364585028 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.882476786 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37151242 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3640519 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364469466 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396274729 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363563058 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278870916 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649777992 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367349019 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637486047 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37072155 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.386731804 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.366065391 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380668532 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372047809 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.384300412 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373010187 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.375534825 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366625607 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375443957 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942374423 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125301052 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932062194 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390430842 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.371851488 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369258464 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.137269355 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392814499 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364718862 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609665274 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.155170527 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391271344 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880794078 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.403969717 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168982752 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638582179 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604639908 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366426382 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.388693839 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648149599 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58316197 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400736042 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366088865 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388046142 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.352471561 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969836305 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399261191 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463207697 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13853217 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40242011 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373178896 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.436774461 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.385986762 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799185146 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39372224 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369075225 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380791068 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380805445 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280904019 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402634906 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368754929 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997069763 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390697659 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.87724353 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395375882 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.592807053 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.404693558 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.376993238 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.371496721 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.38756176 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.621130101 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636037515 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377103037 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37659451 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929920623 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.265773415 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.377833473 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372197009 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140216227 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380033032 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668304543 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.37276444 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.374759234 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372685027 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369057195 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368340405 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.373726806 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377943553 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341565764 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880720499 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.375777125 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367444278 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396198104 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376454915 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624689771 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.383080285 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.977023671 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624282748 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364914795 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39019925 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.37617098 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381033629 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.365498741 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368950555 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374557006 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448599143 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.596152207 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371753907 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.362115712 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.437566324 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585019178 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370496816 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384461039 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63170465 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.397163498 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.387692702 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118798456 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427622585 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386236034 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377350701 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370662611 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439671676 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46628956 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599072021 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.409083095 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.386279916 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800998686 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411131044 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378181028 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.386894974 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467606486 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372529046 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.397989748 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.146388831 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987727898 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145312872 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.986717948 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665815452 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380762819 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383768507 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372208915 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531685174 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370914845 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655350584 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371639374 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.370582524 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41387392 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37823542 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394267039 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585162037 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6470778 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373355646 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371984005 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410783223 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.370088915 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380977005 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.581009315 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869667764 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934070527 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372692176 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384606812 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.147314192 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674861444 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370520169 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373142575 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372117091 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.378415209 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.38136623 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.385424679 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386996273 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521526032 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639437925 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068947892 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.408662786 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.402742427 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.893517364 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38766382 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.635388868 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381032575 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599069552 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004711414 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123074974 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647209646 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443609154 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597351563 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.396363511 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534980372 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.388114608 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373527386 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373473401 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373402828 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.3730097 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.381292304 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982223553 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661576117 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.379304497 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.374801038 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40899223 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.38275224 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.595149382 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114921191 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604315589 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382644383 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381067328 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375198217 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981435803 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670994958 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381942932 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.379447829 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627656098 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403438322 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40121121 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.894548118 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.375742977 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948684621 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.349446134 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396100562 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372598686 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.109510785 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994165464 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.404484757 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890528199 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385799471 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375009478 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656217764 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.383731334 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375875224 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67833611 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.380477877 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375800398 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608807349 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.010079294 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199921595 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.381739741 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394171224 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.385362991 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377719694 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463252613 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381536385 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379000952 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.816755616 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402981674 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376727753 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390703231 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.382924363 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383120316 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.403306734 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376833917 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.385929772 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.384882636 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.401716643 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386303331 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515424666 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985309738 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405422042 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.055715844 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.702041809 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631951545 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377545281 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.371328566 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.383881946 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379125529 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379272531 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378533059 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388317271 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93904984 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.380308004 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.394475628 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384287966 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.380819144 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589233064 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391626241 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612298187 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404773111 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401355451 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.367799536 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379866864 seconds)
  done (took 976.682467648 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.407534469 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.398678576 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.391931119 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.385865618 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.39288684 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.447953208 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.461026191 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.462212501 seconds)
  done (took 20.627707213 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.389582295 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.389005421 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.39024226 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.384909558 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.387410573 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.866112242 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.40067366 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.384921769 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.400026666 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.392717689 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.385076562 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.367179464 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.392775608 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.382484471 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.374361237 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.388357329 seconds)
  done (took 32.95962801 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.452054679 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.558553143 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.527977983 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.461115504 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.41043509 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.379807368 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.652780696 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.405543892 seconds)
  done (took 27.136208634 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.386607989 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.385119031 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.388886319 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.389751969 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.389280752 seconds)
  done (took 8.221026201 seconds)
done (took 1239.390264409 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.386822021 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.387720844 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.388838547 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.386380716 seconds)
  done (took 6.836586351 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.372759602 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.370817526 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.372302374 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.384734064 seconds)
  done (took 9.782827977 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.1111771 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.030851255 seconds)
  done (took 5.423553658 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.904645601 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.901569732 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.913054109 seconds)
  done (took 7.006994587 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.678977268 seconds)
  done (took 2.964344401 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.30670315 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.386982395 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.073669756 seconds)
  done (took 8.057036985 seconds)
done (took 41.355220949 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.382309188 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.721561559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.535140913 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.38050033 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.540244196 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.534272402 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.111465411 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.383253423 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.385756846 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.383598187 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.391504428 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.537651371 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.164358414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.722596715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.166354142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.627156126 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.539661527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.391395644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.378856015 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.379415947 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.115254087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.387947262 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.392108775 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.389505293 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.54095845 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.525567042 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.379753714 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.627486865 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.383729195 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.383472964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.524754331 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.383986512 seconds)
  done (took 82.977751366 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.379080634 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.379111703 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.396734706 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.400847246 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.378653125 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.395507319 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.401375209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.382919072 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.37823762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.394415999 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.380298116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.39755494 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.381158704 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.378615219 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.382562472 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.380141412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.385736845 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.383229005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.379770581 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.38943257 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.380749815 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.388122587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.388464291 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.385966976 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.380147671 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.380670122 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.397321528 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.398416704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.403658759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.381880288 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.398863945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.398348566 seconds)
  done (took 77.6928949 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.385129442 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.385810424 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.383981193 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.387607085 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.388882081 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.381616576 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.384783504 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.381339561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.394045898 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.394420732 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.391008078 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.386570509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.383629799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.381803474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.384679032 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.382358299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.402483386 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.391885738 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.381334425 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.389283883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.382102741 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.380617374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.382865758 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.382449609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.384759881 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.384742128 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.382606908 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.398144422 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.384431058 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.382342001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.386282584 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.381888458 seconds)
  done (took 77.64288041 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.664734689 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.394965342 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.396779519 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.387818334 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.396674107 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.394005309 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.38724348 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.672412886 seconds)
  done (took 14.981511945 seconds)
done (took 254.582615213 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.386796179 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.920544308 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.432949185 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.398431096 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.411328421 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.415920408 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.618197996 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.431618683 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.618268536 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.414805023 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.408695823 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.389117061 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.237361888 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.542463164 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.257815257 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.371914464 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.304007167 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.388466301 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.975074202 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.679569133 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.413264584 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.385373919 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.264523365 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.334497059 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.384814767 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.47375459 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.491309926 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.614715096 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.551108428 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.472295528 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.921063282 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.396898095 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.407569423 seconds)
  done (took 65.005890064 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.390584208 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.520242455 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.395688668 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.396570082 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.52437922 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.416883409 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.392532048 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.397078623 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.397118759 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.397938661 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.397907908 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.398811947 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.399997504 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.447663118 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.533435319 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.412693982 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.393609194 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.519428309 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.39257122 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.390827438 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.445866644 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.397149436 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.399993316 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.44734824 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.399197828 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.398999029 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.522863179 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.419895639 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.401152649 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.522149527 seconds)
  done (took 44.161798435 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.398931222 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.999187426 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.161499776 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.40129238 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.395138153 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.401160453 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.693126756 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.400071781 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.397884421 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.399664551 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.904912987 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.424702289 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.431713151 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.194971528 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.403604405 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.399839269 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.400231109 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.395566563 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.006782944 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.407705926 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.714120696 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.400166094 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.693987326 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.407064877 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.418945917 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.39695667 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.400750866 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.242626868 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.428417707 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.900859715 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.238785607 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.69820551 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.19536511 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.209529211 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.224121297 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.40996346 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.401135685 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.909334205 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.4220135 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.397165731 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.696518419 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.403693369 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.180108462 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.104625616 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.416727414 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.402761942 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.262868528 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.933797632 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.674394569 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.411783815 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.203685491 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.407209382 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.404910204 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.399502262 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.650554846 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.402313223 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.399212938 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.275398835 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.42474528 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.698212618 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.405114289 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.400481286 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.008188501 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.406598842 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.016929027 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.408923157 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.407338866 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.419874655 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.184438904 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.406343749 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.121968966 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.418536693 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.404136685 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.902080267 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.031942488 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.321641902 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.40516406 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.024769128 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.226106426 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.721393362 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.404566578 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.208513635 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.720928364 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.403586097 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.404756367 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.405874193 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.405403175 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.483996826 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.697032953 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.057228133 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.115953123 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.299661381 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.724376077 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.413749607 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.40110538 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.279223631 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.427258563 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.404117786 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.174615161 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.121971288 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.424798505 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.410728638 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.13576323 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.427147355 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.7055622 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.412573235 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.195427373 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.409647113 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.484323108 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.407362957 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.410005353 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.424960475 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.706292363 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.412600031 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.407290813 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.104032907 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.939012497 seconds)
  done (took 197.392857273 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.403075823 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.397132757 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.396978227 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.397704234 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.395838664 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.404400855 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.395805631 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.398362214 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.401594673 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.396407575 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.397545837 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.405833093 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.405333583 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.398743237 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.397523163 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.4203406 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.396929779 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.403087047 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.397398362 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.397639765 seconds)
  done (took 45.309799583 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.408099214 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.000412564 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.984124465 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.414228736 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.410331238 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.406207449 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.460868708 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.426286997 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.409064461 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.724266634 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.590888587 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.43256143 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.408524769 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.407294561 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.961378442 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.405669865 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.724320899 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.00895296 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.416204851 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.000895502 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.406563048 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.40880534 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.403802409 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.004383016 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.756422756 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.712737162 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.472809489 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.027369762 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.432413283 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.410325524 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.004578338 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.418198893 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.406325745 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.003315278 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.431600289 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.423571642 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.409318719 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.465421903 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.484882004 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.74455827 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.095188761 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.735628755 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.427940614 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.594683704 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.413903694 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.400314543 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.012603828 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.434063902 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.400986401 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.412497383 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.416247057 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.971081008 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.43117894 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.971424856 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.435515786 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.411843727 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.007572424 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.976508324 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.988026526 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.592857615 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.427679308 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.711418733 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.416979048 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.013560281 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.437833789 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.413315602 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.413886433 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.590727259 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.031246952 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.714429006 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.733626943 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.732759981 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.417721686 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.473061343 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.436314122 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.806790551 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.481934903 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.841900055 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.731792282 seconds)
  done (took 129.088639196 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.700412058 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.531457213 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.846126873 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.048695904 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.413574766 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.551308039 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.528686467 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.683423287 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.429033808 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.498005151 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.105982974 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.534063973 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.1949724 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.501818608 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.545251341 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.565767364 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.849922599 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.411395992 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.136959155 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.079678039 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.415407654 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.545511579 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.961787822 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.630833147 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.427418012 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.014663181 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.424219776 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.115700834 seconds)
  done (took 55.002302055 seconds)
done (took 537.248492993 seconds)
SAVING RESULT...
DONE!
