cset: moving following pidspec: 11349
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.562266656 seconds)
loading group "string"... done (took 0.520076314 seconds)
loading group "linalg"... done (took 9.622374928 seconds)
loading group "parallel"... done (took 0.172446905 seconds)
loading group "find"... done (took 4.580854787 seconds)
loading group "tuple"... done (took 2.096409513 seconds)
loading group "dates"... done (took 1.396702592 seconds)
loading group "micro"... done (took 0.19308265 seconds)
loading group "io"... done (took 0.533280022 seconds)
loading group "scalar"... done (took 58.599735045 seconds)
loading group "sparse"... done (took 13.76982328 seconds)
loading group "broadcast"... done (took 1.734602011 seconds)
loading group "union"... done (took 11.129140536 seconds)
loading group "simd"... done (took 3.806114512 seconds)
loading group "random"... done (took 13.648992961 seconds)
loading group "problem"... done (took 2.217227157 seconds)
loading group "array"... done (took 24.161760511 seconds)
loading group "misc"... done (took 1.15345459 seconds)
loading group "sort"... done (took 3.678504326 seconds)
loading group "collection"... done (took 21.73736597 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.673609146 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146719693 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.256408452 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.204725324 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.275923685 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166314384 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162470582 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.170810785 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.655776337 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207110307 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138984788 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41519522 seconds)
done (took 6.247015976 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.259911506 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240936606 seconds)
    (2/2) benchmarking "String"...
    done (took 0.187540671 seconds)
  done (took 1.144750872 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077147432 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159162655 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109549109 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095898662 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093885018 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109669502 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093756638 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110048164 seconds)
  done (took 1.492175352 seconds)
done (took 3.695862842 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.516952214 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.880354275 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.525788381 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.180823658 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.317433304 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.30552765 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.266590643 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.2199053 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093987699 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085300286 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177628142 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.441521012 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.385267019 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.967163422 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068921675 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094190091 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.154550646 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.783760465 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081895797 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109146943 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.52643427 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.211826379 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11530608 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105976993 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186251086 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13418213 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.140402091 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102191356 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.666988302 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134201876 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.217086456 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084206491 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.140336735 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.166350322 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.212871766 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110520996 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681626398 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201974013 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096927164 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10007979 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678710773 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119631833 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206576543 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106706016 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068636 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.163387061 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116793182 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080183375 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094181591 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103317491 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157288921 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.441085013 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106501255 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.192770257 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095672526 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.690880423 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099677587 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274859733 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12786137 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094375756 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092561327 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088699484 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156849099 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095218365 seconds)
  done (took 20.200200021 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.168075217 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.18579303 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079261209 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157280473 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123319208 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098226052 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087109395 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079181687 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127595792 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178050604 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139527182 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.19608872 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078012654 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090986325 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.170579216 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230595082 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12778552 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106205881 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089947361 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108666198 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124200379 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113832885 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094356702 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092038691 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172808019 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204777985 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112704241 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126657882 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094480988 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096688328 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143897776 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145672261 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093156824 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090057428 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188352766 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107988352 seconds)
  done (took 5.364067149 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.243827137 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106420494 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248992681 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.205959661 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.200506071 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13393237 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.204357093 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176033853 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.296522305 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.251561835 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163641762 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129165031 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097076799 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08043836 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081561616 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095860526 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.350662944 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.150417343 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.191637548 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18565665 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098960043 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09992096 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36370194 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101998877 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0874758 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.1120806 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06461598 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.225925379 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095263478 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.060434882 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084843016 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.122386132 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114844614 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.217233157 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125876588 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121305746 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113843108 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086551167 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22261055 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119499763 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086642581 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078675515 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.133828299 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120484683 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130702276 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108933931 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110480774 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220837164 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088933524 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130168836 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.016384208 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197069294 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.164762409 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085883898 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291633371 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128692244 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101913639 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111608182 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.77155489 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.1335077 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082976911 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079362468 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115242902 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080853549 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.453070327 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.126461613 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.12804129 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086964731 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.1567251 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099267416 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120781926 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088071675 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105657982 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111601802 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087690932 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097347273 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08868505 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079826573 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108088701 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113325089 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101185221 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086180208 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081020419 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160995862 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101073932 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108691085 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126457915 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090665707 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.103977921 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11345583 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098978782 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.090135512 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.186287017 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099106787 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.13109416 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11619738 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129442099 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.106525628 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.234245873 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086585528 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124216141 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102536911 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127792028 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.087267354 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099610147 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098898852 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087490529 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080476973 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099313352 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147480287 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092749683 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09770082 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.091325832 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093085711 seconds)
  done (took 28.498880111 seconds)
done (took 54.780837384 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416382854 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080884239 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081483611 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100673506 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080740641 seconds)
  done (took 1.558097715 seconds)
done (took 2.332432985 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.310398571 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199850511 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087203937 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191328319 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088417283 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197169665 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182870933 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10126954 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206555914 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087151335 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.190581087 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088593496 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10419158 seconds)
  done (took 2.833594995 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105843299 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106637998 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103060513 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121218163 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087182969 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101831609 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119660502 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108838592 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101000153 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113080263 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088405303 seconds)
  done (took 1.930308116 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102036354 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106344018 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092426321 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118175386 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086499194 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098849948 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117014674 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107054729 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099399638 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113300991 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086777023 seconds)
  done (took 1.902832961 seconds)
done (took 7.437107678 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.205001942 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.908034996 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.192180192 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.246653174 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.353179876 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.29812959 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.608790734 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.201062934 seconds)
  done (took 15.917732162 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.122715326 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.192445314 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092550194 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091728693 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.111811127 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095953318 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096085317 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.110847022 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092580412 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096261847 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097171292 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.11080083 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096754162 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090478598 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.113712861 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092856156 seconds)
  done (took 2.540857518 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144291793 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142342663 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097890211 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100411713 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113255672 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100592745 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10227267 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116232345 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094947569 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096522186 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.118259439 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099199551 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097328161 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.110902283 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099094625 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118252408 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110195186 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098757707 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116201941 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116207815 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100082601 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096984052 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114369313 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.09978791 seconds)
  done (took 3.465298128 seconds)
done (took 22.700543896 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150035723 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103312528 seconds)
  done (took 1.03478908 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.16696382 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.183621752 seconds)
  done (took 1.135378166 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112705742 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091245031 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138343351 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10464033 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092636194 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108810928 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118290665 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109232598 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092476905 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091982395 seconds)
  done (took 1.851339374 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094933656 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097788414 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123588431 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.16903075 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117494384 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095133062 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095267032 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112424677 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098045762 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091916628 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114507604 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110583197 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09544992 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129011049 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09784853 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.113708267 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102353342 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095627455 seconds)
  done (took 2.744661318 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092935473 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092991434 seconds)
  done (took 0.976188477 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095601381 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093062875 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09452636 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109184291 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091116106 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091329557 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107861135 seconds)
  done (took 1.473613027 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.522287561 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.234693869 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.373230475 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072256226 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12277039 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.445141182 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106397137 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071844915 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091377753 seconds)
  done (took 2.867744405 seconds)
done (took 12.870480458 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092653797 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.244046545 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.633527937 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113576494 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092027479 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161721419 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.323786554 seconds)
done (took 2.457334795 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350217685 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.163776408 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083396196 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092905461 seconds)
  done (took 1.479821216 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082241148 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101145254 seconds)
  done (took 0.982513965 seconds)
done (took 3.260749056 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090260356 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.123309902 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.107584932 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089714489 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.090406208 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090494353 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.107196061 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091160732 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090692166 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.109027304 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090116802 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.090655443 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.089273317 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10627667 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090060052 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088619775 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106002448 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09081485 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09013483 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088329173 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106057682 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090638575 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089248056 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.105572445 seconds)
  done (took 3.143123123 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11275343 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091341444 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111037977 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095253729 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093741009 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110812187 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094826706 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091535228 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.11157385 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092278713 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095128792 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109848933 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092009829 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094641092 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091310729 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111624939 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094164648 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091951361 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108781798 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094643343 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094496695 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109413987 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094887983 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094059072 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111728103 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095053801 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092575578 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108869663 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095032933 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09406256 seconds)
  done (took 3.777100638 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098991632 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087078285 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090262502 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116052767 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087471674 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091593156 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105737025 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09148022 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091082393 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088741822 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109399858 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09102235 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089395371 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108714298 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092445446 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093841028 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115539111 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090928548 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091796898 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091666057 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110435232 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.0906705 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090509804 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.107653528 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090362529 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088094863 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090175269 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107000367 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091791814 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089317783 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110178357 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094185765 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091960608 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117221138 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093915066 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091953522 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.112804242 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.087762515 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092877185 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087636881 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.104588418 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091683597 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091556219 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.113912526 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090605401 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091067795 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091328184 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108822785 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092776948 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092156146 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.104999415 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090766859 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092829928 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.109841622 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094438882 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087998312 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091136556 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.104929843 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093548619 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091317747 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.104068878 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088277109 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096300903 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09174469 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123188603 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097359026 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09047204 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.109263013 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093696466 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095910486 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110120128 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100646802 seconds)
  done (took 7.794083316 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114836707 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099279258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108976949 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092524296 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091484593 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090746387 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11372025 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091385334 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091639417 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115415132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092560164 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091456204 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108986097 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093311443 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090877365 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109986774 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097983255 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090744798 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090732572 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109759252 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091858704 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09500258 seconds)
  done (took 2.982034681 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238412584 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098193215 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138650296 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121869156 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109327785 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121271548 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096019812 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097516261 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112589504 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102366837 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100614711 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113351111 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109332792 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116690187 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101343085 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100956732 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114583502 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102218988 seconds)
  done (took 2.905230011 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105067127 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092905483 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154423648 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093024531 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094857577 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113065894 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100049312 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11249708 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112233651 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094137942 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100220292 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110968322 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094934477 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093042683 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110353147 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095500181 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093830134 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110137293 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100997786 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09919003 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.115700044 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100511012 seconds)
  done (took 3.108391315 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11049379 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093308621 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128634474 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097737013 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092266726 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110535705 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098816468 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094330685 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119023813 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095102051 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094743869 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092996569 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126518102 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093855903 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098735465 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110688955 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094394742 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092981743 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111447008 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093787787 seconds)
  done (took 2.862175451 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.19423176 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127211015 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109180999 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115856635 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128180478 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10908525 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134748786 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109628227 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108536082 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135655405 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112262366 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107912157 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135545768 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115401449 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127162246 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117627582 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115991146 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136823288 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10818128 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127028145 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121212956 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10992577 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134500065 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108988714 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125522782 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109923797 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108146644 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130704355 seconds)
  done (took 4.238865616 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091694307 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091883679 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09033964 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.10872364 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092431229 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092842421 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0914807 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109478465 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09292986 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091663683 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110425054 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09229337 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090918544 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091441174 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110706696 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092112867 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092093017 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108508888 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092873137 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092093145 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090776714 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10994837 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093064265 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092927308 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109934954 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09262792 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092071607 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091870078 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1099979 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093037649 seconds)
  done (took 3.716312234 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105834697 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103184058 seconds)
  done (took 1.025544753 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099976089 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106662237 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090941029 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110812256 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099210768 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091722956 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118564263 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100293178 seconds)
  done (took 1.635987614 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.166372892 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.189581137 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097756373 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122489277 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170188774 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.181606605 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13023447 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.116834725 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093123553 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084867099 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.182951423 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084068222 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111420358 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090970703 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09249699 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118481937 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095202515 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100966128 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.118396293 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095194086 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098180389 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11658979 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095921764 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102459867 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105303475 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096736344 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095340781 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.12182912 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09016849 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093803202 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.10917793 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093381814 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09586179 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.116213149 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095017814 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.189747955 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100880939 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089554339 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113662909 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099973251 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12499684 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.112292029 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095825186 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09156728 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114915396 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099347029 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098188612 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.112331579 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086926243 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089277375 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.112628656 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090481002 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092744769 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092656875 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112784966 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100532519 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.112250454 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091140793 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089765331 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088593782 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109787794 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089977694 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095319746 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.114695885 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094711268 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092953937 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111254501 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093884727 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094174538 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112953966 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093388904 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108137005 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112015006 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09880847 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098617562 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.112199577 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091650911 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09909425 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110865729 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095527556 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097648199 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.139953902 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097313867 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088778132 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.107550374 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101833335 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094890944 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.113833682 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08755412 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102160183 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.11417675 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095904522 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086923838 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091423329 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108661472 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09634344 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086433206 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112713417 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093154412 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098427983 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118206895 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092823165 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094775939 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115499484 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099561915 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091977547 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.175395182 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090060073 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107886217 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09661102 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098447899 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087534061 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.1129241 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09243298 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089870551 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.107937033 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098543802 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09294157 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.114323069 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098296884 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096081327 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113161109 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096438512 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093029557 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109423447 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099603794 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101417145 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.113469958 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096300825 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094065364 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.112013107 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094893851 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097216331 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09052204 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117454626 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091263423 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092983498 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113742615 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100499365 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093527765 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.107730565 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093427672 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094621654 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.11178358 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096878256 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094621628 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10811922 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087434734 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094721229 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108299379 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096132586 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101881054 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108053535 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098158286 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091201705 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120610939 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093199443 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098937869 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096734491 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.119127033 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099664154 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086838913 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112364989 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097505378 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094810593 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109984487 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096104888 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094528973 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.119687581 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089312701 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097528051 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103664985 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09308906 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100202832 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095678823 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.115560935 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091044204 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130754589 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126067055 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100789785 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093956279 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112318257 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098537313 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09250355 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.116455351 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101383713 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098725782 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110533181 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093862575 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099170977 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108209565 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097915951 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092833423 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113641993 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087903304 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09501392 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104062875 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099056694 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096092867 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09850455 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.117934732 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09779809 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092578796 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121406976 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.09237134 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097921784 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106285532 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099808771 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104369677 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.119453628 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101754444 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095972493 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111524521 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097280745 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102837936 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11594024 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.096440147 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096523133 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087930487 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.108349153 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100366383 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097465313 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109236949 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095584879 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097763674 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11566134 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093059824 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087239423 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118935487 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098772826 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100690014 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113065 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092525629 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092232509 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119530082 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088863921 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090616736 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115919085 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099666854 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094302348 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112013217 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09928423 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100322085 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097214762 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.116414403 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09312329 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101565805 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112600643 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095698211 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090927003 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.116280325 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.090656436 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097078039 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113230201 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093793686 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091585399 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117506161 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101762443 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100204439 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111081968 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099639444 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100837425 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099071709 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11159858 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.110666846 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090647837 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106286595 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09236524 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087616111 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.116004996 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091755974 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100671055 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111663268 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095499522 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098496419 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114238397 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.093870619 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100155204 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123117802 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089882493 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088622669 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111723041 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095755118 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092022169 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.110076684 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097925777 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09708505 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099343101 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117329427 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091873667 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094439401 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120689536 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091585764 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101254658 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.12038037 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10138081 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.09097271 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.117311453 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.094235782 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098991035 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107859004 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095183291 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093817384 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112938466 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093030134 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093484553 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109485467 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089476144 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091574549 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.118583917 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095172923 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100222188 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094714551 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.113209831 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093030934 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091052339 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.120814522 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094397767 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101259305 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.114531834 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089661649 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089596766 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.118309792 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09598596 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100966961 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.11096463 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100694625 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101051108 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098546493 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.114946944 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104065869 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102130973 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.120357074 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100717938 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087738274 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.11201993 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100323696 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094526248 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117638372 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099013262 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088478207 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115650714 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101687455 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095605011 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112578537 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090901033 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096706699 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10101145 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.117773792 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099844089 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096966554 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116670831 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090921386 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09842047 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119297878 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096939555 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102160939 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113085309 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100455786 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092180819 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.11971382 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09780474 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089520664 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087678623 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112250849 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101693851 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089090597 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.118781952 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100748098 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091723163 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112509925 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101128545 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091182693 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116499886 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.1015075 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092900454 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123352524 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097113236 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094186523 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.10027616 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.120836591 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09050297 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093836276 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113522201 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102968588 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093619043 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.120155148 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09579618 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100911569 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.117487743 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101120097 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099779771 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.119760278 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090646463 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102546947 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118160502 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099648476 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093072501 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093380295 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.110515211 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095111091 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100884345 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113019201 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105025468 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100594086 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112491785 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095152906 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100192928 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112803704 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102789451 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091237454 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116450935 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090206688 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097145386 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113279733 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103512175 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092339077 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108556453 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101643142 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100933725 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099551339 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.118455495 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102009677 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089667424 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.109117101 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098883522 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092924649 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123903719 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100245978 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093851997 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113822759 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099672221 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096339588 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12181454 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090691107 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092637462 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095795557 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118106602 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093683419 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089763235 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.119947501 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094920599 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096368724 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115585345 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091020974 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095286296 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.122491489 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095403258 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090709525 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112285625 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103751251 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095001897 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.111142868 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.092051275 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101183882 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.116298624 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104188468 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092586554 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114846943 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094813736 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098055054 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.122320889 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.096207018 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096446409 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093908765 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121510131 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102350045 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089239765 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112844074 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106040783 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100354687 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117429878 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099280297 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.09389847 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123047176 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103901319 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099173748 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.109407499 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091894353 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096480229 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108948661 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099298202 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10106842 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113861099 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095632884 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101683935 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099563786 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.118895801 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099828908 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090212857 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121999484 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094701226 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098483599 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.108483902 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091391483 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098334142 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10196362 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116510052 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097243461 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09809466 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.118685302 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092299171 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094609535 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119380732 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101234443 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102036565 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114525425 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095969221 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102026845 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124387804 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099016484 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095746164 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121974705 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105799344 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097640296 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11474181 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101312565 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102498794 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.118728336 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104160043 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094029622 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094844389 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.123573245 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102950866 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104527675 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116057014 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091482701 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100312145 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.11500714 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092080206 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099419395 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123150974 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103686587 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096294508 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.113272172 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106967095 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101506459 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115878911 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095374133 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093622312 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.119967922 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095222035 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099731532 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.1134079 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105088376 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10399408 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102100649 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.125207585 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091744515 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100972378 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118840809 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104661947 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097239478 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110421952 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092838433 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099074077 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.122317185 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10506476 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101628426 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100038797 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.122163019 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097847438 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096031441 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.116496744 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105083455 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101024282 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.11750571 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098809809 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095114029 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11706797 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09942725 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102589633 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.122233489 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.099428982 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106418645 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.122528688 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096540293 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094627535 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115686146 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100708322 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098122797 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101038043 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.115900219 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092083053 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102849548 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.12325419 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097662147 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104149285 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124092083 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096509968 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100323934 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123914094 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103848631 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098725865 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11717573 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101573324 seconds)
  done (took 62.526958744 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148531824 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104673901 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119044628 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099856871 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117149594 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12081547 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099797176 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09956615 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120665966 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109493517 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099202623 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118609861 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115378011 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138063099 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117427553 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109694119 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119259289 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101825544 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099084185 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11990377 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115318301 seconds)
  done (took 3.26492946 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117449208 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112166001 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130154955 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11463978 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105483375 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131347317 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109533723 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130052121 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113454751 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10599469 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133933828 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111588348 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126631993 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109488812 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107921906 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127599392 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113205216 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10652418 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131961986 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109951619 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126300756 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109946869 seconds)
  done (took 3.457865408 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129777914 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103014729 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097524614 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120154435 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102311921 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098985889 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122631149 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100527511 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108330316 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113847865 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092610107 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095119876 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096775729 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119908234 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094242486 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098857097 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129320772 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103343485 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104014953 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118619226 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092904402 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100599544 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099220616 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111402553 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104213582 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103156022 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120844593 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103345511 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089685259 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.122212396 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.100849332 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094348702 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090330228 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111226192 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091639552 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101671542 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123606148 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101851799 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10011442 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090434921 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.121361248 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103886734 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090883595 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.121391511 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100851333 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093587396 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.121897177 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101218317 seconds)
  done (took 5.933280342 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129376706 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164527637 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.341289753 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136465946 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136110195 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108258512 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101954852 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138618125 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100225289 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12466973 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114885916 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112863238 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127400958 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106858724 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.12535271 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105550012 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105336533 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101438912 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128104972 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102796554 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127062351 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106729694 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112879435 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132792112 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107249837 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10223826 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122418619 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107341186 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111242812 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128292187 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10731666 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106529528 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115373307 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10403576 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12144138 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105611749 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114769062 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123625287 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105952562 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100646492 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.1240096 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108695249 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104607133 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136417764 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103720258 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104484931 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125188955 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101592575 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111603496 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.126406558 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109745264 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.132845098 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107503423 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105335496 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12582019 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114435912 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103542109 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.122607304 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106673139 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111665094 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.12235489 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10567176 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11283374 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.125588009 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108993132 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.132702432 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106363422 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105339726 seconds)
  done (took 9.11418229 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133251665 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106260367 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135113551 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115227777 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106470912 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129324713 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107560565 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.127266313 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10855783 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113518265 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126942197 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.225413991 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126935143 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113163965 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128013677 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108860345 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106643179 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129877358 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108975943 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106855198 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127100342 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11550307 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106857645 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137071977 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118671323 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124125188 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109187708 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108543258 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135626769 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108127551 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11874876 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128703281 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10816436 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134872562 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122046414 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107374701 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123123003 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108228085 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10751574 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128763879 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104424642 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114536783 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128428302 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104061678 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107624247 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129062205 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115211361 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138676482 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114011667 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111604385 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129013371 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116315447 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127337061 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109174011 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115471594 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143545244 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116771747 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136888685 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108218279 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115235768 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137018009 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123041145 seconds)
  done (took 8.375230023 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102138046 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.1007187 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099934936 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121010741 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103085798 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101134935 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100573068 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122423385 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101285471 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101186179 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121891239 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101658743 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100962784 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11975171 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101141443 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100289874 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099741369 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121246549 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101584192 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099968893 seconds)
  done (took 3.011714832 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111526592 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11682442 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123590845 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109983456 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103226696 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128598046 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103698875 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102511856 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102491066 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124977777 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11176532 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130553454 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103732763 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108663205 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131479722 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109888935 seconds)
  done (took 2.71361631 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.12181717 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118061104 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.210664015 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105337839 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126545872 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110865823 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103113948 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128240918 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102582757 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109372052 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129214976 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106241356 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103242518 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.123948472 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105286004 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105445453 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101899127 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128567396 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104089921 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.216325403 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106809751 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.127754739 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105231987 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10720727 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103753314 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.131821205 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10921839 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102379943 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.12859342 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104549665 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104627747 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131816997 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102810536 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108288975 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.127853992 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106081892 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103780507 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125556744 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107319159 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103510243 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.126848583 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106964123 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104240143 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.127073397 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.104536353 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105340978 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101692726 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.132392802 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104913665 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106179353 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.124929077 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107863725 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10726299 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.13452128 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111618618 seconds)
  done (took 7.309668156 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115521324 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105044336 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136191613 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103092846 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104888735 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104400368 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126683471 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106459949 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104958648 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123151647 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10570717 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104266023 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126204667 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105384878 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105295446 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126321728 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102235442 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103728901 seconds)
  done (took 2.906425011 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109652964 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103281574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107250799 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125478259 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104542242 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102923446 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124049469 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10325364 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102598586 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124564531 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104986369 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104188172 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102476294 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125135119 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104704054 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103051601 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125572448 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103147278 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103642941 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122653939 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104905891 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102762659 seconds)
  done (took 3.312913411 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115278571 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.212393719 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109904403 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.222305671 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100433391 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.123088975 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111623506 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100775417 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138782946 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.10058465 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099310581 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.120725432 seconds)
  done (took 2.455557726 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132509946 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141500422 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126586538 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105413814 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113570029 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130398584 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109692461 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10791522 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139593899 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119244514 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130479583 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117415517 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115952906 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138317063 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112444246 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135928524 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109805702 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108126117 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126134421 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125162575 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108660117 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138278003 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10941143 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129656688 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110889264 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116131133 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138560402 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120990062 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129744523 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118243448 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112316786 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131780219 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116823193 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140225905 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106595317 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117365714 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129394174 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125048104 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113353333 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138743033 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104203742 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135124395 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118765194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113641918 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138319297 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10978181 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11339272 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130666052 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107968981 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151207334 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113831491 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1169376 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136660999 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117498869 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138726596 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129133788 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140842149 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117535306 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113101048 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142076343 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116816033 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13554694 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117844508 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139604442 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115128797 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116550665 seconds)
  done (took 9.030198093 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144326558 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105183745 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131508393 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121518891 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139537772 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111443815 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109591905 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130990457 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109777531 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105491357 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173967789 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109854463 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138680317 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117163771 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110241322 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131469688 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109985053 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116759119 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128756433 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130825748 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130994827 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119630437 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117967787 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140094859 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11877053 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134769122 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109862658 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109210796 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132178395 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11089117 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113983953 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131133669 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117297126 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126747874 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119291135 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109994714 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130089391 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114387301 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109582931 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13706696 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1170512 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146386784 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109877675 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109493999 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14371123 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109871904 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108318712 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131001695 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109609435 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106094354 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142137187 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12090019 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145269577 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117424082 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131294545 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11056809 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108842718 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131178397 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110792003 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113604785 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140058874 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110790946 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151681764 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11075834 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109010696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140116466 seconds)
  done (took 9.007163346 seconds)
done (took 170.407865214 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.176064733 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216383153 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.197996251 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.160095365 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095028993 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.154198972 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129720325 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199994894 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096713225 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095663704 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095555515 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121509833 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.165095826 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095851912 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.120121927 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098840449 seconds)
  done (took 3.121650047 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.184975993 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.334533926 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11000647 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12321434 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102657289 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100405245 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122604195 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102954671 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100366044 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131005636 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101633182 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097697135 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128889811 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098004343 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.101189004 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.12296133 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108624129 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100079627 seconds)
  done (took 3.186568197 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121897403 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145450949 seconds)
  done (took 1.184445279 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13245731 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.214869771 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.285221648 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172148049 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121948554 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142451441 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151245424 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135996791 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191549773 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135242287 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113893729 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098371515 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148655412 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107193843 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139609242 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099951654 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128802881 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138914077 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115221249 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101834629 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147903882 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106074783 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106435024 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137943386 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181437115 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136160367 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104632495 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103596866 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125332372 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115729735 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106964445 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141349576 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11216252 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180400166 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104371808 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177591638 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130411226 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102523265 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114030564 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122675242 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10488236 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105110715 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137703021 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099602693 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104928273 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130746808 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104960247 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104144826 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132049796 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108943557 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.131288227 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107892324 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176709528 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108486133 seconds)
  done (took 8.006377147 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.874878777 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142618754 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09985255 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.021605899 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146667152 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114458251 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.868498798 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147897502 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253366113 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.894199675 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117766693 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132521387 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240646053 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257444336 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.289257272 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361300047 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.734505819 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113150587 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130450685 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163865294 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108449532 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146369125 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121391888 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.516403236 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101857216 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100186661 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132816514 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109102139 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17800662 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101465636 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128582977 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172305713 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.292114918 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209838799 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123324478 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101814513 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100074665 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187158653 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271295789 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221139412 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.198454265 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098933174 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100611902 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130852017 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121556843 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098663965 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178430063 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191615825 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19014641 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10713948 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10951643 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134990053 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108219872 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178915005 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098523913 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360466466 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381815633 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101431333 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110301913 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137105569 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269704535 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102265563 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235710141 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152010524 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21675429 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102317584 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.828927838 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186087428 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101228897 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106163035 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.132142964 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107491748 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131121924 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168092025 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.498980369 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111101697 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127748529 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102237271 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23544934 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102499094 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09959606 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182388472 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101811501 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133056135 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112919401 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133812711 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166522513 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.27102865 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133802289 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111928914 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106832143 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13723955 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.104098775 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234466965 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231336451 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175431802 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207765543 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133108248 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178383017 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16387825 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128404947 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167117978 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132005616 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11381932 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130327827 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22607456 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134894383 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124169089 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108162703 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110189624 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159457544 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105746597 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131956446 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165620458 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553072716 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186948388 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09897135 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12895047 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11310971 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181693081 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108274866 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264401903 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11066155 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186662281 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1307879 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.100980859 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110017413 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180932409 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109382894 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133972968 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108735339 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110889421 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.282142776 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.2235651 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.135190434 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254681707 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179733063 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129991615 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169533704 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134929788 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1874988 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113668301 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109093382 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125942975 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823720438 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116548615 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11064729 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130848949 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18331993 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125631951 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105151026 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102136514 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121559428 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816979796 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108746386 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098863751 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.127038093 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108756356 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11000307 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13371632 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108422505 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178995105 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245775633 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110442378 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.133370555 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102785977 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181056221 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104230736 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102402354 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125429348 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104111313 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111356722 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130287067 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105090878 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192756036 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175920344 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232674695 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.65483674 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102621878 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102363834 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.263509843 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104075524 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327708504 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110796048 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.256465174 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160799182 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122624843 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363060749 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183222599 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18474367 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105273385 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190113534 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099332995 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134474067 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.176925831 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1034067 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108565814 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177291734 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114207059 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136181684 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.28068245 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1023374 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250608035 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099994602 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190450825 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103406894 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132116944 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327362852 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101977567 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139568536 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155926642 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131559422 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103990772 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.636447813 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102556593 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137500999 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107800934 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233051555 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184654874 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110342702 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135661426 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112648156 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181241854 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229610992 seconds)
  done (took 47.980384489 seconds)
done (took 64.388238371 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.269964698 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178671832 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.282591502 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181911682 seconds)
  done (took 1.922662222 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.272119965 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16315867 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.256025684 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099060857 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.268851617 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099175541 seconds)
  done (took 2.101844517 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.179993825 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171874277 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150359662 seconds)
  done (took 1.448492031 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203447274 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.219329873 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331938404 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.234671937 seconds)
  done (took 2.01879108 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.297934117 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12028674 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127330351 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.237590607 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.256083828 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.212295559 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127217735 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.180091337 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131398316 seconds)
  done (took 2.676926345 seconds)
done (took 11.109180679 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.330085557 seconds)
    (2/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.439124517 seconds)
    (3/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.206794952 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.305358048 seconds)
    (5/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.174009944 seconds)
    (6/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.205637343 seconds)
    (7/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.224445346 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.22182134 seconds)
    (9/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.313159292 seconds)
    (10/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.309544482 seconds)
    (11/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.220900994 seconds)
    (12/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.353458699 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.229382579 seconds)
    (14/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.224687243 seconds)
    (15/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.17267244 seconds)
    (16/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.147631113 seconds)
    (17/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111618924 seconds)
    (18/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.311650277 seconds)
    (19/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.153782991 seconds)
    (20/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080855367 seconds)
    (21/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.219106476 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.339913888 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.401207226 seconds)
    (24/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.178051326 seconds)
    (25/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.156373803 seconds)
    (26/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.310144958 seconds)
    (27/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.239255751 seconds)
    (28/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085211121 seconds)
    (29/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.170746805 seconds)
    (30/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.20178607 seconds)
    (31/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.15754974 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.126326527 seconds)
    (33/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.211533451 seconds)
    (34/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.197609876 seconds)
    (35/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.132262061 seconds)
    (36/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076974858 seconds)
    (37/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079031575 seconds)
    (38/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.162984075 seconds)
    (39/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078423758 seconds)
    (40/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.17865843 seconds)
    (41/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157252389 seconds)
    (42/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.130921716 seconds)
    (43/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085941329 seconds)
    (44/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.131486823 seconds)
    (45/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085789577 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.135119114 seconds)
    (47/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132375767 seconds)
    (48/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.37211266 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.144894096 seconds)
    (50/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111351581 seconds)
    (51/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085255651 seconds)
    (52/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.106410071 seconds)
    (53/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113557329 seconds)
    (54/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.148576216 seconds)
    (55/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.080990425 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.152327431 seconds)
    (57/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.19415314 seconds)
    (58/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.171625555 seconds)
    (59/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11310278 seconds)
    (60/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.105118559 seconds)
    (61/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.189325033 seconds)
    (62/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110911619 seconds)
    (63/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104833604 seconds)
    (64/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.175804381 seconds)
    (65/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180584391 seconds)
    (66/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.143921626 seconds)
    (67/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.11337933 seconds)
    (68/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.085453007 seconds)
    (69/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086590798 seconds)
    (70/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.176450539 seconds)
    (71/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.16256722 seconds)
    (72/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081615142 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132375727 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104289876 seconds)
    (75/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.109213221 seconds)
    (76/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.137881714 seconds)
    (77/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.181401224 seconds)
    (78/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.102982195 seconds)
    (79/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.086940462 seconds)
    (80/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118884323 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.145941719 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.125162077 seconds)
    (83/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.154215589 seconds)
    (84/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08646587 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.130186493 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108891361 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.131397394 seconds)
    (88/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.177524404 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.120568325 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108913806 seconds)
    (91/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.135855601 seconds)
    (92/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.136816065 seconds)
    (93/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086310908 seconds)
    (94/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.137515134 seconds)
    (95/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108841076 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.113666866 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.125753241 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.114053786 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104462236 seconds)
    (100/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.086072167 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128672679 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.115693662 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127762203 seconds)
    (104/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.136013963 seconds)
    (105/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.105257745 seconds)
    (106/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.148122412 seconds)
    (107/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.103018398 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105403393 seconds)
    (109/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195105698 seconds)
    (110/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155499568 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102296174 seconds)
    (112/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.142673151 seconds)
    (113/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.110962178 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108887468 seconds)
    (115/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103255524 seconds)
    (116/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.085625554 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128559785 seconds)
    (118/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07915437 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.105816901 seconds)
    (120/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.234058805 seconds)
    (121/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081583377 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102027057 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.13517829 seconds)
    (124/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.133631686 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101662614 seconds)
    (126/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078887213 seconds)
    (127/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.103815121 seconds)
    (128/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.094158042 seconds)
    (129/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113575279 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.128294444 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.086435388 seconds)
    (132/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086941496 seconds)
    (133/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.135974612 seconds)
    (134/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.164747248 seconds)
    (135/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082706744 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125887778 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124377175 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.128582388 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.106238027 seconds)
    (140/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082331077 seconds)
    (141/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081985604 seconds)
    (142/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.110687684 seconds)
    (143/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082592819 seconds)
    (144/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.18901242 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.104816736 seconds)
    (146/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085245182 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113531871 seconds)
    (148/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078555329 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.139755076 seconds)
    (150/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082083405 seconds)
    (151/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110557772 seconds)
    (152/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080487395 seconds)
    (153/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.108882445 seconds)
    (154/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.1451759 seconds)
    (155/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.116562327 seconds)
    (156/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086789713 seconds)
    (157/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.106004913 seconds)
    (158/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083563176 seconds)
    (159/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111998819 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080584852 seconds)
    (161/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086111995 seconds)
    (162/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.102643529 seconds)
    (163/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086705529 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.102510886 seconds)
    (165/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112653795 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.13608295 seconds)
    (167/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083522147 seconds)
    (168/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082591082 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125695396 seconds)
    (170/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.132668287 seconds)
    (171/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080813937 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105601045 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086191726 seconds)
    (174/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.135308301 seconds)
    (175/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11319841 seconds)
    (176/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.080776038 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.128928879 seconds)
    (178/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080203849 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103229913 seconds)
    (180/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080540353 seconds)
    (181/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.086052657 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.129995597 seconds)
    (183/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.085767079 seconds)
    (184/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.080552353 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123567126 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.130549208 seconds)
    (187/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115611004 seconds)
    (188/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085792074 seconds)
    (189/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.105900123 seconds)
    (190/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.112945507 seconds)
    (191/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.080084942 seconds)
    (192/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.086800714 seconds)
  done (took 27.481020679 seconds)
done (took 28.429313584 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.227705869 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1304932 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114272421 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112872545 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.235238687 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120133812 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.154356078 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115163382 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12282921 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138955124 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103157623 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125891442 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138475091 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206708121 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141287201 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106220662 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103210811 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148971023 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.130379475 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129653329 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.236089611 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105817248 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.149675048 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106315649 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235611182 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106666514 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112341171 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140646166 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126224317 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113707988 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138780623 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105124178 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128993567 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.153444218 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104697542 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114160916 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128014834 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087529296 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11349063 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113972512 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.152047134 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11548902 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11308406 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.131687541 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114098888 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111887153 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129961611 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.116963291 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102868209 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.138784289 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107144442 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128961325 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.137900558 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.103876749 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102746596 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129464587 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124349703 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104687288 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.150811838 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105707777 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105181503 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127506834 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116826093 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104533344 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112779295 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.129141091 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114635016 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115240775 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.136916108 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107531724 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104617009 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.137130144 seconds)
done (took 10.247981897 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109398382 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14830113 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.235162033 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237107799 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133179794 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.147322144 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117768895 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128766499 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144760995 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123792661 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141928361 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.16161049 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.241876497 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121864077 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120462674 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142498841 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116811977 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113570685 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.238408057 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.15437455 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.131314845 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.12066192 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157690376 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122027366 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108410835 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.167873181 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112968847 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116511791 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.133081901 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11830625 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153538732 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109583831 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112311155 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.151904679 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126985303 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119270117 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.145090244 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117070825 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109360193 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.13313194 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117624139 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126448879 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.134403035 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121997065 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116521053 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.14867747 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116803127 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121186356 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.13474741 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116984735 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109494905 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159470117 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121247742 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125596515 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.145286797 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121005541 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121465603 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.146262724 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112772891 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121204741 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.133664013 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110216771 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110931499 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155750388 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112369873 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.145247613 seconds)
  done (took 9.935967438 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128142176 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138781934 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143995994 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120826235 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114696201 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127863955 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.103010518 seconds)
  done (took 1.869904202 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104926161 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.244122797 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217735959 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.244390632 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.242911533 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.257541508 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127700108 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104187044 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166887597 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115207618 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247117972 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.274075798 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116274703 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.146154676 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.224260216 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130098353 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.22257311 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.132227245 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119863286 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.248963797 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122355684 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.162969332 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117836577 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10518937 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.24215293 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105296437 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.293812463 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.150185435 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114912105 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117795562 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146503703 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.185795564 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.244191847 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118444712 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140139441 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.245449716 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.217086488 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.14596216 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.259342725 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.110884718 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.242445921 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119647737 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119756408 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.147568096 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119999089 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.233831552 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.124168744 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119253197 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.14509044 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.225160288 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.142975834 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.244082028 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116408619 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119906687 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.143897476 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121267026 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126980892 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.148447852 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.225779219 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.151175421 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245063298 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.222156719 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.246754712 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.24845979 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12975057 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.24765534 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.233705309 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11860565 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113551855 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.146817502 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.249436862 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119926715 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11626466 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.238683035 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12223232 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.252705154 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.24990124 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11687137 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.145775462 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108925898 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118042228 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.130724395 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.213472645 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145104347 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117768784 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123749449 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145878879 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120453485 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110105338 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.156592066 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119026106 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116943762 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.150940002 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120440111 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146315513 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.226452652 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.144208032 seconds)
  done (took 17.254592846 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.110055242 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106876508 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110684594 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132597774 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107667581 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106770588 seconds)
  done (took 1.69389295 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143447048 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120760484 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153364959 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121247548 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.193966738 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.227773925 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.261684963 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114627277 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.166028912 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132205194 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255839476 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257856514 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.25569985 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123314518 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.258667312 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122259899 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.263660138 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117538681 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.155695789 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117984152 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118676832 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.150403274 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118680027 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246102724 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120928147 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122281423 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140143884 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129763202 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128250601 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.141888397 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123577536 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146019555 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.113781727 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.134121521 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.260584127 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112720734 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143963071 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12229058 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122501748 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.14782392 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.259044385 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118628867 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126233394 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.150465122 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.115056846 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112127032 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.149958162 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.1131867 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.262923708 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122983675 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149853796 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122524248 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121439066 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.149839081 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.114268174 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113873587 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.150688281 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.235192425 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.151659193 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113778424 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.14767217 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122776298 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11434653 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.152027289 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121160227 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.1229239 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.139035751 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122215026 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117661121 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.146201541 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124034657 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121732812 seconds)
  done (took 11.939341472 seconds)
done (took 43.679726181 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.761996153 seconds)
  done (took 2.781485229 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.953870447 seconds)
  done (took 1.979226215 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.339178651 seconds)
  done (took 19.392867898 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.442546926 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472198245 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.151764097 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149585928 seconds)
  done (took 3.240109093 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.834447321 seconds)
  done (took 1.879702223 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.328526479 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.244306025 seconds)
  done (took 1.601586368 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.724219135 seconds)
  done (took 1.766401914 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.522237876 seconds)
  done (took 2.54934178 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.291525792 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.245651471 seconds)
  done (took 1.580064974 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.648877435 seconds)
  done (took 1.694287471 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.506120065 seconds)
  done (took 20.553941438 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262880647 seconds)
  done (took 1.312438788 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286962138 seconds)
  done (took 1.334975115 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.59754552 seconds)
  done (took 4.648194554 seconds)
done (took 67.349396248 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116920462 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.120348542 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11937829 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142724909 seconds)
  done (took 1.534828625 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.126426671 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120002667 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149592924 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120472536 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125802947 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.145634636 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121884882 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123267176 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119841786 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148477099 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120349412 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119600351 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149075207 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120685887 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118234429 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149782598 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12348005 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119807387 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.147331333 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121168397 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120727729 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147964606 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123314535 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122114341 seconds)
  done (took 4.156290085 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117397074 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.112124914 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112340666 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135692687 seconds)
  done (took 1.52825078 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129006815 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131667088 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155863315 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126927352 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132093339 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156653504 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11930008 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11658958 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144539252 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128983541 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13477395 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159157544 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13303168 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.122437719 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.158671986 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114613823 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.12004924 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157256758 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126602469 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.154866971 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121479437 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126401666 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.15009269 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130094492 seconds)
  done (took 4.301604941 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.196765324 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132340286 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.178475784 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164488048 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.18149843 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118821403 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148717987 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.153536902 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126769708 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.148104344 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.123530834 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165585339 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.15285783 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12215724 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119897597 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.151638342 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132581369 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.152135746 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.167873175 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125937464 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153550677 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132147954 seconds)
  done (took 4.304714403 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.124454884 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111752476 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.132553784 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.112365203 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.124325778 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.139064717 seconds)
  done (took 1.805447779 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.11041706 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104847936 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.105574494 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131893012 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109278694 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104318189 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.129414431 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106753948 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10540588 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104910812 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131196878 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105680198 seconds)
  done (took 2.400867701 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.332331538 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109922029 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13595646 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113705326 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11582075 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.107909379 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149261862 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109951112 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268759595 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.105504053 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.134892163 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194260254 seconds)
  done (took 2.938182727 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207582191 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148877082 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258413871 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.67927474 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165544992 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191229808 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286728776 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191366912 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.209832674 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140449312 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219686721 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16370386 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184566743 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187878949 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169135761 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159127822 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196175273 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238292485 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144003163 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242158185 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158386635 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203039843 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21739545 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151329474 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141437695 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19016726 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119087557 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15610109 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169045439 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194714512 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20645667 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153326053 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168810845 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194662333 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261406471 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207803616 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272134688 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13445216 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198077465 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.217075481 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235369223 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169353884 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22149654 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1545815 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157730962 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189606278 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183041342 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185089299 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.162182871 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145899405 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215999321 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179397356 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201443179 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164810586 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298206056 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162290978 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143904918 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255698812 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217732811 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228867787 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180754654 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124263363 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205328822 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21958437 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244222082 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143910955 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.195701068 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127989752 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194974653 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206016767 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211543299 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190195777 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.242050412 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133564254 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199826881 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17030755 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185404726 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20738544 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20078487 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121352422 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182463891 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137425304 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155218116 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19014528 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123290492 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244865265 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159798975 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342851765 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181972122 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1847905 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162826966 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189999469 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163598241 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17844028 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102612738 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143801033 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.19139507 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188022178 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131237138 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15627074 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170718979 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.127048271 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181131456 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123729416 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197952315 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135352662 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191392673 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173980227 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159624245 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181372027 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177284064 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163549499 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199365666 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193034719 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159560838 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135006227 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24915595 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196956995 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139711973 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203271606 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199096365 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178717439 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13614659 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196641314 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194667897 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172204727 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227902391 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141252123 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136412919 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170588183 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172704906 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19211962 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.188940631 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129522402 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.165583832 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223531009 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.157356583 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141773533 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21187358 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135449948 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125552355 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167054968 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138109582 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171673333 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151005572 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.141180965 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184127224 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167786118 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194977014 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188863692 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136770806 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202828702 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132218402 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196495622 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150739558 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119809263 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.205527233 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227435219 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130578432 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210641731 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163224423 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212867842 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203985641 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130604874 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212058226 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129909476 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122254997 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192597346 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170492334 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194064389 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.219237197 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208317313 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16680707 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192622179 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151632431 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200529671 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.187105119 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186812432 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14485169 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201477744 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201814183 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122120789 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124300421 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.157695376 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139854064 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13142932 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167451099 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209461271 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16760036 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208587447 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167771957 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166368909 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221431626 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127128891 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161823308 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20367128 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140537647 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.218153899 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220445337 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180260355 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1718765 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165431821 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.151094653 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127037182 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13468216 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192955034 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138091057 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164565124 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143784753 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221688208 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202283408 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151175061 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219565096 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193929415 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201690338 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.149614899 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16286315 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200236809 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169591843 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18819689 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158810723 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.164324591 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22166023 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142579691 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224262145 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198216118 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180297695 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225932079 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.194555588 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132771665 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149300695 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190594703 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138464106 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195285497 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147925558 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161168893 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153589329 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.168977551 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142039077 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219884098 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144848126 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209242486 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.185993118 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176329052 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154598062 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144727135 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202929054 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148865269 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105756411 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201126846 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225162378 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152365171 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187756951 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175389316 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15988294 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.320209949 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220214319 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179076564 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167890007 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139539431 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201920854 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161903548 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196137246 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214454752 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142748642 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238831357 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174545473 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.172649005 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133040082 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178703822 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153440433 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13972674 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180530287 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.192461478 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144767597 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221796062 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138717044 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199491492 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176298197 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.175062707 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150408967 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169448228 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227860935 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199255827 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202531657 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166746096 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19494909 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184152147 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152647495 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128590233 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135063236 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216128143 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130763915 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208734943 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193973926 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185950091 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203831495 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191548553 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142576953 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.128040905 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197400834 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150291818 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216409792 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164107393 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.140135846 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220364899 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129545023 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131873924 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191958022 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314517274 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149303331 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205032835 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107466741 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307488316 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131413952 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133768045 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192357236 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171682652 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.162166796 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18571908 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204179685 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14143021 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194168526 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138223839 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206662559 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212324842 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168428934 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207687589 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147476697 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19307686 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162423828 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206883866 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146499287 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.179190199 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159703423 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225116876 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207543576 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133907873 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19826673 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170521351 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200111146 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177008761 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16957169 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185973606 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157973874 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167762185 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168620851 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126333755 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161499126 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196328217 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15813847 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179467012 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201885085 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133395416 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157134128 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149588176 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19320889 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142692473 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130377284 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217972905 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.13016978 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212938749 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243735505 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131105802 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196572961 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148999244 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132788994 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169480542 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14414061 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162164423 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.177078714 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2119885 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135060855 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207720054 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167627724 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195887581 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162063144 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174387672 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.265461055 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.159730747 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193017381 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182234366 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197628211 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181379271 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175652902 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199047328 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151331751 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195920711 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148561412 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.252510832 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196057477 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168651789 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161201626 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145614859 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140698519 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.165716272 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154145007 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200537706 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144249635 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.165894406 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.169595598 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17491875 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.149270686 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143070024 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231780615 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182079422 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191171019 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217858105 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139142351 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207991643 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209005164 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13084536 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.195310135 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174865194 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174501945 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15462042 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134867473 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.168871871 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243043151 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127844736 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164095913 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205110052 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170012303 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203012322 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136748087 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209846116 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142198124 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206762853 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127694907 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.183294389 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170725296 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164979703 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128610978 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202100217 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163982737 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.196449853 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143367929 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.180175627 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221810104 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124787029 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164986774 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316103587 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16405687 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22682279 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137649122 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166690846 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1490296 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15924133 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.195743927 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201318457 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132992799 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130270547 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.175657338 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158217309 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.168850801 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1705967 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213408901 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163330642 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216379255 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13481241 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285760261 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142778582 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203341826 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117030703 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.629920472 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171385122 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134963946 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173262026 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181817469 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244579931 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.194098645 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.149488495 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166584287 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128841025 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132575122 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195941389 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152507903 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199229152 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149247254 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.131899744 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143199857 seconds)
  done (took 87.360185389 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162824103 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153653095 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170313042 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22334536 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197996121 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294030398 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231450526 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249047489 seconds)
  done (took 2.830554654 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120953328 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160457214 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143698967 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145721003 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.112737397 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.48707078 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162252189 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122182393 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16395678 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.15418845 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138634567 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.575653236 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118938338 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14700923 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123694433 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13748391 seconds)
  done (took 4.151506171 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.776409165 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545743954 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.122503362 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.282551879 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.26439853 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.208812562 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.787800586 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.205133374 seconds)
  done (took 12.340799495 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.1666226 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.159723101 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.452794365 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.307937521 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185468576 seconds)
  done (took 2.429497682 seconds)
done (took 133.122660253 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125694896 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125351762 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.126289688 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155650232 seconds)
  done (took 1.671875428 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195632729 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092601579 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094324827 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120332793 seconds)
  done (took 1.656874137 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.467386856 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091441563 seconds)
  done (took 1.743055904 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.154934101 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.14297467 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168654203 seconds)
  done (took 1.635098978 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138228836 seconds)
  done (took 1.293849778 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.129329113 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129513341 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.271770005 seconds)
  done (took 1.692552971 seconds)
done (took 10.852484735 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122201208 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.926911201 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434799872 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136127774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.714883842 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429637802 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.426766467 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179518515 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176129509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140550916 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134169187 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693039094 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.441464932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.880287142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.395652637 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.911192474 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.71107631 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11462793 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148669948 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114265133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.404795472 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140358447 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11417719 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113363916 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.730611093 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423000874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112093814 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.918175897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111825595 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115954049 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.430896921 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113634115 seconds)
  done (took 21.10848513 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119425351 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170526855 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149278498 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114775511 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115289834 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142369055 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125125615 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126063855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206556338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111284514 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164255461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112355753 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117836789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142478276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138898094 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111366968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144254476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116088014 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119462318 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144007016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135927664 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111518064 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.143373988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115240516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113335167 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162350347 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113151151 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124295657 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141544564 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117005208 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116766987 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143145783 seconds)
  done (took 5.39442302 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161976775 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180067471 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151124821 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151104095 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191383183 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116179703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.230207641 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152331931 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207471941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113148811 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134788632 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139917272 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154150525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114231149 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167010977 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113573528 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115635178 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144300316 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121429281 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114634853 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164349497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112927416 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114387777 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144541919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113906011 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.163915857 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114096922 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12632215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141146885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118821493 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118196743 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141155532 seconds)
  done (took 5.713434659 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127160278 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127803017 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135925076 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165753471 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122739102 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126771786 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.1578737 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123365605 seconds)
  done (took 2.252043324 seconds)
done (took 35.631598254 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.144220692 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.1320846 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134594226 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157387344 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.259162094 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120830253 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130541646 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.120166762 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.159832308 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135359628 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113402419 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152143294 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.1337338 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124541236 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.257801065 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12757662 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.264555863 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.260855458 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121059991 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127107861 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.153664373 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234299719 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157454922 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.122581311 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.251042997 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11669325 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.25271487 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124118618 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.124230066 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.145635395 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.230853402 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.159199729 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121873419 seconds)
  done (took 6.524290763 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.245217999 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.154816114 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.124906326 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.12202865 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.12234153 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150986297 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248394714 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.155154323 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121147922 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120640256 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.152319634 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.228703157 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160299227 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118857392 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123360916 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111935794 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.281716888 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.154744724 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.116391289 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095271674 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116619324 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.151838257 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.261473473 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149704067 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.121834155 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121673539 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.154458387 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.128371438 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123492328 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123628375 seconds)
  done (took 5.745237728 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131659924 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136081321 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.168729066 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.191665142 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15150092 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164707155 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141066081 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13500422 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174038898 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116873488 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130635133 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181559697 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131720082 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124729174 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146185222 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13468435 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137554596 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146407048 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124085695 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131940269 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167217326 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131927754 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137963976 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153142943 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113874985 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123268287 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.156676047 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125966613 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124375903 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.16035983 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.118251671 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119750007 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.148278873 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.150167589 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11715439 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159599565 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142397605 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129065364 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159833824 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149463833 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118361477 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.147666128 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141531682 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170172869 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.148613983 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128071805 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126735335 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.161008739 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.114582921 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134039434 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.189864339 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.115467786 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.164992005 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116405028 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.115296008 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123990132 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14648077 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120435807 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130298261 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.147694547 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.142160865 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122998986 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.156910963 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119643632 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127408744 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.144422488 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.115935326 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119814267 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171028358 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124068673 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.153702523 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115354339 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.15715841 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.12876862 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126598906 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.158778353 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.115990411 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126237662 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.157163736 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122826831 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129107859 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147911323 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119437196 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13306689 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.166645273 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130815427 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127170048 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.158364604 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121241161 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.117325786 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163143683 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.119269705 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120787283 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.159406407 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117724122 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120640664 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129334253 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.158112093 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114544523 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14198661 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.149863673 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115839805 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.141258645 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.14976701 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122175346 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.126010507 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.188055097 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116902608 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126482087 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.158265156 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117428148 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123016873 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.149098478 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115754385 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133855814 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.161209115 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123841752 seconds)
  done (took 17.361290465 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.359547895 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.346965401 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191008958 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.43720935 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130029528 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.277012593 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.344459831 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.348121245 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115594987 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182648062 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178417097 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.314383195 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.150396064 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.146430286 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.35077526 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.406578058 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17896358 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151545607 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184108979 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132614619 seconds)
  done (took 6.122975801 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.141005737 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152793488 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168760143 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144655779 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.127605633 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164135301 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117001193 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138307044 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.158539919 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126885865 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118639509 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162073032 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.131577592 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13303411 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.161508082 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148795118 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12321071 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.152699277 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.140854542 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121290099 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133825515 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142168623 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125201843 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.170221661 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13624284 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126785321 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.147635577 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122256507 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122612945 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.155799205 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120869567 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134136182 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153971975 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107482278 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127933112 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.160825013 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124056933 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119437792 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120612454 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150503488 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132343272 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.130089342 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.155403204 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101522275 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134802067 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112165409 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.161695541 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129197712 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107279623 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.166688705 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129052888 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130113443 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.15504643 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.139924397 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122538001 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162252286 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128869899 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131005626 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.150637597 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116833092 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114088125 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119215253 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.155233381 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131246058 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127711385 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.167780124 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.133824809 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116567066 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.150974103 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120171312 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120134291 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.161913731 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136982745 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124675421 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.154972179 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129252294 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125716608 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.124748797 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127322779 seconds)
  done (took 11.985877383 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144926744 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127116555 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.163956963 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.154900999 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129690157 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.152251777 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128618414 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136676712 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.13079541 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16638401 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132495103 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129500547 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168876341 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127938991 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126402273 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163800178 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130873617 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.184353364 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137070292 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142974618 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.16335409 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123203952 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129560026 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.157881929 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146790638 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127220796 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174803029 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132586934 seconds)
  done (took 5.241898665 seconds)
done (took 54.154799093 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.340577549 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.525749007 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.303233232 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.302389957 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.336384811 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.308515124 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.303887191 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.303287045 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.839352672 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.273799876 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.304462679 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.302805695 seconds)
done (took 29.64284963 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.400742482 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.823705243 seconds)
    (2/2) benchmarking "String"...
    done (took 1.593050537 seconds)
  done (took 4.609205754 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.295775476 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.292099883 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.540329357 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.292299856 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.295843889 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.291057464 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.292949736 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.302952247 seconds)
  done (took 16.500286102 seconds)
done (took 26.999337096 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.330226403 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.472576842 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.535270755 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.275895751 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.294872056 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.311310238 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.295347551 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.322864403 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.298733442 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.274055592 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.713126975 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.56581161 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.317993606 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.678423258 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.274134654 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.300097814 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.322302349 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.528709405 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.294955912 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.324332592 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.271572553 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.273723562 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.295292136 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.300636891 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.302556102 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.302986757 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.321401377 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.298253873 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.475266929 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.30882417 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.331681041 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.296642286 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.331379155 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.303274183 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.301753826 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.310937664 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.488383066 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.304966257 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.28225745 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.317706867 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.489669908 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.308509176 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.29613217 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.299771316 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.27436852 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.328916256 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.284686056 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.435094178 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.317495125 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.297033277 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.308035733 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.66553928 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.308483681 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.303323383 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.306087302 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.515065024 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.32361304 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.357538208 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.322470741 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.306965334 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.295748265 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.297191034 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.305754059 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.296905684 seconds)
  done (took 149.591532566 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.298469402 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.303113781 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.303202266 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.304605328 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.302161294 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.301246705 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.296210926 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.297052111 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.300065631 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.305153583 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.305929692 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.302435154 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.304239351 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.255725262 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.310361613 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.31338874 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.303580578 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.320346598 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.331686939 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.296701217 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.302286598 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.304354303 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.302046505 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.304868732 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.304008302 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.376631848 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.337199738 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.312159412 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.316955143 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.297518239 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.302645341 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.306384181 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.953197704 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.148401144 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.3126475 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.334189808 seconds)
  done (took 83.769274994 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.296902691 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.297619063 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.298618645 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.299516943 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.3316247 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.298084534 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.901275029 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.907597692 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.266511159 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.360498032 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.772964106 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.572417789 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.302570772 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.390132558 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.313626325 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.299706109 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.315610082 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.328349027 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.300720204 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.302002303 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.892000944 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.313594959 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.302968655 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.485434429 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.318244565 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332889068 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.692629469 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.300025651 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334598267 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.636460841 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.353910521 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.29980539 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.665888319 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.825669723 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.415056612 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.304406756 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334787514 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.300100665 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.584715826 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.299723493 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.299205302 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.300431363 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.302141311 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970004611 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.303591311 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.904217664 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.306422543 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.27559922 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.298761229 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.302506483 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.217472877 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.061661425 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.306011435 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.299516436 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.302084629 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.300064549 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.30053087 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.33551278 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.192508696 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.400163998 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.303932239 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.302518545 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333818263 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.30149296 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.451831544 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.303608782 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.232150635 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.360500378 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.399407053 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.896514023 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.300864499 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39741586 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.419692521 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.302383076 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.303078248 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.302078867 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.302860162 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.412905801 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.302749113 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.001961827 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.301780217 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.482665309 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.319825584 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.785823875 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.404858634 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.30189682 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.686443997 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.306615652 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.301872799 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.020394486 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399121177 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.302144953 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.301222019 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.301956422 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.002696977 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.907266121 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.58535234 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.309282618 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.84908708 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.311084429 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.18361835 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.891005702 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.986422994 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.309082982 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.30380019 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.416058333 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.485918022 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.322887605 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.30521918 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.78881595 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.308929109 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.365851424 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.304346574 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.706932353 seconds)
  done (took 386.124687184 seconds)
done (took 620.67816194 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.147763306 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.102098574 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.24569542 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.107840929 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.091648615 seconds)
  done (took 11.897778128 seconds)
done (took 13.099675375 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.500612239 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.501663664 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.36835477 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.507284594 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.338541799 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519452045 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.484220987 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.320717561 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.418278904 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.388673894 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.415821115 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.357516295 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.339373135 seconds)
  done (took 19.665213714 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.607302844 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.316672724 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.374253916 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.572561972 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.349467907 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.609911252 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.641362842 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.316598676 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.469980331 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.328879286 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.326296754 seconds)
  done (took 19.117262048 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.605651871 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.318673694 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.375943244 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.580176742 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.352353396 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.610059174 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.651137878 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.320012321 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.470035679 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.329548431 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.326717084 seconds)
  done (took 19.142949218 seconds)
done (took 59.128765859 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.34597917 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407853119 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.344277372 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.325354758 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.323051057 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.323696222 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.326586457 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.323874882 seconds)
  done (took 11.9251064 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.322739909 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.323887622 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.321633429 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.323890299 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.324093111 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.323171619 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.323719847 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.32349379 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.32328704 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.325275644 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.323706236 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.324778016 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.32374587 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.323831994 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.325636025 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.325886352 seconds)
  done (took 22.390191455 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.325771853 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.325450454 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.324282316 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.323270598 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.323563174 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.324167243 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.324255742 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.325295844 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.325283208 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.325134434 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.324513016 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.322922873 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.323046124 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.323293892 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.323991352 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.325699243 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.324799247 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.321906156 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.330620369 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.324728871 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.326048973 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.325055428 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.324633099 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.32422755 seconds)
  done (took 32.99697296 seconds)
done (took 68.517279724 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.32181017 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.315907472 seconds)
  done (took 5.844803911 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.383215518 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.382451095 seconds)
  done (took 3.973798537 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.327120491 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.326866909 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.327257756 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.325200013 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.32704647 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.325456567 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.327803284 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.32515774 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.328555217 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.324984356 seconds)
  done (took 14.474458877 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.325116354 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.326110265 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.325142862 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.326675446 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.325479448 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.326259903 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.326530106 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.328455896 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.327695605 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.327980772 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.326015263 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.326253035 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.327095134 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.32758423 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.327374644 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.327851725 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.328775511 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.328988748 seconds)
  done (took 25.094252666 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.339898819 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.344193669 seconds)
  done (took 3.893399521 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.456041233 seconds)
    (2/7) benchmarking "second"...
    done (took 1.371817681 seconds)
    (3/7) benchmarking "month"...
    done (took 1.432270718 seconds)
    (4/7) benchmarking "year"...
    done (took 1.423325903 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.370578066 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.348402644 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.3686251 seconds)
  done (took 10.978687784 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.313771075 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.60317377 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.785186487 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.467483602 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.304197751 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.326250822 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.290597415 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.324973722 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.329246378 seconds)
  done (took 14.953502421 seconds)
done (took 80.418762311 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.313133202 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.370232601 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.340466654 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.329409174 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.672314092 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.35558077 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.319690854 seconds)
done (took 16.910943624 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.295618138 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.304764748 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.303546696 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.324814144 seconds)
  done (took 10.439302915 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.325602699 seconds)
    (2/2) benchmarking "read"...
    done (took 1.638585334 seconds)
  done (took 5.17559902 seconds)
done (took 16.825840599 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329326179 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.328881307 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.328067042 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.330633036 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.329470992 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.331816919 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.330986768 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.330841058 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.329005759 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.330839592 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.329257131 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.330539678 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.329978445 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331386643 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330799421 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329772769 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329617466 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.331389339 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328163021 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329649285 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330688625 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.330757737 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.329250536 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.330446751 seconds)
  done (took 33.134232921 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.330374605 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.329522271 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.330564136 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.332389664 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.331279816 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.331714671 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.332015162 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.33066539 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.331031034 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.32988814 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.33246898 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.330907324 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.330750693 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.332528848 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332799726 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.332292152 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.331356533 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332375458 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332949226 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.33153404 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.331413823 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333007392 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.333735553 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330806862 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.333904295 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.33332914 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.335002264 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.333230074 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.331587339 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.334829804 seconds)
  done (took 41.173940203 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.337158079 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.338931481 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.330864832 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.332545796 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.332753315 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.331699358 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.332840992 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.332599748 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.334494736 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.334490109 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.333351854 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.332668355 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.332953171 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.33356244 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.333203201 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.33451504 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.332552909 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.333113542 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.334156262 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.333409478 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.334786099 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.334881993 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.335089899 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.332682875 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.333253491 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.332771679 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.335118547 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.335929122 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.334667458 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.334007744 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.334206323 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.336210572 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.335512948 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.336573659 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.335995944 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.335075417 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.339118194 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.341828329 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.333601536 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.334285136 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.334775086 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.335098413 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.33464191 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.333135258 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.335324665 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.338599381 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.336221938 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.334345368 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.335056833 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.33457653 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.33455397 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.33629262 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.336215901 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.334916969 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.33532464 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.334590091 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.33615787 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.334879819 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.336315123 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.33744273 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.338406888 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.335048363 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.337398192 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.33670449 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.337365902 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.33907495 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.335567914 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.337547372 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.338767277 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.337872697 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.337041958 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.336708335 seconds)
  done (took 97.348436375 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.336587756 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.337453947 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.335895776 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.338319046 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.336745159 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.339029382 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.337843661 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338541859 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337046516 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.337987758 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33845318 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.337036213 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33795232 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.339023314 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341774036 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.339627961 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.339545168 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339587633 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.341905348 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.3385383 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.339897285 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.339626345 seconds)
  done (took 30.664723318 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339942311 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.342311788 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.340369546 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.33968225 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.340249738 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.340057083 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.339316029 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.34116777 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33781887 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.338664819 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339016246 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338891538 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.341265403 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338188366 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.338454236 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.342843848 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337697355 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.340318926 seconds)
  done (took 25.336137475 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.339361105 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.338770386 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.339127796 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.339718103 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.339952634 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.34011859 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.338964109 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.340044994 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.339555712 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.342655493 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.3420189 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.339398905 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.340678378 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340128676 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339914089 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.340566972 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.341397146 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.339782005 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341601073 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.340977005 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.341580827 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.341644295 seconds)
  done (took 30.708461732 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.340438192 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.340779503 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.339761908 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.340994892 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.340720354 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.341402348 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.341525247 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.340480718 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.345201959 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.340135955 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.34483618 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.340059651 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.341126676 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342133804 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.343048979 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.341304586 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.341188015 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.342055852 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.340928405 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.342094421 seconds)
  done (took 28.051582178 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.341278996 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341604857 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.343589474 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.344550869 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.344142527 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.343428898 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.345426643 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.343425902 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.342601569 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.3435523 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.342954382 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.345898897 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.345427399 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.343305185 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.343686539 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.344132843 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.344577845 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.344800784 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.343319287 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.345799666 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.346005426 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.344609667 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.345078112 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.344506287 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.345780714 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.34356666 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.34370101 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.344261106 seconds)
  done (took 38.856995332 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.344088621 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.345543836 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.344371333 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.344672505 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.344879731 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.34381586 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.343938568 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.34354443 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.344628897 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.343883245 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.345447847 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.344456409 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.343482292 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.343578576 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.344628908 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.343658962 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344056072 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.343801971 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346031479 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344088798 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.345517203 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344712218 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.351931459 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.345798256 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345852572 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.344214717 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346824694 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.346750603 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34593661 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.345547816 seconds)
  done (took 41.574342063 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.364301822 seconds)
    (2/2) benchmarking "in"...
    done (took 1.364599873 seconds)
  done (took 3.953933078 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.345760106 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.3461419 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.348643664 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.347708327 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.347829408 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.347082536 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.346661155 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34709333 seconds)
  done (took 12.002534445 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.339721633 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.349167596 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.350690989 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.347002619 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.348505487 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.339810791 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.348156386 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.35276915 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.339583957 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.342404938 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.346383482 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.346492251 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.343054403 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341804948 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.343228847 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3450821 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.351650311 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.349453977 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.347819507 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.349014757 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.349736818 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.343760283 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.346093666 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.353794598 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.342451949 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.350709198 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.3516923 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.352432087 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.341528135 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.348269486 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.349717926 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.351533021 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.350374727 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.348957443 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.351600228 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.349225845 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.351894584 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.349815355 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.350685679 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.354697752 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.350654843 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.349469551 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.346108015 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.349432316 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.348825571 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.353830591 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.350069045 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.351664547 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.344414257 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.347422003 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.35598202 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.343599307 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.350810349 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.348341531 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.350647576 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.35435809 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.360758378 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.346807585 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.350108567 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.354198765 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.362930234 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.36191902 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.348877986 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.357495593 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.35392307 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.365008259 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355332362 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.360068527 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.352543694 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.352683577 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.353755797 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.36408399 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.365073729 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.355923145 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.352381595 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.35476039 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.347575685 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357302166 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.354907729 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.357528817 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.358354487 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.353879264 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.355337982 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.363787392 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.348644991 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.358388086 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.352590928 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.352559922 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.345516403 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.357295231 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.36427387 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.355373703 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.347850947 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.348664541 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.35113104 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.357663776 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.345942606 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.348450255 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.3585591 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.35332946 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.352547986 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.348634735 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.356663483 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.360492248 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.354292175 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.355371441 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.362759227 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.348101504 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.358865766 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.363248127 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.353543298 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.348743503 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.354278842 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.357229021 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.349252221 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.357021942 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.361631762 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.352820403 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.360202069 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.355464739 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35599376 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.372159368 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.360641679 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.35634421 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.354603628 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.365304671 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.355191267 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.354687709 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.363429971 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.357729004 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.358313013 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.35297201 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.362360577 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.351239891 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.361826892 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.352340227 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.360966322 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.357509334 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.358249811 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.353193985 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.357718974 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.355909404 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.356419802 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.359230606 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.361738046 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.35410794 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.364495796 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.356057649 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.355744758 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.359433688 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.363689333 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.358113892 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.35098311 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.362351857 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.350770184 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.359190267 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.353133438 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.360831001 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.3616218 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.360895812 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358608295 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.349960881 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.356031698 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.361859197 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.357723706 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.360179722 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.361279265 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.357147702 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.35821951 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.352722546 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.361291797 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.350057128 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.355412732 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.365493043 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.360526948 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.3595109 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.357924822 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.367093932 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.360367371 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36014602 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.354701455 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.359169796 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.362773177 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.362618057 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.370234863 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.360273899 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.360636416 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.354919013 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.358460608 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.363511514 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.354708161 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.367062505 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.367183241 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.372015051 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.357766273 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.36362292 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.353346418 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.364854642 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.360756276 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.369585724 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.362130948 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.362461871 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.356744148 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.365497603 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.3579516 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.36527715 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.355178666 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.364842526 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.364787587 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.362530806 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.361051292 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.355145312 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.359019238 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.364720112 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.36219345 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.361271547 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.356161143 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.363182075 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.355031479 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.357241911 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.365914673 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.364486372 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.364911056 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.371026267 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.362421371 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.367408692 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.36362429 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.361062165 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.365295849 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.36165891 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.364451726 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368186884 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.366596638 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.357785928 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.370346652 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.368378144 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.358383178 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.364875229 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.371779716 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.364655705 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.360442243 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.370680926 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.365012531 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.364855323 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.364697213 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.358326473 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.367648807 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.366625057 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.373679131 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.357957615 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.369407123 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.360265206 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.368901927 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.36099257 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.369533005 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.366580462 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.370770395 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.377220827 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.367612111 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360084983 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.370146079 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.366430754 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.366535452 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362049582 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.371990416 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.367566283 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.366861275 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.364614046 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.364178339 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.367654894 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.361274501 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.369192112 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.361294355 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.377152115 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.389566967 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.369231586 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.371006963 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.371439021 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.370632132 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.372349689 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.360818738 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.36282436 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.367962253 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.365099745 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.361944943 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.369199809 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.362288028 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.369674472 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.36521024 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.368647943 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.370383034 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.366229932 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.360183513 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.374718271 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.369197944 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.368510842 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.361280651 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.369499186 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.364210388 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.369906225 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.370527776 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.363871214 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.37315172 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.374002823 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.368268941 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.367571159 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.364731381 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.363131217 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.36366299 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.372491763 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.366154019 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.37642978 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.36453401 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.370376677 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.365431547 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.375318825 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.378543752 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.36494565 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.374735168 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.36912217 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.360335147 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.364705247 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.373006852 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.376644277 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.383350892 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.362472144 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.372450348 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.371319357 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.371055284 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.371388809 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.370998111 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.372410598 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.370652129 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.376300648 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.375376369 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.368991977 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.374034527 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.383586398 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.373780598 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.371091192 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.36228515 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.374156064 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.381311125 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.366497875 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.368568798 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.368531099 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.373482921 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.371517354 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.370902789 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.373563198 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.373113879 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.377563913 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.377799461 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.376265205 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.371601378 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.378079236 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.38266913 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.376707824 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.386175267 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.367923921 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.378640418 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.372876869 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.365982561 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.368613985 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.371569674 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.375721339 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.365822593 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.376510125 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.373606233 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.36826721 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.375885113 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.380236902 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.367231249 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.377425648 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.391981258 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.367118177 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.378020638 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.370929895 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.367918003 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.378351769 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.372636732 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.366417947 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.370236644 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.374216685 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.381296761 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.367029797 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.378418067 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.369163141 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.377053938 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.376296297 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.37373696 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.373075765 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.375138457 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.36863403 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.3750368 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.374470715 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.385761949 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.370372662 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.374093204 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.372674197 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.381945359 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.385211654 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.370558375 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.379589019 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.376353369 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.370158599 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.372722244 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.38191293 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.369534814 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.379098471 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.368447528 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.373304608 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.373418961 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.378116891 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.378270129 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.380091067 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.370204353 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.372689783 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.377973012 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.377222107 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.376608237 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.373621686 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.380941857 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.369807151 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.370847814 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.379203489 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.372021123 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.381955673 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.374762987 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.377178213 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.375665172 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.379682104 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.377072721 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.377284721 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.37088256 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.373773604 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.385104619 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.383666923 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.379265942 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.376225417 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.380976016 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.371451834 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.375135085 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.376516291 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.376220229 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.372872716 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.383337403 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.37377198 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.373624428 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.374594074 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.381338638 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.383838377 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.382977472 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.375370067 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.385612964 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.389328418 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.387616612 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.371006722 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.378617184 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.374213244 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.382874563 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.379968843 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.37344274 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.386001991 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.387788138 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.384244053 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.380129752 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.381807504 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.372757115 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.382860609 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.381842642 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.376564172 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.3873082 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.376106365 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.386124271 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.380505182 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.380311748 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.373927883 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.37703996 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.376868223 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.377436961 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.382126344 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.379716723 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.383850225 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.379294364 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.384952259 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.378873242 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.379548262 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.378589015 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.37299515 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.382197297 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.375478304 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.384410359 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.38588083 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.37648202 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.3842897 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.382722853 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.375106604 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.380091772 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.387864701 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.381015234 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.375948762 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.381026032 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.385260654 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394151575 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.384121798 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.377435854 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.378645806 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.384857409 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.382653021 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.383964761 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.378459537 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.395793551 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.395089442 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.376843243 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.379185657 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.385682451 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.392502539 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.381266297 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.384012747 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.380274753 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.382417956 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.391270301 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.385541392 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.389893903 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389768446 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.381334925 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.385937055 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.379648573 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.384548885 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.384893714 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.394774268 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.385523199 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.38276658 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.396917968 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.396610844 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.3850234 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.406829086 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.393419111 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.384951777 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.391010269 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.375739317 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.386780831 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.380545351 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.391816768 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.386241769 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386524726 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.385433499 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.378295808 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.386799353 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.39319581 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.395773784 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.385518485 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.37838473 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.383196784 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.387932674 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.384535525 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.38574658 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.385344288 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.386657655 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.385756761 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.379972826 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.39825327 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.406628388 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.388883749 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.387302236 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.387176479 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.388209838 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.394340819 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.387790024 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.391933387 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.388198687 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.3902814 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.385145552 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.399316435 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.388822207 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.381970323 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.383736738 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.383381228 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.392581614 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.3976416 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.410228467 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.392018381 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.391745695 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.39021666 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.386741907 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.382236403 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.39359789 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.385670606 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.381817614 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.383116284 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.391113147 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.389543108 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.388440749 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.382338772 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.396135988 seconds)
  done (took 817.0611195 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.388758184 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.387688234 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.39134123 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.389275655 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.390914628 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390945817 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390611462 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.390520621 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.389362775 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.389556928 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.388006914 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38980546 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.3898173 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.388580447 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390869741 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.389788477 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.390700453 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.387816001 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.389146072 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391039584 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.389643527 seconds)
  done (took 30.447539621 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.391277543 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.389036164 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.391286842 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.392536132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.391230461 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.392190256 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.389841618 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393085657 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.391986466 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.391021975 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.392240373 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.390236266 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.392887328 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.389673359 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392492391 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.390005015 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.392230306 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.389545334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.390072878 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.389935197 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.390145452 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.390904675 seconds)
  done (took 31.866075915 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.391338454 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.389687751 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.384304127 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.392902699 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.391178676 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.390193159 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.389872588 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.390439089 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.393060703 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.386356717 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.386747067 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.386710103 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.390105835 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.396244026 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.389340814 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.396561558 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.39200695 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.39203088 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.38994712 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.392430811 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.393731017 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.405208256 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.393489571 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.384604539 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.39184756 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.39300526 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.392351446 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.393632844 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.384074301 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.395683309 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.393423986 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.387654922 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.397417183 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.395434264 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.387409344 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.39369873 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.391500738 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.392653293 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.393185407 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.39405366 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.407901934 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.391660384 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.398443192 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.405223248 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.393439001 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.388955521 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.400668481 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.391721955 seconds)
  done (took 68.10796074 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.392842533 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.389736256 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.390490794 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.391289421 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.391481751 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.393232072 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.391983322 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.393822979 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.389861549 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.391417187 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.392084817 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.392202115 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.391015352 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.392206326 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.390771145 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.390717875 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.392441897 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.392301053 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.39194718 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.39079086 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.392512712 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.392313803 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.393201541 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.39333157 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.393782694 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.392060813 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.392558768 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.393042798 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.394385083 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.394095693 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.394537002 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.393355398 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.395334475 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.394998653 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.392963069 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.393131903 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.394016935 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.39360623 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.394164206 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.394859837 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.394398078 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.393782934 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.393849086 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.393263619 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.39179751 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.392989312 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.394414898 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.392121378 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.392520905 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.393846241 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.394378395 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.393265939 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.393580527 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.394556891 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.391077879 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.393044049 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.3944143 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.392917995 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.394145161 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.395907906 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.3929292 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.39444971 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.394751702 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.395593959 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.393580062 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.394407277 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.39266886 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.39252409 seconds)
  done (took 95.992498669 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395835128 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.393721999 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393909166 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394743647 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.392970673 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.394877174 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.393693463 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.392923487 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.395276067 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.394964265 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.392975788 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.394674449 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.39452354 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.395294167 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.393204666 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.39387796 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.392501523 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.39376019 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.394391747 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394766993 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.393949649 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.39169072 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.394624178 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.393949817 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.394024804 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.393484268 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.395566001 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.393283148 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.393691616 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.394997331 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.393749406 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.392444669 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.393405353 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.394075247 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.39301482 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.396170354 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.393259251 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.394644347 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.393947202 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.394598616 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.395293276 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.396774259 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.395379394 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.396137698 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.396047041 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.396369749 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.395064914 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.394502838 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.396667767 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.39495287 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.395287129 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.394709944 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396854624 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.396137825 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.397219476 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.395112559 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.396548642 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.396942333 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.394438045 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.397322409 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.397960352 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.396934992 seconds)
  done (took 87.739682669 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.396908762 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.397439003 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.396262849 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.396973124 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.395568873 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.394967058 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.398936068 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.396519483 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.395689742 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.397588194 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.396662489 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.39996007 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398149798 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398336987 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.398690404 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.39860879 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.397738057 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.396162359 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.396715364 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.396086823 seconds)
  done (took 29.210026905 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.394990007 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.398649112 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.397009377 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.39808378 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.397618804 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.396139357 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.397099767 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397628626 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398684911 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397961896 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.39812469 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.399173139 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397910569 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.39862657 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.396985802 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.398632648 seconds)
  done (took 23.630045568 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.397177081 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.396973621 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.399888345 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.401217005 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.399960481 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.398199828 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.397265565 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.398507517 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.397808864 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.398242006 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.395499497 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.400284981 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.399473872 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.400764309 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.398663622 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.399243302 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.400497137 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.399999219 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.396873405 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.40020497 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.400255531 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.399401018 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.401224709 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.401325908 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.400952785 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.400192674 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.399847384 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.400921946 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.400097584 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.401935585 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.398899554 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.400960277 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.402908205 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.39962706 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.401302067 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.400341641 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.401199139 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.402336512 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.400995869 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.402371612 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.402033436 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.400726557 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.400925841 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.401991571 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.401840187 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.400656416 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.402369731 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.401483334 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.400467312 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.400925209 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.400328829 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.401433202 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.400996077 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.403068129 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.401941238 seconds)
  done (took 78.284378437 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.401589698 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.402008885 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.401427768 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.403468622 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.401858311 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.402463382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.403339495 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.404995173 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.404055244 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.400699235 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.400252272 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.404972885 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.40206575 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.401061271 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.401018516 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.403244247 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.402334558 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.404200214 seconds)
  done (took 26.516560261 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.403863751 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.404114993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.405809917 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.404213195 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.405320014 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.404269639 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.405094966 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.401066568 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.401341105 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.403597157 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.40352154 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.40318157 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.403894509 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.403682699 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.404241786 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.401932115 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.403595152 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.403709678 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.403122028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.403156372 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.405331649 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.404824991 seconds)
  done (took 32.154012608 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.394046859 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.394415476 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.396418608 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.412674854 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.413133255 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.396182175 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.395257113 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.397371643 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.415712828 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.434315817 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.427256362 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.412291388 seconds)
  done (took 18.161806382 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404706318 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406695902 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.406398977 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403297455 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404784097 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405825668 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403185645 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404161288 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404737637 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405144305 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40813563 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407220772 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40530286 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403576611 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40715103 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407030773 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404554379 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408139516 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407817335 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40384787 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404053233 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406173876 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406147562 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403664199 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404557585 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404191091 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405091179 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408754321 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406496141 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407030164 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405865211 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405980133 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407201357 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408484539 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407528476 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402945925 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405114861 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405690997 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406559462 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405611534 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.405511459 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408428146 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407315037 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405720006 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406403755 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406688032 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409530793 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406077769 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409557092 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410273086 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407310023 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407079869 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408364494 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409177158 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408193661 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406985424 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410107378 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405622439 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407478013 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40886928 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408181664 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406907936 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407981307 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408227932 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411848628 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406770529 seconds)
  done (took 94.110298366 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407821667 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.407625982 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408182762 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409667031 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409084164 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407028316 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407362377 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40793166 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411096736 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411428663 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411417786 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410401874 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412298782 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410581229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405692404 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410011945 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408312036 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407287785 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410514028 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407463595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412783311 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40788022 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408629148 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406317731 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409223668 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408279491 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409061243 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409469464 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410378329 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408237505 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406363214 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409539069 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408189634 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.409761059 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40382853 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40909987 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408727433 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414932248 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408701556 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409364408 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407615006 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407078456 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409036175 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407532224 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405194749 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40700315 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407596506 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406638655 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407365963 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407807144 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407030441 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407408936 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409630779 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408439942 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408820187 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40831208 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409708777 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410947608 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409236866 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40880727 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40974013 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410426521 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408967083 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407157919 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410628043 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40830355 seconds)
  done (took 94.25390617 seconds)
done (took 1911.553550029 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.564527618 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.51874677 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.40174672 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.414741911 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.397498477 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.397534904 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.410088935 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.399844823 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.399728554 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.400499314 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.3997803 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.5878941 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.435198779 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.39798167 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.400887507 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.498163429 seconds)
  done (took 28.302062322 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.431815912 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.412084483 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.521829252 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.406137195 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.430503148 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.597049135 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.461826606 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.405389555 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.580195916 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.42551742 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.412580679 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.43060142 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.405829059 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.410130434 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.423425865 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.601744304 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.672276292 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.399473885 seconds)
  done (took 30.705941228 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.871130719 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.422877517 seconds)
  done (took 5.573755969 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.429735044 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.407660554 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.408111726 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.404045537 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.398968715 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.399282126 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.402875949 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.399224482 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.427984399 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.539882736 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.408021322 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.418957843 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.406148788 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.405351409 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.41034888 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.450119611 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.565015402 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.414104232 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.412483753 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.413905101 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.405082055 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.497634755 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.448660053 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.414170437 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.535853802 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.398021813 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.430488358 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.412512512 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.527700594 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.414437284 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.405733572 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.40993857 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.407145011 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.393887325 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.97447423 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.397607514 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.447919312 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.41577064 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.411974594 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.539535142 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.40811182 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.413397969 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.397307856 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.961959892 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.510462734 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.529186411 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.400029825 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.421106347 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.40828507 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.474696107 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.411784038 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.409397193 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.464671345 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.212857902 seconds)
  done (took 89.516511588 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.422051587 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.397819896 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.582723538 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.421234538 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.413794348 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.401079672 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.395904189 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.695139078 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.406907504 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.400201966 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.72572721 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.033575121 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.405598221 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.464278478 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.44037846 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.453077021 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.39889566 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.39956533 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.40184655 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.404784047 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.980971086 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.401883918 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.400821262 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.47357274 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.441041932 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.948732914 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.40144462 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.412961222 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.404174939 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.397503051 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.998028616 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.417164279 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.458617975 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.401140555 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.691897879 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.799945285 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.758303785 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.402110935 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.418825856 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.402949238 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.424874597 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.935006509 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.775777341 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.4020762 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.403572961 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.935363505 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.398629095 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.413352936 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.405921342 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.671334322 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.401755942 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.402568021 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.4019041 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.407074216 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.400930798 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.457207239 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.45605444 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.946404047 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.401054274 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.400533471 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.445668533 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.402093081 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.407207745 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.398752988 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.404273615 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.774305933 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.628229149 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.407083899 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.775716653 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.986401069 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.402502733 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077624374 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.408210471 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.409992525 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.43385566 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.402534543 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.398562008 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.953645132 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.431877668 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.398862013 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.757341957 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.403850753 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.706070695 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.416969874 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.401154501 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.984798126 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.405990418 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.444297354 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.414764987 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.399091586 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.399509564 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.402788327 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.690793438 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.442695027 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.396251667 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.399644522 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.426242209 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.398924301 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.417269043 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.409970651 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051425635 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.412543589 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.40154965 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.418280776 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.402399455 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.399488173 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.406757139 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.397628679 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.679448226 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.397434779 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.417624011 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.399506573 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.410265201 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.39754334 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.479650046 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.410569662 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.704490689 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.399654196 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.396329529 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.404740668 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.408102435 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.418139427 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.39973594 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.408189106 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.398483743 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.696438105 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.414880916 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.412301337 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.400734438 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.400892722 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.409567048 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.399160047 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.465417752 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.398159022 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.198211817 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.44541884 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.449324245 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.398400977 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.410902981 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.398687718 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.42332515 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.399188932 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.701740042 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.684244047 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.625358857 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.401448656 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.392358077 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.209590898 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.42881239 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5820017 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.419018331 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.398892164 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.679165732 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.621178841 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.401844841 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.396035564 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.401923262 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.685103615 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.397915915 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722948209 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.99783156 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.399444945 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.411298468 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.187399214 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.209967928 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.395301239 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.400136482 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.69209223 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.413234635 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.394329027 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.400814756 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.395892696 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.396737598 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.404022927 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.406282326 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.394135124 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.400655859 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.736911935 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.591227588 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.41188945 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.400545765 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923194636 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.42044467 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.399632877 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.408094983 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.394584962 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.397184302 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.450635335 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.398190366 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.422652264 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.399182266 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.407818992 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.952400008 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.401238336 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.397827602 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.594160836 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128979095 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.404202689 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.400629002 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.399765997 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.460811276 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.955625378 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.424109804 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.701807428 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.402557557 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.437523572 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.399216933 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.416521582 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.950543463 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.403610379 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.398262421 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.129175483 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.395326774 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.824693585 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.396109584 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.400146748 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.0415926 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.402716756 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.403900089 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.405875455 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.397329814 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.72863143 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.404926625 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.449298227 seconds)
  done (took 514.236014518 seconds)
done (took 669.611052728 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.398209601 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.401025393 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.404665284 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.403789932 seconds)
  done (took 10.877019665 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.415324353 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.406638753 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.415207299 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.409532645 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.418100452 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.402385053 seconds)
  done (took 9.736799621 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.398225982 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.402105447 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.407844697 seconds)
  done (took 8.481143103 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.601613752 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.427056872 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.741996621 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.413912621 seconds)
  done (took 9.455103143 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.415185982 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.4168379 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.418520802 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.414463919 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.414039182 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.416700311 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.420402877 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.416691907 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.421291892 seconds)
  done (took 14.028308357 seconds)
done (took 53.849716836 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.560273546 seconds)
    (2/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.551720793 seconds)
    (3/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.498543712 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.611420622 seconds)
    (5/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.441169218 seconds)
    (6/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.482821391 seconds)
    (7/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.521794808 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.473522231 seconds)
    (9/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.38171788 seconds)
    (10/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.76989995 seconds)
    (11/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.541823788 seconds)
    (12/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.384085221 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.402222735 seconds)
    (14/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.576913115 seconds)
    (15/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.607989422 seconds)
    (16/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.428934055 seconds)
    (17/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.438219656 seconds)
    (18/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.904536168 seconds)
    (19/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.49829911 seconds)
    (20/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.680181889 seconds)
    (21/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.76105925 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.386084183 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.391381868 seconds)
    (24/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.611467802 seconds)
    (25/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.491009099 seconds)
    (26/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.39492606 seconds)
    (27/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.618947456 seconds)
    (28/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.411917145 seconds)
    (29/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.439660796 seconds)
    (30/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.382588718 seconds)
    (31/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.468797044 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.578511921 seconds)
    (33/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.390367204 seconds)
    (34/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.552557501 seconds)
    (35/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.484902433 seconds)
    (36/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.383608458 seconds)
    (37/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.47338845 seconds)
    (38/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.384132677 seconds)
    (39/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.401020237 seconds)
    (40/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.71879612 seconds)
    (41/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.508547992 seconds)
    (42/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.477171363 seconds)
    (43/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.384927639 seconds)
    (44/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.477283774 seconds)
    (45/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.55820099 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.680910661 seconds)
    (47/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.495644662 seconds)
    (48/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.504218525 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.566711674 seconds)
    (50/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.433819334 seconds)
    (51/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.555940831 seconds)
    (52/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.515483938 seconds)
    (53/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.475314052 seconds)
    (54/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.410422427 seconds)
    (55/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.488294635 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.40221354 seconds)
    (57/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.670497901 seconds)
    (58/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.391921562 seconds)
    (59/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.445783975 seconds)
    (60/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.410766324 seconds)
    (61/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.386840786 seconds)
    (62/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.449995567 seconds)
    (63/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.413331988 seconds)
    (64/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.525335452 seconds)
    (65/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.816069723 seconds)
    (66/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.48704927 seconds)
    (67/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.385173925 seconds)
    (68/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.564804357 seconds)
    (69/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.55843944 seconds)
    (70/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.385290955 seconds)
    (71/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.451673907 seconds)
    (72/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.685114872 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.494689364 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.4044285 seconds)
    (75/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.534881216 seconds)
    (76/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.421518908 seconds)
    (77/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.38914558 seconds)
    (78/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.386725415 seconds)
    (79/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.903711542 seconds)
    (80/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.412336464 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.67595825 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.486027066 seconds)
    (83/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.534699683 seconds)
    (84/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.763522497 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.652564269 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.519259964 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.493374252 seconds)
    (88/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.600714339 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.564688675 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.650398933 seconds)
    (91/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.433012303 seconds)
    (92/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.571860068 seconds)
    (93/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.385124527 seconds)
    (94/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.503872241 seconds)
    (95/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.531026679 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.505175723 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.523369441 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.437763272 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.51078755 seconds)
    (100/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.61787262 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.511805317 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.535665277 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.494994904 seconds)
    (104/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.450483503 seconds)
    (105/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.424630284 seconds)
    (106/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.759856855 seconds)
    (107/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.431416717 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.569921116 seconds)
    (109/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.584862855 seconds)
    (110/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.551779379 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.514979479 seconds)
    (112/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.524110209 seconds)
    (113/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.389334884 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.504025506 seconds)
    (115/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.474195491 seconds)
    (116/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.387442745 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.589484964 seconds)
    (118/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.387481243 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.539781502 seconds)
    (120/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.486604294 seconds)
    (121/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.709745156 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.5227572 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.449965952 seconds)
    (124/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.594970787 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.495367677 seconds)
    (126/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.386798661 seconds)
    (127/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.396851076 seconds)
    (128/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.726809374 seconds)
    (129/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.474320211 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.40869733 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.780452843 seconds)
    (132/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.659490369 seconds)
    (133/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.479139652 seconds)
    (134/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.501841647 seconds)
    (135/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.584775169 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.53667946 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.504847733 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.535636151 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.41047357 seconds)
    (140/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.404519851 seconds)
    (141/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.50136995 seconds)
    (142/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.700935543 seconds)
    (143/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.560656479 seconds)
    (144/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.386909453 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.39291333 seconds)
    (146/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.664306497 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.487077317 seconds)
    (148/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.394125233 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.50854261 seconds)
    (150/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.678970891 seconds)
    (151/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.449773135 seconds)
    (152/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.395493002 seconds)
    (153/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.61611649 seconds)
    (154/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.623130749 seconds)
    (155/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.473557385 seconds)
    (156/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.401551408 seconds)
    (157/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.617667868 seconds)
    (158/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.601324379 seconds)
    (159/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.445657722 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.391374035 seconds)
    (161/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.680111396 seconds)
    (162/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.392462097 seconds)
    (163/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.664921858 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.47129025 seconds)
    (165/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.446051698 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.456381411 seconds)
    (167/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.429983549 seconds)
    (168/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.648974195 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.525163423 seconds)
    (170/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.530250743 seconds)
    (171/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.422372359 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.571131377 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.395311622 seconds)
    (174/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.447504825 seconds)
    (175/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.443299959 seconds)
    (176/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.443326991 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.512089574 seconds)
    (178/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.390699182 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.519293048 seconds)
    (180/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.61002193 seconds)
    (181/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.701054247 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.53700174 seconds)
    (183/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.620768314 seconds)
    (184/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.473627793 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.597999535 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.56234028 seconds)
    (187/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.566522001 seconds)
    (188/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.527527743 seconds)
    (189/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.511777882 seconds)
    (190/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.450453803 seconds)
    (191/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.490667152 seconds)
    (192/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.726251387 seconds)
  done (took 340.368706667 seconds)
done (took 341.639615881 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.43909927 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.507044969 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.421402061 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.419154107 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.425225961 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.418087794 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.448157429 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.424701977 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.431914306 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.439368107 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.414397099 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.43608382 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.438585648 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.434156895 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.452990158 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.42279084 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.421508701 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.433668381 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.439972803 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.440885971 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.425361249 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.423447402 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.451064387 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.423969616 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.432094022 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.432371024 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.426552385 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.416502031 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.431724681 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.437606045 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.41454076 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.430074159 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.437965647 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.434924352 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.424265869 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.429703727 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.427336951 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.512863116 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.448240885 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.434086998 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.427724887 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.441690165 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.429516929 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.422009538 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.436995489 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.447188264 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.430983845 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.436636813 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.414858163 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.408392017 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.445352229 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.43311709 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.431519429 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.413156304 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.415648041 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.452545963 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.435279943 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.439112017 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.4277502 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.423429905 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.456629817 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.444186406 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.438552154 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.434413636 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.431011459 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.436047952 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.433264468 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.436214976 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.432347412 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.428712337 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.427356471 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.433053905 seconds)
done (took 112.534507442 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.545805457 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.421379027 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.58180918 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.432181598 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.586166118 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.541875325 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.43193022 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.433438019 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.436068616 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.231387921 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.432577879 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.434608232 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.427234738 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.43594063 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.549227302 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.43410155 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.43480614 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.129262194 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.433867651 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.563773043 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.421045916 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.436339217 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.437871921 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.23635408 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.418749127 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.422283757 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.566264024 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.437624207 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.120570274 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.409295969 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.41521236 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.12382274 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.56000263 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.43911203 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.428019691 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.43083412 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.577499692 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.42079066 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.531875548 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.531637916 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.562150326 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.454322423 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.399759438 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.405133941 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.41760074 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.412897058 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.412533634 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.443456852 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.404417811 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.413659537 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.111569209 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.418674715 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.41953219 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.41162422 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.413947013 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.428435784 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.409704979 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.411830688 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.541770787 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.409516882 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.522608039 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.208823168 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.205169314 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.408829916 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.395575459 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.408016726 seconds)
  done (took 114.027564052 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.466860151 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.476480559 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.508129498 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.396776438 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.446947236 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.509667133 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.396427854 seconds)
  done (took 11.467825546 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.403949837 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.406435156 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.442817122 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.44208361 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.404950427 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.56769402 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404745876 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.408374345 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.406672333 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.440603627 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.400236631 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.400031989 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.410730753 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.390507522 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.438806461 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.40552021 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.506679922 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.391707978 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.400365986 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.546372651 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.398491409 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.408298741 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.437793958 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.401188972 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.398041315 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.396374422 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.172433755 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398549901 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.398987944 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.398304272 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.397615369 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.453969164 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.397417408 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.387794606 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.39661044 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.50295706 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.39683345 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.39852637 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.397297953 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.391031977 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.397348842 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.398275897 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.397834458 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.399052495 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.40005766 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.41228232 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.397659304 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.399340499 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.399956736 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.398820783 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.43977798 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397911049 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.397491407 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.398347994 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.443793627 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.409494877 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.401075611 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.396678231 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400676754 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.401206277 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.548362446 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.439459521 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.397857802 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.438899012 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.397627405 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400924072 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.402739784 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.398170145 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.483728495 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.401052939 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.439690455 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.40001666 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.57419381 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.417051409 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.402503328 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.395657414 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.394777196 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.399776777 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.390015979 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.397699349 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.398986916 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.394509951 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.398842028 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.402201697 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.402600996 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.549492999 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.501102997 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.401842545 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.408697934 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.40085198 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.401163099 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.442658161 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.402605527 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.40305872 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.444360732 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.511960959 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.443264312 seconds)
  done (took 143.730849462 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.405429477 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.404132573 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.3977118 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.419088239 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.396818412 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.396518791 seconds)
  done (took 9.682520063 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.39796159 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.407693935 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.40546846 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.405309511 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.405251554 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.405824057 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.402456658 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.39713391 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.406601088 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.404448997 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.405263605 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.404974109 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.404630468 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.406301572 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.405759073 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.405061972 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.405427625 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.403330035 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.406132406 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405051378 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.396276867 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.40648724 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.40578243 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.398022376 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.405551659 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.405438095 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.422002211 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.406437509 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.405018472 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.400368337 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.408547554 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.40794397 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.399021014 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.402185434 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.4107783 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.400442025 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.409758088 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.409369026 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.406101751 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.41010843 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.408500993 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.405002781 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.406859034 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.406357671 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.399441297 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.404084089 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.40953163 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.421135432 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.406299679 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.409115643 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.407333637 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.408340786 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.411339214 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.409621691 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.399843362 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.401909901 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.40779212 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.407744455 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.408796787 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.400616391 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.409906991 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.407869146 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.4004325 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.407908204 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.40883948 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.407684885 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.398436044 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.409622483 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.409602941 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.406922662 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.409588163 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.407177103 seconds)
  done (took 103.495353975 seconds)
done (took 383.694189898 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.831033641 seconds)
  done (took 4.096460553 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.398151897 seconds)
  done (took 3.669585961 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.128923575 seconds)
  done (took 22.397616229 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.408307169 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.412242485 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.375317802 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.378964839 seconds)
  done (took 10.831535765 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.647178198 seconds)
  done (took 3.902943139 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.397939749 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.380087411 seconds)
  done (took 6.037476469 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.571070304 seconds)
  done (took 3.827174465 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.639282901 seconds)
  done (took 3.896858997 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.385726414 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.400098125 seconds)
  done (took 6.049941805 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.357291999 seconds)
  done (took 3.613384033 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.871853558 seconds)
  done (took 21.126894103 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.398343095 seconds)
  done (took 3.657342137 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.424200887 seconds)
  done (took 3.679894387 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.857166675 seconds)
  done (took 6.113666299 seconds)
done (took 104.167857562 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.376002151 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.376661295 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.374414289 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.376923533 seconds)
  done (took 10.760808409 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.45545511 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.454607865 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.463177982 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.449601664 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.451712891 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.455572208 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.433957788 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.418557414 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.449043862 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.441424603 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.456615885 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.448258227 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.45507178 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.41867208 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.44259183 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.45661952 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.447192527 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.461954399 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.415968534 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.450964666 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.393234216 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.449365217 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.442590427 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.391104819 seconds)
  done (took 35.860143293 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.878728332 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.454001019 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.536989471 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.435435558 seconds)
  done (took 7.562120109 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.49582933 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.499406719 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.515391817 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.552741071 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.598780558 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.511719179 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.421845317 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.412630686 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.400437353 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.498697238 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.583990481 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.495373216 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.712147353 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.393981973 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.709466281 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.391765978 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.393392133 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.498161164 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.544286138 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.574037973 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.392370687 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.495222153 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.500013798 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.496950687 seconds)
  done (took 37.347590186 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.401842221 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.410076328 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.397242303 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.407496085 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.39693821 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.396867904 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.398267173 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.402767648 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.394410725 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.395763945 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.396803835 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.40905853 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.396511209 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.398229623 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.405088061 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.397184052 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.398665049 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.401974283 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.405613622 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.394037179 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.398428563 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.399808736 seconds)
  done (took 32.061894443 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.379388581 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.377567812 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.727196608 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.628507474 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.364365984 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.367543255 seconds)
  done (took 14.102549124 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.436090433 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.57876177 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.368821665 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.700641177 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.793711688 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.368497356 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.364691593 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.602624333 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.890095691 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.886540097 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.419911301 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.429511999 seconds)
  done (took 20.093757663 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.366681378 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.359680739 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.364192903 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.374763083 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.411320805 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.363735869 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.367485748 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.353705943 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.415839827 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.415433587 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.366184937 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.412874911 seconds)
  done (took 21.81519508 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444472066 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363694421 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367016282 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43197063 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362761638 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363405929 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446741497 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.069130631 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.374084139 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639559046 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367211492 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451830481 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.60921743 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361924316 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371296905 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.310272017 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596789182 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832701835 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367489213 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371839779 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402597679 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364625618 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371069032 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.574646134 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37255988 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364180692 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.627438008 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364794466 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644149858 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623357803 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623283115 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374170183 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641981436 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006904113 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476772113 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568156953 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369202705 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367393913 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.370471502 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.372366758 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373928078 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390957127 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617294077 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373093429 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367087506 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376778979 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087104987 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.381148436 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.366298874 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366956484 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620485497 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455806945 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.372599367 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366904304 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369140667 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365833865 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.373253315 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49846719 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009332496 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366895128 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383728797 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.373183873 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364922153 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37014472 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006353353 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.380313931 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.374353973 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374127527 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368967542 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369705517 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412554737 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367011592 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.389358811 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368131009 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108922547 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377290854 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376585276 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887582378 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382573234 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.37395104 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593523372 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369215288 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368903714 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.370377312 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369788385 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076359078 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376396634 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.340338888 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411715502 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.080953327 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.578708335 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397530119 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399418016 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.589562252 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.339048207 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37228151 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.381616179 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378685001 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391093619 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.082450211 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374432731 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.375560508 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616494876 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.581528353 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37054618 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.321569468 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845483733 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375860122 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.398980876 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372361942 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.578827997 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.975119846 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636449419 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381007916 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410051924 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3724138 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127950605 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386088987 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.382758412 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381503498 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650450736 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.156367464 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371722734 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444521938 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383431016 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371189759 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38511876 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378751776 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371482257 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.552503703 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382962838 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631384367 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.379996156 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371962246 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.382484112 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379518153 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.39613159 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593757533 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38354783 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653733524 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373643945 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373202643 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374084666 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.589775909 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.372654597 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.380309231 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712277763 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377173993 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382530678 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633606978 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413038141 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486567431 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40538394 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.379481524 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.626264224 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.380678407 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.380451121 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373112576 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39683795 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37494396 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.382098385 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373095797 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98179032 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358087329 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381305494 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375381603 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.391152763 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450609572 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38166967 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577313191 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.381590609 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374586592 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.389053821 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.379753288 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598392222 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629234286 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.384321516 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555697522 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.8440885 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981007452 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397805018 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.376902647 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.376328143 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.375702694 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37764856 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376151893 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379149055 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580597366 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64404317 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399169571 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.9822478 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384263889 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384507886 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.391328283 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629570341 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.391520925 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378875684 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.384579329 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384970618 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383518626 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.638631674 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605053582 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.395967479 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381218769 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.894300301 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385267499 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381042433 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37980826 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405901832 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387824584 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219705631 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716704741 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381862595 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633795317 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390766819 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.401814962 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.382002301 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387208064 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385705305 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.385515965 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40662619 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.582840103 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386139533 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386181695 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018693657 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132592848 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934424895 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385424823 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.395175051 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383281673 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10398518 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384606032 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380263312 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62029126 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099004755 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385843034 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849967551 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.385614215 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143549803 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63478388 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610911727 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391826384 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.391619377 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641765443 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598710016 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406410194 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38736482 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38555232 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.349537009 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914539115 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386019593 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565490321 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098703946 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392559372 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388164511 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.442960692 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387775914 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773424606 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386512545 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381827453 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392461657 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387525266 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235457001 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388164013 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383665791 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017724968 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404002669 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.858827898 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385009732 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.585958995 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64420657 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.620958239 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.389958253 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.388313543 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.630925692 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637822398 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382855883 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391764772 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939475325 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.242115524 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.392543945 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38387715 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146869613 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385717794 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669751808 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.394405566 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.38842555 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398921855 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381723902 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384864854 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.382977858 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390065802 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354928935 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854351539 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.381232495 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398335634 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396477248 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389057263 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630388417 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.399476914 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989145124 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614206251 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376552739 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415984282 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.390469735 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401061752 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.354388169 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384558454 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385480478 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388281955 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604436323 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390514164 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.355962687 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.459129658 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595931634 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382884173 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385140642 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601032915 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.390706181 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.391298903 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171601073 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416587126 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388507605 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404203036 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387104873 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425321466 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459985169 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593934883 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.644834792 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643617115 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777801491 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391077482 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388326832 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.40022208 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47028312 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38936131 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.387069546 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.391210709 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990617505 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158438069 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.999858976 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64598666 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389126151 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397553179 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389413678 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626089609 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391934347 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664191286 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390793481 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.383992352 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408767944 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386587093 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41420228 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60502688 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663771567 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388209853 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396592985 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3958609 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.389023483 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649995471 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.602731073 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862447259 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912199142 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390039577 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3966252 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.118091927 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671553548 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391827912 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385837083 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389267742 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.397000125 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.390350584 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.401084177 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38879071 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613426962 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644772807 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038802203 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64836683 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.416737955 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.390749066 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391999184 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.634581586 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231987932 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595091879 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008729385 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.100244459 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64228011 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463889058 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597012922 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.395465088 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626359487 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.402266834 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396563295 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390632127 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389128652 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.389904302 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.64582196 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004308876 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643657899 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.395842833 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.390301418 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426126881 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.596568654 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620642795 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102308902 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609961925 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652186833 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40590237 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394464441 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012265256 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651061956 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393972159 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.398210203 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611045444 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399431601 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429820395 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.269289932 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.392373731 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920853122 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.604809932 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413704751 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399405155 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.100586643 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011177589 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.39941443 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864234044 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395117589 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396864756 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674196406 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.405276921 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393997791 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680454711 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.402200588 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397621424 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6072144 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.008545429 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149266371 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.412510957 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399545176 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.417686588 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395355971 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442787648 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394377574 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398582375 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.789631471 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399636356 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393983347 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408621551 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.404425994 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397154117 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.392169124 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395774455 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.403250577 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.373275064 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.388400301 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41040908 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523225128 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933367113 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397024012 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.01256582 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.729166915 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.639596206 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405544355 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.370342009 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.400502441 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395397082 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400418769 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395549468 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408601046 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923442836 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.399870483 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.657228159 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403499868 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.606862988 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603511152 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396563066 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602240925 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410257247 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422156467 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.366532912 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397707674 seconds)
  done (took 984.386873749 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.406512068 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.405321126 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.396834397 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.464341192 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.412786509 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.404172263 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.409559556 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.46982061 seconds)
  done (took 20.641461256 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.38616998 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.401790957 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.399615967 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.396444662 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.394993579 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.875811163 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.39549688 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.396709172 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.410603438 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.401292197 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.402539533 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.017779025 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.398149233 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.392564326 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.390886367 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.397730244 seconds)
  done (took 32.731854915 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.114887069 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.416752875 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.955033913 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.430231389 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.428384248 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.389469191 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.536087621 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.388615812 seconds)
  done (took 25.934093482 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.403535882 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.404408956 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.401697431 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.403755128 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.403887289 seconds)
  done (took 8.290147226 seconds)
done (took 1252.846114705 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405061386 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.405942629 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.404532468 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.407005696 seconds)
  done (took 6.897096497 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.370239725 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.370155004 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.373348499 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.38750493 seconds)
  done (took 9.773613663 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.061339938 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.907934187 seconds)
  done (took 5.244220325 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.913937161 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.909590449 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.904806819 seconds)
  done (took 6.998255204 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.669041716 seconds)
  done (took 2.938634702 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.341037748 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.39761298 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.398043111 seconds)
  done (took 8.411944395 seconds)
done (took 41.537673238 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.398665482 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.150509171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.548452476 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.398265217 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.553114633 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.548207131 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.642787028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.391093907 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.404473171 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.402449741 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.39780562 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.551266019 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.626504058 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.151526812 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.625821486 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.156128479 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.566497218 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404809912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.392019195 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.418413335 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.64016331 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.396467288 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393060043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.399075919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.55487469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.539035752 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393183114 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.157567152 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.407154358 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.392819871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.540083871 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.400265123 seconds)
  done (took 83.213259593 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.393214755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.398672553 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.400472724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.392681549 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.411599364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.399643829 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.393735238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.393768032 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.396244296 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.394386759 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.393543433 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.408864251 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.39473786 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.395116753 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.410691154 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.395633818 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.412370449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.394743217 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.394565677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.409979755 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.397369825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.394717374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417570877 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.395484355 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.422927631 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.40672042 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.394378608 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.393609466 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.395375372 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.396009511 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.409576427 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.395460451 seconds)
  done (took 78.081467954 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.404630456 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.394249671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.403989028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.408175523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.39619489 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.409461672 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.399962915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.397800101 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.396296813 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.396476948 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.412241195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.397180838 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.396953191 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.412853095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.397533666 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.396725096 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.400485297 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.409333781 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.39544786 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.396013655 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.397899569 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.395446572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412300434 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.41087755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.398603303 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.397258494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.395700558 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.412134916 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.396460311 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.397437786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.411809856 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.406813967 seconds)
  done (took 78.133697857 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.636598609 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.411051476 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.41524957 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.407439231 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.415983321 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.410324201 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.406569167 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.640597405 seconds)
  done (took 15.024481399 seconds)
done (took 255.724557578 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.413987262 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.890045508 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.432769796 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.407642803 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.425095597 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.433289481 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.607892926 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.433928538 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.595100706 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.407914955 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.42279583 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.418240146 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.188021488 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.547560789 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.2003483 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.323766024 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.26925464 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.406593601 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.956196253 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.629273123 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.432736618 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.409840827 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.208972854 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.285987677 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.378537077 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.468469291 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.467193795 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.557061903 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.52210483 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.470606435 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.890678986 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.421133028 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.414584313 seconds)
  done (took 64.618874974 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.405575296 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.416790527 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.415512337 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.417216095 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.416044281 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.415732373 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.405974974 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.415829071 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.416108102 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.418131511 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.418000786 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.415031652 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.416763278 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.41696821 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.416390663 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.389152396 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.405907962 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.416123253 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.407481084 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.389781557 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.415947807 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.416850429 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.417726786 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.415057508 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.417180995 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.415149452 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.415370805 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.417158368 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.418214417 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.416031144 seconds)
  done (took 43.683300505 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.417269989 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.954774797 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.137872324 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.415093842 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.414312314 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.414224475 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.695100435 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.417890292 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.413043844 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.41335115 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.880841228 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.419626304 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.440284234 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.152078199 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.411542979 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.419395172 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.419150745 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.411952909 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.958471892 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.4255383 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.689641494 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.425394852 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.692267789 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.422763906 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.413292217 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.408873849 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.41806858 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.190852912 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.429901938 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.882616256 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.162408257 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.690894668 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.141677628 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.194665769 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.178772223 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.427717223 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.420454255 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.890188352 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.415287638 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.412516108 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.690628319 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.417572423 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.150743018 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.094053591 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.426628043 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.422958137 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.218092376 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.884871062 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.650085528 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.417282787 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.202031715 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.416288681 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.421193627 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.414915633 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.651351313 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.411677189 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.417453765 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.26108095 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.41793582 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.691187522 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.429395422 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.417109922 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.965773258 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.41381802 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.964563209 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.416667027 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.421432077 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.413733081 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.161380436 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.419213018 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.12308863 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.434687668 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.425343465 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.886979061 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.957773013 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.267231884 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.415985953 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.968975588 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.153360025 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.70811558 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.416515806 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.171273976 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.710026728 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.421627075 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.427147822 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.424359612 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.425442984 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.487056824 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.688776173 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.044951596 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.106629257 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.265839337 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.693942599 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.428543786 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.418949506 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.265462417 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.42525371 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.428464768 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.153099491 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.117779309 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.434771868 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.426338335 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.10216159 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.434651077 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.698681354 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.427689306 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.202799855 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.417053397 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.491718751 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.427618253 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.425020303 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.424010029 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.698819767 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.426514679 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.427106881 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.095975665 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.919974776 seconds)
  done (took 196.874343202 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.415448502 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.411708139 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.410440725 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.412896508 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.411360197 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.424038842 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.411646487 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.413385141 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.415655851 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.410206254 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.414426934 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.420442846 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.418536608 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.414748037 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.421662871 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.411716998 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.411406743 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.42848664 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.412942159 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.413770428 seconds)
  done (took 45.597885769 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.429782218 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.964831587 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.929819979 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.433559928 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.429239941 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.419017836 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.475283204 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.430336833 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.427846902 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.710354984 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.582999466 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.435468876 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.429247284 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.429339414 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.933003364 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.406930585 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.71267257 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.963213205 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.429082492 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.967444645 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.407847578 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.429002762 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.420381075 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.964492909 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.726263605 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.699231752 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.482546913 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.968181055 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.434645014 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.428991894 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.963024617 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.430284048 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.422412183 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.949594878 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.428319006 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.447938253 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.430642264 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.479602661 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.480656249 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.715078902 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.969830569 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.7059926 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.445110805 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.586092905 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.431151354 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.400929872 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.977550709 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.436288824 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.402989288 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.43346581 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.434903737 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.943493887 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.429997157 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.948702955 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.437199324 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.435027621 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.967990447 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.945864889 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.939980574 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.593251717 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.428922397 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.701366515 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.437472375 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.978864037 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.431145296 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.434962863 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.434564784 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.59566332 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.970800618 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.70440394 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.723198701 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.723098618 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.438090673 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.491161353 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.434937897 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.722323609 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.491496002 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.816912831 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.718415616 seconds)
  done (took 128.480824591 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.694905647 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.53669326 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.804276543 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.991683308 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.926649913 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.562961454 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.534661274 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.663293519 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.444069748 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.53322684 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.077481426 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.516404082 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.168167888 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.488338394 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.527374604 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.550318441 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.822746804 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.393628002 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.065153562 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.044824037 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.42931077 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.531735041 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.947678081 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.628337675 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.43269407 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.010419933 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.346850237 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.93310764 seconds)
  done (took 53.903941781 seconds)
done (took 534.440481824 seconds)
SAVING RESULT...
DONE!
