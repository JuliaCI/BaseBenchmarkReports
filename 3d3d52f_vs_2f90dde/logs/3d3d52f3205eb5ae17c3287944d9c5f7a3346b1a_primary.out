cset: moving following pidspec: 29046
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.351696847 seconds)
loading group "string"... done (took 0.566928942 seconds)
loading group "linalg"... done (took 8.071614611 seconds)
loading group "parallel"... done (took 0.170199903 seconds)
loading group "find"... done (took 1.232285053 seconds)
loading group "tuple"... done (took 1.874828164 seconds)
loading group "dates"... done (took 1.343246771 seconds)
loading group "micro"... done (took 0.222430585 seconds)
loading group "io"... done (took 0.990444744 seconds)
loading group "scalar"... done (took 40.629741944 seconds)
loading group "sparse"... done (took 12.834601031 seconds)
loading group "broadcast"... done (took 0.957323389 seconds)
loading group "union"... done (took 13.703560952 seconds)
loading group "simd"... done (took 4.808339594 seconds)
loading group "random"... done (took 9.121207262 seconds)
loading group "problem"... done (took 1.843860079 seconds)
loading group "array"... done (took 21.737045485 seconds)
loading group "misc"... done (took 1.811700216 seconds)
loading group "sort"... done (took 3.347451066 seconds)
loading group "collection"... done (took 18.773853793 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.553555987 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138093714 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.147204989 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138034694 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.16766281 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133333305 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139147708 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098783092 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.866258407 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163189151 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128121378 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.422297777 seconds)
done (took 5.506871023 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.189077451 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094114321 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095826215 seconds)
  done (took 1.262692552 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.08126104 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.142733324 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082627035 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.083257891 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.083040323 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082913004 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.083130402 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.082875284 seconds)
  done (took 1.714150444 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08883147 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.083950858 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081921928 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.0844733 seconds)
  done (took 1.413210905 seconds)
done (took 5.744259913 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.801791319 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.228146933 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.179472285 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.432934468 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150951154 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.193862512 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.661288344 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330465753 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.205858937 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091132962 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.126679454 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.361327428 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.142101088 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.661105213 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.096299592 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109560294 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.156156772 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.474311967 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087440201 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100562229 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108546781 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14774931 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101294549 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092464475 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168054207 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.086494277 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.157671521 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.102367372 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084785149 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.234252952 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.19104663 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682223219 seconds)
  done (took 10.858876775 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114043618 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113720868 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084903507 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141039451 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.116220163 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086186854 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091567144 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083553644 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.105473235 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144860469 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.107442913 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1209463 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082624047 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083243717 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.096774839 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.225802827 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103047316 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099501255 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084265507 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.09649468 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123570073 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094270272 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095719899 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096260619 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.146783283 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200303195 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115983636 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115858668 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.082468078 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100060955 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13377792 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144863939 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.084394263 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081467163 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140417629 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113248605 seconds)
  done (took 5.163831359 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.895227801 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.166168548 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.108809688 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151435934 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082592756 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127350083 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083694073 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09917151 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.22755775 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.372732206 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.643005473 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.154801734 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131208666 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.124689344 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086293454 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085763426 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.085924536 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.54890069 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.119077146 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105439309 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100900013 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089399276 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089131879 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.0835346 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090991098 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0825446 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090146656 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.131161609 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092518954 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.316228153 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143742523 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087129158 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.961814408 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.187096312 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086231656 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120316423 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185462739 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108989497 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.168169302 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085903739 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082020509 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174178992 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108063063 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083292938 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.227752053 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086016185 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10422257 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124569652 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139766289 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083376867 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084338962 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.192628114 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08410127 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100483427 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.173137519 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17196416 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085148615 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323201719 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.090410991 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090177015 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083922232 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.221635466 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.141187013 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087593797 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086661127 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088218454 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.087326578 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.403891997 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084813117 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.196599139 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085377889 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.09278691 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086546296 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087522258 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092570652 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092971732 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087548236 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086856082 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.089725184 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086565391 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082708239 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08306438 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094905184 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.40890223 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083185672 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088443218 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080662509 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081669673 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085556801 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112235347 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084390012 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085067819 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11641816 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084176074 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082776209 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080193289 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084445689 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.09438441 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086162811 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128316609 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086937309 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.229071351 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.11965215 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085703222 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116233609 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094468917 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084653166 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.482811897 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080830723 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081717189 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088994815 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085642382 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084359609 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082998724 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094366884 seconds)
  done (took 24.065932168 seconds)
done (took 42.059107445 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.264722979 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081694997 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082416008 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082324857 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082601059 seconds)
  done (took 1.756099098 seconds)
done (took 2.899742875 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.141613081 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11751764 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080239767 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11327807 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080480479 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116555587 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116263581 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092244533 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115229699 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080584574 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113070358 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080340686 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080191916 seconds)
  done (took 2.489075285 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096884672 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097095137 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083933654 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096020686 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080025763 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09586915 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095531868 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102330201 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095144101 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086745257 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077768548 seconds)
  done (took 2.145269404 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09517528 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09774664 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085644289 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097326873 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078919393 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097337755 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096962816 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101087174 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097503433 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089638595 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077835344 seconds)
  done (took 2.1480839 seconds)
done (took 7.915730645 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089673695 seconds)
  done (took 1.21427923 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.544784361 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.620757658 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.092719677 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116530791 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.207265329 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123043565 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.252834617 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.0979765 seconds)
  done (took 8.352032569 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.109090129 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096312797 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084211995 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083881373 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082437898 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086044345 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082793047 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084801386 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085983481 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084059984 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08490083 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08621574 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083502988 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085849501 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085115479 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082964027 seconds)
  done (took 2.593414969 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110163956 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.108749624 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.087020926 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088321029 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086382179 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.085727814 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088305074 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087437323 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.0845942 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.085912529 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089436864 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.087494212 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085784904 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078310698 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.087876554 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089473855 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084726998 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.088034971 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088317873 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089746214 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088657053 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.076939863 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08529701 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087742897 seconds)
  done (took 3.353236607 seconds)
done (took 16.647584663 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.121162059 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08360041 seconds)
  done (took 1.335320985 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.092340627 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.094745569 seconds)
  done (took 1.324112812 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.093062268 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079017667 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.099971733 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.089771517 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079684046 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078747112 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.098145196 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079451353 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078717058 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079012017 seconds)
  done (took 1.992733332 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081032386 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088089862 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.082640394 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09322011 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.086107139 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.077202117 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084456732 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.080777252 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.088803241 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076407491 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.08408233 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096261067 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083535766 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097650344 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084410412 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081935675 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.083186637 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.080179674 seconds)
  done (took 2.672006163 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078440827 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080309118 seconds)
  done (took 1.303620438 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080501968 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076253453 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07962787 seconds)
    (4/7) benchmarking "year"...
    done (took 0.079281561 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076598822 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076024175 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076767919 seconds)
  done (took 1.686090263 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.417730961 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.133568796 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340949365 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088181776 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.097652683 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.278384873 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083106998 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.087543338 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087820603 seconds)
  done (took 2.7990898 seconds)
done (took 14.260524664 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096197221 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.100440134 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109355196 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.397418874 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108017338 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.08207981 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.130576436 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.198257603 seconds)
done (took 2.37751495 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.225108494 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.801070419 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.503547021 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.22220886 seconds)
  done (took 2.675995786 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354140921 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.101581404 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075549873 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081316315 seconds)
  done (took 1.770418347 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082713868 seconds)
    (2/2) benchmarking "read"...
    done (took 0.083691571 seconds)
  done (took 1.316997041 seconds)
done (took 7.14083166 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081113467 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080582578 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.192591258 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.102602328 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080085031 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.078080572 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07856255 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082067211 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08254066 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.08229414 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082782632 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082388714 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081763775 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079314167 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079492929 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079561158 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081942739 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079920417 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079303799 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081733351 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079384031 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082002301 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079288109 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078778438 seconds)
  done (took 3.25296094 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.095581957 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.079517131 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083964287 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.083845054 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082434755 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083719745 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083737605 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079931309 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084492024 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082553303 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082126407 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082020629 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082106791 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08239063 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081835357 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081964579 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08440211 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07985222 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082138626 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082662274 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083938417 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080370818 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.082202158 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084107052 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082392498 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084399828 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082562688 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.080639344 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084234558 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082251402 seconds)
  done (took 3.645105749 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083733529 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077039292 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077272728 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086166194 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077057176 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077427705 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076624183 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078058474 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077916576 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076942092 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078519988 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076764371 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07720119 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077759326 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077491593 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.081065895 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094467843 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077220643 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077022338 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077402068 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.081066748 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077256354 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077235859 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079382489 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077566459 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076573794 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077275186 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077224299 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077816386 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076489732 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080934173 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081723338 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.077065551 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085621671 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081895487 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076874607 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082496522 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076397964 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077634174 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07643303 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076449849 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.077201369 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077065228 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085913143 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079213251 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080306983 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07917031 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.079986225 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079186995 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.080910625 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077320378 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078687925 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080741215 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078859967 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084021838 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078574202 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077936956 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076837431 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077743016 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077077028 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076865918 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077113431 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.08052857 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077593089 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094073465 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086026977 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.076870966 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07818585 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077878838 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080882461 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078679563 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092496524 seconds)
  done (took 6.877171927 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100250897 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100444915 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079846526 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.079444965 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075056547 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07789043 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083482764 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077825216 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079916894 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096926477 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078195721 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079976923 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079811279 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082862298 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078481136 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080188055 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086708846 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075174487 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077879896 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081719234 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078155132 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083431742 seconds)
  done (took 2.990897242 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161854029 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083789432 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11907253 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088270848 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083860824 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088516131 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08397751 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083874804 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084311831 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082050682 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081679866 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083678601 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084250086 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081734278 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081916038 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081552905 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084200451 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082095269 seconds)
  done (took 2.787694007 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091085959 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.080639522 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10183965 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.079867489 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080416144 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082639041 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08417111 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08792989 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082440077 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080662338 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087801406 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082292012 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082595428 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080228127 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082865355 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080406869 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.08302868 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080114721 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087817443 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092991878 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084747007 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087935219 seconds)
  done (took 3.032979318 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094241406 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082513733 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094791649 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082905053 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074936928 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077395386 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084016213 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079527043 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083724787 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.08155852 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079924232 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078195314 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08223064 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080009021 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.08280493 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079997975 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082252516 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079934883 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081948219 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074959826 seconds)
  done (took 2.807131588 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097349751 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080630646 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080909849 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086890011 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080516744 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080571198 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087528558 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.081050341 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081460839 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102341119 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081195415 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081637011 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087300553 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085367619 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081073597 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087124528 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089951337 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08738318 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080537507 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080549528 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101553925 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081449491 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08752705 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080740792 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080662376 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080960325 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081207647 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085055518 seconds)
  done (took 3.550984767 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080745815 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079661778 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077599188 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077747 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077588796 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077944045 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07805718 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078219557 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081167499 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078004167 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080421574 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.080782839 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080618241 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.080068259 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080346944 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.080678208 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079917345 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078068879 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078556927 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077905558 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080341587 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080091109 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080476427 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077958852 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077864056 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.080210575 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078089399 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078085637 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080085524 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077786257 seconds)
  done (took 3.550679648 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088654348 seconds)
    (2/2) benchmarking "in"...
    done (took 0.085949625 seconds)
  done (took 1.350291024 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076237667 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094431409 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076772726 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085453559 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083027015 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.080882013 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086843244 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083769885 seconds)
  done (took 1.838934348 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09918753 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.088654622 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.080154126 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.089125433 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.088830864 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.0988748 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141254854 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.079335819 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089865501 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080318226 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.096030088 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081583647 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090025275 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084762976 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090729288 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093321406 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077599549 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.084011654 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08130092 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.078075462 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08070129 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093309149 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089003774 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.075076566 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085050729 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106617621 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096190529 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.078932198 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086459767 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091836976 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089621282 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07393748 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079108137 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.079277587 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077575279 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.089083487 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098408335 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086651513 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091835534 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.079696151 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087700339 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.075262426 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088218611 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090502573 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096128193 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.079384946 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.0797642 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075649002 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081027674 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086146032 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.075318276 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085059816 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.075334519 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091998133 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088287041 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096822777 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079001975 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086056695 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087391532 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087114273 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090958633 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086263262 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08973025 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079212031 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095952642 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089424272 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091639322 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074830947 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.073696999 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077311337 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093507914 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107810019 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089085572 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.080131343 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079815912 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077113534 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08698611 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079840568 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088443695 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090781276 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.079183405 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083741968 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091533362 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084517946 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086731692 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085889696 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.077851827 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081592497 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080621022 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099142182 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.078346257 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.07753163 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080595783 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094802353 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089427559 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.07929243 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080925253 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091364295 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073838025 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.079525311 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.079962191 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084845628 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091734878 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082000436 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082524568 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091329441 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.085624691 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083548336 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084586468 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.075422942 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0789349 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08063632 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089558042 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07263665 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08487013 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081824375 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.078152799 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090156287 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.076758103 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.077843177 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.218622166 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095281989 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081682716 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07920479 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08906863 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.080341601 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082794759 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094411113 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079669637 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076101235 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076862474 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090056168 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.080683019 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087980011 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083207473 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086750393 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074897427 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.077791093 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083734709 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091768387 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083013448 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085545218 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089540908 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085755182 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.079549455 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091518156 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086707104 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081405578 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089093756 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083345408 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075167573 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081597624 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086635936 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078789481 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086745579 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081507552 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086223739 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.080086665 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078303945 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084925795 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080110407 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081287495 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084683354 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078675489 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094254253 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085913468 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075024283 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077364833 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.086403154 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081217537 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.079000272 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08177421 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08633071 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.079838243 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077418619 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.079452149 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085091561 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087109082 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083224877 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080098558 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089016198 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096534852 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.079208128 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086805711 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.078839999 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.080546531 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.079699157 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093848602 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089793604 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083392708 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086343861 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076933274 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089135973 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09142931 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081648503 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077936438 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081851695 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.082754156 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091188858 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.082990031 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.079484277 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078024043 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085635228 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.081541225 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086384656 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.078976758 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081271204 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084095049 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.077486819 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08472435 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079551733 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09347325 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086052929 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074588899 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081378222 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077351329 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090056734 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075281461 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080446397 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081810944 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.0800545 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.078575434 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086269308 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074308524 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091583863 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091477777 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084528893 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081258846 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.078148471 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090379262 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083701551 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085789424 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085649851 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087094024 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092726577 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080752866 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084556808 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092530062 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.077912035 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072745439 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08980841 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.076662685 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076919923 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.077482688 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.076560196 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.217724306 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088537549 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091230516 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.074612398 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087313826 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078978654 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082816026 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075677404 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088472869 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086548131 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08363176 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09215135 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080369121 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.079702362 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087720993 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.079209289 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.080342475 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.080598496 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086928734 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.079641635 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085812148 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08177162 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085455167 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081533426 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.07798269 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085654686 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.079544345 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085144651 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088687627 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.078747073 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085846085 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085970448 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.080198208 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086319871 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082510727 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081763494 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087057468 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085176217 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08466766 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086198223 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.074842502 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09134811 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.078613705 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092456866 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084916287 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.077060636 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084836107 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086745006 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.084116249 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.080104605 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.079952515 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085479951 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.078997623 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086531883 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091449749 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08093535 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094901759 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090640294 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085251936 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086312855 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084738745 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08483979 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081794482 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083258488 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.079694359 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085088051 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.079394772 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08761712 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086609095 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084195016 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08584632 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.080114389 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084586599 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08102118 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074548301 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081805355 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082077006 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.079437391 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092058336 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.079571778 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.081920014 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.078408315 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.080400494 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.078520216 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.077136284 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.085409989 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086181807 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.079954365 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089963861 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082199407 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085532987 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095184056 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07435992 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.078604473 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077725736 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081227422 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092129501 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.080193837 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092856858 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085006702 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082305408 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.077301734 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.080134823 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.07841716 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074651949 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077470652 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087835143 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080899249 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.078617866 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.078994737 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085651258 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.079221354 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09114897 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.077861916 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082410252 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.078488683 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.075703044 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081056032 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080991901 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085294539 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.078274926 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079723354 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.075876666 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.07741598 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.081738992 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084456105 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.077841421 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.218372235 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095728639 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081917324 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088432905 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082484563 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07574556 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087161869 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.079787543 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.07970464 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081892633 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087340009 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086977202 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080088612 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093634296 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081907264 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085958491 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079596514 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.077285433 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.079864161 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.079290893 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.078890923 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081940757 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.080887094 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092747216 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.07708868 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085757182 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085603065 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083316483 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089665864 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.079887616 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085798835 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08439208 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08146759 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085802618 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092909648 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.082688143 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087062432 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079839926 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085678383 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090204899 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081621627 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091326833 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08514945 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.080031567 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085247513 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081243533 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079692563 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.079295947 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.078817488 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090031294 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.080111175 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081987007 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082424164 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.078365022 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083842427 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082046181 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092825571 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086277975 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087448078 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.075442576 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.077436432 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08017637 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080896995 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085454374 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086519613 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089422311 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086243133 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083155184 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.078917564 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093779407 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089331185 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087389221 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080904738 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087399848 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.079951741 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086745633 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083939459 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08436964 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080580811 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087244294 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085954235 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082207502 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089970159 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087627776 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.080114006 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085739013 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.0858103 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085023811 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.075400694 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.079815907 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086048871 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087830005 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086253178 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079558911 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094959942 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080989305 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084653181 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081877804 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078893565 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.08836717 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.075040749 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085790924 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.080255679 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080308598 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07523745 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082140734 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080993624 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086234721 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081775725 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.074756464 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094288852 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093729221 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084888095 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.077870362 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0775045 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.074304888 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.074018124 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081024307 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.079031604 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084846799 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092107097 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080106201 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080089988 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.073310284 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077987074 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08496036 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.0859286 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.209526053 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078410729 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085175022 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086806046 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091722371 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07922619 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.080175176 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087608946 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086641628 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.077587119 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082814513 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077127819 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087411082 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096461263 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.079804586 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085964417 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089597985 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092923767 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.080350987 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.076314443 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.080250107 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085235294 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085274644 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.080487756 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.080471606 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098920172 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087274973 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081891414 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.078362611 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086423065 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081793491 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093372871 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0801115 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.079958595 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091156594 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086087262 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086459908 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09040766 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090193899 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086602385 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085456056 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.078728138 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084559591 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.078465012 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081831338 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.080506492 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.079769066 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084079943 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085906953 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081840466 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094910414 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093601128 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.082051036 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.076929245 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082049399 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082435648 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.075454367 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.080926689 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.078507818 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.078607217 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.078848379 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.079107021 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085733102 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08899016 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084033635 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.080014068 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.079322216 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07453747 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089162511 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086844438 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085688918 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.07706454 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.07973476 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.079893815 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087909501 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082661115 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.079025883 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085817732 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085193474 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085918057 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.075394771 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09110645 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079062198 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085904428 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082011073 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080292963 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.080218707 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086710033 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083600101 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081104298 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086691556 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.086106737 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081239056 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077945345 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.077543691 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089155012 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.077350816 seconds)
  done (took 51.629852012 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11380588 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077051683 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075261257 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075663875 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08534085 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076429719 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07577884 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076837338 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077017706 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078425962 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075665155 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075930315 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08351027 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090212145 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086216521 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080261679 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075637169 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076511424 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075856447 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077037504 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083766055 seconds)
  done (took 2.971070514 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.085816991 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090519668 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087631012 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094953136 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084391244 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083023763 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088011034 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083680855 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091293792 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086260052 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091758954 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083222019 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085629273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.086237492 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085982448 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083692382 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091193316 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084586855 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.083280378 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088638473 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083487297 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088236838 seconds)
  done (took 3.161367352 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.080292928 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.079648953 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085825191 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.074740753 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.079327854 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.074961489 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.081788702 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.077781807 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.081601767 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.081417883 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081905719 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.081339122 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085794635 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.075006899 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.082580416 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.077976345 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.120566406 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.082513527 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.079516784 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.080898699 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.07515265 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087069811 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.07497918 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.075686813 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.081821289 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.081859296 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.080211947 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.077770077 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.078808533 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081480524 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.079220071 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.078009065 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085725726 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.084909897 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.080934757 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.08166879 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07923553 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.079161844 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.074708702 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.077684557 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087845711 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.075083646 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07969995 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.086122883 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.077975455 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.077898421 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085999659 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.078909983 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.074609292 seconds)
  done (took 5.21936396 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.090074423 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.126523292 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.081733841 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107119225 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.092867496 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.085575521 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08324296 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108301939 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077428133 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.078153125 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.093460087 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.091761267 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078679201 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.083058262 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.085921567 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.079092108 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.079915095 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.078485047 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.081748195 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078427234 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.081552475 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085595778 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.092652835 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.090264314 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0820267 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077515167 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078044885 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.082517247 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.089622039 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.082725581 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.08312243 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.083742225 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.092654719 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.083652538 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078047639 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.080916948 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.093191841 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.078804406 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.081715333 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.076647814 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.080542052 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.082672375 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.085827837 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.094416848 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.079019644 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.0839669 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.078577079 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076238387 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.090101468 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.081024553 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.085804836 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.091008211 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.082020556 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.079374824 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.083450013 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.092743046 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.078435366 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.077529296 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.081375004 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.089603358 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.07677097 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.081852495 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.091182891 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.080967894 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.085159943 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09123369 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.08346752 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.082036895 seconds)
  done (took 7.171188134 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.089040618 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11066337 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095129521 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095810376 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089479558 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089349379 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090041592 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08927001 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088871035 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093295936 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089697631 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.129780232 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085282778 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092209766 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089572512 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089558936 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.08938803 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089144239 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089562033 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089209699 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.089592417 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095072477 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089225766 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.095265423 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092383736 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084930585 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088965979 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089147376 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095671022 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08865501 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092024133 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.089194659 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089137366 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095448904 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.092495252 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089485697 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.078953433 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089054452 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089466734 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089085991 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084616713 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096000693 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08925537 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085793783 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090269196 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08891065 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096181957 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.092419733 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09178985 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093321715 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.089524984 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095375929 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089192127 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089037235 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09550435 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.098060573 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095408456 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095604136 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089023093 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095045857 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095549794 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.098065235 seconds)
  done (took 6.980035892 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093831207 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086189989 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095133818 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075841741 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077611527 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085968589 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078415229 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.080545253 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087018593 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.086783735 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089031535 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085646744 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088828755 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088348334 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085391425 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08851756 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086623874 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085935249 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102364887 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08510388 seconds)
  done (took 3.012423443 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088868691 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.096321213 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.0811594 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084940476 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082990958 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08452389 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08237224 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082982011 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080824322 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083183431 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089067448 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08845554 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08074835 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08499028 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088780049 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.084509371 seconds)
  done (took 2.647926926 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095986061 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.084876998 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.091302139 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.079349653 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.08041977 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.075737881 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.078845687 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.074719295 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.076212862 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.09179799 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.079075686 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090191002 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.078926808 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.078350187 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.076006914 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084911173 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075569378 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.076218638 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.078883387 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.090290467 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.083238664 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.077813754 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.082775452 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.079354715 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.082349685 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.083627868 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.078241749 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080212099 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.076303331 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.079726727 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.082370845 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.082956666 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.076183584 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.076702928 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.078210094 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.09468511 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.078526513 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.079476872 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.084567729 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.078486148 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.078010875 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.081798484 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.078698615 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.080058806 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.07543553 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.079132034 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075339087 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.081818914 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.076657405 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.081581301 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.07900407 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.081828403 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.079656038 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.085827957 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.08130823 seconds)
  done (took 5.730417905 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093624441 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082755497 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0749377 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077809545 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082424425 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.080399354 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083288957 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.080876156 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081042922 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077670748 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081280297 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08280957 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081248401 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083174288 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081396241 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083015831 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07529404 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.080897008 seconds)
  done (took 2.761820225 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085327245 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080254698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.086886825 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07969017 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.079670439 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082014837 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075142075 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.07769798 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077865806 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.079707057 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079983889 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082314477 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077674498 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08208571 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080467566 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080123573 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081921854 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077881074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079657766 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075477187 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082442069 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078212818 seconds)
  done (took 3.050967796 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.108928721 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.098964526 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.153964619 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.095402341 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.10207716 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.08745045 seconds)
  done (took 1.93696233 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105776432 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114464196 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079726647 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083141485 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088303809 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083006964 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083762057 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083831041 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090483788 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088202086 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083855787 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091638343 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090442336 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09020811 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088658298 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09154474 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083669367 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083266371 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080835504 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095107688 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083826611 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091070692 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083701748 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083857316 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083900707 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089957789 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090745183 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088811161 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083671021 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090941546 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088992051 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083440623 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090816197 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088467158 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083086213 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090656033 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083814774 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095133256 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088406889 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089723672 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082694063 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088392255 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091052693 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087541357 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090852589 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083896398 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087428398 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083769891 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083928398 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097202903 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089452072 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089673211 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088910338 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091364535 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090867788 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097196945 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0881052 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089647513 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088098234 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088476763 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090463011 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088717723 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090137792 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08804763 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088341923 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089815492 seconds)
  done (took 7.140132763 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11758898 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080448977 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08348054 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088432859 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090180417 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083564627 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083649146 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084003061 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084426476 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080963024 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120704511 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084028554 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091021135 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090406749 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08390445 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083777295 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084636205 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090683653 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081050806 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097103623 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084176116 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090141321 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09025039 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090019421 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088460172 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088833386 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083913718 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083732227 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083845465 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083725302 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087711853 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083833735 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089834791 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080788995 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090040307 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0834632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083296828 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087395813 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083359142 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088789193 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09008996 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095325106 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083817024 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083621297 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0883851 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08370744 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083252081 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080781728 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083984529 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080357208 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08837738 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088733938 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088294782 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090003541 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083687367 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083655702 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083486289 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083538761 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084301461 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088546615 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089968586 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085104978 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097075136 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083712606 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083707025 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090423686 seconds)
  done (took 7.069284394 seconds)
done (took 147.318832517 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206906164 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183085462 seconds)
  done (took 1.672193481 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.090104653 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.118353467 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099529609 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151611827 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087408024 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121393148 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120326819 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097819031 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087036827 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087231582 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.087555633 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089701016 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152342051 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087437166 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08680219 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089695361 seconds)
  done (took 2.955835408 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.120074443 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180080585 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124240421 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.084948125 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.120436636 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.092979337 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085018046 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.098204027 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092392858 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087576796 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093199156 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093536973 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.086861685 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091136851 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.091827837 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092540981 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.086658056 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093059042 seconds)
  done (took 3.116942813 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119173652 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.110336561 seconds)
  done (took 1.531165153 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173368314 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.149230458 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.216964624 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.36474912 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16991991 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.159135178 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.157721956 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.154654015 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.127819384 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.151533103 seconds)
  done (took 3.124077727 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118782412 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170124386 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.285870597 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136062313 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091311143 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.110103181 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138225342 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.097499516 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.099526557 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.098928214 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.098880111 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093853841 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118594332 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092461083 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.088587846 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093781525 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121857147 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.087708641 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.089002328 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094485791 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121970608 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.086006427 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092342007 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088096476 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097405986 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097027527 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087493587 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08563545 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.093801026 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.089057132 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094920341 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108914798 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096613381 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.122287013 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.089738757 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.123573344 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.094678111 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092195377 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.089242178 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093011954 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.095878911 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.096312731 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.094159998 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094410412 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086971936 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.0940962 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087249745 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08579252 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.095862548 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.086920321 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.096065596 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09477566 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.122043965 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.087111257 seconds)
  done (took 6.912904533 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.123195385 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.122588378 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086737868 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.127441511 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120081547 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0858861 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.121999945 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11502954 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.124110409 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086533621 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.085238521 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.086740771 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095231042 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.096471763 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.131621699 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.123343307 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088693463 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.085938385 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123799485 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.123159221 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085459298 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117226898 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11395171 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.122535475 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.084160196 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086176835 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.084639395 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.085731833 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.091419401 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093653179 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.085416148 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.094269059 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.09891542 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.092787477 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.084180214 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084383562 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08440569 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.093871248 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095138471 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.093649956 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.092353799 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084033033 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084572912 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085914271 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.086024345 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08386172 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.09293564 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.093956255 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.092963308 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084419377 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.08587068 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.084902585 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085507104 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09383681 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.091911686 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.094522174 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.094013879 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084919986 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085467 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087074408 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095299149 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094812922 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093878448 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.085562352 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.094091679 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084705288 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095121559 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.097465128 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085343068 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.088865903 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.084908338 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.085139182 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085670585 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.092426195 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.091935963 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.086240474 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.084477665 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084917235 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.093897956 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092123139 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084251082 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.091464165 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.083506648 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084578206 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086022378 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.086225801 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.091983027 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.093833556 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085594425 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.084934063 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.084685742 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.08443549 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.083388818 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.090184672 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.092544016 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.092213076 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.091304025 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.084224476 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.091243195 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.090299794 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.084119719 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.090965486 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.083077077 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084400756 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083628049 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.090081123 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.089020434 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091132671 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082724461 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.219644083 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.095992676 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095820376 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.08606536 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.093129423 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094835196 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.093105592 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084701751 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095756486 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085496189 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.094749428 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084962151 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094462202 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084795021 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093554521 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.084655821 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083865664 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.085265932 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.093823067 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085965804 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084783115 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.08591875 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084818058 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.093690234 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.095814982 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086477077 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.092460273 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.09217391 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.086011556 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.093082135 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085010409 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.093506108 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085155282 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.086432248 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083611251 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.096024611 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.085134742 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.084514412 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.085223024 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.094550452 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084595128 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095019859 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092399859 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083839713 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095474415 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095164768 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.092209046 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095135788 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086392171 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.085510261 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085117509 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.085096932 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092543021 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.093347129 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086469433 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085082206 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091565487 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.094192484 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.083781467 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092490119 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092352582 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.092806367 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.085195822 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.085009933 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095115077 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.094687267 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.092529295 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.092151387 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.093292295 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085024798 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.091994197 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.092789118 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085290361 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098432007 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084970041 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.096741558 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.092984003 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.091562542 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.09324383 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.094052061 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.094237566 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.09456844 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.096791869 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084279266 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.08500376 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.093860371 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084960656 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.084901785 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.092281714 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.086342632 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085838377 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.096992427 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08492353 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.094664213 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083532572 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.092482807 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.083947295 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085579612 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097121554 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084000606 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.085291823 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091167232 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.083054494 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.089848503 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.092251499 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090408656 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.085187407 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084089631 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.091526671 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.091151754 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.083282826 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.221084267 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090425604 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.095189956 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.0927502 seconds)
  done (took 22.042600506 seconds)
done (took 42.674814264 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214143222 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168084006 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179135303 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.136948185 seconds)
  done (took 2.106089813 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121891381 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.114280873 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.102058792 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08346835 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108194631 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08413957 seconds)
  done (took 1.955066542 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274282118 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.202543543 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192812484 seconds)
  done (took 2.005807619 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.225412853 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.206045192 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.477529622 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.297089409 seconds)
  done (took 2.641570044 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.155241602 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.098442827 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.08113912 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.09810588 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.139438454 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.166832943 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.109563265 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.134158982 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.093036429 seconds)
  done (took 2.466782418 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.158923225 seconds)
done (took 12.68245518 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11667075 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086253476 seconds)
    (3/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.088576515 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.08262594 seconds)
    (5/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.278301234 seconds)
    (6/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12035593 seconds)
    (7/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.183774256 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.203426949 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.143194903 seconds)
    (10/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.102609294 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.090614594 seconds)
    (12/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092181973 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.198609345 seconds)
    (14/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.183784826 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.254450823 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.166931167 seconds)
    (17/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.095692351 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089799528 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.117820546 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08817657 seconds)
    (21/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.227595574 seconds)
    (22/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089378582 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.315201696 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.106339559 seconds)
    (25/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209647033 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.250930251 seconds)
    (27/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.210639572 seconds)
    (28/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.189420328 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.159173497 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.254643199 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089955782 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.08851538 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.09960517 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.106533856 seconds)
    (35/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.192934921 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096822211 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.190235111 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.08977589 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087747099 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.141446763 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.121584141 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078471843 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10549272 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.128600098 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.142807497 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.192512703 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.160916647 seconds)
    (48/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.236371868 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067726523 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 0.082862888 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.077558691 seconds)
    (52/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.226964565 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.081700613 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081494935 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096339658 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.087910729 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.193279682 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.204395998 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081068064 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.08782929 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.077976697 seconds)
    (62/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.193233259 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124936907 seconds)
    (64/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081641574 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087939275 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.158218464 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.106196789 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.086262041 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136746551 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089794109 seconds)
    (71/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067293296 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.10118101 seconds)
    (73/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088948131 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.172550666 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106137712 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066849872 seconds)
    (77/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.120565159 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.081542194 seconds)
    (79/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.095802445 seconds)
    (80/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10328428 seconds)
    (81/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.197671372 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.167725882 seconds)
    (83/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.199139799 seconds)
    (84/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.166802871 seconds)
    (85/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.196824877 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.10208918 seconds)
    (87/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.064596733 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.307753888 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.071174959 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090462757 seconds)
    (91/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067676312 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093014292 seconds)
    (93/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082880079 seconds)
    (94/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.132527024 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.086373205 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.197337565 seconds)
    (97/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.092902454 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.065583677 seconds)
    (99/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.094899249 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.082518789 seconds)
    (101/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.086163313 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.082733893 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10346652 seconds)
    (104/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.094325106 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093744956 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065580251 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.196312266 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.2256887 seconds)
    (109/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166620364 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089313094 seconds)
    (111/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.12544864 seconds)
    (112/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.218364125 seconds)
    (113/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.166138292 seconds)
    (114/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.085263868 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.195121419 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096543372 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.088156422 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172866514 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.142326384 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.105639809 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.082145529 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088487257 seconds)
    (123/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066125596 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066895418 seconds)
    (125/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090716031 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.109208477 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.083210905 seconds)
    (128/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.122983667 seconds)
    (129/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.134169593 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10610604 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.089497572 seconds)
    (132/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068003715 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.096793685 seconds)
    (134/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.168098641 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065648476 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148292629 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138950258 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.087164876 seconds)
    (139/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081860214 seconds)
    (140/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065454321 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.106983914 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129330639 seconds)
    (143/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.094517508 seconds)
    (144/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.0814283 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08181167 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.187593569 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.081863674 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.087121256 seconds)
    (149/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.077049554 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.163741891 seconds)
    (151/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.08870505 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.09409392 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065234266 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078323656 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.094326041 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094033999 seconds)
    (157/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195231889 seconds)
    (158/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.08255813 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.103342907 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069170334 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128517728 seconds)
    (162/309) benchmarking ("sort", Int8, false)...
    done (took 0.161439836 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067053004 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.107963718 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092820127 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.090593105 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067431551 seconds)
    (168/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.090765085 seconds)
    (169/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065342806 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141306279 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.161557035 seconds)
    (172/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.106226598 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.081287441 seconds)
    (174/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.082967569 seconds)
    (175/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065996325 seconds)
    (176/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.097207817 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153079859 seconds)
    (178/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078427713 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.169606387 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.172605821 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081228782 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.106036507 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067497011 seconds)
    (184/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.075969722 seconds)
    (185/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064367578 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.097577436 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.134052943 seconds)
    (188/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.087501891 seconds)
    (189/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.214024108 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065875218 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.100651319 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103696953 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.08878525 seconds)
    (194/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.128778009 seconds)
    (195/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.113195116 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064936237 seconds)
    (197/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.083391589 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.102358454 seconds)
    (199/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064563294 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.134155753 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066017679 seconds)
    (202/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.076067091 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.251601971 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.092148787 seconds)
    (205/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.122182928 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.070409838 seconds)
    (207/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.083880867 seconds)
    (208/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066661997 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.094579653 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.083856964 seconds)
    (211/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179496756 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.083226076 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.083125934 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090778658 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066092243 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.10919994 seconds)
    (217/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.096191647 seconds)
    (218/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065555404 seconds)
    (219/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066094417 seconds)
    (220/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.122631615 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067299758 seconds)
    (222/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.077788253 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.08980339 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.094842673 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.088245629 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194081943 seconds)
    (227/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.133617342 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.158407451 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089008294 seconds)
    (230/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077403681 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06576231 seconds)
    (232/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.08880495 seconds)
    (233/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066626141 seconds)
    (234/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.230501996 seconds)
    (235/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08230149 seconds)
    (236/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.136631856 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.087890434 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.144246978 seconds)
    (239/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079162132 seconds)
    (240/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.105710263 seconds)
    (241/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.065370911 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067885827 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.082740843 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.084595449 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.086289449 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.082017699 seconds)
    (247/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.084531509 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.102756361 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.082944902 seconds)
    (250/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.088226776 seconds)
    (251/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065883546 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.068516142 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.08200349 seconds)
    (254/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.093349978 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069800833 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089701695 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.079281404 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066337801 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094310111 seconds)
    (260/309) benchmarking ("sort", Float32, false)...
    done (took 0.149600574 seconds)
    (261/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065496099 seconds)
    (262/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06588545 seconds)
    (263/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.086620509 seconds)
    (264/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.088287719 seconds)
    (265/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.086584547 seconds)
    (266/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.077924639 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.087152865 seconds)
    (268/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.084854341 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069129938 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067873772 seconds)
    (271/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083055863 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.082562259 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066088414 seconds)
    (274/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.082551393 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.087968681 seconds)
    (276/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065060876 seconds)
    (277/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.082961819 seconds)
    (278/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08141238 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.086396038 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.082214254 seconds)
    (281/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.076916947 seconds)
    (282/309) benchmarking ("sort", Float64, false)...
    done (took 0.148024538 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.082029932 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06497053 seconds)
    (285/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082490674 seconds)
    (286/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.082413147 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065803966 seconds)
    (288/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.077583218 seconds)
    (289/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.087155617 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068076272 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.109709008 seconds)
    (292/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082488888 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.125047242 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081198443 seconds)
    (295/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.08706695 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.086805419 seconds)
    (297/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065235173 seconds)
    (298/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.064920357 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.184142885 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082164177 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.185116303 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.086419678 seconds)
    (303/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065143912 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.083158816 seconds)
    (305/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078990406 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081053837 seconds)
    (307/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.108354701 seconds)
    (308/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.076414073 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.081345145 seconds)
  done (took 35.852047913 seconds)
done (took 37.201575868 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100225429 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112079746 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.089686525 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.107064018 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097350292 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090420741 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.087402755 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.092253423 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.095627719 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.096314365 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.094918028 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069102201 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.091770984 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.091357194 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.089851268 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11084724 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.096788564 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.091199219 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.090728666 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.07944985 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.090717613 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.082397401 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.082105504 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06881986 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094159825 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.0864922 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.091696255 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.091238369 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.082196551 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.082838488 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08437614 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090965503 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081862136 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.094169841 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088731884 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.090815733 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.092064375 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.091953172 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.082555061 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082870262 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.091935241 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.081979072 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.089775583 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.088458257 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.087400324 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.086097626 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.090230368 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.092077738 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110639587 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08652541 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09210481 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.092755415 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.093855499 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.088160564 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.084745072 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.089746727 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.085488396 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110582649 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.090555198 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08696962 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.092228629 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.089150709 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.085763747 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.090316513 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.09036155 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.092648571 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.091853135 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.086339336 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.092757974 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086322613 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.081430505 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.090149195 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.084183294 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.081965999 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.092715469 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094560406 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.078230161 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.086265444 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089834905 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090047444 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.081614806 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086252059 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.081434083 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.086828889 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086614181 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068970912 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.084760014 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089408709 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.078947791 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.090822759 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.08955594 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.090641259 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08188978 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.091637897 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.079103292 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.085109967 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082229621 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.081512147 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.081288117 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.084508051 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.081218872 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086276733 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.09067272 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.081121407 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.086468748 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.094960956 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081919576 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.089057244 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.078777827 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.079191514 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.093293784 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091823078 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.081459392 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086121472 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.078838431 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.087374174 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.07876041 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.081919253 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081492768 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081645673 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.086284266 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081492527 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085761894 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.086876896 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.092994384 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.080689015 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.0830904 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085196648 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081509448 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.084923988 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.080610622 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.080507697 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.08021422 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074452385 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08490473 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.080011645 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.228607105 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089462879 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.091375665 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.082431634 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091868081 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086077739 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.087045894 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.086186339 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.078473389 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07358842 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087080127 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086497672 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.081404867 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.082122514 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.081196696 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.081706901 seconds)
done (took 14.869172115 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082998294 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147261407 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.107920581 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.107651891 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.099823591 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083431482 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.088702691 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.109280944 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.082473898 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.114740547 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.103209792 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.101389985 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.124875533 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.079586035 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082825939 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.084662008 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.082142293 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.095978699 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.109712597 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.106166447 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.127295073 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.080005067 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.104989088 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.104246009 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.101072308 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.108208231 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083595769 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.084393197 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086376538 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115632051 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.106209471 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.086337212 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083598977 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111194985 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104665677 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.095979446 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.083646467 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095134093 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.083795789 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.081996166 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.084143535 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109429541 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095395004 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.095045637 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.083755506 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.0910306 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.082110961 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.095078662 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102534829 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091872313 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099776299 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.111021453 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.082698042 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.097276055 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.078722472 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.097548925 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.089720772 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.082524443 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.082564459 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.087824377 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082252136 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.085677061 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.094971472 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.092632243 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086473949 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.097158295 seconds)
  done (took 7.71179551 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10110811 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11012023 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.098812373 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.099370462 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082643742 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082420602 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082795533 seconds)
  done (took 2.109371486 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083042715 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10535375 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.104681493 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104724825 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.094923698 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.105657528 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091205616 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083341068 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105638162 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.081865124 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.100644073 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111906663 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.083602 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.094043032 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105546851 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.082727146 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.10510442 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.083052759 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.083773625 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104895571 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085554217 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.106610532 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.0942744 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083446178 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093991463 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.083260531 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126586393 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091092376 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081798396 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.084171177 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081719678 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.121774998 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093438971 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.094787402 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081574937 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096057417 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.094591993 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083840332 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091781928 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092219009 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.094473733 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.084178763 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.082027259 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.0819008 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.085269917 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.092933212 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.082079532 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.084282956 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.083966211 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.101668207 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.082268492 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093965122 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083861523 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.086709621 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088867168 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085846718 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091294533 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.081900489 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.10072787 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081963041 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.098223309 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.097700693 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.09611056 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.100517352 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085528966 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093624516 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.096234832 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.084601134 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084988104 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.085205324 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.097467677 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.083772357 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.084887387 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.092697566 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.08294868 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.105120892 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.10524419 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.082536458 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.095900725 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.083753702 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.081823114 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.082977733 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.104986426 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085581304 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081245018 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.087272304 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084828203 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.083491991 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.082320677 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.087427604 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08211305 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.08843927 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.084584846 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.084021147 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085766822 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097537206 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.082629856 seconds)
  done (took 10.267891009 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085829835 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084477918 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.086034969 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.083611139 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.084232376 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.084488157 seconds)
  done (took 1.989361834 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.106376555 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.082121034 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.093746506 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.085883442 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.117806443 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.099256839 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.100686381 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.093100355 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.097721528 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.093166137 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.099553419 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.100388175 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.104447867 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.086148991 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.099931529 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.085212336 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.100013086 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.088583262 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.092844184 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086843802 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101191411 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.08658005 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086937965 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.10113519 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.089506749 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.085367062 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09459678 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.093093955 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.092594286 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.093804933 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.086445145 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.089182177 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.091732017 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.093252533 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.099582365 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.090731153 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084842727 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.090204065 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.085427954 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.089211745 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.100762342 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086415978 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.087405081 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.090856506 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095387628 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.091477326 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.090222077 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09506112 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.099304983 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09114663 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.090859225 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.084549078 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.089001472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09028157 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.091021681 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092871158 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.090594887 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.099514743 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.08621432 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.090715675 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.082192232 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.089266603 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.093428864 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.089351266 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.090920369 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.090166549 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.091155459 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.087163157 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086110832 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.085404607 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.090509028 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.082423247 seconds)
  done (took 8.074446787 seconds)
done (took 31.585768361 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535875733 seconds)
  done (took 1.963416549 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.625211772 seconds)
  done (took 2.080133769 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.532975856 seconds)
  done (took 7.985515598 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.375220194 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.459349058 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.740111138 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149543056 seconds)
  done (took 3.212948549 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.735720429 seconds)
  done (took 2.20478187 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239830898 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230636064 seconds)
  done (took 1.951294787 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.370152687 seconds)
  done (took 1.826924767 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.07273658 seconds)
  done (took 2.533913936 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.241720037 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.152962529 seconds)
  done (took 1.867814013 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.455681322 seconds)
  done (took 1.912884539 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.225407891 seconds)
  done (took 5.685022168 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230649484 seconds)
  done (took 1.7319377 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.253621831 seconds)
  done (took 1.718831152 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.70069922 seconds)
  done (took 3.161762673 seconds)
done (took 41.306366801 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098716442 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.101025027 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100606644 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096967601 seconds)
  done (took 1.84249369 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.090532216 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.088235438 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.090465844 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.086408595 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.09066296 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.086472883 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.087682939 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.089309388 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.086074612 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.086832261 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.086225394 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.086774757 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.089331016 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.087746202 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.085944811 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.089500234 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.090606345 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.086376023 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.090054492 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.086185059 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.084743542 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.088865795 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.089966175 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.085812826 seconds)
  done (took 3.573761669 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09386156 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089222311 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.091032453 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.087139004 seconds)
  done (took 1.832892923 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.092607444 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.102902779 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.101331041 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09240982 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.103719097 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099485932 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.083352739 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.083275318 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.083971161 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.092107261 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.082168496 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.108214558 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.100931328 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.092145931 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.094039215 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.079418138 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.081696896 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.099959678 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.092536512 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.092848836 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.084271025 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.092202494 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.082166621 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.102098261 seconds)
  done (took 3.687080998 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.093997754 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.114896446 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.093363961 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.104673432 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.105906104 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.079420038 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092494437 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.106832831 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138917265 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.078990775 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.086344136 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.079509984 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.087799263 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.079137242 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.093781724 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.12197951 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.12480805 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.082819305 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.111943515 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.079805883 seconds)
  done (took 3.436354449 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.087989924 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088243823 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087230945 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.082631839 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.093181485 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.088548056 seconds)
  done (took 2.007888985 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.083848893 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083861536 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.083250677 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.082712421 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.08839469 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083132514 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082003876 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.084007639 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.083213273 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.083250067 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.082847018 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.081708947 seconds)
  done (took 2.479387495 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.199875291 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.084073578 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.084017045 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08170045 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.085878608 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082753219 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.097228365 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.084124506 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.10900264 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.082718765 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.082586769 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.084419761 seconds)
  done (took 2.637033821 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212117749 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089314672 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246644829 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161422611 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119605083 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12424745 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12706704 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124712364 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14787141 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1105168 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171176412 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176878243 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119434832 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148502818 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103171778 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.114120059 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1643055 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180465103 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121006177 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174792366 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157121595 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141124909 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161218406 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117023415 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120050061 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130702402 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.089480398 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092627853 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181121416 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141365951 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152646229 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122727414 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102849752 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189275506 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173557618 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151708303 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159417754 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096911335 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.11343549 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143822684 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208407666 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101257376 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168491476 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120040216 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092073172 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139429989 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125130418 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.272958282 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.117834774 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104252728 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152742149 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191727845 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142753297 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099685302 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133750979 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122593093 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122052614 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12941275 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188390895 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166210736 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137111633 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.084519961 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122149512 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157733298 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142071932 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.121014121 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.136671117 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106863073 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146225301 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165746798 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132207185 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153057264 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.1259252 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101001935 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132377555 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146331658 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137529655 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180677501 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135162934 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.086399589 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133107952 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111381161 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093643301 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.156587433 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089045731 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185120714 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11496802 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.116904522 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141110078 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121508706 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121064628 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165489351 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149967814 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11627419 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.079328116 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115469681 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127603281 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149736838 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098566066 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118597283 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123421402 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.088217335 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29100258 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.092136753 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134300483 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090026912 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134299487 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140895261 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.090490182 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133851381 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116085583 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.114874469 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140916305 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165773113 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101214456 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093782513 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171971892 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13164034 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.113282093 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150833489 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162358037 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.113187182 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110470851 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15397315 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176549846 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103150431 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169725395 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11589719 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097215066 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.099143986 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133700868 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122893882 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.133558034 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094567293 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.127448211 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17175204 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.08807209 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108638034 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144621302 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091973646 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093775904 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117073289 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115601648 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.109239553 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110746248 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.11325932 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145486044 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13457619 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116882195 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134441895 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111039594 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173067966 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103707177 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.115023475 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115285626 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.083110757 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138985694 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160313186 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090813307 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163945009 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127682107 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280213963 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132685788 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097734423 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145667087 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09292338 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.084287047 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149299116 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121089286 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121231466 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.155671454 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125365273 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.131963605 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.127696193 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140972317 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138879684 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.137422376 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11711468 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.101272757 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125508247 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136112934 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.086724207 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.101991608 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.093042158 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117367123 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10773254 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097488113 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152269901 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133028185 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122624982 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126115389 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109814304 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156713804 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.089715561 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137067732 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.129483754 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108165812 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.157935602 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15977175 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142770966 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112694985 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14553933 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.08441659 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088316404 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09931446 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131927255 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097142201 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097077795 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125407895 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15611975 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138475615 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144279746 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134356949 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128529995 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162300393 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.083815306 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.129157812 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148018315 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130302018 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.115421932 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253596973 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.112705464 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150099773 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115937722 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189829738 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125288338 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135756512 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164698352 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.114063014 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092557067 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115722118 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141091419 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113293884 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147324314 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110506754 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100763558 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119127077 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.088597608 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108226124 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136292742 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130310549 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14730512 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123305204 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142804347 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091878694 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124961571 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133165306 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132075468 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.077606911 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129551079 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171710618 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10776477 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128557899 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158295039 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092525676 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.149790682 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178054819 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154495861 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097890951 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117759708 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131083056 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134962285 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129268513 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146003166 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116369335 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148951316 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121886618 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.097261048 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099567703 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107903953 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115364066 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104098951 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111609239 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121352851 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.106610929 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137771101 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113217022 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119530679 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125605745 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.109566283 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.103617709 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106467569 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177227337 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124876275 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173865077 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.109772391 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141665992 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161138633 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087534316 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090703372 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.089372113 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14190409 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095841466 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133702109 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.118146446 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122121898 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126263524 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137584737 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103559562 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.080284562 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116095076 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132461687 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12798535 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104926609 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107963969 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154666534 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.105486549 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089641473 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117205688 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121418924 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110300847 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166024157 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.073424189 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115028072 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088245648 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089946749 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12689522 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149199502 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.089392867 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105293664 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124520465 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115403405 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126320729 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10379696 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116428876 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132855152 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142210993 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128590669 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.097274901 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115241017 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128144211 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149405591 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107215091 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105024396 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165534965 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.418307893 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.168266787 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.101060966 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131410234 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1280334 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123468646 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147322104 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099406587 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169766209 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097428991 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145160122 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114603162 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101749192 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139678741 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126393131 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103565979 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154827143 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130665942 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098363417 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092593048 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128761753 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131640608 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116979695 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.090224132 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149279332 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.088705085 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144268821 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182175187 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095548332 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11785413 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1087549 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093695002 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116604183 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115081429 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100742017 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.113031539 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177656111 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.099002655 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154563991 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142823336 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123110954 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146591239 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115159313 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.651718201 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.090495345 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158491893 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126143743 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179486875 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112233476 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128972374 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122188149 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13132624 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149830657 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112859271 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.18911285 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295271846 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.125866999 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093216232 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113509549 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115396914 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.098886386 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119591404 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124935285 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125966472 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105176711 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.125631913 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132731631 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.095688965 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108917449 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16105033 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126766922 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15267974 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147346562 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097860946 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12913904 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145566886 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093513976 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127928133 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162129632 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117243865 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111562356 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.093752798 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.110507247 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180274159 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.087184932 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201594772 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131418702 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1217698 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127304292 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11933865 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140564007 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115798771 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132472955 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103053413 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.117751376 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125228286 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09414576 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.089800176 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116993023 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121102547 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.109727445 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107159217 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.111861967 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157402722 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.085530971 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109975542 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125887303 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150993039 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176317305 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09872089 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097132819 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129271659 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125178544 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.12091676 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130021588 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.091108013 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093388851 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.091171158 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.093742769 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113180348 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121283994 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126806151 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116901171 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162383306 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.093717621 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.234927158 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105938509 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113650833 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.081111468 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.088583904 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106065196 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10541794 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112533011 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118888984 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173097192 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.105126584 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.099620245 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099068931 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.08679511 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094755267 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130494575 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118470639 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124914804 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109609533 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.074208421 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114423651 seconds)
  done (took 63.406297943 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142148941 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.11733266 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.120371337 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.164040131 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140939111 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.219266082 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.170315822 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208501064 seconds)
  done (took 3.003996551 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.087456513 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.114000058 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.123453542 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.101268871 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.085217313 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.08644868 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.241516167 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.09897128 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.083921489 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.107576727 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.094741918 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.085670614 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.425129268 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.083245821 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.084428333 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07544812 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.084153485 seconds)
  done (took 3.67332739 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.394476098 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630371014 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.409673886 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.092299886 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.81875144 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112547981 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.198704789 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.159670509 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.099235853 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537942432 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.710993698 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148114415 seconds)
  done (took 18.930777755 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098653594 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.093077798 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.104924845 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.106034283 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09819865 seconds)
  done (took 2.118418824 seconds)
done (took 114.115335783 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.096691187 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.443392756 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069625962 seconds)
  done (took 2.157541875 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.104337838 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.102325298 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.102586215 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.099941145 seconds)
  done (took 2.033271935 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.091180168 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.093457165 seconds)
  done (took 1.802468516 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240622576 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.19444051 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.116438138 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.096790512 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094239316 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.094808121 seconds)
  done (took 1.908466779 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.086591096 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.089136677 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.08703565 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.09007696 seconds)
  done (took 1.975578167 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.088739749 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066287347 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067921721 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071505522 seconds)
  done (took 1.915975236 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.100768737 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.098531712 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.093529364 seconds)
  done (took 1.915503324 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.117147019 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.10628023 seconds)
  done (took 1.845112205 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.094685611 seconds)
  done (took 1.716005415 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102527412 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113946538 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.146961516 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.130163083 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.153629454 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.129394616 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.101016122 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.101800816 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.095376905 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.102336014 seconds)
  done (took 2.800881815 seconds)
done (took 22.337060501 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094649604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.385643433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.376493958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106207396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.701531748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.373279931 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987035389 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.109488262 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157016937 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.084596116 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101331359 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677668547 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977710187 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.34174375 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963147388 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.341239506 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.66593512 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.085528504 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.084648233 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.084652171 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971714192 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085313185 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.085240507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086667279 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.667323331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.390560909 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.086244986 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.34669705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086102833 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.087764395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.37318768 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.086516532 seconds)
  done (took 16.655746942 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087448127 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13746014 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.089456154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100958237 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.087159832 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.086967742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.087858381 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086070963 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13717934 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.085219751 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102156067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.085803613 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.089382712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086927776 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.105243552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086063236 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.08694543 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087026644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.08652509 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086273207 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104780361 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086198285 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086203752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086387881 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.086134722 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100763129 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.08644219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.086565756 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086663936 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.088115487 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.089043969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.086647491 seconds)
  done (took 4.597945321 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133229567 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.141289962 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.090039441 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122040306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.128712273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.087923457 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.16322056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.111343729 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145278065 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.086073541 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102838922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086363374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120945831 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086776409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.105542856 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086584864 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.086955303 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086570012 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086324991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086642953 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105529939 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086100908 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086272097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086739266 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.085960357 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100117179 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.086613657 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.086436835 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086115357 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.087647672 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09033465 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.086758674 seconds)
  done (took 4.857106031 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.087314121 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.089774397 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.097255587 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.097899331 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.083511265 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.086079382 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.088115151 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.085158433 seconds)
  done (took 2.355424303 seconds)
done (took 30.095424373 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.093671974 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.083287784 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.087155092 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.102644319 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.090053635 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.095127111 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.0809369 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.091048579 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.087465081 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.088393087 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.08966119 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.084768909 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.08612694 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.080714079 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.088490777 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.082038329 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.096360231 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.086567094 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.098198343 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.099264109 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.087136818 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.090712121 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.092580937 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.097137143 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.096842476 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.09710229 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.090831924 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.088094252 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.082552353 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.08482885 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.09040467 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.097244418 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084564857 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.094747654 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.081800334 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.081665802 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.085981621 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.085253343 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.095905563 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.090836728 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.083692619 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.091545417 seconds)
  done (took 5.374778047 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10080235 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.104987834 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.097987099 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.075828284 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.081207605 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079004445 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.103539782 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077587434 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077075637 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.104701482 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070223269 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.073903787 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07681517 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068712746 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073853005 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07146329 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076067054 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069071756 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073467368 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074318572 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.102697394 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067944682 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.092652898 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076521946 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070320161 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075963785 seconds)
  done (took 3.768391638 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.089903357 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102494004 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.108728437 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158885599 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.127017622 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.09580188 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097445795 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.107929535 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112321285 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.084488746 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.088742452 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.108631665 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108355346 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.089945768 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.084124881 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.099781487 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.099468951 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.086045976 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.090427399 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112882312 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.104533722 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101122381 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.109792068 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.10015799 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.083309615 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086463077 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.088602549 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.099853742 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.086434065 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095303164 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.089407044 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.088503472 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.085414144 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.095504259 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.086800566 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.083850324 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.109015587 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095540765 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097266546 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.085238449 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.094048095 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.085594265 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.109805177 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.145169827 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.083461861 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.088520674 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.08796663 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.095335096 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.08404569 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111937899 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096302949 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.08417716 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.084996121 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.083559082 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.083593857 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087088795 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.086459848 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.086976534 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.094810379 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.091073386 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10687729 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.08914272 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101940954 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.083635044 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09467779 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.083432764 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.085760973 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.08368518 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11266879 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086337569 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128433784 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.085170492 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.082949525 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.095517236 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.09464165 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090514823 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.084213029 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101779625 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095738115 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.088398289 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.092675178 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.087624785 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.087843445 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.114991623 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.085030982 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.084696037 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.083324343 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.088081599 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.087816716 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.08493882 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.096231773 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.083978225 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.088315809 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101961966 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.084031703 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.08496384 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.087961113 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.087441868 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.083804627 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.094594449 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.088252919 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.085877821 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.094501365 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.084943748 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.088030662 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097725157 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.09140945 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.083500722 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.086538954 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.088062494 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.085687067 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.085763476 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.087991319 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.086245233 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.090966433 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.091391834 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.090075235 seconds)
  done (took 12.614808158 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.177727551 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.170115809 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.087032153 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.161662377 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.093489424 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.095849782 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.165289717 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.109680467 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.084864635 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.087251193 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.085472948 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.124869853 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.121406133 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.131131028 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.09613551 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.08575456 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107953356 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.129613012 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.166312901 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.160310284 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108092739 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.093216096 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.088068021 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.086970782 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.087086743 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.095254264 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.101757962 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.09347842 seconds)
  done (took 4.886785358 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.094036513 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.119661402 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.088954721 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.107451259 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.104442808 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.083166506 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.086655374 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.087393364 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101683881 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.091824512 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.083498291 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.09038218 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.089526039 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.085372641 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.085500117 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.088812468 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.092197559 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.084527868 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.086174784 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.088303103 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.095003908 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.105018565 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.088935195 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.084836356 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.088138019 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.08497775 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075920823 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.09740722 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.085749822 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.109823947 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.082807956 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.087486302 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.099801602 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.08644007 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.084660574 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.085778875 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.082580647 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.082588796 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.086295025 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.081119881 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.081244285 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070993241 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.083913031 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.09288113 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098247717 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.069352894 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.087117526 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.088002243 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.087746884 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.080167597 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.087740565 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.087882076 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.088061447 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.092180578 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.08694038 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.087775219 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.085856486 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.089209776 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.091365431 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.084398453 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.078679182 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.081184894 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.087424845 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077945048 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.09763605 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.087508024 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.081405537 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.08288604 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.086179774 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097909114 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.085593793 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.087090072 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.080459315 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.084001936 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.087681848 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.090433725 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.08612794 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.081146611 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.085264672 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.085307527 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068794765 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.085034699 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067224708 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.087902508 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.080896063 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.081393509 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.085695182 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.086994059 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.093387262 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.084520025 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.08933272 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.08584901 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.083787378 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.087788321 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073036099 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.088220242 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.095750288 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.095657646 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.083194895 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.081122365 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.098603082 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.088632547 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.081934046 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07046494 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.089419362 seconds)
  done (took 10.834342181 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.107479858 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.083706231 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.102038536 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.108072562 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095050029 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.089961009 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.095435211 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.084622981 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.101606782 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.088678413 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.091443009 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.082302175 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.095912165 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.094358218 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.084280698 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.09549773 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.08633025 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.10318388 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.100470803 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.083425538 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096803619 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.100871204 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.100690571 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.102765426 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.101341613 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.103283006 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099664137 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.096500147 seconds)
  done (took 4.368493383 seconds)
done (took 43.482396172 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.742232584 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.91178379 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.728073943 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.938261902 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.886978348 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.745785667 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.813468954 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.71819998 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.968296318 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.764140886 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.04946088 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 6.718675542 seconds)
done (took 66.777032537 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.777003617 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.860032025 seconds)
    (2/2) benchmarking "String"...
    done (took 1.947607814 seconds)
  done (took 5.454181202 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.959825143 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.463524063 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.96240886 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.722080677 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.729966593 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.005544476 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.519290626 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.173590306 seconds)
  done (took 30.224446905 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.920638114 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.957615085 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.436602833 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.471647813 seconds)
  done (took 15.479156291 seconds)
done (took 62.720649074 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.709707134 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.733008153 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.755268505 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.70555497 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.81935808 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.730492829 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.866138785 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.961295693 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.7258205 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.7104592 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.728140709 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.154559695 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.734169796 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.878380328 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.725983848 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.725527587 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.79719161 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.191459901 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.884080613 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.738540753 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.745530861 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.785043979 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.734666992 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.738604091 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.741447644 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.727677319 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.127902178 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.728893326 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.357622182 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.728888723 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.758263111 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.050329174 seconds)
  done (took 203.14783248 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.725486726 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.631610158 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.685757324 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.763538472 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.052696559 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.910339184 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.821874229 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.129801954 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.731493091 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.752332802 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.904044868 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.725314051 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.926305703 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.700398792 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.753709999 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.729023984 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.894069501 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.944341841 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.75889918 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.879338421 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.740917864 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.721882703 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.674763899 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.886008239 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.745593522 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.759564346 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.743293207 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.888143259 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.917064659 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.884025332 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.757791534 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.734516104 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.950844164 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.600355795 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.730818344 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.742871617 seconds)
  done (took 167.551202917 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.918298343 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.729453226 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.727322322 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.727617912 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.740061711 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.727702519 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.848809337 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.852686477 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.374467214 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.15142018 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.78491475 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.727226129 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.530359083 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.73206517 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.795281575 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.741059111 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.729713014 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.744655959 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.754945945 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.731953986 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.729704342 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851122748 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.744203355 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.728008055 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.736937859 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.729870239 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.73482695 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.099637564 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.728811338 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.947817489 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.732244907 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.734489798 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.986530544 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.730159789 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.72989375 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.5846095 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.896479078 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.814084551 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.731541658 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.735227825 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.728562281 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.946958343 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.729090482 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.729840424 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.729325725 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.730302501 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.733140979 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.872662954 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.731189253 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.851331223 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.732901162 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.211358568 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.733417408 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.730779735 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.716921663 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.342857242 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.735188915 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.733196172 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.731082302 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.732397023 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.735561858 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.665364881 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.803615512 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.733417009 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.734508109 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736691275 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.730375009 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.946212935 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.734010241 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.208121324 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.792861172 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.858969555 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.85309773 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.734451705 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.797169835 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.824931428 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.731948784 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.730768262 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.731751183 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.732140179 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.813139397 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.732468285 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.861804689 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.741834829 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.733860376 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.784602137 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.731552201 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.79966323 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.732092838 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.567256949 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.734463366 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.732068812 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.997705669 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.80140024 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.73325824 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.732250014 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.733415448 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.856890447 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.854620459 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.443816617 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.735387067 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.57866596 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.87843591 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.734426212 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.879006704 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.737219752 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.814568287 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.740653752 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.734930509 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.733024393 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.767438333 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.733755458 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.791667486 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.733340333 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.10877203 seconds)
  done (took 397.347089121 seconds)
done (took 771.672939463 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.346469582 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.312721902 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.410121665 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.328749254 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.304126823 seconds)
  done (took 13.358306859 seconds)
done (took 15.015011399 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.817075898 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.824359806 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.758115285 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.820088365 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.754691694 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.819976511 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.805237309 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.759307808 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.788662786 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.758883444 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.79181553 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.760474739 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.746189631 seconds)
  done (took 24.862321032 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.973419026 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.97558336 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.801735659 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.973977298 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.777526614 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.967595911 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.890718646 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.88430892 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.884577737 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.747986922 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.745334471 seconds)
  done (took 22.282644339 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.971057358 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.973214509 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.807296874 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.964733202 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.780876426 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.9809699 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.909695858 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.884226371 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.885730738 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.748563456 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.745879349 seconds)
  done (took 22.309537984 seconds)
done (took 71.111763846 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.742725907 seconds)
  done (took 3.401039157 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.767703205 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.937036524 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.752099431 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.745392165 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.742977398 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.743705464 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.746082741 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.744771411 seconds)
  done (took 15.840667808 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.739726998 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.742196164 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.739421004 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.739423469 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.739390846 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.742320397 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.738804137 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.742196523 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.742420245 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.740011251 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.74191462 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.743407063 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.739746116 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.742773169 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.742638882 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.739665974 seconds)
  done (took 29.516157054 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.742446047 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.739773786 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.739920124 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.740182351 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.739209014 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.740284509 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.741833602 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.739108453 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.740014202 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.739465281 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.741649598 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.742075835 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.741061613 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.741799269 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.742035913 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.7425907 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.741696836 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.741759178 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.746680108 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.741694944 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.743243954 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.743239302 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.742666402 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.743901961 seconds)
  done (took 43.461144262 seconds)
done (took 93.877983995 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.46473868 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.46917993 seconds)
  done (took 9.596017492 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.746642127 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.744562922 seconds)
  done (took 5.156798946 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.745798985 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.746332985 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.745935894 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.745924926 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.745423833 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.745801836 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.745677201 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.74547505 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.746075965 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.74637741 seconds)
  done (took 19.122366511 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.746506474 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.745590799 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.742697871 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.745702006 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.745372005 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.742682383 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.746397953 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.745509027 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.745748312 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.743812155 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.745447251 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.744867661 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.745784617 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.742779507 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.746979631 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.743995568 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.744027854 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.744446031 seconds)
  done (took 33.070858568 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.746789563 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.746193043 seconds)
  done (took 5.155971953 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.744114839 seconds)
    (2/7) benchmarking "second"...
    done (took 1.744280458 seconds)
    (3/7) benchmarking "month"...
    done (took 1.743488766 seconds)
    (4/7) benchmarking "year"...
    done (took 1.744310357 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.743822838 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.74391436 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.743491727 seconds)
  done (took 13.870982923 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.748032775 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.879024638 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.939260453 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.340181385 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.748026297 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.750939818 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.635570771 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.750680897 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.751610172 seconds)
  done (took 19.206699099 seconds)
done (took 106.842121247 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.613847524 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.742621024 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.969681738 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.791360437 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.769682388 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.082983947 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.746687674 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.0304201 seconds)
done (took 42.413129562 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.838396237 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.464224246 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.516160388 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.770446229 seconds)
  done (took 15.416776957 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.728422231 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.017370617 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.743138946 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.535184078 seconds)
  done (took 21.693576093 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.109849187 seconds)
    (2/2) benchmarking "read"...
    done (took 2.089185858 seconds)
  done (took 5.868398595 seconds)
done (took 51.48531522 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749681798 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.749070233 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.747374086 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.74686663 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.749133592 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.746153053 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.746731618 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.748618276 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.748768951 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.750499052 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.749285328 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.749192329 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750112218 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.746482443 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74639828 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.746384146 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749419018 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.746559533 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74604444 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.748789575 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746734077 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749943097 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.746286152 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.74613797 seconds)
  done (took 43.616088834 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.749167943 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.747642416 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.749816553 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.750898899 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.74754766 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.750728917 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.75079885 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.747095468 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.749972156 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.750551699 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749012593 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.747826385 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.750224728 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.748459643 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751279034 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.747226498 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.750410884 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749339319 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750908905 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.74786451 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.750831104 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74869087 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.748604838 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.75199437 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.749333517 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74782944 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.751005814 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.750089003 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.750243759 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.748384014 seconds)
  done (took 54.151671575 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.756200226 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.760579116 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.752201952 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.751164493 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.751046957 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.752038263 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.751196639 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.751407293 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.750934318 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.751780939 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.751687517 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.751710121 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.751792681 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.751858179 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.752796586 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.751994673 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.752069126 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.751864457 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.752492756 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.75238303 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.752982896 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.752309367 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.752562841 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.753090543 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.754375721 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.752597035 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.752097908 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.753102248 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.752596714 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.752989356 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.753257656 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.753263333 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.753695074 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.753065147 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.753314043 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.752764945 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.75912482 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.761391854 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.752785191 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.75321202 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.75181469 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.752732521 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.752281824 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.75452593 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.752655712 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.752663304 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.753349978 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.753215233 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.754033178 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.752306278 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.755125091 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.753942771 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.754525832 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.754579729 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.753312934 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.754688438 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.754339498 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.754899816 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.755356421 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.754901407 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.754973049 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.75594579 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.753800654 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.754183906 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.755316666 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.755575229 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.75489993 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.75604112 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.753797815 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.755526544 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.756565251 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.75447063 seconds)
  done (took 127.929697683 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.75541203 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.753537221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.752423123 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.752187506 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.752110886 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.755040925 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.753762443 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755148161 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753284535 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.755999297 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755955747 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.753336828 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7524309 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.756012959 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753752381 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.752524512 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.757098945 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.75280298 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.755333355 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.754737979 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.75568356 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.752713215 seconds)
  done (took 40.264567898 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755989892 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.756170936 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.75282096 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.75589631 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.753307557 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.755250725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.756227014 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.755854698 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756779394 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754204642 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754514637 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756177136 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.753604829 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754136512 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754162853 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.754326313 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.75770836 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.753845104 seconds)
  done (took 33.263951739 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.754198836 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.755194634 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.756668135 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.753860798 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.754414189 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.757275219 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.75480745 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.757036155 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.757131308 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.754074417 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.756968192 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756708656 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.757643864 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754550482 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757940845 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.755640964 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.758281496 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754831273 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759361546 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.754817513 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.755693148 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.758058537 seconds)
  done (took 40.308918467 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.757962436 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.75803195 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.754849985 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.754619465 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.755357134 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.757093873 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.758318599 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.754672775 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.75785578 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.757814135 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756328943 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.758842758 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.755203645 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.757343458 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.755036744 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754905284 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.757257935 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.756682607 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757920274 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.755709013 seconds)
  done (took 36.806613541 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.760148757 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.758948175 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.758934872 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760212978 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.759788781 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.760209118 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760904532 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.760512668 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.758863445 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.759412048 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.760170999 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.7603282 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760281209 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.761035301 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.760880336 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760961452 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.758927707 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.759741363 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.75996664 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760825896 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.759813772 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.760249819 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.760756442 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.760341228 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.759752649 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760703329 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760285286 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.761571744 seconds)
  done (took 50.959972554 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759324465 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.759993215 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.757416511 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.757486068 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.757323538 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.757886017 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.757567946 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.757271886 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.76011249 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.75757689 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.760850312 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.760042642 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759997076 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.759938744 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.761717715 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.760984405 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761380523 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.759612197 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75813147 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757777574 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.760182275 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761811299 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.760438934 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.757965681 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758706379 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.760779308 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759003638 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.759296212 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761990963 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.759285761 seconds)
  done (took 54.459783531 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.779041324 seconds)
    (2/2) benchmarking "in"...
    done (took 1.781569951 seconds)
  done (took 5.23931077 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.759023787 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761400614 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.760786385 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.758430003 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.759274168 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.761929585 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.7627068 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.759174619 seconds)
  done (took 15.760717231 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.763037439 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.761540998 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.760425984 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.762797565 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.764582304 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.765192118 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.771899918 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.762032425 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.764935156 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.763661437 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.772154338 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.771331534 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.768391122 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.765298561 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.763659692 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767580742 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.763010205 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.761422093 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.761348558 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.76227609 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.761778674 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.766798942 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.766726959 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.759479731 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.765079097 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.776460281 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.770487868 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.761770464 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.764554833 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.770472556 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.763387823 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.759273684 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.762918085 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.763431368 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.762799468 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.762629288 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773617519 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.765577683 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.771609219 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.76426221 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.763577873 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.7603066 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.765962553 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.76736712 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.766436258 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.764037662 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.763489509 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.760618013 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.763303854 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.769558359 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.768894126 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.766657879 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.761237839 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.769760982 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.768191745 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.773721505 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.766424976 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.769760556 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.777412601 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.777186258 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.779432519 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.774873147 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.76919915 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.764496318 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.778250502 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.792147939 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.773459139 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.761735366 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.761439961 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.765643586 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.773728094 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.780498996 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.779351109 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.766037729 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.765406638 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.765815485 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.766339863 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765506977 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.774365141 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.771552924 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.765829407 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.765562513 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.778263068 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.789907733 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.767247173 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.765622927 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.765176454 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.765273246 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.766911001 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.779488794 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.767461693 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.76534449 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.765916695 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.767780118 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.76855901 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.765990781 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.766358042 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.769319899 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.763467558 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.767232761 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.766583499 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.772675617 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.778970609 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.766850093 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.767541549 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.776180863 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.766754299 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.769462263 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.776963367 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.767059435 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767628213 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.768983246 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.774702153 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.764480656 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.774155241 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.777353496 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.767478182 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.770952708 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.768007144 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.768255395 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781120229 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.797630904 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.767866613 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.767332648 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.776008837 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.779846609 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768664839 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.773624532 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.768557575 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.765223459 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.764376274 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.771887609 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.767700752 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.770864509 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767986155 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771316299 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.766203495 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.768840643 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.768944797 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.770481553 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.770664553 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.771472394 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.77174418 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.774010961 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.769077603 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.773760398 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.77732116 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.76948351 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.772367702 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.771517213 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.765946452 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.768805087 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.772175121 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.772778565 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.770339466 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.768678171 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.769992197 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.769891963 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.768755646 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.769769778 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.770876365 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.770678907 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.77663234 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.769620828 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.77683076 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.771095663 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.766146203 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.771194757 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.770744223 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.77120642 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.770101012 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.769882807 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.777059141 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.778345112 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.769837643 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.770117245 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.776174471 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.771641992 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.770509845 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.770626135 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.778175723 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.781320224 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.770695366 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.780524369 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.77197843 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.770362012 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.770497045 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.772427266 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.772072961 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.770675445 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.778054473 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.778721595 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.786482869 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.78185656 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.772711499 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.774975489 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.774311576 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.776152112 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.778325833 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.772135248 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.771557584 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.771291243 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.773297372 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.771306971 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.7752838 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.771848586 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.772793635 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.77244582 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.77156989 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.770893015 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.771311601 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.774219707 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.774852083 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.768727203 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.772624999 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.774230975 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.773602461 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.770087471 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.771676045 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.773753946 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.772832507 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.77332304 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.781979428 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.77063392 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.776365353 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.776196469 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.774540953 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.772092484 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.772232764 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.777872792 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.7754636 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.781929786 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.774425805 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.776959826 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.782781173 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.774390031 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.772777862 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.779008701 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.774121701 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.771683042 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.779384108 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.781978551 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.773589359 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.775455597 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.774954621 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.776183482 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.773811979 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.782321827 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.771299535 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.776048366 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.772976152 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.777046024 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.770837383 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.777846719 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.777959478 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.77574503 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.778575331 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.774586765 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.773663042 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.777482997 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.773393105 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.774720043 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.775506889 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.779521844 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.783070502 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.78236325 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.775136358 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.777671236 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.776603228 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.779595936 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.777755338 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.774910954 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.776675302 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789760091 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.784264724 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.784124121 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.779170325 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.775734444 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784909601 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.778849848 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.781397125 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.777783376 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.778135164 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.776934582 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.776637354 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.773530131 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.778153963 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.777033438 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.779911923 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.780601251 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.781600631 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.776658144 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.77737589 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.775664246 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.776579132 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.778213979 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.778707751 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.776766431 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.780897368 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.780838049 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.776420429 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.778651717 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786378698 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.779499068 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.779614717 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.777827111 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.778600313 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.777658875 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.779161406 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.777100074 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.782649788 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.786389771 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.783122472 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.789121642 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.780514358 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790915049 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.778468552 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.783768555 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.788011859 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.775038715 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.77648532 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.778583437 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.77824839 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786568821 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.778451096 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.779988057 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.78323505 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778391083 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.778280098 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.777557286 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.77798352 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.778617662 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.777676196 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.79037659 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.78158135 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.785663544 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.78439758 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.77564846 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.780328944 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.779230999 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.778455489 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.785792483 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.779244626 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.782815237 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.779380408 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.77992345 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.77922452 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.779172854 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.779589603 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.775799647 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.779774123 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788725817 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.780926387 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.785108275 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.779251526 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.790406827 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.779527689 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788975405 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.781164021 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.780862165 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.780670417 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.778931786 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.785290879 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.780566315 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.782615827 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.780984564 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.782701914 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.783279653 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.780839463 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.78397335 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.782547002 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.780194689 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.781682721 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.7935147 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80584197 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.785275114 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.785190334 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.777688415 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.784496884 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.785618691 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.781331257 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.780412305 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.786650581 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.793986737 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789427214 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.783014345 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.78142623 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.784269499 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.782027864 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.780369898 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.780428367 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.780745873 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.780718655 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.784355316 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.781107388 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788528483 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.782086399 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.783500043 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786596785 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.784013291 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.794811059 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.782283489 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.784797193 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.782619056 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.781870415 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.784601025 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.784285984 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.783162364 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.785638135 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.782503959 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.785930422 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.792638166 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.79244173 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.788779551 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.784814617 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.781993515 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.784687838 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.783981169 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.782965826 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.782217334 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.783297849 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.786464678 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.782701961 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.783904104 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.784314902 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.782020019 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.783588474 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.784025021 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.788506659 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.791329013 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.784954157 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.779570059 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.783056519 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.783342662 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.783606726 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.785232725 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.7942747 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.789250785 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.797133574 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.792735002 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.787835494 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.784937298 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.789761898 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.793307429 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.784309797 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.785629521 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.783074931 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.787859152 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.785139916 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.789056975 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.784407257 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.793934415 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.785140586 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.785231215 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.795474374 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.788670906 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.785562328 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.788261624 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.792210291 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.786034651 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.781260176 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.783766431 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.785914315 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793687002 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.789273795 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784374104 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.788700266 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.784753958 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.788590619 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790290442 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.784598725 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.788731338 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.782402876 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.788404462 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.785122197 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.785267396 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.782093324 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.785795715 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.785484837 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.791210044 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.794257064 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.782039857 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.790174956 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.787387261 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.787872864 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.785047469 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.786194666 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.782593484 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.782780686 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.785438562 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.785519439 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.78778671 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.791194878 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.78587463 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.788583437 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.78648032 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.78681637 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792716259 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.799775878 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.794696338 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.783632959 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.787677572 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.787947918 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.793161664 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.788846402 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.786949627 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788590489 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.789186083 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.786017537 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78760937 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.786925822 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.793929905 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805524005 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.787756454 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788909786 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.789254966 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793637111 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.787228997 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.784225523 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.788945394 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.790186603 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.792773268 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.796252177 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.787407165 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.796878632 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790241429 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.790100871 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.791837559 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.794252351 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.796904576 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.793756408 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787193787 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.788133026 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.795923423 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.8091616 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789150652 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801227495 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.820699855 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.790205383 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.789901844 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.788494092 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.789499395 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.789296586 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.792506606 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.789187097 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.788700432 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788762797 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.79041354 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.791644018 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798115266 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.793610558 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.788940893 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.78924721 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.790218992 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.790845763 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.78589359 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.789495509 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.787861778 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.790329577 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.78923846 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.789180825 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.792229541 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.804622472 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.802686073 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.790058822 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.790782479 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.78813916 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.797082045 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.797239621 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.803671058 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.798915145 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.790850335 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.791816806 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.793203632 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790682997 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.788413545 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.791690844 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.792834332 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.792122226 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.787975925 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.805071519 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800340224 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.797998221 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.790789805 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791681327 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.791344969 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793980654 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.791734168 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.791710903 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.793505181 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.793692172 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.795513705 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.790449404 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.791652699 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.797051349 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.79954648 seconds)
  done (took 1062.280062366 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78947311 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787901189 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.788837599 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.788384124 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787040066 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788943918 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787875796 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.788600507 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.788837431 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.788948787 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.789131334 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787954109 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.787951203 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.790661518 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.789253438 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.788612955 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78844824 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.789393869 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.790050785 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789953574 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.789307481 seconds)
  done (took 39.272324154 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.792056852 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.788831631 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.79030016 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.792961841 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789113359 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.791517017 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.790172481 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791954646 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.792699055 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788960355 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.794329306 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791175715 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.787723358 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.787541731 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790275673 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792618713 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.791814904 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787947818 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.789941063 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.789268601 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790594331 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.789196532 seconds)
  done (took 41.099855719 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.790013674 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.791289559 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.792950005 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.787698884 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.792036459 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.787940755 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.791110943 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.791472156 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.79058928 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.792370966 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.791372921 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.795653765 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.802326928 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.79863374 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.796573154 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.809883778 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.936120325 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.7915658 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.792151939 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.792232789 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.789935396 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.80089033 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.788742359 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.789759981 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.792925582 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.791937683 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.791417154 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.787467824 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.788409455 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.790814401 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.79267569 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.786994463 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.789897068 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.788565568 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.785822133 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.787672952 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.79034523 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.787180642 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.7817157 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.785187602 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.796983925 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.806913617 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.784783455 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.794136663 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.785006852 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.784239976 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.790195998 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.791128445 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.781162444 seconds)
  done (took 89.623121958 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.783972369 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.786835169 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.781143526 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.785934272 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.78454388 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.784491176 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.783870303 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.783807367 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.781830146 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.782655914 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.785491179 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.782163297 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.782132596 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.786036934 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.785735534 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.780777224 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.782697671 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.783041207 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.782796926 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.782803975 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.782984712 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.785525736 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.78541632 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.782536713 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.785406707 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.783357646 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.781875262 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.785865636 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.7830453 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.783163427 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.784846532 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.78549128 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.788006385 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.781903172 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.782739975 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.785483733 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.785418823 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.783082558 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.787750354 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.783457166 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.786295498 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.786038147 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.785708885 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.786813599 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.781718472 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.783150087 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.783481231 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.783148133 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.783984652 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.786272601 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.786109815 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.784977227 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.786682012 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.783232014 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.785795615 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.787072482 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.783421385 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.783573435 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.785266152 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.783610262 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.784158909 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.787364228 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.784617908 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.787294772 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.786222469 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.783325472 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.784686116 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.785241422 seconds)
  done (took 123.041391419 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786027203 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.786246868 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787420618 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786799175 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.786877566 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.786915085 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.78686884 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.788085613 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.787051652 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.785979715 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786166383 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.786924608 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.786249876 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.78642851 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.78633984 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.784299714 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.784962912 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.785713264 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.784988244 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78419294 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.778477402 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.778858708 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.778420449 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.778822413 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.778794158 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.77802382 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.778705373 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.778094537 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.778867476 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.777497055 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.778694368 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.778720058 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.777374489 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.77960263 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.779937414 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.778939472 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.779651831 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.779018911 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.779022588 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.778822348 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.778200255 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.778240562 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.779193838 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.777212936 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.77757976 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.778831819 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.777656842 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.780074709 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.777023117 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.776927778 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.778907534 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.777559102 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.777902027 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.778679136 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.778116372 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.77662818 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.777449625 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.777130882 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777620553 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.778729482 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777476256 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.77794365 seconds)
  done (took 112.118051937 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77783672 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.778453435 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.776218097 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.774332558 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.776874919 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.775956264 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.776946923 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.778068097 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.77750678 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.777193825 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7784417 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775305129 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776321304 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778120174 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.776394756 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776912336 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776529987 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.777548011 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781355001 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777413969 seconds)
  done (took 37.237392006 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.777399293 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.780145935 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.777656904 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.778321924 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.776829212 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.774554455 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.77775113 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777149096 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777025185 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776903103 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.777007522 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.777603118 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77449682 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.774942191 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.778166204 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.773876037 seconds)
  done (took 30.12587586 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.773327798 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.777899441 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.776078132 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.777471082 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.772699179 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.773236044 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.77516872 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.772938681 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.773101651 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.775320418 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.77424744 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.775505463 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.774086639 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.774427206 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.772855402 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.773807512 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.7703278 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.771019051 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.773214792 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.774046019 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.772890775 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.770586268 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.772519429 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.773014392 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.771027014 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.772631245 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.769023448 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.769422158 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.769329399 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.772285688 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.768593619 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.769803639 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.768638554 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.769040244 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.771928496 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.768500644 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.772625874 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.772664955 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.770842922 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.770961671 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.770510904 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.768414208 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.772990577 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.769727397 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.768306289 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.771561653 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.768549342 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.768537671 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.769182832 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.767827281 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.770780153 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.774135406 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.770352153 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.772055539 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.772301888 seconds)
  done (took 99.145317184 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771488056 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.76969859 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.768143133 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.772033527 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.77009442 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.767991691 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.770330276 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.768088048 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767597426 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.770058117 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.768653143 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.76971983 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767562875 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.770042739 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.769308276 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770496902 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.76656933 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.766513791 seconds)
  done (took 33.530796579 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.767112074 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.770227918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.770461005 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.767785417 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.767781592 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.770636856 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76840524 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.770475489 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769621239 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.767709009 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766152453 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.771089578 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769839822 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.771328362 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.768009352 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766829119 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.76917137 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771457228 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.767040991 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766087964 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.772098368 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769141495 seconds)
  done (took 40.604139617 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.769835078 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.770673435 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.785295301 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.790444145 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.790783892 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.804002172 seconds)
  done (took 12.396464764 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766673295 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769196139 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.766936755 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76883651 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769103467 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766468613 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766472513 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767190548 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768681716 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766747989 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766289761 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769011378 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768897402 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765830423 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768527834 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76867855 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765347443 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766955302 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765725126 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769274988 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765919068 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769350801 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767457826 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765365596 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765539237 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765277086 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768034051 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765366437 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766499642 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767214315 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766645613 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765532946 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767858399 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76537748 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768891636 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76768554 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764577752 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767562633 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768219505 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766187311 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.76681575 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766484143 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767446048 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765027465 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768108839 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764979743 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765282008 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764486949 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766237531 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769563369 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766862821 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76696004 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767566301 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76758293 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767430122 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76835137 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767055006 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765299825 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76665835 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765911208 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76546706 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767779182 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766117571 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765015701 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768322599 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764224314 seconds)
  done (took 118.303096215 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76419807 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765643964 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765811805 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765563925 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763949975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764738789 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765005154 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764422841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765871909 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764553736 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767692275 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765200065 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765730902 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764090376 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763834984 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764498911 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765162733 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764202618 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765652644 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76714128 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76518031 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764949109 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763950175 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765128506 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763576125 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7667195 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764041748 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76502478 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764288237 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765261651 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764138558 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764384076 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765184087 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.764015215 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7640212 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764531603 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765588562 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765718006 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765688126 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766214882 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765169386 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766896187 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76553415 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763315198 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764950167 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764409989 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765767797 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762653434 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762290053 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763190329 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764630388 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763356742 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765017122 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763936391 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762505151 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763456996 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764124442 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764975343 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763559703 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76535359 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763717855 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763736625 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765397312 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764151052 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763099184 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763388881 seconds)
  done (took 118.15463086 seconds)
done (took 2461.363471754 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.770769055 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.934087569 seconds)
  done (took 15.384791964 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.94237185 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.891882562 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.778116001 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.830711847 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.778030417 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.799970548 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.790839496 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.776969776 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.777800725 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.778410686 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.777426484 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.965563721 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.78082092 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.778237341 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.779363239 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.871527059 seconds)
  done (took 50.793461334 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.781278662 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.782321089 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.79203805 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.784057806 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.780884583 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.800125681 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.815230402 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.784834147 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.841208275 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.795748258 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.904131121 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.793247095 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.780121842 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.834460678 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.794757224 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.795582051 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.874200561 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.859427204 seconds)
  done (took 34.286888773 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.861679061 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.791244367 seconds)
  done (took 10.352270142 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.779291203 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.798381886 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.83138298 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.776978413 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.784565156 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.803119197 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.77806033 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.773080916 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.790589386 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.787213216 seconds)
  done (took 69.598116656 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.787404234 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.782624245 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.782146666 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.779680401 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.773800767 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.776810663 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.781902961 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.779979771 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.448833424 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.817778595 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.790242058 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.784834555 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.780840913 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.783224669 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.778518433 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.806219014 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.885029226 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.776591914 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.777183372 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.786812527 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.783234112 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.837981698 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.795012909 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.781820075 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.814587067 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.450947584 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.791566851 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.788095154 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.881859865 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.778125868 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.781853795 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.783366882 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.783274754 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.181506958 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.043221358 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.783149427 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.796262077 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.79039375 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.778560294 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.881752561 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.782763657 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.788921394 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.566306565 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.020549656 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.88775548 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.82339885 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.112161099 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.800243227 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.784600885 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.811397593 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.784682729 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.784834882 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.796488742 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.277158106 seconds)
  done (took 127.483959596 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.776756084 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.128536259 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.947811879 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.775979808 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064690063 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98889855 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.780611239 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.827293766 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.780514962 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009338054 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.034055597 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.885518499 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.781134424 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.77910149 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.77972589 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.775305992 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.937255828 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.853843616 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.778181756 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.776354227 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808700583 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.02077468 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.904005418 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.779334437 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.80797129 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.992346639 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.902574835 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.884247323 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.546838585 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.777031345 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.843165456 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.779569606 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.779128785 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.776013086 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.937310522 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.877084617 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.862878002 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.7792617 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.777514625 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.776232919 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.533272829 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980459997 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.878084363 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.912212632 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.033101709 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.985887367 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.561461155 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.778607061 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.516808897 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.943883268 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009868667 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.010862613 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.902444978 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.782027223 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.314841676 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.779434124 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.777000273 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030787466 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003174112 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.879622347 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.782819057 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.778912536 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.777511285 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.074153666 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.781985804 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.87712517 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.782258419 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.779665422 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.877187903 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880198888 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.01140071 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995153595 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.812671951 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.127395077 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.295365944 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.02788129 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.846616097 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031925903 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.781172653 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.777577414 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861139064 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.625560116 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.035642937 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.063358911 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.027995578 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817103589 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.503055353 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.777978632 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.006982447 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.002939954 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.04280539 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.026979277 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.020394465 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.095859901 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.779550379 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.779542381 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.099306601 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.907289772 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.782324175 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.129575749 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013691725 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.309193453 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.810249541 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.086703171 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.913770434 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.782464217 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.414427712 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.781934197 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.01185267 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.824288276 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.781108566 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.780648004 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.002251752 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.77220898 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.781711411 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.443595012 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.846522304 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.783422186 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016438584 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.782484079 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053494567 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.784511191 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.02172183 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.83303835 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815646324 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.014141753 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.032146451 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.784530153 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.024668844 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.029945427 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.899127169 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.007931128 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.429525972 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.782688684 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.072499925 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.785423404 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.781078535 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.953973663 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.781354309 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.928318214 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.785335566 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.078906649 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807218122 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.023047993 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.787192658 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.041423634 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.818730921 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.836407834 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.785550739 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.915624869 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.784486886 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.631941052 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.941471878 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.784231823 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.782283936 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.58908375 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.781147788 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934259742 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.011695035 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808510317 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.858025446 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.45475751 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.78298393 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.864974739 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.810376393 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.186740753 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.783704663 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.036762958 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.226609737 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.782086865 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.783159013 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.073174082 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.969842324 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.788048264 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.783350725 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.691159312 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.783859252 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.782659604 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.968092957 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.134237822 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.784873488 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.989877884 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787282375 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.914652301 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.786890993 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.863450004 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.127918517 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.783312842 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.783305446 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.784824726 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.784986806 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.783738953 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.050242364 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.812946145 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.282518013 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.925236172 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058342323 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.09798087 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.027646937 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.830779666 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.787313223 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.04364852 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.785733256 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.85089868 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.789126318 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.807774555 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014461363 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.786756869 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.99963876 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.059357448 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.638223451 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.836402509 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.787078287 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.78523052 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.785757121 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.934447625 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.874394372 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.789388269 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.785025816 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.903021507 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.910900634 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.997585691 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.788188531 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.885496975 seconds)
  done (took 884.992874022 seconds)
done (took 1194.576117193 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.785894256 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.788178028 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.770530201 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.787689772 seconds)
  done (took 28.838340701 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.792974589 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.791291767 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.791358184 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.790870899 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.79379623 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.791348323 seconds)
  done (took 12.459232759 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.840799358 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.789037465 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.788284487 seconds)
  done (took 21.124333329 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.860838372 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.177390343 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.927102153 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.217797747 seconds)
  done (took 9.889418814 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.792566051 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.792762603 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.79285878 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.793461643 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.794158613 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.794833194 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.792490951 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.793346444 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.79611619 seconds)
  done (took 17.851668687 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.860528694 seconds)
done (took 95.731488986 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.799614235 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.14717088 seconds)
    (3/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.893492706 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.885690869 seconds)
    (5/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.770332361 seconds)
    (6/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.908852464 seconds)
    (7/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.853424702 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.791867975 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.110658807 seconds)
    (10/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.890874611 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.806522464 seconds)
    (12/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.945357535 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.014448477 seconds)
    (14/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.773705522 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.282922416 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.793927778 seconds)
    (17/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.797963619 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.891867147 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.127582143 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.956788034 seconds)
    (21/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.91146588 seconds)
    (22/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.886069143 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.818898825 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.817871257 seconds)
    (25/309) benchmarking ("sort", BigInt, false)...
    done (took 6.79947594 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.836964307 seconds)
    (27/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.989952281 seconds)
    (28/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.06898111 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.774898486 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.795508311 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.025648306 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.817305643 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.881541626 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.688696399 seconds)
    (35/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.861451237 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.795502807 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.108061703 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.927822358 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.963091226 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.904264712 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.408673933 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.903769396 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.789629059 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.085740037 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.894479918 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.141052784 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.021573924 seconds)
    (48/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.161500149 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.969128487 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 5.46919201 seconds)
    (51/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.886216247 seconds)
    (52/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.775296046 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.280385093 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.951306277 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.049119129 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.815861805 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.148657476 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.034282197 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.953270698 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.81376191 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.885612878 seconds)
    (62/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.23565064 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.779317566 seconds)
    (64/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.900603397 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.980716902 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.793326328 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.574585434 seconds)
    (68/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.881386163 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.773833056 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.817989408 seconds)
    (71/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.156115046 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.772797688 seconds)
    (73/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.888717353 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.990151739 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.794570015 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.251710742 seconds)
    (77/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.883666308 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.797688475 seconds)
    (79/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.820399934 seconds)
    (80/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.814083227 seconds)
    (81/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.083685421 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.861966828 seconds)
    (83/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.089236659 seconds)
    (84/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.021965843 seconds)
    (85/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.096350074 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.916880099 seconds)
    (87/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.895304687 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.796167266 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.777570194 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.281836891 seconds)
    (91/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.777270093 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.031289842 seconds)
    (93/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.797682246 seconds)
    (94/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.666151385 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.820188421 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.795273835 seconds)
    (97/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.796656127 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.921999603 seconds)
    (99/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.287174294 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.801678906 seconds)
    (101/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.814365307 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.800580967 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.158678024 seconds)
    (104/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.799308301 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.226734358 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.998823619 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.10020469 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.143067149 seconds)
    (109/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.889620131 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.132841213 seconds)
    (111/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.971633178 seconds)
    (112/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.223825727 seconds)
    (113/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.927831733 seconds)
    (114/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.817803162 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.796357842 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.003384596 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.820354164 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.936051441 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.911200313 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.903350643 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.047520782 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.985044616 seconds)
    (123/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.981387766 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.782979453 seconds)
    (125/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.471988725 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.912661194 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.858207656 seconds)
    (128/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.902537249 seconds)
    (129/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.018768585 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.477724478 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.830791972 seconds)
    (132/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.529807384 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.054990847 seconds)
    (134/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.969823868 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.894503708 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.830724515 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.977315409 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.048923706 seconds)
    (139/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.955182994 seconds)
    (140/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.178515985 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.581148784 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.90895409 seconds)
    (143/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.93000745 seconds)
    (144/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.802938571 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.116055227 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.797113305 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.11235649 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.823621831 seconds)
    (149/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.892980313 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.796350173 seconds)
    (151/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.82527251 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.797848609 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.136080487 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.81665843 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.475841315 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.159221476 seconds)
    (157/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.798371606 seconds)
    (158/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.796296135 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 4.18352144 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.783515512 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.007137496 seconds)
    (162/309) benchmarking ("sort", Int8, false)...
    done (took 4.685747159 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.928597023 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.471460139 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.846710524 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.097652765 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 3.543074354 seconds)
    (168/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.819817607 seconds)
    (169/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.982924767 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.907313733 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.796261205 seconds)
    (172/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.800318804 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.991653767 seconds)
    (174/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.862175386 seconds)
    (175/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.791428225 seconds)
    (176/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.682916489 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.941851498 seconds)
    (178/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.933581461 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.721311396 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.782810613 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.159056383 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.420023535 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.968169704 seconds)
    (184/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.91543101 seconds)
    (185/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.112804238 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.625527635 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.80209783 seconds)
    (188/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.098841401 seconds)
    (189/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.26251125 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.785503541 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.802211074 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.712188898 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.823894214 seconds)
    (194/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.238120172 seconds)
    (195/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.747757285 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.173822495 seconds)
    (197/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.942913646 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.684136959 seconds)
    (199/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.934712288 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.80398777 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.216928789 seconds)
    (202/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.051421948 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.828610838 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.865558404 seconds)
    (205/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.860968512 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.955565296 seconds)
    (207/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.19101053 seconds)
    (208/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.889364874 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.80101622 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.259843516 seconds)
    (211/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.242028563 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.423095248 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.209266888 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.040213615 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.126479187 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.803908092 seconds)
    (217/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.396636589 seconds)
    (218/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.084593193 seconds)
    (219/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.100134156 seconds)
    (220/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.882610285 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.784862806 seconds)
    (222/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.07785571 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.476555793 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.361666395 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.019600067 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.800118241 seconds)
    (227/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.045012348 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.804625325 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.815618235 seconds)
    (230/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.781550208 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 3.192203695 seconds)
    (232/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.811989379 seconds)
    (233/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.672775546 seconds)
    (234/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.786394109 seconds)
    (235/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.896896065 seconds)
    (236/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.915046262 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.824428607 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.837710833 seconds)
    (239/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.69747021 seconds)
    (240/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.833820774 seconds)
    (241/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.009864009 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.983564809 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.804281899 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.327139249 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.899684368 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.119832243 seconds)
    (247/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.885459228 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.933006015 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.871588453 seconds)
    (250/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.824657524 seconds)
    (251/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.037381942 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.106433489 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.024081242 seconds)
    (254/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.939940575 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.783083558 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.745648959 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.943152298 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.977579686 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.199276162 seconds)
    (260/309) benchmarking ("sort", Float32, false)...
    done (took 5.510903852 seconds)
    (261/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.906129747 seconds)
    (262/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.082559542 seconds)
    (263/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.829651892 seconds)
    (264/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.82592746 seconds)
    (265/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.816519139 seconds)
    (266/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.979417068 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.950859974 seconds)
    (268/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.82772167 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.983553743 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.674087243 seconds)
    (271/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.810014668 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.20391498 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.903914428 seconds)
    (274/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.804293872 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.668132399 seconds)
    (276/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.121728592 seconds)
    (277/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.871053662 seconds)
    (278/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.886892885 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.821304297 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.145258537 seconds)
    (281/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.303869445 seconds)
    (282/309) benchmarking ("sort", Float64, false)...
    done (took 5.549678956 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.203374023 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.870202862 seconds)
    (285/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.945553221 seconds)
    (286/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.904861624 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.142429149 seconds)
    (288/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.042109371 seconds)
    (289/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.835455348 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.533677749 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.788942014 seconds)
    (292/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.98513556 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.785859218 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.246670935 seconds)
    (295/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.835308268 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.569828945 seconds)
    (297/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.784866714 seconds)
    (298/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.039376822 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.978970956 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.808397011 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.896652483 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.839470707 seconds)
    (303/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.980601684 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.80531598 seconds)
    (305/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.975220698 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.943544621 seconds)
    (307/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.845462957 seconds)
    (308/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.923289425 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.029537262 seconds)
  done (took 983.039825906 seconds)
done (took 984.812759461 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.835920942 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.829681417 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.81145317 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.834544793 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.925937352 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.845110829 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.823251319 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.813809389 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.860271713 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.862761843 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.812973698 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.843455812 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.815747733 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.814488633 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.813007327 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.830105343 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.120705294 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.840162725 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.830513947 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.821414866 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.831641845 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.812732237 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.863486577 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.842639215 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.816673809 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.816128727 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.816877791 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.83341751 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.925954639 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.819475696 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.816993913 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.825908734 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.121007957 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.83638285 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.810065009 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.83701219 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.825448032 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.823076156 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.819180431 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.846583673 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.206759501 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.845328469 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.81752715 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.815390899 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.813674719 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.820619786 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.818240947 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.820764066 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.830475643 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.831729907 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.201192126 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.864482752 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.818184001 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.816173078 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.827493399 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.816777597 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.820335245 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.836189233 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.837389068 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832461919 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.107814005 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.848510947 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.819892792 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.836723545 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.830452598 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.241622571 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.847305687 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.822911561 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.214831877 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.855582501 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.24495591 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.858876573 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.822398693 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.834920075 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.853556362 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.128217268 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.835918533 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.818736839 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.83284337 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.819062191 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.832738441 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830761143 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.828399997 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.822236709 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.835686297 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.847359555 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.831611378 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.820645521 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.829588602 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.837184113 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.829091714 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.833736011 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.826120443 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.810921438 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.832986158 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.823734472 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.826715971 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.828365476 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.822320125 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.829576636 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.211540652 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869219642 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.81455756 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.819749314 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.820908898 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.834431525 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.208726267 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.855529453 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.845085377 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.871507842 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.822080933 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.109654386 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.850019096 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.838218988 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.829831213 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.825156573 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.815301316 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.111034553 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.231689264 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.868475368 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.826959666 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.817671107 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.839476666 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.822919358 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.821852535 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.131005074 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.846880392 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.841244417 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.948041032 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.83364513 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.855013694 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.82200567 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.825127289 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.859906994 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838556272 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.85363796 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.827141799 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.839205459 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.838532483 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.818888188 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.834338809 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.831309983 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.820586452 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.82936327 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.814385415 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.855971795 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.835179753 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.838093465 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.839709159 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.943517051 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.820709221 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.112220419 seconds)
done (took 285.941880245 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.89547362 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.821067038 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.918444826 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.823470021 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.905280592 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.90781059 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.820975453 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.818588309 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.815363814 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.19975382 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.818418517 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.818603552 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.808363968 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.818235653 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.907578058 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.81867927 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.818309707 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.161084723 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.82120027 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.895236324 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.825131562 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.818483464 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.818452678 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.218728531 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.814048973 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.818033476 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.901740972 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.818262829 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.175726998 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.81811563 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.822461237 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.181524198 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.9197511 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.841800143 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.834600476 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.829605928 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.906459853 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.828087098 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.906773815 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.905634389 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.924311265 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.863675326 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.818363241 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.819089534 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.826533806 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.828908584 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.824115934 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.849292447 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.823739852 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.819192227 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.162904049 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.831558986 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.829523172 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.821245755 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.822070584 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.844176639 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.822555652 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.822178461 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.920768128 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.82378081 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.887696914 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.207238264 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.203389439 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.822770615 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.818628387 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.82017672 seconds)
  done (took 181.206905477 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.89080012 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.907518906 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.889692195 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.823550354 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.874421286 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.888116625 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.823348707 seconds)
  done (took 14.828914073 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.829622331 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.82298249 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.878159652 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.87143102 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.82428825 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.978860967 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.824119329 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.834681353 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.820282107 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.855661566 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.825281969 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.828275097 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.835292935 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.82750971 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.866716962 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.838484992 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.94384144 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.827344496 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.827441194 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.978177372 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.824470111 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.833835058 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.852826632 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.837965352 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.827915661 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.829322004 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.400508613 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.824786836 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818585589 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.824843274 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.822057688 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.869517312 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.823472532 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.824369969 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.823962391 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.939118487 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.827665246 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.822401014 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.828246016 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.825844179 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.823418834 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.826871381 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.822915046 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.821862808 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.826798314 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.851199936 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.825981554 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.823096612 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.822752349 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.827381397 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.852046371 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.827554046 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.821496334 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.821984885 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.871047549 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.83043336 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.830503924 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.824644836 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.829308772 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.823189775 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.981197084 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.877765714 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.825118918 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.872499493 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.828656095 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.822252346 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.823671618 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.824359656 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.918719773 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.825945172 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.872141139 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.822312491 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.987267734 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.849762109 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.826132314 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.830473125 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.83213359 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.830969242 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.823737629 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.83141037 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.821904582 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.828124415 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.834297314 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.826528811 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.823711149 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.937046705 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.96513644 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.824768154 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.839039397 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.832409217 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.825729863 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.874158685 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.827563808 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.825005891 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.886459338 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.947541261 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.854551289 seconds)
  done (took 201.442178645 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.829111676 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.832984896 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.825203964 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.840827497 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.830818937 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.828748325 seconds)
  done (took 12.721019883 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.829514908 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.832641398 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.830382043 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.826401865 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.829972718 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.831205479 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.825489162 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.832951337 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.830047875 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.828175173 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.830492682 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.83044309 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.826238721 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.830498463 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.830119256 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.826875563 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.830688372 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829882497 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.830148392 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827780518 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.974266742 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.826938359 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.827910115 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.837355032 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.832459881 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.828241053 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.838526402 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.834079539 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.834132449 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.841413311 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.830565513 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.83011753 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.839383364 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.837351553 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.835507541 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.832638371 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.836456338 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.835045956 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.823344036 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.836633971 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.835200853 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.827095175 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.831363486 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.833053427 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.829936955 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.839514046 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.833653602 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.839338319 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.830208528 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.833912835 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.834414088 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.830018005 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.832515716 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.829475535 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.84140133 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.833117973 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.83456294 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.831774455 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.831997935 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.840742744 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.835432786 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.836530384 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.835597601 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.836900887 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.835387492 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.835991871 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.834405122 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.839660608 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827771237 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.832041292 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.82962878 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.826690937 seconds)
  done (took 134.821874572 seconds)
done (took 546.769985908 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.126749313 seconds)
  done (took 8.864098408 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.970484613 seconds)
  done (took 8.774645042 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.099058948 seconds)
  done (took 9.838513273 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.841542023 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.852131248 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.832287163 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.822647173 seconds)
  done (took 29.101551629 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.910656153 seconds)
  done (took 8.644748681 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.83857941 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.816880528 seconds)
  done (took 15.428858007 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.96088021 seconds)
  done (took 8.696311549 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.317964182 seconds)
  done (took 9.065705154 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.840852303 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.831321932 seconds)
  done (took 15.437020966 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.805677431 seconds)
  done (took 8.548287047 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.012102832 seconds)
  done (took 9.859257685 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.838084183 seconds)
  done (took 8.650332529 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.866916295 seconds)
  done (took 8.611170474 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.872538548 seconds)
  done (took 9.619013589 seconds)
done (took 160.880954542 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.843609426 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.830862704 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.831368139 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.828334934 seconds)
  done (took 29.080111389 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.867452798 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.866013656 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.870970722 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.876720612 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.869037698 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.883640937 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.859690377 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.861114544 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.880107264 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.867842787 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.870988545 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.868302401 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.869033004 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.858260176 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.868336328 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.867765257 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.87748534 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.872622213 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.860365707 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.86943121 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.835804103 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.878168171 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.870458858 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.836853041 seconds)
  done (took 46.554011432 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.030828976 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.907299933 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.985404512 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.889491568 seconds)
  done (took 9.559376934 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.888668384 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.885775722 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.902268334 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.938514667 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.972959858 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.899240109 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.858004303 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.854508235 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.840791592 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.887277554 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.964023719 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.884069013 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.972749543 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.836906807 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.052495117 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.834877094 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.836114693 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.890220039 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.938086592 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.960243889 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.837305203 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.887974153 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.890362497 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.881127824 seconds)
  done (took 47.341310522 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.834603285 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.846650006 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.842563862 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.835953554 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.835049067 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.835733601 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.842125995 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.836902523 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.857340132 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.838608707 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.837829705 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.835117118 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.838291362 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.835105039 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.838361418 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.845442635 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.852535026 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.837458647 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.841815737 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.84244584 seconds)
  done (took 38.556010487 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.829633995 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.685670003 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.184014948 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.087985949 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.831486547 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.831578927 seconds)
  done (took 31.200493591 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.8501624 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.843398257 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.836530611 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.894588948 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.978632146 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.848118083 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.841394587 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.848615127 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.881907203 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.905121911 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.857275242 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.86630333 seconds)
  done (took 24.200669409 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.832889885 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.841124253 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.834472113 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.849839921 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.851074951 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.846409037 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.847161261 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.832551192 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.851763459 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.855948159 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.84677613 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.851939399 seconds)
  done (took 43.894500888 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915027293 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.724220825 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282414772 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298586624 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.363500485 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042807954 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.83125466 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.925370804 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.836061545 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106372861 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.201079838 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333236599 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.087364034 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.964292334 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.836624753 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.286792123 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128929176 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057614292 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859167185 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.456327354 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946179112 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42716161 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.517528508 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.951239266 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.046146515 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.967841858 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.096512235 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.794818328 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888311762 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84567049 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846082629 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.83888637 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109095385 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962826145 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911684159 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846718145 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.260567743 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.550397366 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.827193768 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.462795403 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.32091615 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.960102122 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840899675 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839549194 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.77194893 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436316313 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938250252 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.84256571 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.543373126 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.839028875 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846498104 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918141489 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.839475304 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.653548594 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.530965568 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.114287705 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.837943816 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845903776 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402145887 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843489343 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.542871366 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.783763864 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.932059904 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.520363084 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293409406 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.994302446 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.842540302 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842697821 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772657212 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.467762688 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956056456 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980588072 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.857056598 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492908862 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147739402 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.238877311 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903106907 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108961015 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.765772301 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.776301844 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060413499 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.795984036 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77228988 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.693099556 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.773464259 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054617109 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872708934 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.417572782 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876306868 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.931500924 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.849394173 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856275956 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848111482 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.062162993 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.717914208 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839796779 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.125899613 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.106372593 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863096929 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.931389654 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77608328 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.844067766 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093998472 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.052849828 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.173559326 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.298338898 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931144455 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845323606 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.859114408 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.839708185 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.853437029 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.112158818 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907285323 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.849098414 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96532446 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.799506433 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086547344 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867665091 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.945461048 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.181525422 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.083906167 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.15717093 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08736099 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905288534 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.83913061 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.844725226 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.524958204 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.46615539 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.065413708 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.838581901 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426400343 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860484774 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.846600496 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774986407 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.685257451 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.193524357 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.936962985 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.068638641 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.841164464 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117801408 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773474029 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986398765 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.836894164 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.065250506 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.484831312 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.918563033 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100386655 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.181676408 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.166825098 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861068149 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861018439 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940777078 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861773999 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.356660516 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103785042 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.845947083 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.844211334 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.520361749 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.906087216 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850489418 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.848959597 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.401894263 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117698723 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.872031177 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.850482767 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.73146904 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.856049645 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911482124 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.849089989 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.848949013 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.408545313 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.359810482 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.852000069 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.52842973 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07313403 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849702042 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.46595553 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018806619 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.858561746 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116214434 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914216889 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.779456361 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.544671875 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.546313094 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842227025 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776863733 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.843788006 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853576248 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854051832 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.039665893 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.123478714 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892845464 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.51151528 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.950566925 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857684553 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.850110872 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842139743 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.367340221 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846378387 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.537239399 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.856209931 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9792518 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.860809951 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.781208765 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.846775093 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850934595 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.846582214 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.802401657 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898299616 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.525122252 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048430517 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101584873 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.260000916 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860539167 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.504605646 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.956526016 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.870468827 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.122075167 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.568922045 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.85895512 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926793256 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.856067047 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.468865643 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.585731823 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417301958 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14314826 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161249807 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186251399 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.290735211 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.204958408 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.938218702 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077549124 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.37367754 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904290261 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.943043431 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790271567 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862489782 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.490812108 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23726742 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862949645 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070661044 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130860792 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.187722455 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978704632 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054344135 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876658377 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.724793776 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.886765956 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.366221698 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868572014 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.221254557 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046004923 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933614082 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.118177285 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.925065009 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.843261065 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178937529 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888101815 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.552958585 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.207688787 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.306467884 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.287938585 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067021919 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.851094068 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.290635642 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20399818 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.114665763 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.978009594 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775724329 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.856132814 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.8515323 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.841757084 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.829890783 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.727641593 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.101389657 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859882197 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080727338 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.045663537 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.227236623 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.753704105 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.852430411 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848616999 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098499697 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.584747042 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017075042 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.223000969 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.433456143 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853299382 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779838052 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779734601 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.548617736 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.855331609 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.822513052 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055912803 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.956861382 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.540467066 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278739314 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167547629 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.100717032 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.862411379 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.119081676 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12607955 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.345894715 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874745815 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.94912476 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.122994002 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.516874935 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.070567237 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084062694 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417179223 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071978003 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299587435 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.800351001 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.849241114 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064252031 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.072484588 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.188052015 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028005823 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.562375351 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.859184698 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228264481 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913055788 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.18921839 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.03961993 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.941991539 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863855183 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933488144 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861852264 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.861294828 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.859771706 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862326853 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.184402183 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.964600581 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.861755076 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933921712 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855887772 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.425025464 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.863988827 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123685233 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206605201 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.181295885 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919455195 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847866013 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86222421 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784352943 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982560173 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.295596871 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123071746 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.977810624 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.99288942 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878113462 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.135868012 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.157348061 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173878564 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128386272 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.74577409 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.543451642 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.98416229 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.075895813 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865331078 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.063031587 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066292871 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154527464 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318785736 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.050584156 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057410294 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127819326 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.229518067 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.853392688 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.442102471 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.863784757 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255738028 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.883881742 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.19344843 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106097919 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863633187 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981499095 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.862389761 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.046819338 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.304017451 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.471736257 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203535961 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.711960011 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.862752125 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124759411 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.18000819 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161363262 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933408828 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862831852 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.549438484 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992712531 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.723177943 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.075743621 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85344499 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067905975 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.565712515 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.863717675 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127607262 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163796258 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.853633727 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.765368684 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866816121 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.863719269 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07146874 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066799813 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103090634 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864118366 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.862490394 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.669412357 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131071524 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917920709 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789692908 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.858934852 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905651053 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.08481596 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87570565 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.373450622 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.555664448 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137669602 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.770001358 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875345755 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320820767 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239136124 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182918408 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.37992172 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072410129 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.411028841 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.739180132 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2406955 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.857305624 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.306927646 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242002143 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.857875573 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.40078174 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97658678 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.124344643 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18395831 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.864986659 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.594993107 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.888088923 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079394004 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225161844 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79284892 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856169674 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.886733325 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.860317733 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.845432508 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864369974 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.779763415 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347275578 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.704835494 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347249364 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.8627382 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.840644191 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.172234577 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44284718 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972349389 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883236753 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863029539 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.563296311 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.143236418 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.108901403 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.433591157 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.935809178 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.857788789 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858616317 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785080556 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.049841658 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.052179248 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13827657 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.267087569 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.977785445 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.862927173 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.067504169 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068607876 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.201579188 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993184505 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.04776784 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983794391 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.783380186 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.573742317 seconds)
  done (took 1653.839909255 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.859585888 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.877524632 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.869504454 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.916298995 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.880140128 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.877597027 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.905409672 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.96917399 seconds)
  done (took 56.932000049 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.852690671 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.020510293 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.864444761 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.862003749 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.868799722 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.855155226 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.027304158 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.872671961 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.863378533 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.86972579 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.859900776 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.887404398 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.114672848 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.885258373 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.858091795 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.840179473 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.866950618 seconds)
  done (took 74.048010797 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.861890445 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.087095552 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.917385929 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.854130431 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.570072683 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.873435216 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.849016054 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.91624043 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.862866086 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.907100717 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.482856061 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.893743784 seconds)
  done (took 89.846832285 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.874527261 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.863927803 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.867469934 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.864067179 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.862731691 seconds)
  done (took 11.1113525 seconds)
done (took 2158.002365826 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.088386097 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.041728199 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.088485353 seconds)
  done (took 5.900073301 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.003731198 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.054313903 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.171430544 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.150657694 seconds)
  done (took 10.151675585 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.138970417 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.227171918 seconds)
  done (took 6.133807567 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.180951626 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.892595891 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.276228703 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.855889643 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.85209042 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.859735227 seconds)
  done (took 22.346728519 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.858862812 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.864213656 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.859120953 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.864700869 seconds)
  done (took 9.216302096 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.835453975 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.528220721 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.844663373 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.854776444 seconds)
  done (took 20.834928308 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.06299784 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.994705588 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.004894706 seconds)
  done (took 7.831932733 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.084352043 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.087756934 seconds)
  done (took 6.944508999 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.023261071 seconds)
  done (took 3.791661554 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.892564029 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.131150469 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.350700374 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.387633428 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.558260048 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.688172287 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.180606731 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.093105897 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.307796995 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.317655903 seconds)
  done (took 24.680125794 seconds)
done (took 133.042763755 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.202898913 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.876010988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.060629891 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.215147633 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.216246396 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.065206694 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.079699613 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.206098812 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.89383656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.887136138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.217963093 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.199244414 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.02874799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.870371036 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.029863583 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.875297224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.086032694 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.221214816 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.901068573 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.1366188 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.084696905 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.864616444 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.057812213 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.87666152 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.087842579 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.013900407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.408904956 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.875698884 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.039136378 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.421721524 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.017110841 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.283607437 seconds)
  done (took 168.070212435 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.863538035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.862822329 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.864605265 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.86328771 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.30865631 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.865470762 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.862932334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.858763882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.264184472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.257096711 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.863955471 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.305316369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.860022214 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.861995643 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.856334724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.862633401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.416190381 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.862626644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.86070891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.863747582 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.863397183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.13288306 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.86120627 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.147933386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.40180582 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.863684995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.862570306 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.861937845 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.860934834 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.863607683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.865001064 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.861007372 seconds)
  done (took 208.709790903 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.863493495 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.86778072 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.865620927 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.864549468 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.86072851 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.861690765 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.865742921 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.86490326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.478809348 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.469938074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.864365126 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.885190033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.863571683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.86092768 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.864873399 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.861961773 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.864448607 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.861335928 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.86411173 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.869005954 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.866374235 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.436384064 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.863937089 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.442285081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.865562324 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.864945439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.866409343 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.86827178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.867437844 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.866628379 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.86460588 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.868094884 seconds)
  done (took 219.843188358 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.120061196 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.865324668 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.871744939 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.78010243 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.871107489 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.867240443 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.879074774 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.120476373 seconds)
  done (took 19.155387975 seconds)
done (took 617.56051041 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.360149683 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.209954468 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.043621591 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.892506759 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.231044987 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.949481095 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.887044676 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.956824275 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.501758082 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.959996583 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.544888691 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.915185511 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.623601312 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.919018917 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.015761845 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.946341595 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.489380474 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.574530539 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.077314801 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.069935679 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.073792037 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.816961919 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.973540762 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.555121217 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.654200344 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.869867561 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.966599098 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.482873181 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.901262865 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.053074221 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.648859003 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.191782834 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.910899217 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.891092581 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.948422867 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.924004145 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.168116714 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.909501973 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.017404839 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.625590246 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.062314007 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.427505225 seconds)
  done (took 103.019767745 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.859621899 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.856275585 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.856378463 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.856477018 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.85671581 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.859661952 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.859396863 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.8520784 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.854129445 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.854520383 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.85628279 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.861031499 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.857008321 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.859810705 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.858842011 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.856236981 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.859266287 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.856088455 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.856199399 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.859902597 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.854904248 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.855691939 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.877467369 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.854678129 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.859917406 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.858807282 seconds)
  done (took 50.09899999 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.876156146 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.032555914 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.119681521 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.895225578 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.87905407 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.878984548 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.894743127 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.880096031 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.87698454 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.876890521 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.979207627 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.878825447 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.893420267 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.120890939 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.893333678 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.877789445 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.87517541 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.87363559 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.039886034 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.890601305 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.892794154 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.882524429 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.896399897 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.889804074 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.881319963 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.878826879 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.880940097 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.328212183 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.883161507 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.979273965 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.923273773 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.898378935 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.269385532 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.125997765 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.930532766 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.884287608 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.875511484 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.980791227 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.88045995 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.875656391 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.896865436 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.883755793 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.119076123 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.382772604 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.893228527 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.878844453 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.345667197 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.992563143 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.919710517 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.890616204 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.120329843 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.894719338 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.875202715 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.879466697 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.91540236 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.885937689 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.878940057 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.225675638 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.889513009 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.894811959 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.886059881 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.879819217 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.042189512 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.890536476 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.0334195 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.886918135 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.883361674 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.879694748 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.125587166 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.893479285 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.37975391 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.892155493 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.87853104 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.978933098 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.0338349 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.366071515 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.889404797 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.042812872 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.291218871 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.901463538 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.883296771 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.316438307 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.90473508 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.882602966 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.882371921 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.881409347 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.880076807 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.921826427 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.893745728 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.296237024 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.386442449 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.242715819 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.904833346 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.893436073 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.87981272 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.225750056 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.887131298 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.876360436 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.115309424 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.39363439 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.892865143 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.884500128 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.368113223 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.89717031 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.895589606 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.889011624 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.126271836 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.897934622 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.921056572 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.882126818 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.887052958 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.881882466 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.904080594 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.889732797 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.880139123 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.365784324 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.997863872 seconds)
  done (took 233.085856625 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.874573646 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.874816836 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.871390545 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.876661715 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.872003689 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.876232891 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.873921945 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.873641825 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.876617715 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.872200958 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.876382102 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.87398396 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.878380484 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.881032427 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.88646013 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.879808786 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.476671173 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.873494559 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.876930212 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.873924962 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.560276318 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.884629942 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.877545077 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.878486071 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.878406677 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.87598926 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.875621476 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.879716376 seconds)
  done (took 167.618510879 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.885680632 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.002267885 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.900923694 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.911731473 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.891933112 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.876293454 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.906416031 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.898829952 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.88936036 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.880230834 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.880425999 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.945108656 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.895265918 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.981609361 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.916625893 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.918574519 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.989590953 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.892574065 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.875858323 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.882105845 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.911344717 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.874225429 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.943637737 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.012608925 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.900715436 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.000197104 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.880395107 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.885401656 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.886292779 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.002745041 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.900820792 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.94506973 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.915906428 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.901315477 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.009090232 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.002687083 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.991272146 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.915947342 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.890179029 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.881621379 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.881364708 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.86612349 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.003319204 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.903996606 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.886300193 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.988973734 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.904406788 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.887695726 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.893543413 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.883188523 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.89598164 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.906682599 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.956450229 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.019849485 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.91703861 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.909237047 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.911281931 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.167905835 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.893580824 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.986834783 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.876388148 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.002924186 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.905269284 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.866749289 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.886952646 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.889851593 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.914202597 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.918838775 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.987822084 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.892485155 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.988937366 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.920832395 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.892800583 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.884016017 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.887371626 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.003138533 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.003669358 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.9230047 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.92440925 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.919307806 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.880186483 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.888652503 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.869665306 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.904763568 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.890766167 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.004407572 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.004238208 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.896826752 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.889879042 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.89036612 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.889720308 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.913995643 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.014575969 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.921758344 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.975608111 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.956669028 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.964459702 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.899418889 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.900853326 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.894648643 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.951066774 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.900557989 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.897101994 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.21698976 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.956692445 seconds)
  done (took 204.196841131 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.250942223 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.937474464 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.943900612 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.219888172 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.249853781 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.855611569 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.934847386 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.935768214 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.960983142 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.121593335 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.002416843 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.953367616 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.926251913 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.912861246 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.935914613 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.960483916 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.944663731 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.296899813 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.046880191 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.119048526 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.922844584 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.226170085 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.218179014 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.330216399 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.972455345 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.350977989 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.517325533 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.073581839 seconds)
  done (took 61.926191131 seconds)
done (took 821.729652873 seconds)
SAVING RESULT...
DONE!
