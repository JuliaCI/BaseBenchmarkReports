cset: moving following pidspec: 21195
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.245950073 seconds)
loading group "string"... done (took 0.634767653 seconds)
loading group "linalg"... done (took 8.050524261 seconds)
loading group "parallel"... done (took 0.167024719 seconds)
loading group "find"... done (took 1.214892212 seconds)
loading group "tuple"... done (took 1.87534953 seconds)
loading group "dates"... done (took 1.355258425 seconds)
loading group "micro"... done (took 0.215908925 seconds)
loading group "io"... done (took 0.914635529 seconds)
loading group "scalar"... done (took 39.332994561 seconds)
loading group "sparse"... done (took 12.228861772 seconds)
loading group "broadcast"... done (took 0.95667897 seconds)
loading group "union"... done (took 13.43637458 seconds)
loading group "simd"... done (took 4.792907611 seconds)
loading group "random"... done (took 9.092651446 seconds)
loading group "problem"... done (took 1.843045179 seconds)
loading group "array"... done (took 21.321144089 seconds)
loading group "misc"... done (took 1.787083261 seconds)
loading group "sort"... done (took 3.34741909 seconds)
loading group "collection"... done (took 18.024188636 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.553018951 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137357569 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146496448 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134279933 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.163124596 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131912606 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138677038 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098538537 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.848470418 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.164451351 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.127553045 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.423186523 seconds)
done (took 5.464452407 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.186997961 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093980736 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095172459 seconds)
  done (took 1.250169284 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.081173571 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.142885724 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083203357 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.083158746 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.083273959 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083048908 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082246211 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.082898168 seconds)
  done (took 1.703433177 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08898904 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.084857008 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081705839 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.083528686 seconds)
  done (took 1.402492598 seconds)
done (took 5.69844787 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.796007141 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.227055076 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202035215 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.425123321 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.14799135 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.19325358 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.661054233 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.334626115 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.206647541 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092620765 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.126418471 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.362610616 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.142646617 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.647776053 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093214749 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109927655 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.157080063 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432771139 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087260272 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101175201 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108803163 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14685567 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104898318 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092531938 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168163452 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085915837 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.157690806 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.102196767 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084942848 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.233794518 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190651436 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682398982 seconds)
  done (took 10.806843093 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114535979 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114293545 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.085026852 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140753978 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.116159963 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085976489 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091172702 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083859737 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.105285894 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.145031178 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.107324121 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121570857 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082177212 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082639204 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097667133 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.229090688 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.098954633 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.097373676 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084310976 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.094164397 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124671547 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094019859 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095588455 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095255146 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.144478805 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195943411 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113214913 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113396132 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.079924325 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097219445 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133386416 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143526207 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.083760367 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079399419 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140778752 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111033142 seconds)
  done (took 5.121607454 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.992412615 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.164253368 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10603474 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147157121 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08080473 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124658524 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.081930932 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09679519 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.221224727 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.457661107 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.636204575 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.150955367 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128125348 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120525952 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084792505 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084927161 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083626437 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.52959497 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.113841616 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120765085 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097204411 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085702861 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085279482 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.080612179 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087567096 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080404987 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08732041 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.127601533 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089977318 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079801022 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.313793463 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.138600359 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084301311 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.042881354 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.089103021 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.181494864 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08384752 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.105416275 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116782397 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107909845 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153762664 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.221827224 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081884734 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.18181747 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081174106 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088224805 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082776244 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100952598 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121804452 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136200917 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.081614886 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082084016 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184431853 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080601645 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097838116 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.145951545 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169627136 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085062421 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.312889142 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.108149497 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088322865 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081739811 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182041069 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13760503 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084643938 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084097495 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085769525 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084831465 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381248979 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081793293 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.918758086 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086991529 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.093711536 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086593601 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087205894 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090502159 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090874699 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.106055848 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082281427 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.089036078 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082611085 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082153534 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082392544 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094960427 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.408061696 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083301411 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079846696 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088312762 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080667256 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107176075 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111952399 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08223742 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081412387 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116045024 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084244149 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082151303 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084419617 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095018269 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085623667 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127922754 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.189668141 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.112251765 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117749657 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085891123 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115387603 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080551896 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09470452 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085022837 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.483910442 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082265432 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089215621 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082456513 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084630644 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083257431 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095183087 seconds)
  done (took 23.582921886 seconds)
done (took 41.567597646 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.2641105 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081524999 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081944956 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082006154 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082085943 seconds)
  done (took 1.741811339 seconds)
done (took 2.873745566 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.141621176 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11506216 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081025874 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112898179 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083373315 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116194499 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116021059 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092429404 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115411596 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080265962 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113148516 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08042833 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080460821 seconds)
  done (took 2.475484209 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096747419 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.096893294 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083947018 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09607786 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079930443 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096251088 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095342702 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102106309 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095294972 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086319884 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07713153 seconds)
  done (took 2.129576675 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096264622 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.096950355 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083702713 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095263109 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076716239 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095315582 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095042836 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09865194 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095227084 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087456375 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077009804 seconds)
  done (took 2.117329188 seconds)
done (took 7.843351423 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089831407 seconds)
  done (took 1.200104205 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.544577982 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.599717296 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.092904063 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115422988 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.205876912 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123187713 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.250838105 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.097092304 seconds)
  done (took 8.315752701 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.120440172 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085340775 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083936871 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083354961 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086342842 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083006233 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082329119 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082792251 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08418241 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086090982 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086547679 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085095048 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087601792 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084600139 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083150022 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.0821454 seconds)
  done (took 2.583267691 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111070789 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.108920384 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.086722693 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08846098 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086175381 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.085588295 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087960044 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087868866 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084286778 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.08592685 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088781869 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.086405995 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085632086 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077124333 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.08769301 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089207648 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08432042 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.087345623 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087723001 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088874198 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088038362 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.076705233 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.084792893 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.086992541 seconds)
  done (took 3.336014212 seconds)
done (took 16.555839536 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.122000379 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084004397 seconds)
  done (took 1.326252934 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.092890864 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.094554473 seconds)
  done (took 1.316392512 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.093932426 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.078913818 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.099575206 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.089977142 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079780414 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07894935 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.097521432 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079077268 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079231952 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079263694 seconds)
  done (took 1.985620431 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080797094 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088575027 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.081861947 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.092839277 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.085765172 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.077006762 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083956995 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.080716468 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.088512901 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07589815 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083806535 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096400379 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083240635 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.096906972 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084239402 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.080867415 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.082830282 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.079804678 seconds)
  done (took 2.657709264 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079217558 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080063334 seconds)
  done (took 1.292207287 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079590398 seconds)
    (2/7) benchmarking "second"...
    done (took 0.07672697 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079245299 seconds)
    (4/7) benchmarking "year"...
    done (took 0.078720627 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07696939 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075894651 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076304313 seconds)
  done (took 1.671398363 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.414942523 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.131609979 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33153739 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086100281 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.094559203 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.271877441 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.080556262 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085460967 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.084901107 seconds)
  done (took 2.753236996 seconds)
done (took 14.140239156 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096510395 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.100995571 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109147119 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.394294004 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106013193 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.080968675 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.129165977 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194744555 seconds)
done (took 2.354132382 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.227016623 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.797680357 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.495332475 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219737361 seconds)
  done (took 2.648499205 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352257081 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.101000935 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072837464 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081041902 seconds)
  done (took 1.75346857 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083091181 seconds)
    (2/2) benchmarking "read"...
    done (took 0.083354385 seconds)
  done (took 1.308579065 seconds)
done (took 7.07983441 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081129093 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.195409 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.102947159 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.078320387 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080986211 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.077691465 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077826948 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080278485 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080094403 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.080269532 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080199453 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080062349 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080185691 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077830493 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077905009 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079507827 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077914063 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077765838 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077106338 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079793397 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077593451 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079835623 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078067865 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077426659 seconds)
  done (took 3.211975713 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.096225301 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.07989431 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084208285 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084145052 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081497659 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084048182 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.084033418 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079647379 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084440501 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081945561 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081869163 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081728249 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.081752975 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.081705921 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081759438 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081596146 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08385975 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079590392 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081895842 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.081835671 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083748788 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080137565 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.082031533 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084038639 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081422105 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081554735 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082027808 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.080194237 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083977166 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.081762993 seconds)
  done (took 3.627750673 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084279747 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077064351 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077774508 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086023581 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076652262 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077293993 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076361352 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077156621 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077625693 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076856585 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077500278 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076472211 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076687321 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077851048 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07742571 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.080584144 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094230914 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077098946 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076729087 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077599675 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080868322 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076522542 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076871548 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078750918 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.07646854 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076335035 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077423872 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076733628 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077356871 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076738078 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080705272 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080869662 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076727603 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084952164 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081169489 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076924821 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081285886 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076472797 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077919799 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076952355 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076378409 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076517751 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076456509 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085800607 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076888627 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077927111 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077933121 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078012649 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077925223 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.079239838 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076731705 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076737896 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078756297 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078215397 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081955797 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076455715 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077211067 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076732802 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.078030311 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076646271 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076495837 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076660744 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.080081633 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077448336 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.0945795 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085639176 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.076998975 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078243804 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.078162634 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08019279 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078076976 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092871027 seconds)
  done (took 6.83521714 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100884531 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100323634 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080004096 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.079427496 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075657096 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077803578 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083110319 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077319257 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079729335 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096731053 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078079994 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079851296 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079795123 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082763863 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07883421 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079964645 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086085933 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075179371 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077329432 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081484642 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077583751 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083018388 seconds)
  done (took 2.977807209 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.162708505 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083389383 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.119263915 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088186369 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083887056 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087980949 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083433837 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083632121 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08338188 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081627566 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081364216 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083479619 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083243726 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081577913 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081504848 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081285567 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083978993 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081735631 seconds)
  done (took 2.772482579 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090051784 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.080453772 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102087166 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.079828778 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079815141 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082136185 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083858955 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.087381315 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082416145 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.079892648 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086947741 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08237283 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083160371 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079996064 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082422653 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079632647 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.08186729 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079831293 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096435488 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083610535 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083728341 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087294692 seconds)
  done (took 3.012983295 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094089123 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082205116 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095732333 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.081639827 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075498979 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077560184 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083254667 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079609229 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083731402 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081223113 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079430148 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077393395 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.081439194 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079481779 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.082019151 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07953889 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081470434 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079972395 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082241966 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075379487 seconds)
  done (took 2.793701447 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097872079 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08070945 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081132989 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086980792 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080507677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080592851 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086469345 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080554016 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080862239 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10150199 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0805473 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081200687 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086788502 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084420604 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08062192 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087038525 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089531806 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086751277 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080778367 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080951413 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10160854 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080774614 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087139986 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08113844 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080689386 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08054177 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0807582 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085196808 seconds)
  done (took 3.534527057 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080655544 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079400835 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077553344 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078277371 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077719371 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077703542 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077578192 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.077865136 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080183908 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077799815 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080304968 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.079943507 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080293122 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079905753 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080012018 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.079800482 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079573715 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077329144 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077687301 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077386307 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080430067 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0809186 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079846278 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077914115 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077637845 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079992466 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077552611 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077678663 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079788263 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077676767 seconds)
  done (took 3.531675655 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088477236 seconds)
    (2/2) benchmarking "in"...
    done (took 0.08642155 seconds)
  done (took 1.342382449 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.0763439 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094623533 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076716029 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085072041 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082574433 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.080946908 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086417775 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08335647 seconds)
  done (took 1.828844241 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100231154 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.088935336 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.080036439 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.088568058 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.088371463 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097511387 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141739642 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.07934413 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089400249 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080440959 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095977712 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081369516 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089441263 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084541357 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089772878 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093984076 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077274065 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.083960026 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.080898755 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.078099156 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08031944 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092691745 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08918671 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.075121888 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084849424 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106177926 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095368148 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.079910085 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085967709 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091651885 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089417189 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.073759241 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079013625 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.079250964 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0770603 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.088129154 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097210682 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086643608 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091752894 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.080079566 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08707157 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.074386686 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088093305 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089806095 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095488122 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.080005189 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.079678647 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074542492 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080137073 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085792477 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.075058605 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084640652 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074091143 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091879995 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087014021 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094557729 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078442153 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084964462 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085870934 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086278485 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090614343 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085675727 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089069007 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079402171 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09435616 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089012529 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091242184 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074225758 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.073654491 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.076994905 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093062034 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107457729 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088571634 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.079362991 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079570459 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077288281 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086483247 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079564806 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08816268 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09027744 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.078923915 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083660471 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091836429 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083926363 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085583004 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.084861208 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.077743032 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081322914 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080005008 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098840847 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.07779892 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.077471813 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080715088 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094561985 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088595742 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.079349373 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080557597 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090598312 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073746916 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.079382376 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.079307788 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084282221 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.090868943 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081848241 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082142319 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091068593 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.085498751 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083123998 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084317013 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.074899496 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078184838 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.079570873 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088829402 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.072070213 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084261641 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081490906 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.077405971 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088880628 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.075968415 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.077473394 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.216079098 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092357927 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078910982 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078121161 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08784769 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.080168237 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082918668 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093531462 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078852826 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075924152 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.074966417 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087528752 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.078732611 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087239748 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084012253 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086600273 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074812623 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.077300208 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08352852 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091409657 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082709429 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085420155 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089560781 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085518294 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.078883236 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091407444 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086736691 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081656466 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088591105 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083937959 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.074742315 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082312751 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086756812 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078353439 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087236906 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082180699 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086056478 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.080199364 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078812031 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085004103 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079931725 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081797532 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084581632 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078576191 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094544992 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085717618 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.074518586 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077277956 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.085621086 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080428251 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.078505642 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081052001 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08546023 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.080032644 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077797136 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.078760637 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085300609 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086911353 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082304488 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08012079 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088906391 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096181805 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.078773181 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086220304 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.078455562 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.080563645 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.079392517 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093070667 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089412957 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082656503 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086108724 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076716768 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08881073 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091022742 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081279867 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077925667 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081378376 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.082748005 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090872305 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.082395611 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.079672573 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077929084 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085084681 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.081800527 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086107059 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.078592527 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081397755 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084050383 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.077384002 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.084498059 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079606533 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092799022 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086642096 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074259074 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08105697 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07773346 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089895354 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07443442 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080287415 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081642169 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.079136744 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.078076312 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085442613 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074268591 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09094812 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091549935 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084228863 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080521961 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.078308425 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090133529 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083458649 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086172469 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085041867 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087123645 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092288059 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080299286 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084730762 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092219599 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.077248355 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072906548 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089639371 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.076172527 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.07636368 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.077481449 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.075939473 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.2165223 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088585312 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090664589 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.074886617 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086859988 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078577719 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082615494 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075876959 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088988274 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086800918 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083137295 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091446686 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080652853 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.079402955 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086893807 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.078896109 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.079992151 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.080236066 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087120213 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.079489411 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085871723 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082325829 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085108931 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081948853 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077506876 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085729857 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.078981471 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084630694 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088519612 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.079741455 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085164055 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086439021 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.079329538 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085919687 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082922724 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081976019 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08728944 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085574969 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084257483 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085724439 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.074988073 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090891575 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.078418977 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091585105 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084211896 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.076730949 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084321088 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086219304 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083623791 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.079705966 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.079803177 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084940621 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.078924632 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08608894 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091290716 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080683317 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094367349 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089777702 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084512333 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086324725 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084364277 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084722297 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081317853 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083347995 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.079483406 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08519989 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.078790214 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087669478 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086400971 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084083592 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085276699 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.080174842 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08461903 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.079873031 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074307028 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081784217 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081666689 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.079331822 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091828476 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.079174892 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.081947412 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.078612372 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.080027094 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.079192102 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.076726104 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.085636219 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086289237 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.079739505 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089477035 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081448381 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085217277 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094124936 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.074086149 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.077891865 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077491659 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080754442 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092781214 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.079577867 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092609024 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084172663 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081777133 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076936241 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.080068744 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.077576895 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074089595 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077167818 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087177545 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081215352 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.077615744 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.078391682 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085294234 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.079406095 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090098578 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.077038542 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08177923 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.077944531 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.075599974 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080225111 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080226934 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.0844698 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.078667471 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079280507 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.075491664 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0770491 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082048558 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084091741 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.077256876 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.217058813 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092588136 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079729441 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08746893 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082660996 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075175362 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087312698 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0794633 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.079141485 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081676006 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087279793 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087427197 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080221438 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093769789 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081410607 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085430502 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079461838 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.077429389 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.079356728 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.078813041 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.079200978 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082229655 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08102657 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092709465 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078391654 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084884636 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084638109 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083099555 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090410037 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.080812802 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085107006 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084205249 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.081242852 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085638718 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092821512 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.083013648 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087165342 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080389831 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085328855 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089421107 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082104247 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09115949 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085661594 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.079760089 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085270355 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080456906 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079406064 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.079499103 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07884176 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089033543 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.079715773 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081494411 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081736987 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.077903706 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083463598 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08140519 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092187301 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086079685 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0866523 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.075159719 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.076863934 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080284089 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080524688 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085029033 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085782326 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089379504 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085978808 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08279149 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.079127691 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093822491 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089398295 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087108755 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081007728 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087234615 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.080225434 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086822657 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083704883 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084494252 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080861416 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087607317 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085232666 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081807358 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089775517 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087506247 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0801693 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085144321 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085448164 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084296579 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.075122988 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.079615432 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085701404 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088217017 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085994538 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079147837 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094533849 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080493249 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084205274 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081908178 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078830556 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087991382 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.074728401 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085642823 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.080033674 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079956546 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.075221848 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082185564 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081194603 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086138475 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081414902 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.074465535 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094285054 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093238204 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084439788 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.078123645 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077723601 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.073782356 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.073530525 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080614496 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.078960496 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083623243 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092633497 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080101687 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080025278 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.073249252 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077714189 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084759305 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.08536129 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.20818695 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.076181379 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083367113 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086015084 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091736298 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078551176 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.079365148 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086923931 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086586075 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.078137082 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082317478 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077696684 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08717458 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095922622 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.079601724 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086206171 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089708371 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092928141 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.079743903 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07498369 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08028252 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085886448 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085544781 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.080986701 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.080750087 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098826289 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086772846 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081794259 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.078267399 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087321028 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082666029 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093064498 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.080704625 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.081117243 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09171909 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085659523 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086936064 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090078974 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090589356 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08600142 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085509972 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.078885569 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084084833 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.077882757 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081950649 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.080607441 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.079441168 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08402117 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085633278 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08138164 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096629291 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092924654 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.081671822 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.076949054 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081925666 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082221913 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.075073127 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.080710576 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077470552 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.078360324 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.077893403 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.078846026 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085741919 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088040188 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.083829961 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.079764908 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.079329522 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.074767988 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089088926 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08612037 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085707027 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.076628853 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.079478802 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.080068598 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087552702 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082487867 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.078460341 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085709643 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085221805 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085477648 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.075342077 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090774891 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.078708207 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085594179 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.081586146 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079278765 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.079948632 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08716339 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083208113 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080818279 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086197258 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.085924092 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080994582 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.076921846 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.077253602 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088903489 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.077357735 seconds)
  done (took 51.445689996 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114459178 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076674065 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075767266 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075408043 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084776691 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076094884 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07508424 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076618291 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076557947 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077751296 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075050563 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075138815 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082905003 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089889046 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085247574 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079646326 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075427712 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076505266 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075544551 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076366648 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082808995 seconds)
  done (took 2.948400999 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.085411974 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090919446 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087414673 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094547591 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0836418 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082952422 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088200519 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082622938 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09087255 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08555935 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091525208 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082925732 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085121686 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085497584 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085464681 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082815945 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090792239 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084020477 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.082879928 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087467324 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083180364 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087406224 seconds)
  done (took 3.137250853 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.080760753 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.079454599 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085027124 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.074755952 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.078593124 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.074886841 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.081535441 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.076736882 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.081728132 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.080763609 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081170353 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.081081143 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085645955 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.074705595 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.082335122 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.076659409 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.120022303 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.082026935 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.078868041 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.079927282 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.074737224 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086222152 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.074876065 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.075009773 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.080816436 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.081119994 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.079817518 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.077383641 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.078933954 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08146197 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.07902031 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.077195172 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085580621 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.084996036 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081355435 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080833189 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.078478199 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.078744863 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.074577437 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.077733458 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087288963 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.074822093 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.079570799 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.085560451 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.077300464 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.076857507 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085793835 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.079215319 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.074571642 seconds)
  done (took 5.185951057 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.090329701 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.12614825 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.081045761 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105999872 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.091878375 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.084816488 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.083636164 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107593057 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076470752 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.077552802 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.093309355 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.090988054 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078719656 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.083476248 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.085150446 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.078348173 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07919669 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077419511 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.081328001 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.077886888 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.081607314 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085083172 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.091758788 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.090848028 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.082939105 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077933613 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.077715803 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.082602669 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.089172936 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.082054594 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.082857347 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.083286962 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.092092181 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.083294612 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.077671173 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.080229265 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.093555407 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.078311877 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.080644508 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.076540616 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.080633931 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.082153477 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100827386 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.093126702 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078781957 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.082835751 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0777218 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075825148 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.089114962 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08004599 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.084840903 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.090268892 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08195651 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.078105929 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.082418259 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.091817856 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.078273466 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.076570952 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.081135082 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08910892 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076001079 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.081834302 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.090285541 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.080610994 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.0841657 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.090371809 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.082849911 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.082019044 seconds)
  done (took 7.143471256 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.089260026 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109343297 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094512216 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094184593 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088174937 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088658908 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088375031 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088548312 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088668732 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092247826 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088821161 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.128445152 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084507837 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091251105 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088646868 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08892913 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.088489226 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088370957 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088217019 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088085728 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.088490183 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094461873 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087889252 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094885499 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091503183 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084244601 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089084595 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088242098 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094100865 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088126921 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090930002 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.08838783 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088087266 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094311519 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.091554536 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.087906713 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.078134886 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088325849 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.088455413 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087672239 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084320724 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094929464 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088141586 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084331316 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08831436 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088336329 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094561596 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.091469468 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09034192 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091978075 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.088309061 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094651636 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08801257 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088353258 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09489379 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.098257256 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094494145 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094238748 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088142156 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095243144 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094551389 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.097291388 seconds)
  done (took 6.93041859 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094654469 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085446147 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094241985 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074541099 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077025435 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084981956 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0773228 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.080093976 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085571278 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085338534 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087448584 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084669372 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087346611 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087573108 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08451909 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087075031 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084670675 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084935693 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085228807 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084865078 seconds)
  done (took 2.980976465 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088798053 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.096408232 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08035614 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084661811 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082084178 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08414813 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081911205 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082316125 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080583166 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082663174 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.088412215 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088197287 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080658863 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084668512 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088340533 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.084487975 seconds)
  done (took 2.627962918 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096146002 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.085132802 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.090950937 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.079145255 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.079726535 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.075296044 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.078004211 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.074777837 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075204807 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.091142573 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.078853658 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089200471 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.078268637 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.077569324 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.075705238 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084553365 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075486325 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.076703247 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.078549023 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.090105685 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.082538484 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.077142882 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.082447675 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.078458011 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.081600155 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08339988 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.077330421 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079636505 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.076259719 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.07941928 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.081822486 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.083993541 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.075901907 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.076858845 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.077978906 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.093568388 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.078354086 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.078643483 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.084587148 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.078457996 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077208264 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.081165947 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.078483841 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.079668629 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075077962 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.079097444 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075229252 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.081707504 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.076550745 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.081264148 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.078373877 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08155424 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.079092484 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.08555213 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.081196776 seconds)
  done (took 5.700886754 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093284448 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082429775 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074707142 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077225152 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08169291 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.080720723 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082369131 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.080680691 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080835124 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076963418 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08063221 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082458123 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08110449 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082983393 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080816959 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082705424 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074784962 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.079952669 seconds)
  done (took 2.740944913 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085634605 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080739865 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.087187216 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079012784 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.079394181 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081260525 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075088057 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077610217 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077390162 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.079477104 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079765666 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.081892652 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077547038 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.082239328 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079733928 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079357085 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081868179 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077681791 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079759038 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075141527 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081861985 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077485723 seconds)
  done (took 3.031396175 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.109159014 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.098823352 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.152683192 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.09404536 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.101085952 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.086770756 seconds)
  done (took 1.92017529 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105266623 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112811142 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079418924 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081862552 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088278954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082671383 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082871776 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083254167 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090132699 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088084091 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083179665 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090578679 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0900157 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089296183 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088164587 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090751424 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083531002 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083360066 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079841213 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095027816 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083142373 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090801654 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083382526 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083003191 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082853377 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089330482 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090017062 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088143765 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083159487 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09042383 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088186394 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083413478 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090521746 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088060034 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082450445 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090273818 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083717973 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095123987 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08816906 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089699418 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082247153 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088112614 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090079402 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087138942 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090447057 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083346931 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087307465 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083129025 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08357573 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096478193 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088178329 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08961089 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087757216 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090380747 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090665309 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096791985 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087791218 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089702254 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088350448 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088137013 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089612295 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088201289 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089667059 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088073118 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087715217 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089871281 seconds)
  done (took 7.09454259 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117833881 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08062114 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083133925 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087850243 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089095019 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083165822 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083607567 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083312959 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083455936 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080671096 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120629934 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084526928 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09012901 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08990798 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083911383 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083706098 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08352863 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089684781 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080687405 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097079227 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083042215 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089291083 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090902207 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090138578 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088265517 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088509064 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084066779 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083441189 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083342298 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083525108 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087460344 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083567575 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089609635 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080760313 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089462518 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083440041 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083053046 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08723066 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083007602 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088052642 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089708208 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094467663 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083890513 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08335145 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087610242 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083173932 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08303196 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079998355 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083106924 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080154648 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088205738 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088090637 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087701252 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08977767 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083249248 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083049992 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083240548 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084013024 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083575557 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088402863 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09134689 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08302814 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096581169 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08351428 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08327509 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089443314 seconds)
  done (took 7.032637627 seconds)
done (took 146.534193499 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.228485632 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.204871163 seconds)
  done (took 1.698938837 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.089058471 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.11771411 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09649429 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.14824658 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086797316 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120646528 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119482334 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097081023 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08701642 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086799548 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086637775 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089767741 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152369463 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086943821 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086541208 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089893758 seconds)
  done (took 2.92612603 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.120865018 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.179366533 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.123752502 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.08457957 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.120361348 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.092518825 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084488484 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097476172 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091165186 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086666691 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092301697 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092866678 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.086242116 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091001359 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.091063394 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092535563 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.086458202 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09254411 seconds)
  done (took 3.094547801 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118992061 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.110534496 seconds)
  done (took 1.521353784 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.174306813 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.1483619 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.216968316 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.362251068 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168769312 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.158012171 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.157083097 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.153974681 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.129251253 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.150945988 seconds)
  done (took 3.105096134 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118957888 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169789148 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305976314 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.134774136 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091415967 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.109080077 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.136968509 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.097358132 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.098963631 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099735791 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.098383994 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093547084 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1181003 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092029803 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.08856234 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.0931487 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120784789 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.087647676 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.088549007 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.093407351 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121049469 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085138727 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091736422 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.087743003 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096179672 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096136956 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086511823 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084904486 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.093751316 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088884193 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094283292 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108445573 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.095453518 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.121273345 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.089428553 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.122493145 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.093861857 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092375701 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.088674176 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092114814 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.095875351 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.095720984 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.09409395 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093179255 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086863312 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094018519 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087076782 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085584854 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.095887861 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.086864121 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095239566 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.094658436 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.121384758 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.086728166 seconds)
  done (took 6.891388424 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.123873026 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.122350386 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086176927 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.127147872 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118806713 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085441663 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.120750924 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114220243 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.122808448 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086157764 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084552181 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.086242445 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094787261 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.096485401 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.130959575 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.122655718 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088297481 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.085629776 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123035893 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.122556471 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.084705662 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117224136 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112707216 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.12207413 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.083969669 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085689802 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.083957237 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.085195768 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.090819464 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092761736 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.084204326 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.094129331 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.098913824 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.092155136 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.083222612 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083704327 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084262807 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.09363456 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.093734006 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.093127718 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.091744121 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083292785 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084527726 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085214526 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.086780606 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083470706 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092150344 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.093545405 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.09187486 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083890155 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.085894636 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.084665137 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085436652 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093617079 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.091514284 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.094466954 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.093976192 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084488114 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084177565 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.086898997 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094199254 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093653379 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09377701 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.085506491 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.09439432 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084531618 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095348362 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.097593554 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084542709 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.088650315 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.084298155 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.084665689 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085259661 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.091483362 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.091394613 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085216923 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.084100912 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084218583 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.093946456 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091927999 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.083681343 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.090847255 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.083601632 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084206897 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.085310718 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.086003211 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.091409727 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.092938503 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085176629 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.084174975 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.084020441 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.083635501 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.083250987 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.090222742 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.092122003 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.091737318 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.090978286 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.083705758 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.090769052 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089439838 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.084059746 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.090368183 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082549212 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084744368 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083442738 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08994669 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.089052139 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091129077 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082538332 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.217935847 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.093386941 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096231791 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.086359097 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.092395714 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094419302 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.092730682 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084033046 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095237656 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084934009 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.093945923 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084733264 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095561615 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084991723 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094032515 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.08470909 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.084178703 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.084620669 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.093308716 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08634665 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084799786 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085974873 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084229347 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.092721358 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.096844758 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086515758 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.092087422 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.092362519 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.085790886 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.092636552 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084429458 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.093688305 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084872686 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085114902 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084140248 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095074142 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084792596 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.084272147 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.084650294 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.094463398 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084808536 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094081894 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091845469 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083607946 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095443096 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094684394 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.091601882 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095959732 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085806315 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.084632783 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.084503047 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.084162374 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.091872134 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.093202342 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085667662 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.084428183 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091240879 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.093510254 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.083700054 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.091656001 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09189533 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.092195861 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.084188567 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.084528592 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094829897 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.094378517 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.091967261 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.092002258 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092559968 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084688788 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09168457 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.092235598 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084463581 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097898112 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08430275 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.096230218 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.093096988 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.091068466 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092368775 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.094765047 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.093905117 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094300658 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.096354132 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083436877 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.084752831 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.092079924 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084242981 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.083988608 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.091312889 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085716685 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085436503 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.096626304 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084328663 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.094311523 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083102065 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.092971925 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.083088275 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084571817 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096460644 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083305702 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.085088346 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091277708 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.082626731 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.089833552 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.092174011 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089814846 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.085114509 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.083380738 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.091233133 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.090628475 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.082688816 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.220866966 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087687313 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.092783376 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.09285275 seconds)
  done (took 21.928288442 seconds)
done (took 42.469933431 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216042479 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166221774 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.176054706 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.128365574 seconds)
  done (took 2.07790535 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123384289 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.113412129 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.102561293 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.081571786 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108231164 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.081265998 seconds)
  done (took 1.934010088 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288750754 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203921678 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189144408 seconds)
  done (took 2.003735806 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.224245029 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205121041 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474278024 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296427689 seconds)
  done (took 2.619744664 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.154390426 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.098313086 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.080562208 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.097389392 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138160652 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.166378863 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.108774062 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.133577956 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.093255184 seconds)
  done (took 2.448667183 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.158698912 seconds)
done (took 12.575134644 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.144385982 seconds)
    (2/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.114397972 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.085573167 seconds)
    (4/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.221531644 seconds)
    (5/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.22896235 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.082366951 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.192253407 seconds)
    (8/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.178204083 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.093925735 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.08972025 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116648101 seconds)
    (12/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.088079915 seconds)
    (13/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.108994683 seconds)
    (14/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.249412826 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.082005282 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088673154 seconds)
    (17/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.191841488 seconds)
    (18/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.08910435 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.088301156 seconds)
    (20/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091078857 seconds)
    (21/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.16698502 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.089033269 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.235109982 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.361968416 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.249868361 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099205462 seconds)
    (27/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.115070709 seconds)
    (28/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.194941832 seconds)
    (29/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.205622179 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.143052936 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.082166538 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104079065 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.243318082 seconds)
    (34/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078518372 seconds)
    (35/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135479567 seconds)
    (36/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.187724002 seconds)
    (37/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.094005381 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.17619254 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.132014458 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087622788 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065897556 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078836341 seconds)
    (43/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.121410846 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110351639 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098690533 seconds)
    (46/309) benchmarking ("sort", Float32, false)...
    done (took 0.148365429 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.169773118 seconds)
    (48/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.195286885 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146807846 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.120253874 seconds)
    (51/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.236724754 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.082491138 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.128814481 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.082866405 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.186889551 seconds)
    (56/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.090353953 seconds)
    (57/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.170093833 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096885831 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.109609163 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.065153079 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081285541 seconds)
    (62/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.104244994 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.087443462 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092498638 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.077931319 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.086190049 seconds)
    (67/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.214775147 seconds)
    (68/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211464433 seconds)
    (69/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.169974387 seconds)
    (70/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.085917685 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089440468 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.089753888 seconds)
    (73/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064429709 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.162186605 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.080841924 seconds)
    (76/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.16129941 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.089224543 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.105419501 seconds)
    (79/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.075887829 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064083163 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.191630248 seconds)
    (82/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091392955 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087566135 seconds)
    (84/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168793418 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088104689 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.091269442 seconds)
    (87/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.081649699 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.246558171 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.10450696 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.174643931 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.29114525 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.104407263 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.191020459 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092057211 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.160355163 seconds)
    (96/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173030674 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113764271 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106518651 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.085601005 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.228032205 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064443765 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.132286806 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124988121 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.082143082 seconds)
    (105/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096596944 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090729601 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.086845119 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196359459 seconds)
    (109/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065132185 seconds)
    (110/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166966603 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103979058 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.087797123 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089298901 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.082128695 seconds)
    (115/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.107109965 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089383923 seconds)
    (117/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.081452194 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.191932353 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.094777182 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087494372 seconds)
    (121/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.172815323 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.154842467 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.088564538 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.088089495 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.082129487 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.129409889 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.194786236 seconds)
    (128/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193957149 seconds)
    (129/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06489123 seconds)
    (130/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194082475 seconds)
    (131/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.084710928 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.103428951 seconds)
    (133/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.091227387 seconds)
    (134/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07943051 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.137003632 seconds)
    (136/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.082409991 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.153927117 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.172644098 seconds)
    (139/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06555153 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.088590875 seconds)
    (141/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.210104012 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081831945 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.087653894 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064326127 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065738848 seconds)
    (146/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.089306575 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086352917 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066083114 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.064526375 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095628924 seconds)
    (151/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.118896806 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.082643861 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139075176 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.17459081 seconds)
    (155/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.086831595 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.086771691 seconds)
    (157/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.090085461 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081862533 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064476208 seconds)
    (160/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064692144 seconds)
    (161/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.087250471 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.102682392 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136465467 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.187628361 seconds)
    (165/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064832349 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078205217 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.064149449 seconds)
    (168/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.119614183 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.074744432 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066678138 seconds)
    (171/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.166799188 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081329433 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.08135325 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.063882051 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.082863563 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.160965382 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.105884502 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.064236203 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.084330799 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.064786434 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.15316302 seconds)
    (182/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065394447 seconds)
    (183/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.097014497 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.081407014 seconds)
    (185/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.119867537 seconds)
    (186/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.082765932 seconds)
    (187/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.081510459 seconds)
    (188/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076227118 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.106694276 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.102547779 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.105090703 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.204361348 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.085885591 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065514981 seconds)
    (195/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.076760761 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.108583221 seconds)
    (197/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.091968933 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.107892374 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.082673045 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.074170675 seconds)
    (201/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080631941 seconds)
    (202/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.063742993 seconds)
    (203/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092286507 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.079917497 seconds)
    (205/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.079825454 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.248370245 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093650297 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096932603 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086794438 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.196689348 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09332999 seconds)
    (212/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.089610721 seconds)
    (213/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065820674 seconds)
    (214/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065687381 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089785549 seconds)
    (216/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.092512654 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065325201 seconds)
    (218/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.1043522 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.087613827 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.090488426 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065448523 seconds)
    (222/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.077789273 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.158968563 seconds)
    (224/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.076818937 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.107949658 seconds)
    (226/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.065480402 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.08812907 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131335751 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.108859239 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.1039754 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.144053134 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066627566 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.082596512 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065567209 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.082504075 seconds)
    (236/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.082431382 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.081819843 seconds)
    (238/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065526096 seconds)
    (239/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066232198 seconds)
    (240/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.131669145 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066276667 seconds)
    (242/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081868009 seconds)
    (243/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.087510088 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.129546238 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065197192 seconds)
    (246/309) benchmarking ("sort", Float64, false)...
    done (took 0.148359282 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.103625657 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.082546569 seconds)
    (249/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077520347 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078669123 seconds)
    (251/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.086956208 seconds)
    (252/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.064999665 seconds)
    (253/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.084995158 seconds)
    (254/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091727282 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.082054569 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064756204 seconds)
    (257/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.087373928 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.103421748 seconds)
    (259/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079080771 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.082934008 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064485327 seconds)
    (262/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.083193631 seconds)
    (263/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.064996541 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065563987 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066475501 seconds)
    (266/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065093356 seconds)
    (267/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.089058695 seconds)
    (268/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.10647808 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06485008 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.088594475 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085955975 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.186831982 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.166616322 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08166756 seconds)
    (275/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.136292329 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.137076958 seconds)
    (277/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081747704 seconds)
    (278/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082420056 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142310386 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.081573297 seconds)
    (281/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090853037 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066577243 seconds)
    (283/309) benchmarking ("sort", Int8, false)...
    done (took 0.16116034 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064606418 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.185311972 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.135853081 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065212913 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.087567809 seconds)
    (289/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.064641307 seconds)
    (290/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.0639891 seconds)
    (291/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.094759653 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082072174 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.194355044 seconds)
    (294/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.064777405 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.093727359 seconds)
    (296/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.086449178 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.081014761 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082162845 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.086780064 seconds)
    (300/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076910623 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.10170651 seconds)
    (302/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064924477 seconds)
    (303/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.064737059 seconds)
    (304/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.082443012 seconds)
    (305/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088236455 seconds)
    (306/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.093348251 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.080986795 seconds)
    (308/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065262586 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.064314386 seconds)
  done (took 35.668116374 seconds)
done (took 37.006807613 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100704257 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113903017 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091150243 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.108315866 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.098419037 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091530163 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.08855721 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.094226789 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.095451678 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.097247018 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095484971 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068822514 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.091585062 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.091580719 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09023421 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110809734 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.09686432 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.090600809 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.090106652 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.079617035 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.090117536 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.082049203 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.082177598 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068815807 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.093700323 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.086973296 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.091642711 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.091211262 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08269937 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.082365235 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085391241 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090875877 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08178378 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.094359601 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.08903049 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.090446331 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.092139162 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.091955056 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.082384448 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082169356 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.092172438 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08206262 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.089753132 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.088095131 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.086886368 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085696851 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.089853312 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.091332398 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110146792 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086578963 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091461707 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.092560038 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.093561709 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087121905 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.084391882 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.089782605 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.085593785 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110318406 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.090485186 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086485303 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.091578869 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.088523297 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.085892181 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.089855565 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.08994896 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.092386003 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.091101176 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.085761258 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.091772657 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.085943809 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.082002738 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.089738285 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.084104625 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.08186838 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.093007453 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094419726 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.078589389 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.086423721 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089636417 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090371512 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.081876192 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086689501 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.081378498 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.086505623 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086366558 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068234866 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.084514601 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089061133 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.078972884 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.090518493 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.089239869 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089444891 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.081199503 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.092118183 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.079794982 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.085609688 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.0818055 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.081835132 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.081090418 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.084260205 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.081329634 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086047734 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090551768 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.080841955 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.086197059 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.094775865 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081622292 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.088531003 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.078871078 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.079004108 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.093551998 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.092064452 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.081629448 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086034598 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.078370601 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.08672041 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.078703259 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.08109864 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.080692929 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081208538 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.085856889 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081230657 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085559584 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.087090117 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.093458994 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.080891736 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.083532794 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084567821 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.080244362 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.084498338 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.080364144 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.080503797 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.079688556 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074367919 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084581194 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08056344 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.226925989 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088821943 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.091515419 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.082243327 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091902927 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.085960441 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.086567272 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.086603812 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.079607018 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073564061 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087265659 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086761028 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08180261 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.081905436 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.080943391 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.081648744 seconds)
done (took 14.840289523 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.083165304 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146698345 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.107569119 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.107300564 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.099833385 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083375983 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.089187723 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.108869853 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.082570736 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.114628146 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.103331122 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.101087478 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.124345947 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.079208259 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082236857 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.084328005 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.082579518 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.095736537 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.109976853 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.106135433 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12668555 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.079853584 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.103820692 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.103888223 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.101596679 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.11685273 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083468032 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.084536237 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086537966 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106088961 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.106346059 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.086732907 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083565287 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.108523756 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104605502 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.095351941 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08305181 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095262611 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.083181076 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.081809669 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.083458425 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108970257 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094645932 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.094796112 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.083992886 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.091026256 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.081354227 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.095018609 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102384789 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091175775 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099809778 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.110433048 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.082248072 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.097058747 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.078477248 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.097157526 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.089384596 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.082643632 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.082538976 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.088029221 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082366594 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.085070037 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.094946418 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.091809154 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.085894149 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.096274371 seconds)
  done (took 7.675346337 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.100423467 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.109559405 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.09944656 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.099620539 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082268057 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082798464 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082764602 seconds)
  done (took 2.092294709 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083103572 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105149464 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.105388227 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104424649 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.09488711 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.106140682 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090655973 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083008773 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.10499192 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.081788181 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.101137754 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111178835 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.083321146 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.094100451 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105075134 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08249059 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.104709653 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.082921943 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.083466247 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104634907 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.084384942 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.106893706 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094128956 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083178257 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094285945 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.083378919 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127406813 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091137855 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082017697 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.08420422 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081773212 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.121563426 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093350569 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.093850067 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081577719 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096134061 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.094458311 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083714295 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091744191 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092182696 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.094229246 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.083850715 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.081445012 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.081195606 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.084783608 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.09265713 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.081764719 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.084083375 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.083756939 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.100457614 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.081572532 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093432525 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083773276 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.085974419 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088786582 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085427515 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091482215 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.082107876 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.100928494 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081387413 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.097878316 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.097302624 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.094209092 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.097555165 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082795359 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093773632 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.094597985 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.083424333 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084370158 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.084431559 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.097856378 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.083902798 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.084767751 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.094364412 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.082490096 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.105294789 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.104458046 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.082444973 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.095425497 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084366747 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.081945049 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.082586468 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.10491275 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.086016684 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081663569 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.087404333 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085336297 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.083262807 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.081844957 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.086702564 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.081811752 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.088128552 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.084053738 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.084166525 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085801085 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097756922 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.082590756 seconds)
  done (took 10.225252651 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085796746 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084278444 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.08548523 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.083524253 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.083520807 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.083922718 seconds)
  done (took 1.966537526 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.106965703 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.082863189 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.094438566 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.085209862 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.117424731 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.09956855 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.099715006 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.093726656 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.097867921 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.092818021 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.099693583 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.101231831 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.104024594 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.085778727 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.099864728 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.085475069 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10030002 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08776149 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.092265991 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086356275 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100765627 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.085900935 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08649157 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.101109905 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.08930344 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.085245454 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.094044413 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.092676582 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.091954625 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.093066696 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.085618163 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.089538505 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090786691 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.092880972 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.099501604 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.091132766 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084767328 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.090538754 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.085456011 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.088791651 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.100291065 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085930488 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.087651822 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.090192335 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095116809 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.090674827 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.090162472 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09369911 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.099041008 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09120318 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.089636605 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.084888063 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.088693633 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.090076848 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.091036802 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092453272 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.090298016 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.09976272 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.085799889 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09123949 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.082421425 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.089146718 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.092673162 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.089283966 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.090661332 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.090624386 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09122979 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085890434 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08586481 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.084967793 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.091015692 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.082177325 seconds)
  done (took 8.045767529 seconds)
done (took 31.42346627 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.531283942 seconds)
  done (took 1.944148983 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.626282689 seconds)
  done (took 2.0673998 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.569282128 seconds)
  done (took 8.007451441 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.382109022 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.454447873 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.753071105 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149065459 seconds)
  done (took 3.216662623 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.74314549 seconds)
  done (took 2.193249935 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248852916 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238526566 seconds)
  done (took 1.946475984 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.371810089 seconds)
  done (took 1.809731221 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.081399009 seconds)
  done (took 2.521674653 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.245293806 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.172567986 seconds)
  done (took 1.863044446 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.455459187 seconds)
  done (took 1.898745135 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.221590346 seconds)
  done (took 5.6667018 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237176974 seconds)
  done (took 1.715549513 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.257040772 seconds)
  done (took 1.70045203 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.753662681 seconds)
  done (took 3.202011546 seconds)
done (took 41.208237175 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101125391 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.10250458 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101951274 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.097745432 seconds)
  done (took 1.829399321 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.091756338 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.087846006 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.091413439 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.08725784 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.090796086 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.086941852 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.08920538 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.089719482 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.086630933 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.087892534 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.087203932 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.086969466 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.089737177 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.089026571 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.086102416 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.090376059 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.091068777 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.087539157 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.090476869 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.087015429 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.085188669 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.08992624 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.090791666 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.086327874 seconds)
  done (took 3.574206043 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.095205559 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089513536 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.092163777 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088460315 seconds)
  done (took 1.819003093 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.093348421 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.104663468 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.101939875 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.093662181 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.104549145 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.100216671 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.083634605 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.08396945 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.085027145 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.092378426 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.082428501 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.108771536 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.101863529 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.092847588 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.094566787 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.079435008 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.082054063 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.100880984 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.093559709 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.093765989 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.085232212 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.093271351 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.083148444 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.103096913 seconds)
  done (took 3.687763777 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.095336602 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.115945925 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.094222624 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.105316623 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.107058573 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08010631 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.093635092 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.107355475 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140671473 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.080383993 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.085726444 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.080762944 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.089123081 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.080463026 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.094598577 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.122523221 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.126439434 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.084324067 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.113577231 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.080468078 seconds)
  done (took 3.438665964 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.088744925 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088809794 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086726745 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.082500483 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.094266295 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.089237638 seconds)
  done (took 1.993281156 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.084546086 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084593566 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.084546626 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.083683019 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.088694184 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084101578 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082914573 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.084201202 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084835605 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.083790793 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.083792425 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082872239 seconds)
  done (took 2.469394396 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.201479263 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.085458336 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.086854931 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.082812148 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.086657451 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082944589 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.098067641 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.084105791 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.109319372 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083393855 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.083310728 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.085121784 seconds)
  done (took 2.62830374 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213971342 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090189716 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247296417 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162919485 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120278812 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125278616 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12721346 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125782015 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.148595849 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110976319 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171796368 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176314692 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119494236 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149122091 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103586992 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.113134203 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162162801 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176975199 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118133487 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172695048 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155009429 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138383171 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157406137 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113784562 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117114432 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130026517 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.085512116 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09325593 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181497906 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142232613 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15816027 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123138277 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103083006 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189862998 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174249061 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151348891 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159890534 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09765975 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.114213223 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.144962878 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208851217 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102123681 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16906575 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120430281 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092502642 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139792667 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125942455 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.272906242 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11778022 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104848788 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155372964 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194029541 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143078804 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100226664 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136032621 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124922288 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.123049782 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131149309 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19102584 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167756166 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140098582 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.086675026 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1230978 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160228206 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143916019 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.118452448 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.133700344 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103707259 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142588636 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16456856 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132923915 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15369903 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126533464 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101409405 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132625275 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147335458 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138280166 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182480375 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136295927 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.087633368 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133803132 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112025468 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094658526 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.158498277 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089953819 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184876974 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115032729 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.116559969 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143027108 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122300113 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121325906 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166217969 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150680584 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117031212 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.079794854 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115950527 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128256546 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150321671 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099639229 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119099906 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123934025 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.088778422 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290055439 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.0918274 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135734532 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091188054 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135066397 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14173906 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.092329123 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135706573 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117612135 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.116458502 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1425778 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167929044 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102902511 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095395163 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175180446 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133999916 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.115230871 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152525728 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162708444 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.114582326 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111360291 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155102354 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176656873 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104716111 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170535489 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117002185 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097770993 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.100283121 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135294736 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124527002 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.135207433 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095375255 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.128590093 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172286119 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.088958505 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109555611 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145723282 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092396699 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094505419 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117413408 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116170426 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.109651474 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110898904 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.11345048 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145934983 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135300684 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117842517 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135154064 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111212525 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17366705 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10438664 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.115466691 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116193221 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.083775768 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139149656 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160646457 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09176513 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164103264 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.128083146 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27954641 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134529202 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099577262 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147961788 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094865454 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.086182948 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15077426 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122987615 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122275592 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1565778 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126358379 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.133740378 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.128530677 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142065909 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140734133 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138878374 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118842049 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.102930142 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126646545 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137334367 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.087802269 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.103359013 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.094126469 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118443986 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107850674 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098249152 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152853614 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134153026 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1233467 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126690466 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110414395 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157555321 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.090249554 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137516557 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.130678671 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108935264 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15865267 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159355144 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143613524 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113592118 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146275885 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.085250708 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088824814 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.099350869 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132285389 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097875533 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097365124 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125605859 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157034654 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138627271 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144719191 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135201259 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128958213 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162598205 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.084964473 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.130772962 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148768173 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13054771 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.116193796 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253256566 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.113604373 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152495546 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118551356 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191941144 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126663209 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138824815 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167079782 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.115860558 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093999646 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117719502 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142251571 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114715202 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148529038 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111926449 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101700177 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120361555 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.089846156 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110196445 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137830682 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131870012 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14760673 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124152512 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143820656 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092340124 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126576329 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13450144 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132834513 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.077861354 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129823398 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173475514 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108854189 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129433786 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159030529 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093330517 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.150518931 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17832664 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154832721 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098189007 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118781654 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132225472 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135661524 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129830955 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146444784 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116979313 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149483198 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122804995 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.098300404 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100290224 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108252475 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115560879 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104852899 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111702787 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121652927 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.10801985 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138979682 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113692044 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120165592 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280728672 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.115471808 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.108158397 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110768727 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185114585 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130671557 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184017181 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.114608489 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.149533209 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169012255 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090727588 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093898295 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.092845206 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14743321 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099401671 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141572009 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124182811 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128298934 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135240616 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148888195 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110695658 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.083904356 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122363879 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143305287 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135308028 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111701115 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.113992927 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168799251 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110837842 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093460521 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124667852 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129502335 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116933095 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180566308 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.075531336 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121783781 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091386327 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093703849 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135609744 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16263361 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.09457129 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.112506938 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132161248 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123409745 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134699718 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111651664 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122712679 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141012301 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154745255 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137832922 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.102148945 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123154704 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136742173 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159037704 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112973455 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.109407356 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176581573 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311260542 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.164851029 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.100246286 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130544619 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127575895 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121634652 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146449424 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098668968 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167483265 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096559164 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145148117 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113959079 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100241119 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139317537 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124343174 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101882763 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152921015 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128910031 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097566872 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092452191 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127485817 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130552439 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11624098 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.089628842 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148410508 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.088659468 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144208395 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181024051 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095018389 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117831282 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109213449 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093804967 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116617706 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115202887 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1004219 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.112632995 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177670927 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.098662551 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15399117 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14261601 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123191159 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145945894 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115363161 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.653458707 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.091265839 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158332574 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126326018 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178744312 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112850596 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129882075 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121616778 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12976114 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149038467 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111953368 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.18881027 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289699479 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.129016689 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09476548 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116436654 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116985793 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101919364 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120907554 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127283361 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12813257 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.106133836 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.127436554 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133546967 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.096883548 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111167456 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163734894 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128309436 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154548603 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148444792 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098752268 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130982974 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1459526 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095652806 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.128044821 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162989774 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118373978 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111642409 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.095387747 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111607166 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181357568 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.089029783 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202828975 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131504351 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122829513 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128913793 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119899434 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14163682 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116672535 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132753852 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103560124 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.118363449 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125764315 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095041673 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.090961313 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117931403 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121898837 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.111069616 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107696463 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.112932573 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157824649 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.086388981 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110783147 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126530004 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151341705 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175990002 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.098685764 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096409635 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13040963 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125757332 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120114038 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284237851 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.095303802 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097545166 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.095275242 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.095851563 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.117538381 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127094951 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132218922 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123113976 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169767574 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.097946222 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.243987881 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111219415 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117873335 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.083674317 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.092671062 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110692609 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111213709 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117540309 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12377282 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181265135 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.108812612 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.103406691 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103338848 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.089328783 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097327599 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135660454 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124711305 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129936736 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1141017 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.076942592 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118979015 seconds)
  done (took 64.363885813 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134583212 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.113945826 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.113324582 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.161826553 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137245454 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.215235203 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.16587869 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204959963 seconds)
  done (took 2.81190476 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.085183557 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.110899335 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.119819259 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.098735202 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.083445562 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.084533913 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.239066022 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.097717927 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.083341926 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.106384972 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.093578519 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.085327552 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423402055 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.082857011 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.083937089 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075334691 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.084103422 seconds)
  done (took 3.585468686 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.396870833 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.627674929 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.357167724 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.091934536 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.86224292 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108680484 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.191383972 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.15879846 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.098947544 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536650987 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.385838957 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.152191434 seconds)
  done (took 18.529596683 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098908804 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.093181022 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106139542 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.105651385 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.094546793 seconds)
  done (took 2.057242195 seconds)
done (took 114.288775726 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.097043171 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.444223845 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067376563 seconds)
  done (took 2.098754703 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.104205794 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.102737602 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.102349337 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.099991658 seconds)
  done (took 1.971761567 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.091113892 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.094257052 seconds)
  done (took 1.741418817 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240589072 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189526159 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.112588473 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.097513798 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094394793 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.094917728 seconds)
  done (took 1.847723208 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.086563559 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.08892229 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.086953678 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.090741233 seconds)
  done (took 1.910108123 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.089959695 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065749109 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068202813 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071352349 seconds)
  done (took 1.853352823 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.101789643 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.098201715 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.093188749 seconds)
  done (took 1.851241819 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.117634729 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.107046917 seconds)
  done (took 1.783087473 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.095339192 seconds)
  done (took 1.654185084 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103070744 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113470375 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.146775632 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.12937307 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.1528026 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.128767972 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.100316515 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.101702255 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.094770831 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.10218026 seconds)
  done (took 2.731380218 seconds)
done (took 21.640223042 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095719319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.383639425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.376493931 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106933341 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.685375846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.373880178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986833571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.108718268 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156593562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.084148549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10100284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.666257713 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977756791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.341497473 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963274871 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33829945 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.668030033 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086267428 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.08525255 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085699819 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.972675338 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085571003 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.085380671 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085847898 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.665915222 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.38992399 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.085784744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.34144115 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085622195 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.087537622 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373126784 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.086201979 seconds)
  done (took 16.555773016 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087627444 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.138830477 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.089427107 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101365824 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.087250891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.086536076 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.087941392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085777194 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.137596051 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.085220542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102690567 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086636539 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.089492233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086739717 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.105042779 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08596985 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.086757755 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087260362 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086261223 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086631983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104499227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086056553 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.085730511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086335705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.085620761 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100866085 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.086678835 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.086361015 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085975901 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.088144905 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.08890803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.086944568 seconds)
  done (took 4.53806462 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13441429 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.141559688 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.090189856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122558993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.129030403 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088065177 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.164285622 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.110804571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14444542 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.085900756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103107771 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086679085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120308121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086399138 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.105754833 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086591809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.08664498 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086866176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085832182 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086123136 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105288962 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085960898 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.085951088 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086503982 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.086188364 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100033448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.086482106 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.08620372 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086233311 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.087713598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.089691232 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.086458126 seconds)
  done (took 4.795922052 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.087947458 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.090113411 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.096648071 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.097959144 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.083811654 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.086417513 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.087886356 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.084515379 seconds)
  done (took 2.294804531 seconds)
done (took 29.753096666 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.093703015 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.083502641 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.087349546 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.103861424 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.090069808 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.094549901 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.081266259 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.09034169 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.08784083 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.088332017 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.089547783 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.084850921 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.086592468 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.081394268 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.088460338 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.083114261 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.096587441 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.086436405 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.095489322 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.096841133 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.085392089 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.087820697 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.090656773 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.095401886 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.095387287 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.095340805 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.091405604 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.087537924 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.082753489 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.085906037 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.090728301 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.097555132 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.085213747 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.095205993 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.081730365 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.08172205 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.086158773 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.084290946 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.095977728 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.090891848 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.083315282 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.090356166 seconds)
  done (took 5.301232062 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.100929206 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.105166639 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.098601792 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.076142292 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.081323412 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078764444 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.102411649 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.074383895 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074321581 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.101953309 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070442561 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074088689 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077069087 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069156458 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074021036 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071484915 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075889892 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069636587 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073682703 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073988699 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.102496911 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068049346 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.092675668 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07680937 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070239529 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.076272054 seconds)
  done (took 3.690907772 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.090331106 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.10249323 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.109373102 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.159625445 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.127004258 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.096062196 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097986423 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.108040545 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112753519 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.084753488 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.088415275 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.108279243 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10861506 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.089981268 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.084231224 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.100154482 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.099398181 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.085841734 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.090887104 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112656652 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.104530462 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101686783 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.110162847 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100180074 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.083539907 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087188665 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.088909902 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.100091713 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.086600172 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.09539564 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.08979803 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.088545913 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.085698288 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.094450127 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.086977034 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.083549869 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.10894466 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09563376 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097676703 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.085348762 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.093831944 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.08551461 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.10992059 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.144230066 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.084022668 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.08875489 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.08853719 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.095892164 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.084281189 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111816576 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096067276 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.08394861 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.084853695 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.083496203 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.083797793 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086999491 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.086335921 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.086786959 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.094358266 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.090953429 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107016406 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.089401043 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101822355 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.083822406 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.094758567 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.084030168 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.085885311 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.083074651 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113080119 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085984574 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128599453 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.085270749 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.083100675 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.095396794 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094327093 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090528638 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.084407068 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101639368 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095985354 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.088427208 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.092459719 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.088064082 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.087626665 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.114209684 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.084520018 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.084023383 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.083839009 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.087535965 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.08747848 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.085313434 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.096305559 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.083731754 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.087921143 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.103295541 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.083754216 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.084884446 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.088233253 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.087514173 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.083575948 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.094670028 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.088046154 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.085633277 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.094276264 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.084931246 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.087715773 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097555641 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.090635566 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.083048858 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.086683408 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.088310831 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.086063356 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.085408364 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.088074675 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.086405527 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.091018792 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.091052839 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.089786287 seconds)
  done (took 12.549922461 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.179016569 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.170631052 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.087272108 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.161879682 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.093653966 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.095500861 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.164815266 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.110191941 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.084928709 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.086565559 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.086054077 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.124677271 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.120466677 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.131111877 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.095938437 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.085688022 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107639478 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.129246521 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.166486411 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.160912049 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108126481 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.093009052 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.087464687 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.086143316 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.086658425 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.094564428 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.101752586 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.093225392 seconds)
  done (took 4.816389441 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.095546146 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.120573524 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.08919421 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.108238081 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.104910601 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.082941108 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.086725251 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.08710488 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101357887 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.091373797 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.083132097 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.090293434 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.089479479 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.085458946 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.085788627 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.089146449 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.093584366 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.084705543 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.086357024 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.087996547 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.094971984 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.104229166 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.08820469 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.084546757 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.087797196 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.084833401 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075304601 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.097033219 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.085229833 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.109698578 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.082715393 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.087369639 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.099132814 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.085487333 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.084654417 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.085179316 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.08274169 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.08245362 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.086436059 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.081674708 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.081098592 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07188647 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.084235849 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.092797278 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.097869896 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.069471912 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.087048269 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.087637405 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.087884358 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.079873327 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.088215052 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.087645239 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.088045647 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.091909912 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.086407995 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.088181677 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.086204933 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.089638833 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.091355106 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.084287948 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.078740926 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.081132848 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.087432619 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077084683 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.098119796 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.087387616 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.081037706 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.083012762 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.086385187 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.098399757 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.084817415 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.087015808 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.080341471 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.084246537 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.090994482 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.087792677 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.085900421 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.081206926 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.08472493 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.085127621 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068266865 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.084655741 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066952695 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.087882947 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.08079113 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.081439446 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.085279585 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.087207233 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.093256829 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.084184439 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.088654064 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.086114686 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.083954603 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.087485317 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072780178 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.08794653 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.095841865 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.095883296 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.082762407 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.081187585 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.098450995 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.088237402 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.081790992 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.070341729 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.089427251 seconds)
  done (took 10.766297097 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.108325499 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.083895489 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.101593438 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.108592612 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095089215 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.089388625 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.095318714 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.084404526 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.100863448 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.088742189 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.091923626 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.082390049 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.095392987 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.094640941 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.083970669 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.094907212 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.08624403 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.10300278 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.099316997 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.082823792 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09389568 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.097439571 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.097324115 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.099450709 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.098916854 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.100323963 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096434068 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.09332303 seconds)
  done (took 4.28143235 seconds)
done (took 42.98106378 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.687752966 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.922910357 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.664480269 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.897395757 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.723411485 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.874274729 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.754147899 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.667300646 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.837138868 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.704960046 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.016390382 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.733130006 seconds)
done (took 64.213723551 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.691741337 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.790940146 seconds)
    (2/2) benchmarking "String"...
    done (took 1.893806817 seconds)
  done (took 5.269490264 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.872926207 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.461278939 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.90590076 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.660393247 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.666457707 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.958256922 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.467222121 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.111182433 seconds)
  done (took 29.816112968 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.856036299 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.892504859 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.387098355 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.419062976 seconds)
  done (took 15.189323976 seconds)
done (took 61.522115748 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.669845179 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.661755373 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.677176443 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.642371724 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.761728866 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.675730006 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.793799194 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.902606097 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.659776254 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.648028139 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.664208834 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.090457862 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.668595033 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.805084885 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.663157083 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.663132217 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.716225695 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.103967938 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.822019208 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.681185599 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.679396008 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.673602818 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.664490169 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.674090385 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.666410075 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.662999401 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.062275599 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.669896033 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.282163078 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.664073228 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.694127773 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.004056405 seconds)
  done (took 200.954241227 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.662538676 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.623472141 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.711755733 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.682754503 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.152563499 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.847365716 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.76661898 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.190315534 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.668007788 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.679781013 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.777337433 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.662762295 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.802769502 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.613311485 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.68911993 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.668664567 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.850959301 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.826719898 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.6960079 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.832110369 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.675919516 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.6163266 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.58123416 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.778782631 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.699173593 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.760456067 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.842104895 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.680131147 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.853383747 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.818769015 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.672926182 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.702860895 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.887231129 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.535167768 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.678509394 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.69673444 seconds)
  done (took 165.471584851 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.853815643 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.665103186 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.661976003 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.66237236 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.674515133 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.66211748 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.78577915 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.787468133 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.307690045 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.222569466 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.722053557 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.664023205 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.457294576 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.663851788 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.731626773 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.677279863 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.665286976 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.677723103 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.690459018 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.666723884 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.664550872 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785907893 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.67954137 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.664025315 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.674323412 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.663215901 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.668954394 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.031436959 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.663695277 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.665350634 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.801464056 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.668624143 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.670109625 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.227424177 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.925304386 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.66621977 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.666002336 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.664330878 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.517277363 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.749648987 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.665993402 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.67117279 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.664023552 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.883565935 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.666010805 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.665500917 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.664638723 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.668488716 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.80865903 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.667629305 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.787729797 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.668842482 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.155147614 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.667230255 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.667694303 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.376717189 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.278070847 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.667798347 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.66928708 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.665423481 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.667679511 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.671083161 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.403499132 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.739545406 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.667880475 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.669525079 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.671539007 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.666115836 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.911688209 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.665601248 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.326761389 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.726050566 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.894678708 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788693292 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.671042898 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.732281165 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758724834 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.666529802 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.665837531 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.66581945 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.66648559 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.74629546 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.666631129 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.795094812 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.678329667 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.668777877 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.665860933 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.721545463 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.736049105 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.667764947 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.512141989 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.67022913 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.667295916 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.926956434 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.732038494 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.667809865 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.670351983 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.791870588 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791506023 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.389655702 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.669630385 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.379663742 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.813852484 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.669334705 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.814417318 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.669933346 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.668539917 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748984278 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.675421382 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.669408176 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.702650989 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.668865682 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.724721575 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.669096136 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.042742547 seconds)
  done (took 390.051213246 seconds)
done (took 759.978256129 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.267420817 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.234108277 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.333318605 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.252609474 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.226979604 seconds)
  done (took 12.906584953 seconds)
done (took 14.499816917 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.752657344 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.759263381 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.692524885 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.756147159 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.690443533 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.75547505 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.741272896 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.694824119 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.723524058 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.695061459 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.724853053 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.694962764 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.68197541 seconds)
  done (took 23.956679964 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.899150796 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.900939485 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.736720944 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.900489433 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.712269715 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.900736577 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.825978434 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.816439634 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.818664676 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.68346753 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.680210364 seconds)
  done (took 21.470717744 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.9077384 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.911342709 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.743231322 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.903530976 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.716143296 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.903734301 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.830764088 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.821707846 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.817804474 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.682533154 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.679109764 seconds)
  done (took 21.511856569 seconds)
done (took 68.532641838 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.676541802 seconds)
  done (took 3.270164307 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.702053079 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.875405481 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.684827559 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.679204528 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.676922556 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.67935165 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.680866428 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.677737374 seconds)
  done (took 15.251451048 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.676204639 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.676272344 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.674552714 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.673635889 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.676729037 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.673992932 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.673770832 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.674887624 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.674037534 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.67668696 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.677470659 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.677161374 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.677475021 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.676769319 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.674892074 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.676488962 seconds)
  done (took 28.407237455 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.676654089 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.675081826 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.673832509 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.675491254 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.675410415 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.674096273 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.673502849 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.672436019 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.672303112 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.673012508 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.675005906 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.67457403 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.673269546 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.673595872 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.674466549 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.674723208 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.67422469 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.671976477 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.676626991 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.671566405 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.67178971 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.671636946 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.672989735 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.673143467 seconds)
  done (took 41.769500915 seconds)
done (took 90.292917243 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.429316862 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.432611903 seconds)
  done (took 9.454492673 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.675046015 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.675426908 seconds)
  done (took 4.947601973 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.674138501 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.674755439 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.674921834 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.674550516 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.674949631 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.676936733 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.674195922 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.672549198 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.673663442 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.674382059 seconds)
  done (took 18.339304586 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.675470707 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.67168381 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.667603285 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.6712023 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.671926563 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.668410036 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.671956284 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.66989952 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.669715035 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.668151433 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.669565134 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.66721722 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.672848447 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.666541664 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.669996001 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.66725943 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.665878024 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.666886692 seconds)
  done (took 31.643925211 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.669917037 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.669747677 seconds)
  done (took 4.927241472 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.66685082 seconds)
    (2/7) benchmarking "second"...
    done (took 1.666167432 seconds)
    (3/7) benchmarking "month"...
    done (took 1.667289785 seconds)
    (4/7) benchmarking "year"...
    done (took 1.666489046 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.667206265 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.666320844 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.667824515 seconds)
  done (took 13.256182646 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.671502552 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.813956306 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.879348844 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.297745107 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.671702301 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.673688414 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.580492501 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.672733827 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.675405393 seconds)
  done (took 18.524497217 seconds)
done (took 102.685958567 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.494725828 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.664697884 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.902176385 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.729636978 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.670969603 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.00957309 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.6719052 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.948974014 seconds)
done (took 41.68098729 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.685222713 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.445072352 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.475768982 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.720536485 seconds)
  done (took 15.228802748 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.64489353 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.061756022 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.669546538 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.558098473 seconds)
  done (took 21.7033013 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.040876408 seconds)
    (2/2) benchmarking "read"...
    done (took 2.019677983 seconds)
  done (took 5.652275023 seconds)
done (took 50.85813224 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.670176814 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.670352585 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.667414424 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.667280311 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.670259574 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.66720648 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.665807972 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.669801983 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.66887567 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.669572435 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.66885465 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.669718922 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.667354741 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.664628518 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.664834144 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.668984223 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.665493625 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.666813827 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.664193815 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.665968354 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.662483436 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.665801779 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.663775424 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.66331962 seconds)
  done (took 41.598467603 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.663299895 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.661183987 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.663631002 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.662482828 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.661812053 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.663159918 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.663319206 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.660044357 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.664225717 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.663259726 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.661890732 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.659694359 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.663422517 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.660637568 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.663238085 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.661287699 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.664861553 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.660073278 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.6629554 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.660075612 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.662519594 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.660994863 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.662457257 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.663860307 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.660805515 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.66058935 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.661938527 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.661666712 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.663805954 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.659885641 seconds)
  done (took 51.445292113 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.667895843 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.671990702 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.663185342 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.664152347 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.66209873 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.664412816 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.663832125 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.662569348 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.662858131 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.663740827 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.662790297 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.662771449 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.663154418 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.663333764 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.663867531 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.66320238 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.662847803 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.663491545 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.663233838 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.66356103 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.664330113 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.663687815 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.662907211 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.663911184 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.66583054 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.663262663 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.663812154 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.663748465 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.664491662 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.665159286 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.66484299 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.664799146 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.664721717 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.665760047 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.663647412 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.663425838 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.669311549 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.67149834 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.664127858 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.664206592 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.662291606 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.662407446 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.661811802 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.662627668 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.663052242 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.6648511 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.662438221 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.662780845 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.661427847 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.66210042 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.662249088 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.662755184 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.661195222 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.660934449 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.66025543 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.660331927 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.661254895 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.662352018 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.660542594 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.66128468 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.660673971 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.661650356 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.661675324 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.661784517 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.659914735 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.659688122 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.659778382 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.659813204 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.659313638 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.661388565 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.659575476 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.660167608 seconds)
  done (took 121.324755206 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.659030751 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.657194442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.657082544 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.656068404 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.65447857 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.659457562 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.655302095 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.65772098 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.656217453 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.65686169 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.657003003 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.65489884 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.653864056 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.657012843 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.657502317 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.652718796 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.655905504 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.653574727 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.656965179 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.656781421 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.657102241 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.654671184 seconds)
  done (took 38.015670175 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.657134411 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.656927116 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.654791982 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.657834954 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.653920447 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.656500735 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.657684609 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.656462562 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.65649984 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.655123252 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.65400449 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.656155424 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.653828992 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.653898115 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.65435345 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.654128162 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.657036038 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.653565317 seconds)
  done (took 31.374950294 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.653352921 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.65431933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.656611828 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.6532867 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.654739827 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.656650672 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.653991594 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.65676615 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.656037401 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.654522608 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.656911589 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.657261417 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.657828222 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.65466201 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.656775825 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.655559514 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.656341151 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.65391681 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.656363896 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.654758293 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.654275811 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.658358414 seconds)
  done (took 37.998760415 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.656960379 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.657261019 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.65472231 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.653961596 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.654098627 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.655761123 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.65652624 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.654229054 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.65711268 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.655648391 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.654278809 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.6568849 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.654060361 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.654525984 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.654437291 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.654166167 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.657521995 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.653924627 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.656479708 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.653251698 seconds)
  done (took 34.681187878 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.657987061 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.658708729 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.658235284 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.657106647 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.657568534 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.658824839 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.657581708 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.659583299 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.656458008 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.658185092 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.657474991 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.657753419 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.658370494 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.658583975 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.657369343 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.658314876 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.657781539 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.658042836 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.657579365 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.657432425 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.656903605 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.657117248 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.657305642 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.656934086 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.657715882 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.65726011 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.657759343 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.657130289 seconds)
  done (took 47.992904823 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.656491684 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.65538587 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.65475988 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.652492512 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.653508282 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.652901322 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.652888192 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.653593005 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.65659392 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.652707624 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.655368374 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.655047028 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.655775003 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.655840833 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.65914142 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.658415346 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.655676889 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.652312759 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.653393572 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.652779217 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.657833204 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.656199435 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.65654361 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.652855706 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.653185077 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.654375342 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.654022338 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.653871573 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.656044858 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.653346794 seconds)
  done (took 51.218299657 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.674257522 seconds)
    (2/2) benchmarking "in"...
    done (took 1.674474013 seconds)
  done (took 4.922447894 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.652999573 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.65551989 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.65473099 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.652523842 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.65294929 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.658219272 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.656234121 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.653918864 seconds)
  done (took 14.810811197 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.657655356 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.656088548 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.655884276 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.656493246 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.656765318 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.658497701 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.665510218 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.65612002 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.660330965 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.657563034 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.663666798 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.664085718 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.6615775 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.65839874 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.659713704 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.660319236 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.656949903 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.655554516 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.656603525 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.655749515 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.656841381 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.660171051 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.661696851 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.653755902 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.658159805 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.668530718 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.66323886 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.657078804 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.657675486 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.661995381 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.658834673 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.652969612 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.657241498 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.655622601 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.655518891 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.655838875 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.665921122 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.658439404 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.666876566 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.656128044 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.655467869 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.654191192 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.66004856 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.660124829 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.661456489 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.655634346 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.657007727 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.653903573 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.656017704 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.660530756 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.660231874 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.657042024 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.653646317 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.663478935 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.659312126 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.666616937 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.659037591 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.659758513 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.664641972 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.667223122 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.669268131 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.664770101 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.662242856 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.655985667 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.666941706 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.676804917 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.665698087 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.65427052 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.654548523 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.656664239 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.665606639 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.670226142 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.666482083 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.658065147 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.658580571 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.656326568 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.659296324 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.656778573 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.666116478 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.663899392 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.658441853 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.656463075 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.66748731 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.67623909 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.658110628 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.657328948 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.658829021 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.656806705 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.65970609 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.670349567 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.658236855 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.657698673 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.657950198 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.659945252 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.660499185 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.657371392 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.658296051 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.660613609 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.654876945 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.658931864 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.658239887 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.663383774 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.667667742 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.658471636 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.658572419 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.668345011 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.658562628 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.660045862 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.667601892 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.65912869 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.659697551 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.660312441 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.665906815 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.655403792 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.663327491 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.667026393 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.659502384 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.66293845 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.659682251 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.660397491 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.670848718 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.682860378 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.660559747 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.66003005 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.666545594 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.667238484 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.659600024 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.665369802 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.662099526 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.656383794 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.657023301 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.663937026 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.659389735 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.663424629 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.659847869 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.665174174 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.657532342 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.659513634 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.659773252 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.664603959 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.663291981 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.661524635 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.664652717 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.664330182 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.660550036 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.664702545 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.669138024 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.661934788 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.663526195 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.663177019 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.658531426 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.661760541 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.664732756 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.662077112 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.66220609 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.660292549 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.662669865 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.660662168 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.661806533 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.661354369 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.660893469 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.662414207 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.666340416 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.661432236 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.667973462 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.663769529 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.658436351 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.661147884 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.662007098 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.661712528 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.661340647 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.661184996 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.666175552 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.667435161 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.661457271 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.661778623 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.667527551 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.66182305 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.662048235 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.662337363 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.666756414 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.669521535 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.662620478 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.671350396 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.662088615 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.661737085 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.662381942 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.664719606 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.664130863 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.662116 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.666411152 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.667584049 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.67616046 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.670835298 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.664034652 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.666233397 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.665423914 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.666495144 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.67040619 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.662636859 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.664582784 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.662646787 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.664595383 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.66303477 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.666812935 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.663755449 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.663900481 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.663666745 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.662645726 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.663599397 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.663938443 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.666127731 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.668375678 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.660187362 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.663297256 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.663568145 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.66467034 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.660438213 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.664541492 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.66393231 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.663432948 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.664062803 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.672722851 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.662295803 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.66790341 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.667903555 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.666268904 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.664174792 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.663859672 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.668291666 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.666209592 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.672456261 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.665039067 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.667443364 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.673677475 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.665890917 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.66467535 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.670402892 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.664075509 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.661703037 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.669441174 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.670418725 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.665081933 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.664538749 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.66400543 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.667348018 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.664588723 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.672705133 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.663861853 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.66670337 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.666099215 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.66711586 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.664114918 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.670322973 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.669534398 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.667128556 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.670709042 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.665140907 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.666248326 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.668046044 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.666187882 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.665775852 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.664643033 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.669351191 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.670612354 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.672479262 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.669339165 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.668995219 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.666687934 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.668781226 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.667850903 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.665218322 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.668143074 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.679039572 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.672088185 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.675271486 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.669834026 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.666376824 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.675620972 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.668706801 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.669637079 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.667782803 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.669140679 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.668623243 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.668206635 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.663359665 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.669678495 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.667298111 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.672067007 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.669903711 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.670645018 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.667223565 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.66810336 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.667327403 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.667410669 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.667777155 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.66930047 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.667920412 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.671036913 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.67204319 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.668508407 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.669099374 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.677723701 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.670311146 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.670003419 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.669109775 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.67007134 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.669282559 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.671555019 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.668382047 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.672355807 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.67372015 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.672964711 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.677190658 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.671274238 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.678589368 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.667825953 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.67275514 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.67426511 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.665313013 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.668906308 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.668828274 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.668641867 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.677831832 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.668208387 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.670981742 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.672229419 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.669091705 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.668070801 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.668469636 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.668739816 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.668988547 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.669472191 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.678742271 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.670378926 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.673114598 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.672843714 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.665784299 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.669209412 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.669224289 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.669480707 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.675569649 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.668905096 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.672379392 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.672440166 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.670039859 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.669562388 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.669241425 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.6700152 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.667436235 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.670261601 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.677867453 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.671478771 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.672334464 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.670734153 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.679743263 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.670373598 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.679008311 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.671025394 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.671335426 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.670245857 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.670996955 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.673349087 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.670698918 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.672964293 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.670785626 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.673449954 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.672822217 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.671265507 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.673770131 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.673214004 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.671719187 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.672393693 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.682229845 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.690220011 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.673458298 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.673512224 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.66806977 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.674155623 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.673868115 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.672488623 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.670403696 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.674848091 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.680884189 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.676699475 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.673939516 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.672632913 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.674084462 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.671120734 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.671006519 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.670637109 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.671152877 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.672244005 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.673880696 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.671186327 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.679323171 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.671635143 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.674104145 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.676190869 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.673001411 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.682960849 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.671665573 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.675221188 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.674081807 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.67485959 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.677428744 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.676844445 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.674130673 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.676605296 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.674809892 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.676863188 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.678942167 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.677230538 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.676982165 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.672542429 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.671233115 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.676308203 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.67446159 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.673373675 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.672778946 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.673485966 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.678029903 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.673819414 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.675386346 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.67338527 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.672975035 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.676394514 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.67251074 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.678652792 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.679959119 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.675668591 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.670662739 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.673828678 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.673158376 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.674736359 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.675721173 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.683697192 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.678251086 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.682692906 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.681319393 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.677286173 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.676219182 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.67853205 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.681198162 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.672987955 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.67683972 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.673973746 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.677958952 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.674690311 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.677848768 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.674106451 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.68326579 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.676849285 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.674528782 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.685522369 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.678506646 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.67401883 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.676944555 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.680356261 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.67772373 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.671916235 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.67473962 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.675781723 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.684063177 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.67803495 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.674713634 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.679174041 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.673986502 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.677682485 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.679357879 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.676236703 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.678633366 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.6714537 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.67670041 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.674903057 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.675319563 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.671923235 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.676514118 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.675898644 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.679493091 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.680983654 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.673674979 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.679607593 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.677178365 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.677818756 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.676001569 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.674803803 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.673641212 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.673796373 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.677510105 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.67575287 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.678767945 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.680946622 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.677824498 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.678139036 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.676045438 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.676503507 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.68039611 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.6855329 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.682328751 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.67377398 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.677365062 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.67842211 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.682129148 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.679364304 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.677520215 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.679825166 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.680030114 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.676497292 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.67659154 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.676737017 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.681401241 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.692308391 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.677842909 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.679483197 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.679029095 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.683006374 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.678377463 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.674470201 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.677437008 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.67972176 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.681390221 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.683741121 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.679265489 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.686489011 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.679229432 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.679917079 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.680343171 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.681859843 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.684257055 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.682620968 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.677968705 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.677991689 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.684633291 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.693823142 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.679150873 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.6886522 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.705296803 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.680840669 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.680653859 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.678159139 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.679857564 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.679013337 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.681631828 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.679169128 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.679035117 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.678411697 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.680221089 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.680070599 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.685977148 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.683510509 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.679544232 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.678593327 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.680637311 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.681721542 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.675953641 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.680091999 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.67889749 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.679197055 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.679846661 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.679361739 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.681652302 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.691815832 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.688115917 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.679950976 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.679996787 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.677161795 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.685815828 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.6841179 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.690376835 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.684507972 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.679959302 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.678885281 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.683721856 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.67992448 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.677190815 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.681557667 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.681618702 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.681778609 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.677469492 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.693486883 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.686443832 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.686620217 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.682424372 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.68129631 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.68239927 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.682773966 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.680768061 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.680479573 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.682861313 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.681855708 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.683059208 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.680644128 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.680463489 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.686230128 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.686627382 seconds)
  done (took 996.961666334 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.679193544 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.678183146 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.677992697 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.679709655 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.679208913 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.678331705 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.680089898 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.679564375 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.678368056 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.68069151 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.678384162 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.678315741 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.678977533 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.679134626 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.679078716 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.679864227 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.678437105 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.678494168 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.678947796 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.679160768 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.678187761 seconds)
  done (took 36.857830485 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.681234935 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.679543973 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.680730971 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.682105736 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.679414134 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.682813426 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.67905759 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681926943 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.6818303 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679758368 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.682841556 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.683156851 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.679654277 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.678996362 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.679556016 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.682700442 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.683317815 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.680635504 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.682154092 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.67930547 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.68213209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.681069964 seconds)
  done (took 38.584743468 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.684115571 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.683739607 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.684326417 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.679932996 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.683656704 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.680822533 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.684597871 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.683699687 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.682844883 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.684600601 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.683048995 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.684768079 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.691660577 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.685966973 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.685769687 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.683483591 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.826180464 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.684079818 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.684853781 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.684304511 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.680814867 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.691805663 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.682403813 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.68074578 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.685183064 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.684014717 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.684333143 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.684062777 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.684423887 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.685915391 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.688638804 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.684809105 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.686052431 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.688643406 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.685763893 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.685389736 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.689157033 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.685795101 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.68314083 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.683873103 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.695068706 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.700439346 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.684836834 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.69435862 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.685434332 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.684449906 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.688719683 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.690832003 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.684607803 seconds)
  done (took 84.341881904 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.684686479 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.685690773 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.682119937 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.684750252 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.687054234 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.685456174 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.685258984 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.684856463 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.682447994 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.682900315 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.685069426 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.683142413 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.682365268 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.684233042 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.68497806 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.683290915 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.683357017 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.68359643 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.682847559 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.683174192 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.682208904 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.686915009 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.684951002 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.685100347 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.687569204 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.685507665 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.684773089 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.688234536 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.686242712 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.685864088 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.688008672 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.689914069 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.688314639 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.687788323 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.68630351 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.688626319 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.688854448 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.686888902 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.688806246 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.688102296 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.689089418 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.68877553 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.688701868 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.689169824 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.686331407 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.688191278 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.686324366 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.68632418 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.686601805 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.688753544 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.68899274 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.688415822 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.689312909 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.687173461 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.689247917 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.688569839 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.686750778 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.686434453 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.689731369 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.688354009 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.687115353 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.689542729 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.686942848 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.690955492 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.690206494 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.687694133 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.687134103 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.690343589 seconds)
  done (took 116.29655124 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.691529975 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.689606487 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.689246793 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.689694836 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.690384941 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.690080519 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.690949234 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.690468386 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.689553276 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.69118733 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.690850852 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.690471628 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.691037112 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.690723518 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.691104463 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.692765119 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.69326489 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.692264682 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.693752221 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.692983561 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.693449757 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.69290955 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.691262563 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.692219242 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.692254333 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.689441629 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.691831868 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.690978791 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.6909018 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.693699198 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.691850046 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.69168924 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.691516601 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.692686228 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.69138118 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.693392289 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.691898509 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.692480359 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.692705047 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.692283818 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.692675702 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.692105753 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.693595487 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.693950237 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.692612069 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.691572786 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.692478978 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.693138826 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.692097053 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.691332068 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.691916244 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.691639811 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.691708728 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.691045385 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.691500491 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.692652053 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.693363322 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.692530365 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.692129377 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.692637109 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.692834226 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.692961778 seconds)
  done (took 106.504956445 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.692642468 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.69175186 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.691793199 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.689727113 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.692777708 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.690590167 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.693144886 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.693005791 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.693562781 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.692614996 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.693711345 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.690482072 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692030481 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692521868 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.692839802 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692857708 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.691615017 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.692383469 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.694165405 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.691972416 seconds)
  done (took 35.45664656 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.691004194 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.694903445 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.691099382 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.691016144 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.693610248 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.691943409 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.694386658 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.693653934 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.691308843 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69380511 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.695027854 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.695610511 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.691032564 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.691837598 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.694431864 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.691358394 seconds)
  done (took 28.697786201 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.692356548 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.696380664 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.694277954 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.69422675 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.692582655 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.693048271 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.694759477 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.693002834 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.692987616 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.69500057 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.695669419 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.694951652 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.695051922 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.69512902 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.691987471 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.695084217 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.692672894 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.692145617 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.694555799 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.695082376 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.692823881 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.692732958 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.696182826 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.695783614 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.692254484 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.693589549 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.691802444 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.69294307 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.693304571 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.697015776 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.693370691 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.695076862 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.693980486 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.692842282 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.696711947 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.693161372 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.695503923 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.696250397 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.696992763 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.695943146 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.69627769 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.694245905 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.697278995 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.696617106 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.692896536 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.696374062 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.694439159 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.695905884 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.694590724 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.694309425 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.695755037 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.697296752 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.696555706 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.698123531 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.697659287 seconds)
  done (took 94.821443588 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.697284468 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.696965962 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.694278016 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.696582122 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.696538136 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.694713863 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.697921966 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.694317382 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695946676 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.696727176 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.695796478 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.697388277 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.694975424 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.697236863 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.696725008 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.698174789 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.69566262 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.696033503 seconds)
  done (took 32.148569863 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.695070189 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.695836336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.700829572 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.695203845 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.69630923 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.698350794 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.695426235 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.698124199 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698314825 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.69526504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695472797 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.698955383 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697994651 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.69948333 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.695365498 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695390682 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.698888835 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697987495 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.695754122 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.695732309 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.698544881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.697904047 seconds)
  done (took 38.951605894 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.698441742 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.69861229 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.71413111 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.715724229 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.718633464 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.727079522 seconds)
  done (took 11.888066452 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696949619 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700531845 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.696449523 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699926762 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698823916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696589678 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69670131 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697363293 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698968654 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697230197 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696095155 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700278503 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699853761 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697785211 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699147569 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700164738 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696976639 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696126718 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697369935 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69969996 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698424393 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699841156 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698332387 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69731042 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69736658 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698322211 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700123117 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697228422 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696748738 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700445871 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700880867 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697893311 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69992886 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698374755 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700375666 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701607723 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699806385 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701219324 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700695741 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698415223 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.699235432 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701118876 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702464885 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698448529 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700657109 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.6984028 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698177712 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698448026 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699168819 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700901109 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701281022 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699249162 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701422556 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700896932 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70225303 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701657126 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699785683 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699002872 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70163423 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699813248 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698819091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701661916 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69995577 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699233969 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701540173 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699749785 seconds)
  done (took 113.771132424 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699190462 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.699103163 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699942653 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700129497 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700932233 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700125427 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699352734 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699839463 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700558923 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699317528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70328739 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699376121 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700500009 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700821327 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700898695 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699708559 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700706542 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699993892 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700062978 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702504105 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699651802 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700337375 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701093404 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700269779 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701378877 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703512931 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699512238 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701091615 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700939439 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700217441 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700628112 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699936481 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70082313 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.701624914 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69966807 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700238686 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701971407 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701483042 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701384323 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702997903 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701936819 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703759722 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701212456 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700559406 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700987027 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701771052 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702596197 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701615106 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701832196 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701992641 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702324129 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702978742 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70204203 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702086627 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702126378 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702269292 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702320267 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702631947 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702659737 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703895441 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701556136 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701870783 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704813097 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701827181 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702286722 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702473574 seconds)
  done (took 113.904737501 seconds)
done (took 2326.163971875 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.754152114 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.690604667 seconds)
  done (took 15.06509364 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.867550581 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.822767605 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.703304325 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.724558735 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.706682998 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.70141453 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.702745724 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.704714994 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.704528182 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.705616327 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.703795486 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.891331097 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.713326902 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.705270907 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.705476288 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.797429091 seconds)
  done (took 49.485934921 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.708815762 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.708529606 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.719021434 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.71000786 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.708254283 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.720284855 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.74071172 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.711385021 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.740863719 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.720138153 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.774983017 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.716617926 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.707186322 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.757127305 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.719056261 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.722416222 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.797959185 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.780416635 seconds)
  done (took 32.78563219 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.78334207 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.712194873 seconds)
  done (took 10.121705097 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.717937783 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.742712783 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.736855074 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.727332321 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.718866394 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.733419292 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.74380908 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.738755741 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.721846367 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.722630933 seconds)
  done (took 68.927540766 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.712356849 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.707785249 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.707308559 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.706559693 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.699688461 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.703973398 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.706549346 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.702700295 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.357844012 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.739626814 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.713448422 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.710503882 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.706106718 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.707968176 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.702661127 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.729167196 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.814896021 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.702038089 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.702680056 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.712352927 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.706740427 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.761413289 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.719120615 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.705154623 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.736986758 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.356304967 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.713499796 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.712905786 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.807370856 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.70328645 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.70598392 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.707615751 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.710958024 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.077080858 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.969712041 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.707238752 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.720107564 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.715902622 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.702473728 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.815108941 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.707710855 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.71391763 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.410292827 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.951682835 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.794425398 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.748886296 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.035035596 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.722193604 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.709554045 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.736429583 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.709779356 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.709185256 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.722056734 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.189110484 seconds)
  done (took 123.184273432 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.700868503 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.054647428 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.871440796 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.703906189 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987373663 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.913286685 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.703074063 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.751619486 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.704066498 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.934680553 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.961058599 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.808631832 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.704410214 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.703242368 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.703386145 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.701245684 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.859380271 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.77782989 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.703236052 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.700882424 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733774501 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946303217 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.828047802 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.706500559 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.732900243 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.916643028 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.827760371 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.806933815 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.499630074 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.701783902 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.768226856 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.703786913 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.703426141 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.702808364 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.860173546 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.799317889 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.789803827 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.704425902 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.703402021 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.702042042 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.368152504 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.906382349 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.801716598 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.835627133 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.958252044 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.909924713 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.488541223 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.702081081 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.444219098 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.869715326 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.935643759 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.934464654 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.826350409 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.704774556 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.048193397 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.703553843 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.702542758 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.956466924 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927159862 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.802629127 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.704754208 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.704744368 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.703923082 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.945053836 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.707371951 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.801128758 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.706515967 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.70563216 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.803546555 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.803664415 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.935443002 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920800396 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.737997712 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.049988337 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.210207257 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.953683 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.772680461 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.95816045 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.705817963 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.706467073 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.7855252 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.549674219 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.960328837 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.949970268 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.952145891 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.742771188 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.426392905 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.703930418 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.934806736 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.929211857 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.96761622 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.951995336 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.94551808 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.050949168 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.704791064 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.705046038 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.958621184 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.832906586 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.706577975 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.053124334 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938213134 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.237828037 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.734880369 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.012100963 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.837712633 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.708227516 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.3407704 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.706051023 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.938367506 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.749492189 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.706784099 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.707070808 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.928208433 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.701300323 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.707835933 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.358285878 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.770269438 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.709405393 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.941366189 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.709577404 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.977728614 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.708500721 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.941174655 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.136734304 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.740252011 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.882657866 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.955218341 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.709394621 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.948952106 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.954574127 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.824236199 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.932548964 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.413693954 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.705591242 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.994671017 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.70944028 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.706894223 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.87917871 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.707533298 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.852054674 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.710008286 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.004868396 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732583804 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937990827 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.710024249 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.965948392 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.742418584 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.760766636 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.710611363 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.836058609 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.708767339 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.638977047 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.868621898 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.711533781 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.709446679 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.266312041 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.708519558 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.859541478 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.936092258 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.731868084 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.78257658 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.378144907 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.706916084 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79267401 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.734071467 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.106870357 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.708866752 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.375378027 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.710354961 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.708862481 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.708789382 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.94699655 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.895146146 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.712008207 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.708768135 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.619592639 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.708657913 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.708738416 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.89410962 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.060618637 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.709156521 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.913805717 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.711058001 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.840055964 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.710957427 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.786979973 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.046540774 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.709067219 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.70936634 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.708903267 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.711055222 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.711796028 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.921729572 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.737288815 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.208514092 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.84845118 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985310751 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.022764844 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.95323966 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.75589932 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.711271183 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966911223 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.710890568 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.774990518 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.71184437 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.733753133 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.940317732 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.711460545 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.973949754 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.984693169 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.563428877 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.760192447 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.711997423 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.712127552 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.709424835 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.858423917 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.797909727 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.71368625 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.711187646 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.827324092 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.835304734 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924973852 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.710833022 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.761874468 seconds)
  done (took 866.760302503 seconds)
done (took 1167.951933311 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.71220302 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.711538529 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.694991685 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.715446038 seconds)
  done (took 28.466725317 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.721010058 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.71907539 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.719021746 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.719208444 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.719238665 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.719277264 seconds)
  done (took 11.95003945 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.74481448 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.714290446 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.715720818 seconds)
  done (took 20.810688766 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.79075948 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.102555033 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.852205501 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.129575619 seconds)
  done (took 9.509943788 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.720192396 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.719086948 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.722182034 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.721748104 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.721843346 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.723251435 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.721001336 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.721992103 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.722843256 seconds)
  done (took 17.131236586 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.829094194 seconds)
done (took 93.328977209 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.073065514 seconds)
    (2/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.798135375 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.782083247 seconds)
    (4/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.801340177 seconds)
    (5/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.92250042 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.820675786 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.714727231 seconds)
    (8/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.834967437 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.737897565 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.041429706 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.350621101 seconds)
    (12/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.818629966 seconds)
    (13/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.057599654 seconds)
    (14/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.753743752 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.075510654 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.88248623 seconds)
    (17/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.781722336 seconds)
    (18/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.742765625 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.741000509 seconds)
    (20/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.815080025 seconds)
    (21/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.800200487 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.739728266 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.698570154 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.126640369 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.718153217 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.914060212 seconds)
    (27/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.681644026 seconds)
    (28/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.881963605 seconds)
    (29/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.940492385 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.827976825 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.40046676 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.114129226 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.029638814 seconds)
    (34/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.592768415 seconds)
    (35/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.760883472 seconds)
    (36/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.07018294 seconds)
    (37/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.856229707 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.802772299 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.957971834 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.894966169 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.69998206 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.914399352 seconds)
    (43/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.269713054 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.726426814 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.604600811 seconds)
    (46/309) benchmarking ("sort", Float32, false)...
    done (took 5.429941568 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 1.945182222 seconds)
    (48/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.075174983 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.749106365 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.802067154 seconds)
    (51/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.146949894 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.722542388 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.670622104 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.383581696 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.994663776 seconds)
    (56/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.721385955 seconds)
    (57/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 5.115354944 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.976172554 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.720682896 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.817791093 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 3.334896881 seconds)
    (62/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.729163391 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.736540497 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.036362693 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.812784913 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.738912937 seconds)
    (67/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.150911638 seconds)
    (68/309) benchmarking ("sort", BigInt, false)...
    done (took 6.722154187 seconds)
    (69/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.002941072 seconds)
    (70/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.805492977 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.736508537 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.853534435 seconds)
    (73/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.781600528 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.720349599 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.017098355 seconds)
    (76/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.70414149 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.046505724 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.357115094 seconds)
    (79/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.812828954 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.079100136 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.722922679 seconds)
    (82/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.72234477 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.203733217 seconds)
    (84/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.819646367 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.95901639 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.722874692 seconds)
    (87/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.891456049 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.484802903 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.496180258 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.15787722 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.830217526 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.853492603 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.02205675 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.058216088 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.722944296 seconds)
    (96/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.873324886 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.842688244 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.720629922 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.012467958 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.703852803 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.504921321 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.839847243 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.708393443 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.390178821 seconds)
    (105/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.265778837 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.737681712 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.176610122 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.733740485 seconds)
    (109/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.046012917 seconds)
    (110/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.828796569 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.130345306 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.758091544 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.060050612 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.121470125 seconds)
    (115/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.759268331 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.872755749 seconds)
    (117/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.745166201 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.8932725 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.871837145 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.938984862 seconds)
    (121/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.711671442 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.401238775 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.757914568 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.75545061 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.07454652 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.841546591 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.094578114 seconds)
    (128/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.738165418 seconds)
    (129/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.839899946 seconds)
    (130/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.897092796 seconds)
    (131/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.840598739 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.705498878 seconds)
    (133/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.75272299 seconds)
    (134/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.859270081 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.729879816 seconds)
    (136/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.094114364 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.759978174 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.715236122 seconds)
    (139/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.113415974 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.772125412 seconds)
    (141/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.929665247 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.733664281 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.874612381 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.905954241 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.717206092 seconds)
    (146/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.508708952 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.985974827 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.713825973 seconds)
    (149/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.149744202 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.989937288 seconds)
    (151/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.002158427 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.735867559 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.917299807 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.865310564 seconds)
    (155/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.763906528 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.756553466 seconds)
    (157/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.740101826 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.867621247 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.961330985 seconds)
    (160/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.024681625 seconds)
    (161/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.76671334 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.64718948 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.722256235 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.760257821 seconds)
    (165/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.052209281 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.762892091 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.929843168 seconds)
    (168/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.800829346 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.229860582 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.719471331 seconds)
    (171/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.087514279 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.085822703 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.953428969 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.972798873 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.739473277 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.865666509 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.652783419 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.882342258 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.759611866 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.715564136 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.898657869 seconds)
    (182/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.763077125 seconds)
    (183/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.571262039 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.014612768 seconds)
    (185/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.835219089 seconds)
    (186/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.801625885 seconds)
    (187/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.734029352 seconds)
    (188/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.448333271 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.361285543 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.668476687 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.540946608 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.02999476 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.755017022 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.715059889 seconds)
    (195/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.029556672 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.741736159 seconds)
    (197/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.239681149 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.862392992 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.76749194 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.478326387 seconds)
    (201/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.91749553 seconds)
    (202/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.639391517 seconds)
    (203/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.739511086 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.185541273 seconds)
    (205/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.818344966 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.799520405 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.829427807 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.049965019 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.739219948 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.634296209 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.738519253 seconds)
    (212/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.855812325 seconds)
    (213/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.837727264 seconds)
    (214/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.959377076 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.986377642 seconds)
    (216/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.755079619 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.91825165 seconds)
    (218/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.757365553 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.933350926 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.406322784 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.056260078 seconds)
    (222/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.99650817 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.741050256 seconds)
    (224/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.899175725 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.086983174 seconds)
    (226/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.808254425 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.765222026 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.843559701 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.418984282 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.898459836 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.881439928 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.718116122 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.210897596 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.097503695 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.00761159 seconds)
    (236/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.997030586 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.825683492 seconds)
    (238/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.868001738 seconds)
    (239/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.533994732 seconds)
    (240/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.880433646 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.941968873 seconds)
    (242/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.907104014 seconds)
    (243/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.766494089 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.719158123 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.295590566 seconds)
    (246/309) benchmarking ("sort", Float64, false)...
    done (took 5.480505406 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.761578988 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.028560284 seconds)
    (249/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.722350991 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.205005609 seconds)
    (251/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.854574601 seconds)
    (252/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.799699436 seconds)
    (253/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.881142408 seconds)
    (254/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.737216431 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.851347968 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.913869537 seconds)
    (257/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.776334459 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.752115315 seconds)
    (259/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.818669289 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.737841452 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.353591824 seconds)
    (262/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.746330333 seconds)
    (263/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.268066363 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.986058711 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.720837507 seconds)
    (266/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.913236594 seconds)
    (267/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.767119576 seconds)
    (268/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.740549584 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.412354945 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.109419881 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.755630597 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.737107332 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.843754276 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.055916802 seconds)
    (275/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.744025596 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.239773585 seconds)
    (277/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.894214108 seconds)
    (278/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.739887538 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.830939494 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.923666922 seconds)
    (281/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.905920708 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.720719836 seconds)
    (283/309) benchmarking ("sort", Int8, false)...
    done (took 5.241996295 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.033361839 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.918998155 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.744911136 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.01334533 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.527128735 seconds)
    (289/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.466712916 seconds)
    (290/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.976120011 seconds)
    (291/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.650205556 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.747533744 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.833790001 seconds)
    (294/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.918853758 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.447509816 seconds)
    (296/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.834118066 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.835601888 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.742109675 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.864239505 seconds)
    (300/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.976783958 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.728527564 seconds)
    (302/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.063457051 seconds)
    (303/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.925566638 seconds)
    (304/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.81602082 seconds)
    (305/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.747831362 seconds)
    (306/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.429351131 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.968291555 seconds)
    (308/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.112600097 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.089672742 seconds)
  done (took 961.899924836 seconds)
done (took 963.602210793 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.771751496 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.770800571 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.748298988 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.770934563 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.862212463 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.774322621 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.760841418 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.751075751 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.796851271 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.799661632 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.749241945 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.773183464 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.752204377 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.751624765 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.749619249 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.768585988 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.068067721 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.784596179 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.769507615 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.758989392 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.76850907 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.749027873 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.800101104 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.774722057 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.754480002 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.753775132 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.754359355 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.77204131 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.864629424 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.755196332 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.753116745 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.763412783 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.066783308 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.783701841 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.746029349 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.772031971 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.762392694 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.75953724 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.755898731 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.783972847 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.157771387 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.792362941 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.753977688 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.752107104 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.753405784 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.755981536 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.754339985 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.757089285 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770162739 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770675712 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.150018488 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.809770287 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.755867186 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.752334084 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.762622473 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.753812871 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.755813421 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.773054552 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.772508355 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.773099175 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.051658065 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.7903128 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.754005461 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.77039824 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.761644682 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.185978027 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.790099133 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.756389853 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.157415187 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.8001045 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.186543119 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.803019858 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.754312753 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.767699967 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.786625794 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.070269075 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.780848577 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.752923792 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.762316948 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.750690532 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.762584586 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.771064073 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.760646409 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.754370648 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.772664026 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.778161027 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.76318559 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.754990594 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.762778178 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.774883781 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.76339961 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.765495093 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.758161634 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.750171232 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.765022746 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.757504484 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.757527413 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.758327839 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.758224749 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.765256119 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.158260411 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.818159508 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.751585434 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.751373321 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.754828065 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.769509944 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.157964406 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.798940919 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.777699095 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.802631156 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.756314806 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.054438002 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.790936266 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.775660379 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.764061486 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.758701064 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.750864238 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.053919563 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.186678899 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.813377831 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.756718355 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.754575959 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.776569009 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.756993832 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.751917497 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.073441095 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.789032419 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.774701436 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.877368888 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.766217915 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.78770659 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.753594005 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.759262283 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.783382237 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.776086283 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.788151583 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.758524746 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.77682461 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.773477075 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.75408427 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.768094073 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.769104397 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.757818282 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.763259857 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.750644647 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.786611346 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.773950764 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.772716394 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.777987428 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.879740294 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.754282911 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.05600826 seconds)
done (took 276.304839257 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.830398664 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.750680316 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.854226972 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.754447614 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.837726943 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.848133003 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.751296277 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.750636443 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.752728825 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.137357781 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.751090659 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.752013678 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.747596711 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.751928692 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.839918927 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.75418766 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.7512128 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.101380168 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.755072032 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.83070295 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.755638199 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.751733168 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.753819848 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.17481633 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.753570277 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.755145627 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.836043498 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.753972505 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.10378017 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.752340513 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.750398359 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.115256633 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.854011393 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.773233637 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.765796467 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.762699438 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.841020801 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.760884777 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.839833252 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.840088735 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.856187544 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.795752642 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.751834668 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.755579326 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.758564813 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.755556162 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.752909188 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.784010644 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.756529346 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.75295298 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.102449452 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.765014241 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.762355466 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.752785847 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.753099372 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.777835897 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.753852569 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.757086414 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.850907249 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.756322545 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.821389084 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.143363766 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.138664017 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.756538288 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.749682296 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.75562623 seconds)
  done (took 176.783342234 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.82453104 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.834228108 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.823320007 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.76240716 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.807130957 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.824861018 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.763232096 seconds)
  done (took 14.309995623 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.763684923 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.757976619 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.807366146 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.807557277 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.756113606 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.913166496 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.756358946 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.769466269 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.764358928 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.784524394 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.758583793 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.757484741 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.754695378 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.75417592 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.805363292 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.770282066 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.874545438 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.759068973 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.758095563 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.907945211 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.755512857 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.76497011 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.783379079 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.769613395 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.75948592 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.7643951 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.329321703 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.757835649 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.754547408 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.75782405 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755636108 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.799714978 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.758077277 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.752259896 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.755837146 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87208774 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.758282445 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.7555582 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.757894109 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.756155329 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.757610734 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.757795536 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.758359279 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.755791525 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.758247777 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.781506007 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.758760465 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.758972854 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.759169792 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.760225444 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.785368919 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.759012098 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.757891262 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.757174873 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.802183666 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.765774423 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.760902409 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.755941962 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.760366653 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.75786841 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.909327131 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.809754772 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.759296862 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.809533922 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.759955708 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.760514095 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.759713451 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.760103456 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.8512378 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.759466807 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.810025556 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.757358994 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.919366659 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.782962149 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.76105881 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.764307879 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.763492246 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.760268234 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.756366595 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.766890883 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.756834768 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.762736765 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.766957415 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.758201385 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.758911185 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.873641139 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.900805846 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.757299911 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.773640687 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.767721513 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.75719968 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.806354025 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.760130372 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.757867399 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.816910554 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.879380548 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.789106333 seconds)
  done (took 194.867086665 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.766099581 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.771242821 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.763382322 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.780607396 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.761925904 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.761812259 seconds)
  done (took 12.279914906 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.764988605 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.763793379 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.76141539 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.76228091 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.761146793 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.763585462 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.763979427 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.766051532 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.765825197 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.762505903 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.763289125 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.762921683 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.76297167 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.762316941 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.762465541 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.762808158 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.763779106 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.758909427 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.763783408 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.761158876 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.917210429 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.762180455 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.761065988 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.769718833 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.767519343 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.762578377 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.773119253 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.763167931 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.762436049 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.773827179 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.766589175 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.763798369 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.766994447 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.77003083 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.766872298 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.768857805 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.766609774 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.763961591 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.760444839 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.763723458 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.765707472 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.762675291 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.76303561 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.765248929 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.765983362 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.771829518 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.76918641 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.773151528 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.764928361 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.76651903 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.766178846 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.766444453 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.768532271 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.76742295 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.771814851 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.772956004 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.769088737 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.765877395 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.763475412 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.769088702 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.765107915 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.765242014 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.766465208 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.769614618 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.762101172 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.764584306 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.76944966 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.768352719 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.765540389 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.764859446 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.76611781 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.7621541 seconds)
  done (took 129.947469311 seconds)
done (took 529.875687811 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.983795566 seconds)
  done (took 8.661339862 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.953756484 seconds)
  done (took 8.686706459 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.286698336 seconds)
  done (took 9.966871193 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.778671324 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.787920656 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.776031454 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.762626469 seconds)
  done (took 28.812152889 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.816032391 seconds)
  done (took 8.495755937 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.781848111 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.75901808 seconds)
  done (took 15.253491373 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.856142808 seconds)
  done (took 8.535323782 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.797983991 seconds)
  done (took 8.486733851 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.76636034 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.787893492 seconds)
  done (took 15.259167474 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.741974909 seconds)
  done (took 8.422793748 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.899826358 seconds)
  done (took 9.677189582 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.772397375 seconds)
  done (took 8.520821631 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.83346573 seconds)
  done (took 8.51649686 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.841515522 seconds)
  done (took 8.521673417 seconds)
done (took 157.494922967 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.766152762 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.76036519 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.761320483 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.761526472 seconds)
  done (took 28.729857094 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.798416507 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.799291385 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.801889157 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.810290584 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.802301466 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.819207858 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.792227081 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.79273287 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.810307771 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.803344772 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.802805864 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.802574498 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.799811826 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.792792764 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.803005066 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.802051634 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.811760085 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.819362032 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.793143405 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.80422386 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.766706035 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.810299098 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.802952905 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.767987592 seconds)
  done (took 44.890408068 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.965274144 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.841308878 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.922628121 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.819454969 seconds)
  done (took 9.230075592 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.819028149 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.820832225 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.832552481 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.871167138 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.89434412 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.830748764 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.790462788 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.789042707 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.774737662 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.820707858 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.896622972 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.815631421 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.906118184 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.768270233 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.955704142 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.768760535 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.768380504 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.821561025 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.872172925 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.885571436 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.769744329 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.821482788 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.823247128 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.816354859 seconds)
  done (took 45.616003503 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.767953256 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.77532039 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.773257528 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.76833906 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.768033279 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.768655256 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.774965931 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.769063042 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.78952326 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.769209341 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.767512165 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.77162134 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.767759469 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.768825119 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.767563301 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.781727941 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.782275063 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.768964088 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.772043617 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.775327196 seconds)
  done (took 37.1312716 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.763873745 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.616184525 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.115320754 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.020809199 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.764230094 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.76689182 seconds)
  done (took 30.731851664 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.785672066 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.77850623 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.772143318 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.82965005 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.914387568 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.779890393 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.771484452 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.784209912 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.819830019 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.83895784 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.795947246 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.801994997 seconds)
  done (took 23.356435738 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.768125563 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.768338023 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.767964305 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.782488632 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.782556146 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.780368555 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.778435053 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.765437655 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.783931706 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.791384957 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.780161038 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.783816208 seconds)
  done (took 43.022245166 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84975339 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.652608361 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212386802 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233643346 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298169527 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975774852 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.766646603 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.858709268 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.769533159 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039530934 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.086706953 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970052478 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.0193857 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.575285701 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.7712287 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.223189225 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060365377 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986364933 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794521571 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367713933 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873587962 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354231946 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.425000811 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.875714383 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979266803 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.89905389 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.02815793 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.722637551 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820121637 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776728629 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777258881 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.768853207 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042468459 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89287586 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842558964 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777610674 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.186866313 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.479908706 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.754763628 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.392289664 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.231155222 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.88148357 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775829863 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769201548 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.70164764 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395663759 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866248488 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.772979493 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.471648976 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.768864734 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.779079837 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84805904 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.771592258 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.581415416 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.459060237 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.043437244 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.76705392 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77539272 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.335637734 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749825017 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454818778 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.708131788 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.862579021 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.42908988 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21829326 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.92240756 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.772172258 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774224754 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701367806 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.375851653 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878004761 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913474031 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.789051526 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417726855 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064545135 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.13895928 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.823411845 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047870949 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.695840797 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.709233055 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995492758 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.725122961 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702830777 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.627658102 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.702561018 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986541775 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806779559 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.362312854 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808246846 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.85958273 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.780402682 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789944068 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777064004 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.993306534 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.649518327 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771079308 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.031248556 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026436137 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792523414 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.862632097 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704393373 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.775707314 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024856119 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.98019514 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.096200898 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.230166518 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861799522 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763462128 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.786196794 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.773633024 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.78305957 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.040771205 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833654839 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.764361204 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886665339 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.729524827 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021272274 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.668979031 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.984658745 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.086989723 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.00590581 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.08874347 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.022686556 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838904212 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.781549479 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.772410755 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.436779453 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383536247 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.996673781 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.769907182 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33474126 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.786166304 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.774126902 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707571571 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.434506676 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.102088003 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.852801562 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.994111489 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.774125034 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049323568 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.705630413 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917319107 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.761918299 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.993830252 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.415482267 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.848354695 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03153196 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.081793756 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.080780164 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785178581 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793374639 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87072842 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794989924 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.271714428 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0285036 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.777980287 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.778162609 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.435606721 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.836576284 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779254537 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.779700381 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.333009215 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049356786 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.802327392 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.781792693 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.661111694 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.787738648 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841111995 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780159996 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.783914157 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.297421196 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.288019968 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.782149516 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.422161683 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998555555 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788666408 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.432333553 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952906738 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.793838338 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.046185745 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837851485 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.707059473 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.477764579 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.478619796 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776087217 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.709472049 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.77723146 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782014615 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78402075 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.970705529 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.050245905 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822211725 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.385512835 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.878322899 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785630925 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.780644535 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779424647 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.274639122 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.780264325 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33606771 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900128827 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910396685 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.789724697 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.710479278 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.780384947 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78099647 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.776843222 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.731768027 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826672743 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.377896409 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979134152 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037113076 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.192939631 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791721465 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.388019221 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.888972376 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.797799447 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.03874794 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353659061 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.886741154 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860685491 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.787761974 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.438468839 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.511225377 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34638783 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07460216 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089398142 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123195708 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.212071979 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.112535775 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.870885849 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011395041 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.304940682 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837282865 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876555581 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720580685 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799316773 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.420540378 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129514893 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793932726 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003418456 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065395042 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.105691256 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910754471 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988155734 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812942367 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.659692496 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819674717 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.298190658 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801984743 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.138191731 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975804808 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867246201 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.040233358 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.859750044 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.780610667 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118981501 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823981901 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.488342998 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.139686193 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.239851835 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.228935209 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002951805 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.787201011 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.223735757 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128398921 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.024179504 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.913862983 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714205463 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.78902838 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.789302665 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.775890198 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.756538796 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.6331569 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.032291217 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789985251 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014345797 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.960336605 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152014847 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.683397222 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.78631013 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781100944 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031876717 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.505299104 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94761206 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.14064783 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.364254592 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788794748 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.712286098 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713276078 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.484346175 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.789509356 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.755283459 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993601919 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.892285761 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.469995986 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.209001477 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103177338 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033310828 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.7940897 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.053449863 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058489523 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.279852552 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805820079 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.879938804 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.034041114 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.4573624 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.001562274 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.01428999 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35482163 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.006124011 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229484886 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.733839631 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.781238999 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.993107217 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.001627056 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.111698999 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954827009 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.494475329 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.794515067 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161948346 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842328528 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.102799558 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.968863963 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.875346222 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79348144 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865455943 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789599255 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.790397956 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.790168053 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793478978 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.105000439 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893343362 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.795168921 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859713064 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771718115 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.34808617 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.792226764 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052156133 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133547253 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111157063 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843281045 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.781040323 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790687323 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712930169 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914116206 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.224925262 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053426849 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.906248285 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.922069002 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80571423 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.045519062 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.081910145 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101379714 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055413442 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.674500913 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460704247 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.912223236 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.001424197 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786394529 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.986010127 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997538103 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082187894 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249254027 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.96298785 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.980061881 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049336738 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.138446241 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.772542773 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358737239 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.776623132 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194403897 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.818829241 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.11690891 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040844898 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792174791 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910640294 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.792943393 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.985991025 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.236032888 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.465281774 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.134181216 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.639997909 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.792879337 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061311755 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.115056433 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09470051 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867688837 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795072742 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.478017585 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921213317 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.675638077 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.025977289 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787139381 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995620725 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.495615948 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.792450778 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057989958 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093699039 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.783011592 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.713023563 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822896561 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.792036419 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.00527309 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003302683 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036362806 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792024942 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.791095028 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.599919649 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061557145 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846331676 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716830486 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.786839987 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834347778 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.017609951 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804838248 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.30057757 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.486060404 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067112773 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.702352347 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805453451 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.232880911 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174210393 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112876959 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.305415441 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007433225 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.34215213 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.669855215 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165853877 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.78137542 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.231854535 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164086552 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.777118664 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.328335117 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898037143 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.047483123 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101314213 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.795195613 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474919834 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.817442817 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006861996 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157580833 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723300244 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78694049 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.815159009 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.78637388 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.810041557 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.796611499 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.746816067 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281609943 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.634851677 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276264074 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.790258934 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.7702711 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.120534002 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366494529 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901035438 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809275326 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789438368 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.495344601 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.07832969 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.038702257 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.343796635 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.864630341 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.789782183 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788006306 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.711519782 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.979025949 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.981803312 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07571533 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.187577576 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.902824429 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790530386 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.000380594 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995699052 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.135732444 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919346227 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963870605 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908261136 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.71161532 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.499510377 seconds)
  done (took 1618.555935231 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.798745579 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.822451925 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.801225308 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.830863678 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.817738901 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.804287426 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.848553577 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.790902822 seconds)
  done (took 56.220878675 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.779101837 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.943589111 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.787962018 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.780808052 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.788484669 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.780349015 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.952956506 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.792324103 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.788171565 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.789017409 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.779825232 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.780309093 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.047490811 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.807693509 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.780955611 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.770653345 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.789093499 seconds)
  done (took 72.645201666 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.784430742 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.996351824 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.813040106 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.781035234 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.967846336 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.780111959 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.749737568 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.830347088 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.781984118 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.18930126 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.072767174 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.7774171 seconds)
  done (took 89.223207383 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.788029234 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.778593422 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.779980249 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.777735965 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.778002502 seconds)
  done (took 10.599794646 seconds)
done (took 2111.650369773 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.004734343 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.959586182 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.00603158 seconds)
  done (took 5.655894121 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.916456371 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.966402742 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.08677991 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.106086986 seconds)
  done (took 9.767685819 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.05603437 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.142006965 seconds)
  done (took 5.885094197 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.09414139 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.784382386 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.151417754 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.765086614 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.767635069 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.767567065 seconds)
  done (took 21.989855445 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.767519291 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.771039207 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.769418467 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.771132869 seconds)
  done (took 8.762691127 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.748896635 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.441972067 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.748692527 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.762183517 seconds)
  done (took 20.3874647 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.918336828 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.884713508 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.91223013 seconds)
  done (took 7.39953646 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.99097369 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.997916299 seconds)
  done (took 6.674402295 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.92816138 seconds)
  done (took 3.612418194 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.795998421 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.04057448 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.260761709 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.301535611 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.362020628 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.596180848 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.07299666 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.001012961 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.220749817 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.229576005 seconds)
  done (took 23.566457136 seconds)
done (took 128.426875558 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.106990401 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.790476349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.968828311 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.119363083 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.994930712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.970831794 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.983225796 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.107406133 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.797106221 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.78685039 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.121962348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.993910925 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.932520788 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.788049005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.937173854 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.788713158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.990575076 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.122064865 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.807769587 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.046074846 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.991980534 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.769369785 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.96643508 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.78280959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.994244479 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.923924517 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.308669536 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.801776696 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.951473841 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.326270523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.928044586 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.184296318 seconds)
  done (took 164.769870788 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.770215889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.770074483 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.769216922 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.769556177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.298613485 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.771370641 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.770415216 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.770082396 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.168486958 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.15778875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.770364028 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.287558928 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.771121806 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.770727605 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.772401013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.769410236 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.313344333 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.770179744 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.771054723 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.769330555 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.769873788 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.153766073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.771573943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.169906353 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.314572189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.772009408 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.770364641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.770828251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.770049102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.770595306 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.771215487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.770450006 seconds)
  done (took 206.046402136 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.771685408 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.773283355 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.773666035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.772550773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.772594572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.772013231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.774314972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.771849983 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.343064715 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.337429428 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.772406884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.773703116 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.773108233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.77100771 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.773099665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.77151794 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.771935385 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.770819174 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.772849185 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.771793111 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.774459278 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.34797025 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.779200944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.384028682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.7847132 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.788491816 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.77195474 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.773035654 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.775232703 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.773273518 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.774720729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.773210418 seconds)
  done (took 216.774755769 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.031628841 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.778230629 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.778460376 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.698531577 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.777891469 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.777570026 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.788038915 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.026524338 seconds)
  done (took 18.351020481 seconds)
done (took 607.635282628 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.230858573 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.082048727 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.956687474 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.799530123 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.143149714 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.845894375 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.793963607 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.858147659 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.414663939 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.865157125 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.42240761 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.822788533 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.509979763 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.82355097 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.916079057 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.851225706 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.380102304 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.458904937 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.974414163 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.990013049 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.977379929 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.727837379 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.87934674 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.459495004 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.536253646 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.783122398 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.85896422 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.37767728 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.807645643 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.957152815 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.538605058 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.106832761 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.812821376 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.797967098 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.85066729 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.828799558 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.065295352 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.811452993 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.927000177 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.538371968 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.969754782 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.338139769 seconds)
  done (took 98.781289062 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.764952124 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.764028682 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.763987896 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.763763299 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.763678061 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.763433485 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.764207103 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.763584241 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.763587529 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.763498418 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.764059246 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.763899651 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.763588439 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.763812379 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.763926917 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.763610467 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.764163974 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.764391838 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.76385815 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.763526027 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.764240017 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.76461186 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.781462257 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.763879284 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.764035593 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.764250739 seconds)
  done (took 47.580321217 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.780085148 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.947015442 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.021044447 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.802593204 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.780694071 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.784912948 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.800767126 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.785948655 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.784553311 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.783537056 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.886134148 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.78835578 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.798795259 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.024688737 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.799568963 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.781816406 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.781836574 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.78233064 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.956232993 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.798141031 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.800471672 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.786292106 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.800788969 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.795336167 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.783853588 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.782712232 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.787104448 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.220960221 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.793372864 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.88460489 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.826443435 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.80561774 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.165321283 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.032435892 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.839385206 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.789974761 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.781207539 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.887129427 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.789229535 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.784405223 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.800881423 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.788943042 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.021721025 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.285806267 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.798310202 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.782305423 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.229809141 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.897815341 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.824136863 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.794868959 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.023822085 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.802032862 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.783014619 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.784085031 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.819958233 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.789483929 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.784013801 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.08621973 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.796818741 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.801160665 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.78861401 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.785078939 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.962230674 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.794063038 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.952181888 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.795465498 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.789869522 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.785178663 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.026356526 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.803274476 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.284772505 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.801663519 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.785482289 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.88812254 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.958439024 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.259405712 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.799775389 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.963980905 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.185162267 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.810280766 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.792982953 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.210364968 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.81316428 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.792482714 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.786189369 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.787463001 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.784894763 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.842750683 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.802220188 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.214313427 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.289837941 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.107932531 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.812348958 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.800879358 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.78682836 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.089128871 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.794129244 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.786271091 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.021180027 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.295432836 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.801868609 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.793055748 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.273838786 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.802572474 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.805435658 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.794463661 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.030298396 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.804833936 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.844588362 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.786799141 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.79419204 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.78954059 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.806991717 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.795980541 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.786918798 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.268019395 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.911749371 seconds)
  done (took 221.919455485 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.783409375 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.786121928 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.782043118 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.784946924 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.781479676 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.786475121 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.781264937 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.781283716 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.786766127 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.780712631 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.782199923 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.780740506 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.784209944 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.786612997 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.389949989 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.788725864 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.39105293 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.783589842 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.782997162 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.787972029 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.470793352 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.788806947 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.7806094 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.782071563 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.7833699 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.781218103 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.785974768 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.785883366 seconds)
  done (took 165.553893241 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.785970931 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.970768539 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.804600941 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.829488519 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.795402232 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.78485779 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.810919173 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.80946069 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.794223803 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.784750002 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.783498274 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.849845753 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.797937654 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.929440412 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.820616581 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.818037553 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.890618364 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.795829623 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.78640051 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.785282542 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.817446961 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.777998863 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.848781719 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.914481561 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.807888445 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.905602044 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.789285263 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.787272504 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.786688353 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.905596356 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.804077663 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.847091762 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.815829013 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.805758457 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.910993096 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.907104758 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.891961452 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.817239569 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.791681212 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.784983285 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.784592106 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.769897061 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.904857235 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.806647905 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.788293673 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.889089704 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.810336504 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.788596907 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.797533516 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.785597783 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.802241572 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.807302648 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.855431271 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.922355739 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.822976706 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.811758908 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.813069242 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.065277195 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.79586245 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.887676229 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.778895892 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.904923308 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.812262209 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.770764431 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.789451549 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.793175863 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.817502712 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.822607006 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.894763337 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.798170883 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.888850436 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.824688696 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.797335393 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.787936604 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.790589022 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.906565727 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.908424822 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.823713854 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.828238598 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.821857524 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.779982599 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.791033333 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.773784523 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.808537321 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.794023572 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.905577643 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.909437017 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.798520611 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.792795481 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.792236093 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.792371479 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.816508415 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.91704277 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.828001624 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.87944885 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.85835984 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.865379023 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.806521161 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.801635932 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.793050398 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.853632414 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.805061523 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.800290413 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.11058716 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.860700583 seconds)
  done (took 194.052709226 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.176518691 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.8371199 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.846894998 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.104837799 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.135212206 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.717090025 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.83697456 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.836530262 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.863195056 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.028478617 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.910721778 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.85586495 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.826650411 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.813635603 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.838472453 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.860427155 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.845174631 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.182092222 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.938144878 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.980815722 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.830209763 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.107522818 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.1162366 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.256576196 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.874457201 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.224690911 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.418927131 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.971897487 seconds)
  done (took 58.945868367 seconds)
done (took 788.524568122 seconds)
SAVING RESULT...
DONE!
