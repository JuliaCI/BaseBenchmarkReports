cset: moving following pidspec: 7331
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.515740601 seconds)
loading group "string"... done (took 0.537886242 seconds)
loading group "linalg"... done (took 9.118346902 seconds)
loading group "parallel"... done (took 0.177245568 seconds)
loading group "find"... done (took 1.298022497 seconds)
loading group "tuple"... done (took 2.089465971 seconds)
loading group "dates"... done (took 1.395486987 seconds)
loading group "micro"... done (took 0.197934588 seconds)
loading group "io"... done (took 0.516284688 seconds)
loading group "scalar"... done (took 51.69796603 seconds)
loading group "sparse"... done (took 13.869316323 seconds)
loading group "broadcast"... done (took 1.307621003 seconds)
loading group "union"... done (took 10.259550752 seconds)
loading group "simd"... done (took 3.04762546 seconds)
loading group "random"... done (took 11.546800188 seconds)
loading group "problem"... done (took 2.253733829 seconds)
loading group "array"... done (took 24.344151498 seconds)
loading group "misc"... done (took 1.147127551 seconds)
loading group "sort"... done (took 3.768861747 seconds)
loading group "collection"... done (took 19.355610994 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.621065995 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.183365829 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.205006297 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.288074788 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.236601273 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.153645448 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140006056 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.258565462 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.631095666 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211911203 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13034203 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.496791146 seconds)
done (took 6.305012119 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25032508 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.182347156 seconds)
    (2/2) benchmarking "String"...
    done (took 0.167837018 seconds)
  done (took 1.040418049 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072955373 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.152601788 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.104939473 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.091503056 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090655999 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106591523 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.089745567 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.105646299 seconds)
  done (took 1.435321611 seconds)
done (took 3.494644881 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.517080731 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.867447757 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.515761246 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.14528671 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.321663711 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.300784788 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.318469797 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.200779971 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.104513787 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089662519 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176096958 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.390209372 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.445026787 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.964329162 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090277218 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.097051017 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.132939908 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.758254097 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08127164 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.112522643 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.51264362 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.195037407 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.096410176 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123982683 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18496682 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130654524 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.162026612 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104272957 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662785934 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129810681 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.188793412 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095906266 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160448065 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.197884568 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.209140513 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.090578264 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681563442 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198362341 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091737288 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096102648 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674172524 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116569248 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.187637926 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101467647 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089304528 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180944948 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.094987066 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075827603 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.114764525 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082869439 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161301488 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.449399554 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103281724 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.16985622 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09078315 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.686141882 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098364418 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274419862 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124486873 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.08949963 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.08860043 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086076694 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156911187 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092169562 seconds)
  done (took 20.061169713 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145266917 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163022988 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074773333 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15342125 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122443429 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077030105 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098957417 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07579712 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107078064 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240183551 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136215121 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154885364 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08881982 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.0859146 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125170163 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247172749 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104167235 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119118003 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085525167 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087000841 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138395968 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093967854 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088121263 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108024962 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167587718 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203247137 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107631621 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120417518 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08764127 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094593795 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139658366 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143621933 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091164978 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084976626 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188979469 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105175964 seconds)
  done (took 5.169222803 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.201940784 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122310596 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.211797962 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162348085 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143003585 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166840029 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149072373 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.288142633 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.295413642 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159084747 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.188972127 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110240877 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.121896201 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076812099 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.077659722 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094400911 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.496211025 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.136287196 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.172926448 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.152395555 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085496584 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097090882 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368014757 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098695237 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078642949 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083966643 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084663768 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.19677285 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08443502 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.093129199 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082324433 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085878255 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133062186 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194939449 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129925434 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119358644 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098857237 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080233862 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.21613764 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091778772 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074644359 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124130498 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114253062 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12903637 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096909656 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.091836966 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219869123 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079663557 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118371592 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.042626501 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194661842 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.12557536 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077526132 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288508969 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114732883 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085591429 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078100255 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098839018 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.241643532 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130167206 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079122406 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.078711032 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094590277 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084475181 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075868333 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.432500141 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110697837 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.943344044 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082425054 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156107657 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08245857 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10255645 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083433287 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083191812 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116251411 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077583925 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075460312 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.093703206 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076913361 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082040829 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109662939 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083239131 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076418672 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159440216 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097743553 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098723395 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123072628 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082728701 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09340387 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110488202 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09390843 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081621298 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.170601629 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084444326 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.094720566 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100013826 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139181883 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080014832 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.196923832 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095373888 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108216583 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.095749025 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110534014 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078301747 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114515804 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077562061 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10099539 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075576555 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077663643 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160900941 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078695267 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07962943 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080397538 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108634683 seconds)
  done (took 22.924468731 seconds)
done (took 48.846436862 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.45976377 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086081402 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08616401 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104870742 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087123718 seconds)
  done (took 1.598297846 seconds)
done (took 2.347447671 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.329478527 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198316107 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098468864 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.194313048 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084359515 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200421157 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186577823 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093201838 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212047908 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083015042 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192556972 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082515404 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100783833 seconds)
  done (took 2.83012741 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098814985 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104188299 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096537397 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113107703 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079015429 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096840164 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111943748 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106481123 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094638317 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106148681 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078975139 seconds)
  done (took 1.83721738 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094484225 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101923436 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09275853 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111231708 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079424454 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092422828 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109535421 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102943032 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09301584 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105940459 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080156582 seconds)
  done (took 1.815040354 seconds)
done (took 7.23131135 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.125099432 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.934466485 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.164680835 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.212938808 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.355614843 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.238383254 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.578109607 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.152617994 seconds)
  done (took 14.666408307 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.118988774 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.152451398 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090230386 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08542335 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088696869 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104449642 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087188708 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.090314917 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.104696418 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09229127 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086825725 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100993477 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090407841 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091301438 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090306213 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.103960165 seconds)
  done (took 2.392505895 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.136132344 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120055729 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108225954 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.092748039 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087648168 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110111076 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094799935 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090571567 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104691778 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088087967 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095873776 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108416113 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091976659 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.085625698 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106274286 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107521232 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089012579 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106717027 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106134801 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090644941 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10823173 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.089745695 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091035969 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108301697 seconds)
  done (took 3.252843932 seconds)
done (took 21.063386226 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147946262 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097180562 seconds)
  done (took 1.002825084 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.138506769 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156065821 seconds)
  done (took 1.053537159 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108758297 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.0838336 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130591716 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098087485 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085374965 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099546121 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.112826174 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099584035 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085371869 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085628059 seconds)
  done (took 1.752992138 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089420199 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088567746 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.116949381 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138346624 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10962672 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.089860286 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089412691 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087415007 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107723548 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.085010392 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093597232 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120733415 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088836831 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120641666 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09059614 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091592895 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10942435 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.089863997 seconds)
  done (took 2.573647171 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084523513 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.085565004 seconds)
  done (took 0.935132524 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088694688 seconds)
    (2/7) benchmarking "second"...
    done (took 0.083953719 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087085175 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104306399 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.085096097 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084227639 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100418815 seconds)
  done (took 1.397883202 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.495034314 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265306403 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370005432 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102233566 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.137947205 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.346669705 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.138883791 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.099232861 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09809309 seconds)
  done (took 2.852276043 seconds)
done (took 12.331408227 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091107408 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.215012596 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.75133027 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.108132717 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084410994 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157764621 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.286992396 seconds)
done (took 2.467487339 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352681353 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.150165511 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084037541 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083750657 seconds)
  done (took 1.433587482 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078967478 seconds)
    (2/2) benchmarking "read"...
    done (took 0.092624564 seconds)
  done (took 0.943548489 seconds)
done (took 3.147627013 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085282627 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08317662 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.082810476 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.133845453 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083849864 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.081306333 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.100545559 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084609593 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083767393 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083676321 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.102052181 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.083336145 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082408022 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09888404 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083260189 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084450902 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082016827 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09859051 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082636046 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082635343 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097571119 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084849022 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08219852 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081111751 seconds)
  done (took 2.93383377 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107931329 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084378206 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103100088 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088704324 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.087718905 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10341262 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08859955 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.085208409 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088474745 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102612063 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087356343 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086236521 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102614721 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088103295 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085385612 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103724677 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088360532 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08458396 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100991657 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08864043 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.088244168 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100391614 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088308221 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088275657 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103728641 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087987293 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085919829 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100848485 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09020591 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087728005 seconds)
  done (took 3.553441162 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.095679346 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083155205 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087035983 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111485483 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.083672179 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086112848 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.098642588 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084923991 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088476796 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.084626655 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105462744 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086396099 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.083309732 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.104167356 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.088113582 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.089762719 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094117127 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.100613115 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08461073 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08732649 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.105211269 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.083876509 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087353475 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085967429 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.103342948 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084370595 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08722461 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.103008645 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088582179 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08619097 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.088778602 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.105348322 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088611714 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096434949 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.105844392 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087120356 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092777852 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083044345 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.104881424 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084578495 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083163331 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.102949141 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086339727 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.092516539 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.085680514 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.104583694 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084532255 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.0892558 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.103467543 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091816141 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083209059 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083035315 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.105219682 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.087996749 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089276924 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09912898 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088134752 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084254312 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087878706 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.102904344 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.083917124 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083452707 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.107849889 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088277221 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101688978 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.108758784 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085273948 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089689551 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.087472214 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.10800278 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090384839 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097205303 seconds)
  done (took 7.429550439 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099064132 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093465866 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085620574 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101479143 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084700066 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.084407977 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104775357 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085452965 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084426922 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.105788008 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085614109 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084600713 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083963603 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102452737 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085808481 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084012245 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107422656 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084257635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084259957 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101023863 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086709735 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088848499 seconds)
  done (took 2.790260701 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.228981323 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092292329 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135028408 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113858549 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.103378713 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11454852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089616862 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089676716 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105085537 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094027099 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09331347 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106896504 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102594647 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092061997 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110259345 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094091382 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091076718 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111975606 seconds)
  done (took 2.750836364 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098407541 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.085903951 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125574942 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086565664 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08673347 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086095332 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108582625 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107854641 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086739529 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10290077 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094996484 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086407898 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103929286 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0863085 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087170264 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106361482 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.088041124 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085542253 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109608774 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091411245 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092052973 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109482508 seconds)
  done (took 2.90056648 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101134153 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.087388282 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120700534 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089280282 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084881474 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085568022 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108726963 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086575986 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091982491 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103793322 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086436983 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08565249 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.118024547 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086005474 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.090696117 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103524856 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088010437 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08620694 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103266175 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086254378 seconds)
  done (took 2.678971967 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172715743 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12166307 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107495578 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11382384 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122651087 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105694183 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112576382 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122602696 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106210443 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133336429 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104859742 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104957024 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130153781 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112315293 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104057549 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130909747 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112760724 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12991835 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106091493 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104757655 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134704118 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10551917 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129810093 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106100792 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105717028 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121709185 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106114891 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110232731 seconds)
  done (took 4.067701044 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0874281 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086314476 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083525203 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100643081 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08505332 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08430685 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0838436 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.101325136 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086503144 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08366307 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.102282066 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086391088 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085592554 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085386973 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101843854 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.086811205 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086517237 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.084998232 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102671728 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083829002 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085906039 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101269641 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.086397379 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083925436 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083385524 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.10266942 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085301097 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08450427 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101521647 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08530637 seconds)
  done (took 3.480053004 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096684304 seconds)
    (2/2) benchmarking "in"...
    done (took 0.095388254 seconds)
  done (took 0.983816494 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093762443 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10033111 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085922008 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102060439 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09139721 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08650433 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111620553 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09202598 seconds)
  done (took 1.556380074 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.142914803 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159459233 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091006066 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.096542755 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160357036 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.15354312 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131981327 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090423729 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104378623 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082459798 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154200195 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080821641 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089223452 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103015465 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089869098 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09620461 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086484357 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.098210259 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093226516 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.0882839 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108950214 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095037425 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08945181 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.112679685 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084793904 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090833584 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109783873 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101838055 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085104999 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109636108 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08767577 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086529342 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.108891244 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092148843 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.087454681 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160218602 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097722029 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103308662 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091076304 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092250991 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.137492848 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.087640648 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090518187 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087685537 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112357459 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.091060183 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091511765 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.102903439 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082453693 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084834935 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.104215393 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085344338 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085901638 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106919858 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090007562 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096097988 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.105480682 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086669493 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085030692 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084160719 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106588392 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085494318 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090304572 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.107789737 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091747403 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08899143 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105855817 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086085782 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.08775631 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.104479637 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089905993 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104562752 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107940391 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.091790823 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09121237 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.104073595 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087576659 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092207589 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104359829 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091089142 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091117447 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.13162599 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092649577 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083937172 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085019871 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111383924 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.089244766 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.090535365 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099442358 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099474431 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088926361 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.104925224 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083613677 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087823739 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102774231 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.090917435 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082773414 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107584082 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.086476248 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.092335215 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091341484 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105293545 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092669163 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091437602 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110891373 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089168905 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.152110297 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088103167 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084909566 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.088205187 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111901131 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084424191 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089026171 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.104323331 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087697362 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085024768 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.109923463 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091556925 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.091158723 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.108691746 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094406091 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091994751 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10628441 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.087844634 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086196125 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091145498 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1136802 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092303469 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.089010851 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.104128242 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.086527654 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090241176 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.107743 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088657832 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092302105 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103160357 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.087299086 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08910442 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.091412737 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107470091 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085648045 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087941157 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108456975 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088514153 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.090577901 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108311554 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086070129 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080907524 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107191842 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086660622 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.086907409 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11187697 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087801627 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.089930161 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103966434 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097112906 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086134865 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.092393991 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109054726 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.094241435 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09211815 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100373611 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088086983 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.090503908 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109412154 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087240712 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.087548811 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.086206453 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.113080293 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083537337 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.091788863 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10071394 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087230994 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.092507228 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.107631045 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.091778028 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086091311 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.14614951 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101315937 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093301689 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108117427 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091171784 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.092150247 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106810343 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.093275342 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093973111 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.092515024 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108406663 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.08994811 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0926706 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104297248 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090657204 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088388191 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109986692 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083743919 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089345932 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081674967 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109966064 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093672653 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092188632 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110970446 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09085146 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088930756 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113958461 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087018613 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090603835 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099930679 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.094641365 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.097836018 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111141277 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095184853 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09095781 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087282384 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.106497248 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097349394 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089096271 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108776619 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.089756235 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082095448 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101509408 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.094012342 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.090553963 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084364429 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.105987071 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092923503 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09200178 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10688194 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083163839 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.092481822 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113223381 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086319959 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089725841 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105071464 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090100731 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098722436 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101512532 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087576099 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092215674 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.110432332 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.08805576 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090193322 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.091034067 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.115116954 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.091775511 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0912537 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10637658 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096318977 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088467621 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.105070587 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087799288 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.090562432 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083536867 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.106950068 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091194685 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086192591 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105578076 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094976397 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092532431 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.111582291 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089859506 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.092156184 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.111832621 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.095235057 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088676015 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.111342634 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087241848 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083214408 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085360341 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102156426 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.089852811 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085676579 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.11170511 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088846686 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087746874 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.110348208 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092964383 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086995313 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.111874606 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102107517 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083965554 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102077605 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088776097 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089333774 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104818432 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088001004 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.088908031 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091411566 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.111848185 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092853092 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085988054 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.106452183 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103017804 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086326463 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113598202 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.095193618 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.094148034 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103687155 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.093562945 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087196201 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112526387 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086040899 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089313531 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096712867 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109479325 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087189807 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088214142 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104725156 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083650053 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086755454 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.112462742 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089711305 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.091658563 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108722274 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089800614 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086664958 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103591188 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.096657766 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089092844 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.094613699 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.10647256 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083499987 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084058178 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.111508441 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091706028 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.093508466 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103915111 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.092886107 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094648297 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.092505767 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.106969923 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09789385 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095650781 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.112670728 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097260776 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082938995 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107260555 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097126484 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.085912519 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.109836848 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.090526106 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084405607 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110834591 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.0956915 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092272679 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087579373 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103696228 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.0882084 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09400929 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111220151 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091155375 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08986259 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109506349 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086755777 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091979288 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.093272396 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109872839 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095394968 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090032567 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.111719219 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088301753 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.092321041 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.108131935 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086235463 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084373037 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106691652 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.095648499 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084722198 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.094566734 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.113232935 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088849744 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088699182 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.112212697 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088704006 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093502743 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112386438 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089601412 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097799491 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.088330182 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109714548 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.094211586 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.093385265 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103398806 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09063929 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089792249 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113933416 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090936346 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.093066824 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109424798 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095531233 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.091674234 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.093474825 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.113458178 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096278816 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083017848 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.114830846 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095359337 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09018993 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107514987 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091253508 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086294389 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107844894 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.096446712 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087912712 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096772733 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.113298278 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089071964 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087374864 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11431944 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090503803 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094606981 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106242099 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093586682 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083939851 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112320869 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.090642157 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.094679009 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106429636 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.086980358 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094333472 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.093226646 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11312298 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094063053 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.094601468 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10362129 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085711417 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.090894107 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106418657 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100512557 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094476167 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107759413 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091466811 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09067998 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.088008021 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116200898 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086885054 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087601408 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110947286 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093959911 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08925756 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105408994 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.094889197 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09047707 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111903147 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092264809 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085349858 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108831203 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.097443465 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089474559 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086449967 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.108699108 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09729336 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090166539 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107570524 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086981023 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097262731 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.113008643 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098112117 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087325359 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.111649078 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090489851 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.090045514 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.114580398 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092016932 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091977611 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089169547 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114886593 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097762877 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084275514 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.107763167 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100003069 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094386104 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115180238 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.090843901 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089646432 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115627558 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097892143 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.090754279 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104038859 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087793298 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090374135 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084371162 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.110078708 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098182768 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.089959735 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10863143 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094333213 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092899246 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.109256515 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09218663 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08615777 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095867887 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108507602 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09606548 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085215239 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104557264 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.092570811 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0946575 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109214582 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093099133 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.089997402 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.08982238 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.106418332 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089906973 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094368521 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11381914 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.096055912 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090570424 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109042507 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.093869208 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099730362 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.110590339 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093011767 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099839178 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.115134238 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094315684 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091346061 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11449478 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.097179093 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.090177934 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.095818773 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.109505894 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092286726 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.096497942 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.117221924 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102563295 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09067807 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105547569 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.096260629 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088922854 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.105871482 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098029468 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096776264 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.114536512 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09428729 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089785429 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098288644 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118600795 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091905674 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088433244 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109636145 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.095685259 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088290605 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.113698437 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090318942 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.096629483 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.114801008 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096643196 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.098145503 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085363011 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11857771 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094123902 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.099180222 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.109931651 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08707685 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086045517 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.11044179 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.097946685 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.098347764 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.113154468 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09587931 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.094411251 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093149215 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112379239 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090100659 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.095761713 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.115588519 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091119708 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093641029 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.110063036 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094418748 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.090980504 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.095370559 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.118179519 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094249581 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099569659 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.116070937 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091132821 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088737356 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113292031 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.093205836 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092835706 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112897238 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090788035 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087253306 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095869553 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.118359175 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091586778 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096746836 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118322086 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09239829 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094625151 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118534185 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.095259096 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.090657229 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113340384 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.094651219 seconds)
  done (took 58.887553282 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142916027 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096861256 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11146298 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092572089 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109495887 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113619984 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092637241 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092336877 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.112221288 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103988863 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090605618 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11031664 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108249051 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111711009 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130517967 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101860854 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111802717 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09386918 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090917664 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090753699 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127383121 seconds)
  done (took 3.080402346 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112041184 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105252758 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121846603 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106666017 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097613208 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.124277643 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102941546 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124469499 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106916735 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098918668 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126783819 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103354796 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.119431872 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.100484053 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098911711 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122579519 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107253781 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097990898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.124534168 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103954409 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121295375 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104026335 seconds)
  done (took 3.273608999 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.102513275 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.095106055 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097222954 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.111390995 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.096236429 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.090499742 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119698852 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.093926258 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.100336014 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113172302 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.089795951 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093608659 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097139454 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.112321828 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.089781419 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.091319393 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.121450911 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.097132635 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.097570315 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091170044 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.126973237 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.092148787 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091606725 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109682159 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104521019 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.096515647 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.11279183 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.09728592 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08684656 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.116369959 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.094303206 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093469982 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.113663911 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088936734 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.088240078 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.095813599 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.11721898 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.093746736 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.092122238 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.114812366 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.094608851 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.097645938 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116986024 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.093619469 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.093180453 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093191725 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.116983755 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.091759335 seconds)
  done (took 5.673376031 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12552013 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159777573 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.097162522 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.133230005 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129457145 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.101718488 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09488246 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133745 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093578875 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.116909517 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10936565 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105931608 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119387758 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.100643608 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.097436574 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119583249 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098593123 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094190385 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.121131923 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.096490199 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.099865171 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.120048469 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.106524002 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.125329754 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.100746323 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095294926 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11506454 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.101442444 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.105511664 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.121903644 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.342569941 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101044768 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127628266 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09623902 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.095551819 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.118721166 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.109042361 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.09631146 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11882772 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095330901 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.097310733 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120374331 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.098660394 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107957167 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118636369 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.097890624 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096403351 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.114162902 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.105451538 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.097070571 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124905723 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.106652507 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.118781721 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.098179681 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099585847 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126698634 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.097223975 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.094092384 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.119027236 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.105736825 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.094072516 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119686842 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108158867 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.096861217 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.123287797 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.106010268 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.117505553 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.099451241 seconds)
  done (took 8.636420402 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134108023 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101675403 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129279484 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109302073 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100633657 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.121252199 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102172245 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.100691585 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122706435 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106073834 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121383577 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.200202695 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.119655606 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106430768 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09956767 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122622064 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.101267006 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099937959 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122358469 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100686089 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.100016865 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130202654 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101504005 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129247878 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11304024 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.096660218 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121345222 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101805194 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108130265 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.1216505 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111923289 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121867919 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102579402 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108331018 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13362502 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10134274 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095190077 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122062681 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.102512634 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100848433 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.11997684 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10955398 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100374058 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.119967994 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101150463 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101210232 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132452159 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.112982762 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126398058 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106726803 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.100634738 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132434113 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101678253 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10025337 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.132026535 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.115966291 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131781528 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109199851 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122433239 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11063931 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108974938 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138431238 seconds)
  done (took 7.939352737 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095254892 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095290124 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.092420896 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.114434174 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094240059 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092461981 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093760887 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.115473841 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095010544 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094057666 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115819507 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094585753 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093761809 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093993757 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113790963 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093747151 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093203147 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093483465 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116255266 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093174024 seconds)
  done (took 2.843723931 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.105456751 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.111966414 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.115556535 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102542712 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.097442371 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.121772899 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.097863471 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096390801 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095520055 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119586845 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105588525 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103998355 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117837386 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101265525 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124468666 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101628632 seconds)
  done (took 2.581826183 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.115836293 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.113458195 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.190091914 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.100281699 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.117507261 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105215038 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.096175714 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.097655229 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.118294297 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103123777 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.101197087 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.121862382 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.097348565 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098199301 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.118114629 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.100349632 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.094865505 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.121382881 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.098267865 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.16446139 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.122395906 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.098064952 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.096981363 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.122806773 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.097779529 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.099233953 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.125211875 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.096090761 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097685986 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.119238717 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.099046821 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.1035338 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.117191132 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.102006543 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.09815684 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.118608594 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.099158615 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.096913991 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.098694107 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.119708409 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.099987518 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.097963587 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.118535662 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100711822 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.095234876 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.120283347 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.095876731 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10152396 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.118862122 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.099993735 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.096978433 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10514454 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.124815125 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.105077491 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.104200698 seconds)
  done (took 6.852659479 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109878256 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09792598 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.129793076 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096680614 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09768523 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.096478732 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.120870136 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098523019 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097685439 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.11765078 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098367704 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098242189 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118435495 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101132893 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097141577 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09766763 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.116083987 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.098123312 seconds)
  done (took 2.757851672 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102807322 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097090255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101157041 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.117592186 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.096169541 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096851265 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115993926 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098232428 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095949577 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095483005 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118533174 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.097832003 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095470226 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12019419 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097646084 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096036221 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.118325968 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097910426 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09726655 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094966064 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118676625 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096883933 seconds)
  done (took 3.137381875 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110550983 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182451812 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106464983 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.19300532 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096325305 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.093892426 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.126024623 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.096810168 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112812272 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.11608467 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096070082 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.094526556 seconds)
  done (took 2.296170517 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127183712 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135662128 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119190836 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098633749 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106202372 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12178525 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102053091 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100694371 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132178516 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113346036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121799416 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110498171 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109567887 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130585694 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107012693 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105769995 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122962705 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101720923 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096975477 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138978841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101149897 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131108579 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102321626 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100579912 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122512393 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110106085 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129501325 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113983046 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101359755 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131489234 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107537204 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101193291 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132672811 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113168105 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119733676 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111424832 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101087972 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139294686 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106266149 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129911183 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099374555 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106546618 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132405774 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107371215 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108903174 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124077674 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107661883 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099707204 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122987138 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122959913 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12938121 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108761652 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106307614 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132997978 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111500646 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144755215 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11305045 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13068114 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107084277 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134051359 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110477265 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106761307 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131394089 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113798104 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127590502 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110524467 seconds)
  done (took 8.535819203 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139575597 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098179992 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123124917 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113253456 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10846903 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1237933 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101286583 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123521777 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103422143 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097953056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169428346 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102272822 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112156876 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132114358 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102181224 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123024009 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102680163 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109861883 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119250689 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12486047 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101127181 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132503303 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110803511 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13057872 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114125008 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12774253 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103442314 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101322841 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122942035 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103691278 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107389042 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12289179 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111890766 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098321732 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132440395 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102132462 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101775116 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129325055 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102035599 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106118211 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133393883 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11745876 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123530047 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102768938 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13403717 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10446606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102291686 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097481463 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124524196 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09872053 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134332764 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114851649 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112776147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132861017 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103080173 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123632381 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102494783 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10216025 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122478583 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108241905 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110057014 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124732308 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124622189 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1236567 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10271248 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11023002 seconds)
  done (took 8.466545791 seconds)
done (took 160.862235164 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150444875 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.191413392 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.14476417 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177970298 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09196735 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127477576 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147915161 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148034334 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090921015 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11457859 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.091034198 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095412074 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181025291 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092542606 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091783673 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095163746 seconds)
  done (took 2.906429211 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192462511 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.308199152 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107626272 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117715586 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100547276 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098528027 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117792867 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.098553659 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096519469 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126728622 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099627286 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093912243 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125889173 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095180771 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096747952 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120562187 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10528611 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097790549 seconds)
  done (took 3.087454315 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118184106 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140911662 seconds)
  done (took 1.144022277 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129604428 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197374065 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276684734 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170756185 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121334911 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135870579 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150989955 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132631364 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.178918984 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132279848 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110824745 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096623024 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145563601 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103312057 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.109617628 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120412174 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124381099 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.130270351 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.108947811 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098026878 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141404724 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102509822 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102373024 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.129525801 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.169348641 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130999443 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103371588 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100450714 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12063909 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.108647956 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103634102 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135034312 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110481109 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.172652568 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102069178 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.168743631 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106563687 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119145185 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108264757 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096741061 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123806965 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101420015 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.114085748 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12032482 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101269575 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127897689 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102609413 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101236245 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.127055265 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108497615 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105671082 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127471546 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165943085 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109119369 seconds)
  done (took 7.72433122 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.862122564 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139246225 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097693553 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.014173052 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147234002 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113515177 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.859427622 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14314382 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251453982 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.87574487 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114260044 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109479513 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.256443798 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.229883368 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9934853 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.346271513 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.693868192 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134203897 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126361312 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163276784 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106254449 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145108677 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119082615 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.41836663 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098720281 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096956629 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128057744 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109686263 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176278893 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.097034529 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122692795 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172173676 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.26549648 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208550576 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119261235 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097861315 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097784221 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182410651 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269751425 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221664413 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184665702 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094845159 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095695375 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127006166 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118099417 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092783983 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178398833 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187396335 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.186909134 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102265736 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129694231 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108963345 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10432059 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177194737 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094579573 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.346083995 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.336896606 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096496358 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104240673 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135955894 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266006113 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096354124 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229614266 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146771692 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213485087 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096657909 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809054324 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182024119 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096032885 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127232599 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10522478 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102587624 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127695469 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.156725815 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394889717 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10887402 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125285165 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097334663 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24002279 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097132313 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119371661 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159161591 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120766835 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106300003 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129957246 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110739185 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.185217328 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.223517931 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132565905 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106564607 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124611801 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109623722 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098452758 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232935195 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226399482 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173027972 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233845992 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106808114 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180999928 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.181677084 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105037565 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18552475 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.103942286 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136041227 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106108846 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221636484 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156110133 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098457172 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101509872 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129589378 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135188368 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122727727 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106299425 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184312958 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.453959816 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.156935676 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.117707015 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100773588 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105122381 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179640837 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103638526 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.286406902 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108002582 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181303357 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105447303 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.0937893 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129123096 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179142647 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108411357 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105640861 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127370779 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109785789 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.251981904 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221549155 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110762089 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243078819 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19227147 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105214749 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189541011 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105005394 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186562786 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129017486 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1060707 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098104716 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7931687 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134407446 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105283733 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123213995 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181590867 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09731927 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.121374254 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098568097 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09395904 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802433123 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122111295 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096692608 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.098449203 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125690687 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107261095 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104095858 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125917651 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.153913955 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264732022 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110825318 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126288865 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099043391 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176401888 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100240582 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098170885 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098216975 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12259431 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107782124 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.100632972 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122805956 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188451895 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154371568 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226923878 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580864727 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09932296 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09812277 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235996801 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120788007 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298095913 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10574702 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230341468 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185145283 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095434965 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.348680182 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164020478 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203844249 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.100272022 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188960296 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094555484 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129290301 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.156677977 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120378743 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105707548 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176823456 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112973665 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13264437 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.000354583 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098329606 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249365502 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.095065293 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186052342 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099196205 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128364579 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301512764 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097605479 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136744648 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157290046 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125072172 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.098883267 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.602307547 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098022907 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131411339 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106714226 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233455817 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184552712 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106127187 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131216715 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112381158 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180203894 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232650555 seconds)
  done (took 44.855021451 seconds)
done (took 60.602529163 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.295294591 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.256517964 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.304706453 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.208715964 seconds)
  done (took 2.047346427 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.264861672 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161421555 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.232908673 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.095564716 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.243582045 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095731884 seconds)
  done (took 2.005121883 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.492658191 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.373995507 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.306941342 seconds)
  done (took 2.091422252 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254152557 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245431335 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.352644054 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.411240355 seconds)
  done (took 2.295832982 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.301402704 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12964516 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124556018 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.210680484 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.258364974 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.231019771 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.145496922 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194332713 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130866009 seconds)
  done (took 2.691442804 seconds)
done (took 12.043719687 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.308190255 seconds)
    (2/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.372792676 seconds)
    (3/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.227058829 seconds)
    (4/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.249168428 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.196291944 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.358097889 seconds)
    (7/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.355748752 seconds)
    (8/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107745395 seconds)
    (9/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.277982606 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.10933988 seconds)
    (11/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.340536038 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103949027 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.158689415 seconds)
    (14/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.223203778 seconds)
    (15/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.102052989 seconds)
    (16/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.326930481 seconds)
    (17/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.211692571 seconds)
    (18/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.104907428 seconds)
    (19/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.329581511 seconds)
    (20/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.184229955 seconds)
    (21/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.358318011 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.257484322 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.19402302 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.147218592 seconds)
    (25/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114144052 seconds)
    (26/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.150034749 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.107924148 seconds)
    (28/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.212550432 seconds)
    (29/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.235487795 seconds)
    (30/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.233154572 seconds)
    (31/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.149557071 seconds)
    (32/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.131591221 seconds)
    (33/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.242064981 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.158209721 seconds)
    (35/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081545076 seconds)
    (36/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.256529969 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.170646599 seconds)
    (38/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.082374794 seconds)
    (39/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.086782434 seconds)
    (40/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.121493658 seconds)
    (41/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.15499466 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.105329751 seconds)
    (43/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.302708437 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.164270932 seconds)
    (45/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.216345306 seconds)
    (46/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.11401228 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.23354272 seconds)
    (48/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081507978 seconds)
    (49/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082163592 seconds)
    (50/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.177222027 seconds)
    (51/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.093123598 seconds)
    (52/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.082364473 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.161614964 seconds)
    (54/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.162813207 seconds)
    (55/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.183764356 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.129046233 seconds)
    (57/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.191315018 seconds)
    (58/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.081621613 seconds)
    (59/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.213292086 seconds)
    (60/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.100327474 seconds)
    (61/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.259231114 seconds)
    (62/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.205516233 seconds)
    (63/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.212869136 seconds)
    (64/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.106212778 seconds)
    (65/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.082598125 seconds)
    (66/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.130809644 seconds)
    (67/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.161153537 seconds)
    (68/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.092649866 seconds)
    (69/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10158223 seconds)
    (70/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.148873041 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125463819 seconds)
    (72/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.08267143 seconds)
    (73/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092175652 seconds)
    (74/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.121982114 seconds)
    (75/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.166069964 seconds)
    (76/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.233950063 seconds)
    (77/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.082712536 seconds)
    (78/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.191613937 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.140580547 seconds)
    (80/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.08322984 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121413323 seconds)
    (82/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.175112496 seconds)
    (83/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082107212 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.103796542 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.122905558 seconds)
    (86/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.130581046 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.136469145 seconds)
    (88/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.124463553 seconds)
    (89/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.10551552 seconds)
    (90/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.122701169 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.121340835 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108016202 seconds)
    (93/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098435645 seconds)
    (94/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.147438915 seconds)
    (95/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.169954711 seconds)
    (96/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.162944804 seconds)
    (97/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.15096197 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.14564199 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105417194 seconds)
    (100/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102332747 seconds)
    (101/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.219151563 seconds)
    (102/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083452448 seconds)
    (103/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.08229595 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082334672 seconds)
    (105/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.182053541 seconds)
    (106/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.08299622 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104331869 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.232286896 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097037921 seconds)
    (110/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.10794698 seconds)
    (111/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.196014954 seconds)
    (112/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.190280962 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.161146562 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.105219944 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103864816 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.13192426 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.105707244 seconds)
    (118/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.082986873 seconds)
    (119/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.083105906 seconds)
    (120/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.108442217 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.106916583 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104139938 seconds)
    (123/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.129896134 seconds)
    (124/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08333294 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.082802097 seconds)
    (126/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.081960163 seconds)
    (127/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081968297 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.130399974 seconds)
    (129/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.08386701 seconds)
    (130/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082035223 seconds)
    (131/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.082274793 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.108045984 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124500754 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124065342 seconds)
    (135/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.111573046 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107555745 seconds)
    (137/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.08326247 seconds)
    (138/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.143510863 seconds)
    (139/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.132291861 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.106322705 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083638917 seconds)
    (142/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.081240019 seconds)
    (143/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.107362811 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098860757 seconds)
    (145/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.0825534 seconds)
    (146/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.233193266 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.106504937 seconds)
    (148/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.087932661 seconds)
    (149/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.087496636 seconds)
    (150/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.087239606 seconds)
    (151/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.108927186 seconds)
    (152/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084742696 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108150949 seconds)
    (154/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081991934 seconds)
    (155/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.108876203 seconds)
    (156/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.107309568 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109222016 seconds)
    (158/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081190691 seconds)
    (159/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.172485929 seconds)
    (160/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089258526 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103970235 seconds)
    (162/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.106173238 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099311703 seconds)
    (164/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083497923 seconds)
    (165/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083615832 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128822233 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.106340022 seconds)
    (168/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083596173 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103600322 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.152083011 seconds)
    (171/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.104529404 seconds)
    (172/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097366859 seconds)
    (173/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.132303894 seconds)
    (174/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.166353062 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104436822 seconds)
    (176/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.13015016 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106215572 seconds)
    (178/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.103855792 seconds)
    (179/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.106726067 seconds)
    (180/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.082249645 seconds)
    (181/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083486288 seconds)
    (182/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083674948 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145613856 seconds)
    (184/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089786551 seconds)
    (185/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083806963 seconds)
    (186/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083374216 seconds)
    (187/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083110004 seconds)
    (188/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.134596718 seconds)
    (189/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.08946979 seconds)
    (190/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093526772 seconds)
    (191/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088453797 seconds)
    (192/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081726523 seconds)
  done (took 27.740295295 seconds)
done (took 28.672286523 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.214736718 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128132562 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.107771758 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.105362826 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.204178482 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.113514459 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.14026666 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11152083 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.1122217 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.103540103 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.122755115 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.115136078 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.105687236 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201015195 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.108499133 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125732286 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099266352 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113599424 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.141764036 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119024392 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.203667296 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101859922 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.111733819 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123442621 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180886438 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12609945 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107364465 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106307683 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.137730216 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.107276374 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.106279362 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097784873 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.144096114 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.117332282 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098109037 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.13193953 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099009223 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088276784 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.128850677 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109183344 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.115150837 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.104940103 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134463421 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10059036 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.105538862 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.130978346 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099955886 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.109902531 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.122834327 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.107461298 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100367424 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.143550866 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106444354 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.097144426 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.121316344 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.101894621 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114143365 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09926913 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.142852917 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099347555 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.098928255 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125169345 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.109524095 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098167861 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.130325204 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101672148 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.106369716 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.131961869 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.107213325 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102381082 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098164967 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.130480691 seconds)
done (took 9.586836496 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106050007 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.154974129 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200842796 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.212010578 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128901054 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140287314 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120785724 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128643271 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143337855 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123884201 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.157521072 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.12873149 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.211216277 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.112014027 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113843312 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.135751355 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114464287 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110999967 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.21455068 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147268528 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.130437791 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.111400172 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156600507 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123003714 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105969946 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.163085051 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.105873613 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.133755455 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107329902 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113766029 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.148286809 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.107773999 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.105107161 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.152776594 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119887869 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.111924253 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.140756331 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.109938051 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.104494891 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.130612759 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114555362 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123240568 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.129916088 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.115503942 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.13331686 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115465948 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11436191 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.136912328 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110532308 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109783925 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131782673 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133740039 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.111694877 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.137728361 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114343577 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112346888 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.138889026 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115184808 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.105214909 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.139924031 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106783037 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106420176 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.135113121 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.128886705 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.104625419 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.140142615 seconds)
  done (took 9.517423708 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125482883 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134489432 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139242149 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.114337623 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.107421949 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122180652 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09707461 seconds)
  done (took 1.820541876 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.099890349 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185911485 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.20868198 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209052752 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.178427908 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.218139886 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145555366 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.099183947 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130529513 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.133561314 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186983713 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.24003172 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.105164003 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.140271342 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184932008 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.124831046 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.187309521 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.125686637 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112088101 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211360606 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112836247 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127466844 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.137130555 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.099272609 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207251592 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100095964 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.264001498 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114508776 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131446718 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114365697 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110112396 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203587408 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.210555974 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.113296532 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.102858477 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209716762 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.205419893 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10956476 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.223753166 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.103359182 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.20929328 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.110616163 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11403573 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.136759383 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11498031 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.195800931 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.11873831 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11086395 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.138451832 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.192980613 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.135802341 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182432558 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.134408398 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.110637509 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.108580713 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.139368532 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.120958916 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.110566437 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.220937269 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114761586 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209025656 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.20965685 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.181978144 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209405614 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120516196 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.213371865 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.204666749 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.109500394 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.106927664 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.13899418 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183777996 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.136382836 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.110423684 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.199535903 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115285321 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.211886114 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.18367713 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13690406 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.112444636 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.102567467 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.135912748 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.1001028 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.199790666 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111044896 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.108718117 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142815597 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113129485 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.109915914 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.130731585 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.122728577 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.109465899 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.136138389 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116714498 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.110664664 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141819038 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.186652041 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.137465368 seconds)
  done (took 15.44527866 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10488944 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101102177 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105320137 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.127250644 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102083101 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101194857 seconds)
  done (took 1.638614824 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140348013 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.111719615 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.146966085 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113831055 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165055026 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.216752126 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.224975476 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107382191 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.155650306 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125306389 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.216906514 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.20017949 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.225383324 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.114183589 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.224975199 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.115981103 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.227054451 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.109252532 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.149128633 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111059318 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113939795 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.143112171 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111076825 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.210205258 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.114187236 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.143194951 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.109590811 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124861555 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.147388731 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110002078 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.115531417 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.140559399 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.108547071 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109743343 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.226159616 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.105643605 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135651817 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121154702 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113958291 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.141632458 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.197928509 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137272215 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122559944 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120455334 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.135592898 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.106859424 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146861727 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11046195 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.222253466 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121709632 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12255648 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.139145169 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116295399 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12154846 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.133253015 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109586305 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123067929 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.226456346 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.114547325 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.1339667 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.112357095 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.114279097 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.137145246 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120253645 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.113324274 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.149421076 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.107873608 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112695233 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135842464 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.113773233 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121203217 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.138966829 seconds)
  done (took 11.090181124 seconds)
done (took 40.480158712 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.522310032 seconds)
  done (took 2.515219357 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.90544265 seconds)
  done (took 1.9001847 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.144909486 seconds)
  done (took 19.170387099 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.529280411 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.605249706 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.031386654 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150208149 seconds)
  done (took 3.309819179 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.017096775 seconds)
  done (took 2.027624345 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.293805704 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262244012 seconds)
  done (took 1.554648899 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.726103693 seconds)
  done (took 1.737759699 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.539037624 seconds)
  done (took 2.531255793 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.346813671 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173098927 seconds)
  done (took 1.535504381 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.627179768 seconds)
  done (took 1.643268872 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.424594539 seconds)
  done (took 21.441255282 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23424445 seconds)
  done (took 1.251512588 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.279257945 seconds)
  done (took 1.296726447 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.625479924 seconds)
  done (took 4.641692511 seconds)
done (took 67.559795363 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.111577245 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.114343674 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.113888078 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138127244 seconds)
  done (took 1.483721759 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121143914 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116726136 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.118284406 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141120505 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121596652 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.114302732 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.140648262 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118197028 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.113671777 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14411931 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116223811 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115605035 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145216648 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115792687 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114176148 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.142635373 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120011562 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115646613 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14025473 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.11743307 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116624729 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.116911113 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.144762999 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119127113 seconds)
  done (took 4.011998043 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113211227 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106623656 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.106621662 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13008142 seconds)
  done (took 1.480874972 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125694269 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128052427 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153165045 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125152719 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127525223 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152856594 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114605133 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112560521 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14019951 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125423443 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131563023 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154564097 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127865412 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117036982 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152831417 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110566822 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115334086 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154887288 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123045208 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123802212 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142211839 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123011649 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120901333 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.150724499 seconds)
  done (took 4.175444416 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189200518 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.124417575 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.165690799 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157280826 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.166485015 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.110480398 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.133785635 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.144138564 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.118525845 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.113264622 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.140830768 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.158874217 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.14388936 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.114061534 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112083442 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.142265009 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.124720368 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.117332898 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.181075956 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.115466233 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.143269455 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.124039383 seconds)
  done (took 4.064875608 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.116705185 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10541705 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.100581176 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134873561 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.11764539 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.107313505 seconds)
  done (took 1.713438091 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.105193144 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.099660552 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098875274 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.125332276 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105229112 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.099871128 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.097554925 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.126769198 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100665069 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.099650703 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.124807504 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09999862 seconds)
  done (took 2.314302585 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.337209237 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.104731612 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13247637 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.105707638 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111994322 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.102532143 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145912767 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.104667978 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267647172 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104319405 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.14358577 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193923704 seconds)
  done (took 2.885308077 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202957838 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141140103 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292438116 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365567648 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160475243 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182498378 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266958546 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186406471 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200937011 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130214863 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241442328 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150386735 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175392222 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16943793 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159114051 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158787666 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190726031 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184795586 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169847846 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192726883 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178027264 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186340093 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17639546 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171411958 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130414019 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182062981 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.114431284 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122883446 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189835826 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158113848 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191373114 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167505252 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13523758 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214254103 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251920884 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166664792 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285074116 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152850944 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.178483249 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.202085456 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251720534 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132857713 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207546479 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17361691 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124503633 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19675696 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149374805 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.194551612 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.124815137 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135872723 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20094502 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194175508 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.169663656 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157673982 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307601451 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159066318 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.133772477 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19504192 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204935438 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18177611 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186886105 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.116004311 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204241929 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203721668 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17414746 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.160765061 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.158530673 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144952581 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15973576 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214582086 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199065851 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153430305 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.218796695 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123262148 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180262913 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165864116 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198928291 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169048442 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179492782 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.113017875 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17039535 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128682386 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119253856 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.224769301 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114290745 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219113103 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124314944 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342022721 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210014806 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148775164 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181065565 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177742381 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153476876 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165037715 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.108593984 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13851817 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.182723314 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151341729 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154415483 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150079655 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158679186 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12296872 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141397577 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.14443356 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151314072 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.158594459 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158074102 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180418678 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124121681 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182894768 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142513594 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.171899202 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162924836 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205244939 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125338158 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151566714 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18365945 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177620481 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.126144601 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196757728 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177170421 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.172725436 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130560747 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186827022 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182007323 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163311844 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17979646 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158266512 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128356253 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.172186949 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154878615 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179294357 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150644311 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148910319 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.144783042 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219107774 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.121884274 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128250457 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189661957 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12575973 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147223178 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132052733 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156060143 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.135584928 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.135932367 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154751957 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146730925 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179967 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148606494 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177318826 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126578791 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199722371 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126943163 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.180879571 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138188456 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.111157246 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195375903 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206130847 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123670602 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223283766 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154576886 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215052402 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180626748 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126056523 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201217533 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120954765 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.112514401 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184264484 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147154294 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184518644 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.20030653 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182877478 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.185151425 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.169666277 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142479159 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187818795 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168998267 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173581683 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.136554486 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179057713 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156907732 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.11331232 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146568515 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.121234967 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158228502 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123660845 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126875098 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196648926 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183971735 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179270659 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178829377 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132156365 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204689655 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.119830794 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183507932 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.156891034 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161945551 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.172740121 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203250598 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186413269 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133876787 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181545979 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.114423049 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119494355 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.153498069 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157042748 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155227055 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129101082 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132629047 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203801841 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193796056 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140113487 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219755814 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187253468 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186908573 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.140450797 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161818837 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191618392 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151564828 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179322077 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155205129 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151089192 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201260243 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132629356 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211201289 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177973682 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156228516 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210905741 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149179707 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150187357 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142671962 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178985621 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132172543 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15790512 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167839794 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123587515 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17385008 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.130517588 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116874708 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204473758 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164557834 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1645902 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.181717222 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160495018 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148276845 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135765955 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182351188 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138781099 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111635672 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191287494 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205558745 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139992688 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177585496 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168994512 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149720408 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318054228 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212192202 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168885104 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158299092 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133373098 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183507243 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155292183 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184631996 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172136155 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164686556 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171109459 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181220418 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135645952 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153189644 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143163289 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171302475 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.144508691 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.124502953 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177883624 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13414532 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206803584 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131320818 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182764667 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151860255 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.171546568 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14537867 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162805711 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189551249 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179784068 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165817583 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.17680774 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.157973483 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215944208 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116272176 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150796731 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124383044 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203331718 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124037694 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182554514 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.174513732 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214707395 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185388017 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15323432 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162030775 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.11895632 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178915662 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143438213 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215049286 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127819016 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158736029 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185262907 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.163171505 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1245905 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182579724 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277234765 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167478679 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16537619 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.14676718 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.269807806 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150319325 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126401563 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185025748 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164016034 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.153905632 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176405905 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154741939 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162747383 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157518447 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158761391 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209071289 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186487711 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190388393 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193982607 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138155583 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180769741 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155105611 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198323938 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137092435 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.16494925 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157134404 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202605238 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.175660699 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.151281775 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152503363 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150253146 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178847251 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194135221 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130373622 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21347389 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121969839 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184961871 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132029196 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116501574 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179754303 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.200259376 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126545146 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200239891 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154836468 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124087917 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151055571 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138785835 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179161653 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131812735 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.15125289 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177491445 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.150412322 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157856101 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201444881 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124285578 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149646938 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16930846 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123152019 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163531944 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136780576 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124182841 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.191783645 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176734012 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.152870891 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172077734 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18637591 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156265608 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179837001 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13614738 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.687072455 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.120810835 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205190761 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140691763 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211275638 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142096088 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185143531 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151787252 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170880857 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157562679 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170274623 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234113287 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185925758 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.14980968 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1539236 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135803391 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132724591 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.156228947 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145201308 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180701767 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133568934 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.156039517 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15053756 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163231118 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.140333228 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132467426 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206981336 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141115261 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205883593 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204939444 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130346 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184316088 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165449432 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153279875 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157426766 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19571305 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133499749 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170355129 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.126551433 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13030742 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20530897 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.117031982 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180430704 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155071297 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180068943 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152270442 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.12659075 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18470996 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133357237 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182403136 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118752149 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.175340942 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153364215 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154522686 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.1199345 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152161092 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181168695 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147917827 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148029151 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165770666 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203974448 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.117919031 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125637562 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301731213 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180963827 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183629802 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.171404265 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129140394 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136606017 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177168775 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147880712 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184015667 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.122727753 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123387232 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.151673589 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.170246827 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.175911378 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153539476 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201344777 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152955558 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215837447 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.128653329 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.316433351 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131481815 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181182014 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.124042301 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.1209395 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164275299 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128711409 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163151442 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210816943 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1754027 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147098647 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.1685603 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127867077 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.148458891 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126243934 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157895947 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174622113 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152235385 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166604976 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111163579 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164919392 seconds)
  done (took 81.454028935 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163763926 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148370456 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165695735 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225267749 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194634278 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.295604341 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231496842 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261247161 seconds)
  done (took 2.79351372 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117545752 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155080288 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.136898152 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142182346 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.115229208 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.441445185 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.154891929 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.115750302 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16248662 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154727285 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138798718 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.621089596 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.110356895 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142703448 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.126749137 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.115513252 seconds)
  done (took 4.057294523 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.477657838 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.586061957 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.234099561 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.783150172 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.229154056 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.175311421 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.798234025 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.1878346 seconds)
  done (took 13.590484363 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.143770099 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.132943665 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.314027226 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.260497107 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.148509935 seconds)
  done (took 2.12163963 seconds)
done (took 127.155970995 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.116772545 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.116219728 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.117099308 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.147425682 seconds)
  done (took 1.606695408 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.181349793 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093588162 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095396673 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120335703 seconds)
  done (took 1.609026374 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.445595854 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092346614 seconds)
  done (took 1.683620897 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.143917287 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138908874 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164646314 seconds)
  done (took 1.581811838 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13631875 seconds)
  done (took 1.26197758 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125226478 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.11728998 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.237846785 seconds)
  done (took 1.606391015 seconds)
done (took 10.477865283 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1177747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.415275042 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429196039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131498849 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.707362386 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.423080042 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.024796652 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170984791 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171925742 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134444526 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131303089 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.723825471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.042932271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.355343753 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999510601 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.381999808 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692888612 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.107805315 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142166141 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109201435 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007787338 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133098194 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108645776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108242535 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.714407003 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418760914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106085434 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.392782897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106776617 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110029312 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.422711972 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108097146 seconds)
  done (took 17.265965472 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11554471 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171625377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141927756 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108716695 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109964194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136017394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.118756582 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118961714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201375198 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.105308326 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158433131 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.106415382 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111634061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.134030989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134514603 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.105930316 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.135690573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110289495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114028382 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.107737329 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159391171 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.105865383 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.107820022 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137773754 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107039155 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128819897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135660747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119432945 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.105744796 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139539154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11111069 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10738293 seconds)
  done (took 5.144418957 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15564114 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176863928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143842223 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145214227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182389921 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.108896947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.21928326 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143923438 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199970075 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108649142 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130134836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.133882766 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148582441 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107479604 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162469536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107128164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110476043 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.136839154 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115753162 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109032537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15849981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107164889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109192618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.136936948 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108490593 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130533121 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135281933 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11977935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106163218 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139314816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112803509 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10677256 seconds)
  done (took 5.45198205 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12394499 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12278647 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130965787 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160426362 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118289431 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121604332 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150556101 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118106696 seconds)
  done (took 2.184042393 seconds)
done (took 31.173897075 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.130363325 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.123694239 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.123695987 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.147522055 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.189780962 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.141560332 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.123065274 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.109925786 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.147433599 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.127546462 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.106277875 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.110600514 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.154286831 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.114285876 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.221902783 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12054167 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.225598354 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.191447001 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.141063306 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.11953479 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.111747694 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.226474351 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.116641843 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.111541444 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.231221722 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.109909678 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.212935746 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.113663656 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.143406194 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.109415979 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.220436419 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.117646843 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110810216 seconds)
  done (took 5.931044336 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.207582318 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.11345898 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146213659 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116050583 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.11462304 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.144189232 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.210657915 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.144819947 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.116671438 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115236107 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115007652 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.222794088 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.12032141 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.138114031 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.115481722 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.113320714 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.241137007 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.114871431 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.10654569 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.12368754 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.108794567 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116665977 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.253364854 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.108679049 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.115933439 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.145419711 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.116638631 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.118276083 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.142721999 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.11617488 seconds)
  done (took 5.327646627 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123551686 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130515643 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.131775152 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212039635 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.143561402 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157958909 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137237772 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.130930794 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.16894204 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.110461137 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124630929 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176302423 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126280705 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.118903468 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143395188 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130146825 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131478011 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.139503037 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.116863353 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125778454 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.158109382 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128339314 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136676843 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.145994061 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109529594 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116215013 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.148439 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.124975238 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.116973573 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123406273 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.140275454 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.113568878 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.1099233 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.173831122 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111286068 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.122177233 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.167198827 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121032481 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.122922033 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.17145087 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.112979567 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.11120226 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.165311573 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165435637 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.109608202 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.151828965 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121283528 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.122658631 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.137090856 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128733059 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152316671 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.139524322 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.129902552 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.110138371 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.137913731 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.118602911 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.108592223 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.140873181 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125275071 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113911575 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.162826431 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118501367 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.119824345 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.110046369 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.14876485 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.108490602 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.10798286 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.143051463 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137653754 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.115513119 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.175219074 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.109781944 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121171808 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.150077654 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12071014 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120462408 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.107684741 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.149450399 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120145029 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.11448247 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.151821195 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.112108807 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.112276136 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.155712344 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.130953071 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123656689 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.150424218 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12340345 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.112518835 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.140147297 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127654004 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.109619217 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.114848116 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.152379186 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.10967798 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.112949824 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.153069325 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122548827 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.107349468 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.164289217 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.114965415 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.108088144 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.163752174 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116812779 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116098007 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.119060774 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.183170339 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.108928365 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.149402801 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124603818 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.109081406 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.116309117 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.144112734 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.109306804 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127558049 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.15579284 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.116992665 seconds)
  done (took 16.527797425 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.324284044 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.31088181 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.179437034 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.309619823 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.152704155 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.208530924 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.306608096 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.308076991 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.108863042 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.177788501 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161492451 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.275092231 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.141438621 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.138487197 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.309327859 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.364156818 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171740342 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.146344047 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.176399091 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124374152 seconds)
  done (took 5.554786424 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.131696844 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.145229441 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164143072 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140090446 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.116694221 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.154407044 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.110146581 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.128334495 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.148403695 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122242431 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.113282639 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156101661 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.119889241 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.123731589 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155361823 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150743228 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118018135 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.143575443 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13366366 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.113701134 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134248993 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138209319 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.118364208 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163561963 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.126374109 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.121998949 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.137819824 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.116598357 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.113660764 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.115243225 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.144726595 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129401762 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.115655432 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.137082037 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123289642 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126480328 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.14285538 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.11461204 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.114494932 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.1144917 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.155338873 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.119915005 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.118404695 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.130830733 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.12903007 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.113321415 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120526094 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.154152723 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109131871 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.125202095 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.153739077 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.121580884 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.117239733 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.157575542 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.115832111 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12632792 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.149674462 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.1219947 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.115007096 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.107938442 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.1379139 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115311862 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.11493183 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.150404327 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124469808 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.130424348 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.157466819 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.110053432 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.114207228 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.144202487 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115193007 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.123936579 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.162549659 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.116525446 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.113416618 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.151826092 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.116451134 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096693649 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.11983507 seconds)
  done (took 11.389090127 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138030733 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.117237672 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.129013267 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.177433705 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.120214829 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.115870372 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.146062491 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132173878 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12013722 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.155080616 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.121843981 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.122742005 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163613709 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.120209954 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.115145127 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156281813 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.121471557 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.149521144 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160289063 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138839279 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.1209873 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.146957675 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.123980815 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.121173907 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171921649 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123296565 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.137883913 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.151405091 seconds)
  done (took 4.992993104 seconds)
done (took 50.860736852 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.277253982 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.487818406 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.259738651 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.257338845 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.271071222 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.26388239 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.262193015 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.259182979 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.650422032 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.237440975 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.258475255 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.257427494 seconds)
done (took 28.905836174 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.339844903 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.764850677 seconds)
    (2/2) benchmarking "String"...
    done (took 1.542589521 seconds)
  done (took 4.463085635 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.249672608 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.250661198 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.479150016 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.251550199 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.252059452 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.251074198 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.252463754 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.256262946 seconds)
  done (took 16.149924823 seconds)
done (took 26.360598542 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.306869703 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.443773694 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.489049747 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.254225325 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.271590856 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.279895588 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.257858777 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.27258736 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.250854166 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.256536568 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.675864462 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.523269261 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.26821377 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.640412946 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.25311073 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.255301966 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.272794509 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.489472306 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.253235858 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.293315962 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.236073293 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.241543683 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.289403463 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.260303204 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.261082601 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.258891617 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.25849673 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.261255881 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.446103013 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.290036335 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.29065433 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.254865512 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.323079391 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.262378874 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.265713398 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.266421769 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.450758812 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.262937103 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.246140582 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.260574383 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.455313173 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.268068528 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.253768243 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.257773773 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.26063076 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.305767828 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.243468978 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.372406563 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.27760509 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.257964142 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.261138261 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.643928653 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.262233147 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.25893128 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.257303752 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.475773658 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.274311193 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.325014258 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.282326901 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.257798681 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.256944015 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.259590087 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.271985465 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.273168175 seconds)
  done (took 147.168473906 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.255420463 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.261609783 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.260047384 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.260894405 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.261387751 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.261973936 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.25487934 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.256270465 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.26143238 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.264618759 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.260972179 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.256767385 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.259720405 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.209415365 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.264305759 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.278038598 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.261870429 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.278218798 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.280241738 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.256119678 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.256977554 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.262579378 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.260448832 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.261121841 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.258587278 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.341719036 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.292211275 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.263839805 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.266600719 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.257082173 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.307855199 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.267583315 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.895826596 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.127449381 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.271675518 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.285342209 seconds)
  done (took 82.240999151 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.257299695 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.257429236 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257536723 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.292390962 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.260134324 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.854154255 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.857212116 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.984265372 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.034960598 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.679655292 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.262892026 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.539331122 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.259933404 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.353875583 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.270972387 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.258654077 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.275393493 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.285379469 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.263065153 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.260029593 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.853726064 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.275499204 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.494990159 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.443654158 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.277297672 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294450252 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.660321946 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.259594542 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292246324 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.596679516 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.311359403 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.259145924 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.664113477 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.668828984 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.376776941 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.261332207 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293305127 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.258611552 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.544647282 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.260126482 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.261035134 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.262940426 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.967147852 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.26462412 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.857366511 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.265279479 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.226166816 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.260430082 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.260844177 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.428646894 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.016733891 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.264051375 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.260106978 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.264562699 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.262597017 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.261810949 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.26244959 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.295461812 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.550544597 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.36175157 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.264247153 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.262495417 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.265875442 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297095557 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.261067374 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.467970088 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.264077634 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.614963567 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.3227757 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.511789502 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.859910784 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.266869064 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360852828 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384697494 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.263716358 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.263383078 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.261701316 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.263607076 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.376186882 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.264143291 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.689112195 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.442031738 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.283226155 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.692539783 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.364906917 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.264439221 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.663463601 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.267326525 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.264743675 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.024347037 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.363462472 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.2635861 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.264826767 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.264226081 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.692190316 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.862740046 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.531356173 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.26921898 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.773681509 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.269347185 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.707693608 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.839835626 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.976978625 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.268672246 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.26514682 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.376763347 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.444014433 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.282509216 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.264296148 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.69979975 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.268306171 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.323697603 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.262884466 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.668442856 seconds)
  done (took 374.391154734 seconds)
done (took 604.960316373 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.141062523 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.08950392 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.250965867 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.101977672 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.080194902 seconds)
  done (took 11.830247903 seconds)
done (took 12.999551132 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.464789214 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.468432767 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.335254643 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.468999405 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.303192551 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.483738956 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.452802522 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.292354868 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.380602936 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.353960743 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.382672963 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.323423148 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.301325041 seconds)
  done (took 19.181577467 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.578901532 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.277613966 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.336774333 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.527286633 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.316997689 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.552061146 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.590180979 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.279339468 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422149347 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.285849503 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.285133446 seconds)
  done (took 18.622674571 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.552494262 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.278724722 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.330554171 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529134425 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.311494537 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.565078315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.606201869 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.279083266 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41728765 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.286689584 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.285167798 seconds)
  done (took 18.610292309 seconds)
done (took 57.583440388 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.350660477 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.641182866 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.304281351 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.294590446 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.281503685 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.286009716 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.295950162 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.284172753 seconds)
  done (took 11.90901162 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.278765907 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.279558886 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.279316894 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.277724843 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.27948123 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.28231242 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.282306914 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.281674348 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.279802278 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.281251928 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.283570085 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.278560469 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.280529519 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.279909442 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.281787808 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.280327645 seconds)
  done (took 21.658816554 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.282177454 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.279475788 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.279482844 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.280418317 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.281859639 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.281389545 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.281642404 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.279829603 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.281216953 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.280896925 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.283270212 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.27960212 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.281655756 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.280318688 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.28131908 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.28298839 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.281132002 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.28026313 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.285849092 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.282561135 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.280443265 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.280726317 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.281344181 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.282605306 seconds)
  done (took 31.924198189 seconds)
done (took 66.663636611 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.272547609 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.291331819 seconds)
  done (took 5.736195429 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.34196503 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.341332054 seconds)
  done (took 3.858496758 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.285746349 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.284274244 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.284760673 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.281979244 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.285110663 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.282998193 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.28486913 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.283156703 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.283479144 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.283098819 seconds)
  done (took 14.013717311 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.284099121 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.285174243 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.284952956 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.287248148 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.284487096 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.2847364 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.285226262 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.285105562 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.28434162 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.283474301 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.288978593 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.285177204 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.285371578 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.284782034 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.285542264 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.28456012 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.284175848 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.284829715 seconds)
  done (took 24.308036798 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.298344344 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.308680374 seconds)
  done (took 3.78321215 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.424014145 seconds)
    (2/7) benchmarking "second"...
    done (took 1.325900909 seconds)
    (3/7) benchmarking "month"...
    done (took 1.399592782 seconds)
    (4/7) benchmarking "year"...
    done (took 1.391400941 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.326815252 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.305874873 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.327436259 seconds)
  done (took 10.677151088 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.286925526 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.500466053 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.631741996 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.830612895 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.287637186 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.289228676 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.059683734 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.29019764 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.291637734 seconds)
  done (took 14.644563923 seconds)
done (took 78.19585645 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.275388084 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.34073494 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.294810564 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.300249588 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.580336588 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.303327007 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.279468397 seconds)
done (took 16.551853952 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.274022204 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.272674596 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.267492277 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.297431341 seconds)
  done (took 10.287297171 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.28790834 seconds)
    (2/2) benchmarking "read"...
    done (took 1.565381967 seconds)
  done (took 5.028375581 seconds)
done (took 16.494888816 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289631324 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.289473668 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.285215583 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.287406281 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.287742879 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.286578141 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.286306906 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.287842344 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.288653737 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.286991247 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.287074334 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.288577593 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287855423 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288369118 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288006414 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28919953 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.287019937 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.285558603 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287318931 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.287395778 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288634037 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287425329 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.286987901 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.288347727 seconds)
  done (took 32.081567997 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.290143348 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.289618921 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.289620263 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.289653655 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.288610928 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.288629354 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.293078913 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.287920072 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.29048161 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.290468136 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287792236 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.289146155 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.290033073 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.288325145 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289551769 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.288991855 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.289769034 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289154913 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290203279 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.289369456 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.28888857 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289064596 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.28894328 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290770834 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.289599858 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290790468 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.289962575 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.289399919 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291394782 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.292090127 seconds)
  done (took 39.870039353 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.296213578 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.299030614 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.291802078 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.294357137 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.293150783 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.29336723 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.293163036 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.294044494 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.292658982 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.293108854 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.290784658 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.294679168 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.293032494 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.293892706 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.292978978 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.294525776 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.292796909 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.295255514 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.2945469 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.294000761 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.295881258 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.294646238 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.293496499 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.293711095 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.292766951 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.293386176 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.294281332 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.295557089 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.296144624 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.294996283 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.294799509 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.295516635 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.294215621 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.294534158 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.295350166 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.295280008 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.299585811 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.299382128 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.29478809 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.2950477 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.295523864 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.295707102 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.295045576 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.294941506 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.293287754 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.295538694 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.29652066 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.295652949 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.296215445 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.29601144 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.296572641 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.296847426 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.296236689 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.29478458 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.295979281 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.295407613 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.296738783 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.29597481 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.296434688 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.296456647 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.296909901 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.296235325 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.295989926 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.297283553 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.296926814 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.29835812 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.297298898 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.295905187 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.297071398 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.297136054 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.297135796 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.29933334 seconds)
  done (took 94.444286409 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.295587186 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294918699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293891558 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.293260543 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294319465 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.296340412 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.293459751 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294187614 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29476001 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.295533116 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29569374 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295045802 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29484935 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296540754 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296757791 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.295156671 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.297126322 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29569949 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.296148928 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295913669 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297348231 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.294724715 seconds)
  done (took 29.679853822 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295194673 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297918239 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.294443352 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297437382 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.298504957 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296868243 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296011473 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297690472 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297491853 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296252068 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296287912 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298080786 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.299260605 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296120802 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296513727 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.297229664 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29668516 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.29734985 seconds)
  done (took 24.530652559 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.297958611 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.296708797 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.296529154 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.29656801 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.295821144 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.29889538 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296744452 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.299799044 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.299321284 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.297546294 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.297860202 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298068766 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.297379439 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29720491 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2970524 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.298247613 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.29910949 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296896543 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298159555 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297636044 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.296560081 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298689761 seconds)
  done (took 29.733949945 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298593158 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.300567386 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.296793072 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.296086782 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.299731404 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.30003229 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.299962644 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.304023743 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.299400953 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.300490888 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298022585 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.300300819 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.299881752 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298342788 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.298820087 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299879036 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299667818 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298639056 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299731255 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299316002 seconds)
  done (took 27.174785108 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303174712 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301596401 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.3024577 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302855054 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301043553 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.303513301 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301115768 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.301034073 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302148078 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.30378141 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.304208482 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.30144435 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302336884 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303056787 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301726248 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302430428 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301305833 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.3038739 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.301541046 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303356304 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303833147 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304382965 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304630197 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.302923391 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.303580893 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303853026 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302895872 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.306328092 seconds)
  done (took 37.669057971 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302111137 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.302343858 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.30024732 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.301318573 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.301151444 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.301470047 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.302474929 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.301811363 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.30314791 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.302321893 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.302472909 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.303145986 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.303278291 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.301316606 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.301856229 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.304234506 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303547824 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.302659875 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302427989 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301608033 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.30318711 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303026945 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.304470291 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.302741142 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302781977 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.303558183 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302231845 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.304036555 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303269969 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303640519 seconds)
  done (took 40.268803932 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.325164867 seconds)
    (2/2) benchmarking "in"...
    done (took 1.325038274 seconds)
  done (took 3.841344443 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.30351422 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306217759 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.304439015 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.3027048 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.301829168 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.304383287 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.303621888 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302873207 seconds)
  done (took 11.61993505 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.297311265 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.304497246 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.305609605 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.305792482 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.304861141 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.29968648 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.307258847 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.31027737 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.300348218 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.302749838 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.305981392 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.302816271 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.303492929 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303157356 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.301417969 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3031972 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.309972963 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.309778019 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.307960535 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.306318 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.306019708 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.303923234 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307093207 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.308615904 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.302199601 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.310668172 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.309163184 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.312690265 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.301949644 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.305362462 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.303880655 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.308013764 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.307719195 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.309298412 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.305563251 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.308283898 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.308286387 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308136982 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.308087783 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.31090644 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.309375637 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.305736267 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.30265009 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.30630616 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.306855372 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.310883054 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.308982838 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.307286531 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.302575094 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.305410628 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.310920505 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.303283399 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.308862336 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.305311284 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.305363506 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.312207988 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.313917496 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.30575107 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.308624419 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.312066683 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.317649464 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.314788248 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.305910345 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.311828138 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.311588499 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.320000344 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.313690872 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.312481353 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.308149791 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.310021379 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.312104928 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.320088409 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.316324569 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.311906371 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.310495831 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.310479496 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.305098927 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.311415003 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.31072259 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.312044284 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.313325415 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.311459124 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.314211999 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.319090358 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.305652516 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.310906725 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.310922255 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.310125769 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.304502001 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.314459774 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.313854533 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.310626737 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.304991673 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.30647635 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.307586174 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.311579373 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.304915512 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.307677039 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.311763142 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.310397244 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.311208737 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.308300606 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.310735393 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.315156157 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.311401913 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.312469818 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.313973745 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.306894942 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.313021289 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.317632421 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.312753305 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.307657793 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.310062256 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.312944815 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.309700229 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.312542057 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.312796839 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.309114171 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.314589207 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.312325618 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.314374487 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.325444104 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.314104585 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.311758128 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.310611432 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.318564101 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.31337618 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.308482763 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.315031202 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.312327762 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.3116254 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.308711276 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.315329361 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.310604006 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313332531 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.311011099 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.312150027 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.312638382 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.313804004 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.308820574 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.31040056 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.310700241 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.309726919 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.313438223 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.316556352 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.310913545 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.317341394 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.311158603 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.312820625 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.311983578 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.315527788 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.315862373 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.310313824 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.31610225 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.309777046 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.314922717 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.310439565 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.315582133 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.314985319 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.315096243 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.315924916 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.309332946 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.313317008 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.316439574 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.312651591 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.311446039 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.315784609 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.31407776 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.315086657 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.310923835 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.317613942 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.309009271 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.312863411 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.321175972 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.314741493 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.316714051 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.31202976 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.318308108 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317019071 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.317008691 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.313592612 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.316482905 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.318901706 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.317760336 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.320370829 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.315490628 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.315215745 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.311140208 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.311578387 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.315275465 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.313147538 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.320117071 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.321778733 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323972066 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.312806775 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.318058936 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.312412658 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.319364576 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.314771541 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.318564699 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.316953084 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.317782376 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.311219469 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.319205377 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.31422323 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.318938387 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.310122267 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.319219422 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.317602378 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.317572237 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.319776492 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.311408857 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.314148374 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.317920931 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.317446109 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.319609136 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.312952761 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.317972391 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.311042035 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.313676234 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.318671094 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.319343638 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.319885198 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.319579392 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.314925947 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.315446264 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.314027911 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.312194999 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.32071338 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.317969399 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.31501939 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.32150556 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.318289715 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.315285082 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.320283628 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.318893652 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.313454316 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.318938302 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.324317214 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.317066992 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.315798989 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.325945787 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.322207237 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.320840307 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.318881627 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.312243826 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.320480584 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.320928962 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.321048538 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.313100189 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.323053735 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.314813926 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.317904658 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.316330074 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.316319651 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.316053288 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.31828494 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323849987 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.321346778 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.315616285 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.320016503 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.32008005 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.319769629 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.318126906 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.325236639 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.320937601 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.317414269 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.318501978 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.318221601 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.321721162 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.314744828 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.322723074 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.31525425 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.32853306 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.33364213 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.322979704 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.321405169 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.322408666 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.322927154 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.321256852 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.318676202 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.318561498 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.31774641 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.318331474 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.316476099 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.3231677 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.318201677 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.325191088 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.318689224 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.319995875 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.323616618 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.322791246 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.319652675 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.325383078 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.324741233 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.323330843 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.316081757 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.324469149 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.319075652 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.32172351 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.319283484 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.320247994 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.32500213 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.322768281 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.321014651 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.319878068 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.319439777 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.318014281 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.320545013 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.325255943 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.320490637 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.32843132 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.320175649 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.324659482 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.320907322 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.326724837 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.326309991 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.321702504 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.329036487 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.324323536 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.317897573 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.319202265 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.326476005 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.325355472 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.328827025 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.320364437 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.32592043 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323678004 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.324781988 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.323665595 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.324210858 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325526835 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.324778081 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.328927282 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.325020465 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.322309424 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.322227909 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.325100838 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.32773674 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.325096275 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.319819657 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323303185 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.327830628 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.322210568 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.321802974 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.321134715 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.326109167 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.326637456 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.326563389 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.324400391 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.326889219 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.327317862 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.32673823 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.331094556 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.327256685 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.328639716 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.330018866 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.327228122 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.330614159 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.322868886 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.328957726 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.32655828 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.322576184 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.32311666 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.323089247 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.327774404 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.322467198 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.333120517 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.327646248 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.323732586 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.325188039 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.329201864 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.32395507 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.331897441 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.343761606 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.324361474 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.329662172 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.326201 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.324706571 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.331326547 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.328751211 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.322021434 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.326590559 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.329974517 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.334544708 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.324627002 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.330489903 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.323201625 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329277012 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.328988289 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.329637196 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.330091404 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.330001564 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.324482304 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.329614239 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.328641053 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.332959939 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.324970817 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.326390644 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.326992679 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.33495637 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.333675637 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.325192932 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.330666085 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.329921936 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.324536137 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.32376281 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.332513003 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.324589622 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.332267724 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.325304287 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.32952373 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.327470421 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.328696561 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.327384952 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.332831409 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.325364418 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.326500349 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.331172569 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.329547755 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.330148169 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.325579742 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.331199343 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.327862166 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.326035529 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.331126323 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.324748924 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.33266445 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.326362487 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.330134321 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.326659684 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.329502857 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.329307831 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.331473864 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.324922729 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.327033021 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.335373657 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.332087109 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.332891566 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.331632697 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.335311594 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.326334049 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.3312309 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.331926728 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.328141912 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.328831945 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.332706217 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.328916978 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.328021054 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.329720456 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.331908922 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.335655274 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.330470417 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.328109868 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.337434123 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.3344192 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.33453102 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.32917897 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.330815225 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.328232236 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.332250416 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.334913653 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.330225585 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.337908444 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.33333091 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.335036298 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.332513605 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.330438162 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.330495704 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.33717708 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.334645234 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.330442529 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.333609635 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.329710649 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336482438 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.334032586 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.333648149 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.329681319 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.329841147 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.332344546 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.334045996 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.333735409 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.333171055 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.331571738 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.332362249 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.337747657 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.335893001 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.334236182 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.334825713 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.329352504 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.335665452 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.332014432 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.333270934 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.333874688 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.330434642 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.337102214 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.335856143 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.332190717 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.335551954 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.339314169 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.333081052 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.331014181 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.332333512 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.335683683 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.337944094 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.338170436 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.332372928 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.33402159 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.339153157 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.336762151 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.336638481 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.335190667 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.346035864 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.342049799 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.331608298 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.333594066 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.337409428 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.341457539 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.33646229 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.33799567 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.335589391 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.335727977 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.343081144 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.337877117 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.339177979 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.335597982 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.333841245 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.341269555 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.334591623 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.338903101 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.336677877 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34021061 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.339939486 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.339156036 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.344065491 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.342752799 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.341604837 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.355758739 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.338409139 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.336367679 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.34002555 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.334315756 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.338944346 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.335652061 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.339686683 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.33832614 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.338901296 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.340119784 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.335455734 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340992856 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.338821963 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.342174978 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.339409329 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.334622915 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.334783058 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.338114506 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.340481699 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.343610512 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.339951472 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.338096982 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.341755771 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.334810078 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.349074582 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.349704248 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.339439177 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.340309431 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.338930646 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.336034112 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.339177862 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338730371 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.345434822 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.339134804 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.338887101 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.336048145 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.341715838 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.340684767 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.333857979 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.336784903 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.335742476 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.338292446 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.348319174 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.352314542 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.341263479 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.34089393 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.343783568 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.342274824 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.337382709 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.341959197 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.341621665 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.336892887 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.337793851 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.345003221 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.341358359 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.341814704 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.338184614 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.345770751 seconds)
  done (took 789.590268838 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.340828034 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342127804 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340735154 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.340622866 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337742957 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.341453926 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.341171521 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.338375528 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.340229759 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.34169561 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.341762345 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.340210304 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.340118 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.33792459 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340470586 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.338208281 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.341628476 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.340754728 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.340233053 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340130548 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.340877736 seconds)
  done (took 29.372953454 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.338944164 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.339100898 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.341200611 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.340900876 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.338482214 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.338389337 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.34243188 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337508322 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.342360674 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341781059 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.338491219 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338540577 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.338917338 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.3366674 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336569418 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.339635307 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.342101517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339649625 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.339178461 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.337352346 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.338680803 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.339980878 seconds)
  done (took 30.68716351 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.343199759 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.340078078 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.336375554 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.340291769 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.341680811 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.338826434 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.340855476 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.343609972 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.340515989 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.336184391 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.333576285 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.338141125 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.341496503 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.34253391 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.338524277 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.339692201 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.339182945 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.345270991 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.344455422 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.340665765 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.344519691 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.345989599 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.338714627 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.331521486 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.340894571 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.3430181 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.339439341 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.338375093 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.334333979 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.343864955 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.343764696 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.334503717 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.339717082 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.341084982 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.335744661 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.341891483 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.339599835 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.338195692 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.338455055 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.339802223 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.351114093 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.340754145 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.341485326 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.342915973 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.337466598 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.337455669 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.343564826 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.33837569 seconds)
  done (took 65.554861958 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.341867012 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.339188416 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.337796271 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.338576037 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.343071752 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.33828141 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.340455267 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.337594006 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.336849717 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.33582754 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.338753908 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.336732722 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.336383384 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.342197033 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.338241409 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.336932261 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.338080076 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.338313643 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.338061777 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.336671061 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.337687898 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.338500341 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.338395833 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.338079691 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.340007347 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.338115026 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.33624017 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.339525432 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.336837743 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.336816728 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.339097764 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.337408815 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.336635114 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.338768791 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.336437242 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.336005756 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.340725142 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.336935954 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.338072424 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.336934599 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.340108641 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.340102249 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.337037027 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.338006809 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.336317933 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.336810895 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.340973144 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.339571263 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.33853071 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.338574393 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.338056798 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.340640745 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.341007609 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.339908189 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.340280624 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.341689512 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.336479572 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.338220734 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.338345408 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.338612402 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.337401179 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.34157561 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.33743836 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.340418689 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.340122857 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.340301202 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.340219164 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.341232629 seconds)
  done (took 92.247067987 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.341624566 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.342336347 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.343607028 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.343113055 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.348281003 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.342271803 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.344292687 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.341373902 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.346098901 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.345099756 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.342284503 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.341231616 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.345070413 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.345675102 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.340603024 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.345620611 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.344613904 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.341796382 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.34548252 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.34195816 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.344408374 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.345258016 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.345748916 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.342056542 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.344019367 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.343564004 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.342177477 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.343171711 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.342841016 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.345775828 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.345120923 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.343913181 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.342740979 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.343175001 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.34587317 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.343541539 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.344038714 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.343582932 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.345150573 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.346053662 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.34315305 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.345009831 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.346641654 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.342278574 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.346260842 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.343727029 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.343409282 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.342995796 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.34526742 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.342193222 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.346551669 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.343534976 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.347924846 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.344012757 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.34355909 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.347701667 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.344193131 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.346113228 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349595059 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.347936847 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.34569608 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.34950154 seconds)
  done (took 84.571801669 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.345483892 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.344440145 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.344227665 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.343334236 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.34319995 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.343353652 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.345315177 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.342553533 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.343387944 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.345871466 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345690273 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342750932 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343967694 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345275838 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.344366891 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344847356 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345393224 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.342589034 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.345119571 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.341672426 seconds)
  done (took 28.104223917 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.346715425 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.343150032 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.344860354 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.344708996 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.347332763 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.346245681 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.349327118 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343181803 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342639024 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344834277 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.346475897 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.344258167 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345708524 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.344530447 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.347006568 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.345632313 seconds)
  done (took 22.751129666 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.348889379 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.346747128 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.346521451 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.351165469 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.346448179 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.343937371 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.346306163 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.346142388 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.346077375 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.349317319 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.346948785 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.346326515 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.349314219 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.348957827 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.348629139 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.348129482 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.348498013 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.345651054 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.345444433 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.347936239 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.34714152 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.346539088 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.345461812 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.349631973 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.346130011 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.346161013 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.346878438 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.345910832 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.346245313 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.346857778 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.348763993 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.34497057 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.344992216 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.345645532 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.350724 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.348118075 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.348014121 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.349651019 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.351392551 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.345861698 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.350600868 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.347759288 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.34688022 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.348928319 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.347771585 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.349696986 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.349170712 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.34843802 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.346083702 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.347037623 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.351175471 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.350028983 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.353387837 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.350683675 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.348228927 seconds)
  done (took 75.351317617 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352615105 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.347838016 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.348178645 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.34683685 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.349520524 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.344606903 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.34791777 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.348456492 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346456843 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.34952485 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348384464 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.349248382 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3472753 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.350279129 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.347935285 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347322687 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.348573053 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.347465505 seconds)
  done (took 25.492169135 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.354004821 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.348737367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.350636073 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.349717674 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.347403457 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.351976617 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347586957 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.35020064 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348296684 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.346102409 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347454863 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.350753644 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348014949 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.349823279 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.348628247 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348416282 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.348750298 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347922548 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.347488777 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.349096122 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.34936725 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.347950852 seconds)
  done (took 30.901884158 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.342446013 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.3446772 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.343948611 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.361249025 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.356315221 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.342712628 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.345257174 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.344855086 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.364691439 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.387424106 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.380716129 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.359818625 seconds)
  done (took 17.498488322 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351161081 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357312154 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.348278475 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350176772 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349794755 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348485133 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350012296 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349693537 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351051375 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34941171 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348690193 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349514994 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352582855 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348034 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350734903 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351394769 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353367274 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347536847 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350593139 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35147315 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348414973 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354032285 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349033893 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35084691 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352782504 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349855106 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352624869 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35087485 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348768447 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35093999 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350267837 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351504376 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350429226 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348270585 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350037956 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350431931 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351160693 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352432819 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356962967 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349865392 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.350825509 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352398723 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353152988 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349729612 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351954703 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353793216 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35027223 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349515793 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351090205 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350642038 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351733268 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350661005 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352803441 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353135789 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352760615 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349346736 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35328944 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350220663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354884269 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350142059 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355770079 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352449439 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349614326 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350440159 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35472936 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350922731 seconds)
  done (took 90.402449803 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352170683 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352139765 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354930004 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352336631 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350363808 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352226414 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351027132 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349978456 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349757183 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350316725 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351355605 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350777189 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351126352 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352914361 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351363364 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351647254 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349571583 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350834291 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352547849 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352146333 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352926553 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352995126 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351848833 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35144228 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351311864 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353331548 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349629303 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351964371 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349706893 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353079657 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351818801 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351616559 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351015301 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.352450809 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352278365 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351767805 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35255374 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351057645 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350856047 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354435322 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35091816 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352269075 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354341162 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353244921 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353342615 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354950742 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350748865 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352377196 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355627953 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354908028 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351546303 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352722936 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352173692 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353861156 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35301639 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35209394 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353423991 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353644359 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355039183 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353687081 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353233048 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3546677 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356030532 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352397989 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352336878 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354074691 seconds)
  done (took 90.481378695 seconds)
done (took 1845.098635525 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.514558015 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.469843277 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.351442745 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.364071922 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.347962961 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.374183881 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.361158126 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.350208181 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.348219559 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.349753789 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.354563965 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.540493066 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.346842108 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.349712705 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.350611156 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.446059347 seconds)
  done (took 27.446317836 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.37958612 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.362635973 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.470555819 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.352979137 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.379825987 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.553660548 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.415542337 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.357638079 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.531481358 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.368174533 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.350191042 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.375898029 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.354528164 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.350676984 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.373144778 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.542772238 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.607609278 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.35194303 seconds)
  done (took 29.70597748 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.811809138 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.382461037 seconds)
  done (took 5.422971751 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.374339286 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.356772925 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.357293471 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.354287006 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.345459 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.344178806 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.35390745 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.348304217 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.347171828 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.486217688 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.35784803 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.367854697 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.352185666 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.35480987 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.3578841 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.398571592 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.493547809 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.359329207 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.356175939 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.360632038 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.35546734 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.450326441 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.395788428 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.363078019 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.480758927 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.35507809 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.357418956 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.360026457 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.49630904 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.360015234 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.353300582 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.35497528 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.355949537 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.359784292 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.832799753 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.353923856 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.376694151 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.384303253 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.35750599 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.499936149 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.356843593 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.357805161 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.348958791 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.826954876 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.485058286 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.479404798 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.352800429 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.355777178 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.35481181 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.425682663 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.356920926 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.359591462 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.416645184 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.204689223 seconds)
  done (took 86.544727026 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.36343395 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.347144201 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.519924527 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.376315583 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.348698094 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.350262614 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.34850017 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.642610278 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.397561951 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.347365257 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.66034371 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.86903422 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.35838662 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.37240194 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.932853918 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.440936771 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.351188258 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.346585564 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.369459398 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.348178823 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865092976 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.352218523 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.348118111 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.393037972 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.390109398 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.807520056 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.353510452 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.351911562 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.354068582 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.349281519 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.822719385 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.354004369 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.352324462 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.35280609 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.630608742 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.702876168 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.683478354 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.356694419 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.35134268 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.35067712 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.370566145 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.800926959 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.689602342 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.348321592 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.349189773 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.808536944 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.349789838 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.352724289 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.355999754 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.569245088 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.35983492 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.350250768 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.353924409 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.352680009 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.350102743 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.41549305 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.434458454 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.837931226 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.348359811 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.34892762 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.377051846 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.357206847 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.354372851 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.352568805 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.349927136 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.694991777 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.54333279 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.348396501 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.708055372 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814069098 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.356383886 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.885467303 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.354522807 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.372768615 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.555808606 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.35128641 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.356487642 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.829107266 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.380224977 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.348590785 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.68031555 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.352154913 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.65170766 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.361417553 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.356393452 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.880070962 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.356205075 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.398160728 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.349467569 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.361847203 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.354446093 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.358230106 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.630643955 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.375090266 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.352123445 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.348766482 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.375578832 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.348829404 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.370930699 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.355217667 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.882448968 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.356731884 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.35139811 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.354678205 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.352296794 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.355136009 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.354590829 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.350456842 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.588731679 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.354178997 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.372474149 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.351397293 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.350038684 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.352640795 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.394464243 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.351438299 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.651084843 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.35995095 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.351270857 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.363084866 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.348448697 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.371420112 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.351118341 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.35801723 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.248772326 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.563823122 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.369430726 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.348920846 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.350413196 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.364360391 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.352126191 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.350369268 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.358257863 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.351697295 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084852452 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.362392536 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.35830429 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.349758733 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.360997422 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.350570555 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.354878797 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.354141572 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.651155281 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.629437946 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.56379827 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.352682503 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.348464083 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.068237609 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.394687316 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495521907 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.367121934 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.348983223 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.554974625 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.556113888 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.350523945 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.34849186 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.350580963 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.579953876 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.355331212 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.664866101 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.834044095 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.353896022 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.349871711 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.076051724 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.059632417 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.356414839 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.350866031 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.633950902 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.36373637 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.347581587 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.348299267 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.351051466 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.349839209 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.349903758 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.36022149 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.351006616 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.351502736 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.406369898 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.522425931 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.368372116 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.349878981 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787546484 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.400743363 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.352136326 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.357488927 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.356219689 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.355572811 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.428965682 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.351912081 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.386194669 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.350786345 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.35437242 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.816236519 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.353399503 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.356710745 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.502164796 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990678991 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.355041757 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.353092947 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.349740371 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.908091639 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.85253036 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.356186654 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.639519823 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.36072883 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.392323985 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.353535742 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.412432597 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.845069874 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.355703911 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.353935187 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.94754426 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.355852938 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.761869689 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.352494056 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.354524302 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.874854664 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.351297412 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.350485429 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.349789675 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.364245882 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.621139004 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.356348899 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.410887576 seconds)
  done (took 499.825780938 seconds)
done (took 650.174222426 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.350620083 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.35601134 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.339528371 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.35599569 seconds)
  done (took 10.632295644 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.3734817 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.356976092 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.368658304 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.356069121 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.367395776 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.359475963 seconds)
  done (took 9.414218012 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.353542476 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.355804916 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.358453102 seconds)
  done (took 8.301521554 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.563890587 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.371838438 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.700862609 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.355767391 seconds)
  done (took 9.223754917 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.366252328 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.367593394 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.364703462 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.372130431 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.374927268 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.378489102 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.369738503 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.368093025 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.373440987 seconds)
  done (took 13.567723726 seconds)
done (took 52.371444864 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.355556264 seconds)
    (2/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.459465767 seconds)
    (3/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.42147428 seconds)
    (4/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.338434465 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.438910179 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.336053396 seconds)
    (7/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.130150327 seconds)
    (8/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.439421005 seconds)
    (9/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.339105923 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.394819071 seconds)
    (11/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.469248336 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.354048519 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.460846143 seconds)
    (14/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.439797773 seconds)
    (15/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.534055576 seconds)
    (16/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.170159476 seconds)
    (17/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.133371609 seconds)
    (18/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.400142774 seconds)
    (19/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.169054951 seconds)
    (20/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.072268443 seconds)
    (21/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.346990729 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.364926761 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.343310773 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.428869658 seconds)
    (25/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.367940975 seconds)
    (26/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.461816864 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.349541836 seconds)
    (28/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.014761631 seconds)
    (29/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.341184047 seconds)
    (30/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.495862968 seconds)
    (31/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.534195591 seconds)
    (32/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.471921787 seconds)
    (33/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.543304244 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.488142233 seconds)
    (35/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.467837071 seconds)
    (36/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.339752236 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.452434149 seconds)
    (38/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.118907567 seconds)
    (39/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.576646912 seconds)
    (40/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.424573526 seconds)
    (41/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.461887954 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.417753953 seconds)
    (43/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.391728369 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.342968876 seconds)
    (45/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.438329815 seconds)
    (46/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.368566602 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.210189964 seconds)
    (48/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.508092763 seconds)
    (49/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.347131484 seconds)
    (50/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.399740483 seconds)
    (51/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.489880147 seconds)
    (52/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.343708443 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.517539456 seconds)
    (54/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.685050066 seconds)
    (55/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.507051724 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.399027289 seconds)
    (57/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.34765917 seconds)
    (58/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.355033579 seconds)
    (59/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.526341241 seconds)
    (60/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.366345637 seconds)
    (61/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.376890466 seconds)
    (62/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.542154213 seconds)
    (63/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.347514991 seconds)
    (64/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.404543477 seconds)
    (65/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.431017769 seconds)
    (66/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.488219007 seconds)
    (67/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.365806602 seconds)
    (68/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.346374462 seconds)
    (69/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.467992363 seconds)
    (70/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.417135955 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.447823106 seconds)
    (72/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.342177769 seconds)
    (73/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.342327676 seconds)
    (74/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.466553946 seconds)
    (75/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.503925967 seconds)
    (76/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.069842133 seconds)
    (77/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.54728355 seconds)
    (78/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.245466495 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.46832273 seconds)
    (80/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.346634658 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.448330583 seconds)
    (82/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.47905297 seconds)
    (83/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.515353116 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.47055148 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.438089809 seconds)
    (86/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.388737077 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.576066545 seconds)
    (88/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.376859617 seconds)
    (89/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.390627292 seconds)
    (90/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.418110591 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.480864396 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.389471206 seconds)
    (93/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.530399016 seconds)
    (94/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.369391672 seconds)
    (95/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.416535772 seconds)
    (96/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.350940016 seconds)
    (97/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.587623652 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.434830906 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.48149124 seconds)
    (100/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.470449562 seconds)
    (101/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.299467144 seconds)
    (102/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.208422917 seconds)
    (103/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.266701316 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.348981302 seconds)
    (105/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.577384163 seconds)
    (106/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.17689739 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.367460085 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.545641284 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.43776607 seconds)
    (110/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.500648799 seconds)
    (111/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.500683176 seconds)
    (112/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.359587291 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.511500855 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.399348073 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.474612427 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.389002507 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.383962126 seconds)
    (118/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.159714032 seconds)
    (119/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.350848341 seconds)
    (120/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.365903284 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.478431668 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.517802758 seconds)
    (123/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.360768369 seconds)
    (124/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.208649543 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.166754772 seconds)
    (126/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.549172639 seconds)
    (127/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.346570931 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.51623974 seconds)
    (129/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.347268849 seconds)
    (130/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.494438965 seconds)
    (131/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.350711091 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.349658058 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.497571748 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.449752434 seconds)
    (135/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.479560603 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.374684196 seconds)
    (137/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.346329569 seconds)
    (138/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.44256896 seconds)
    (139/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.431622242 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.420007536 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.068081822 seconds)
    (142/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.400250261 seconds)
    (143/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.407099904 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.479879907 seconds)
    (145/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.025919217 seconds)
    (146/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.34618835 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.398002355 seconds)
    (148/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.490729547 seconds)
    (149/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.625762573 seconds)
    (150/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.583150638 seconds)
    (151/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.350954137 seconds)
    (152/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.641343447 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.587453149 seconds)
    (154/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.46176973 seconds)
    (155/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.507885942 seconds)
    (156/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.395956697 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.511968875 seconds)
    (158/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.44871977 seconds)
    (159/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.466659801 seconds)
    (160/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.618202847 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.472407285 seconds)
    (162/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.085522507 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.427135947 seconds)
    (164/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.499551486 seconds)
    (165/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.347703688 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.481509735 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.399256795 seconds)
    (168/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.345690266 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.523354701 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.480008656 seconds)
    (171/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.397917951 seconds)
    (172/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.482669193 seconds)
    (173/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.433504563 seconds)
    (174/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.585449836 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.47378828 seconds)
    (176/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.403950338 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.575869652 seconds)
    (178/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.400413237 seconds)
    (179/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.16820374 seconds)
    (180/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.449510302 seconds)
    (181/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.122140615 seconds)
    (182/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.210262226 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.564642497 seconds)
    (184/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.347028029 seconds)
    (185/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.637905155 seconds)
    (186/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.351879761 seconds)
    (187/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.38383695 seconds)
    (188/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.441166324 seconds)
    (189/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.541832863 seconds)
    (190/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.327708645 seconds)
    (191/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.616726476 seconds)
    (192/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.356201776 seconds)
  done (took 345.346398756 seconds)
done (took 346.584025146 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391048544 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.466614108 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.368822981 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.369094042 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375095719 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.369063682 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.394747726 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.371502674 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.386632968 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.381102799 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.365286261 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.38360849 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.386063153 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.377886865 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.410672725 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.373117164 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.372160406 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.382088457 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.384026541 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.386028408 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372462304 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373728493 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.392556147 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.370722058 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381451827 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383192989 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.384652035 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.366071718 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.380741383 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.384806009 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.376992414 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.382336562 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.383432848 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.382186382 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376384759 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.381594233 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373487086 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.465437941 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.393248194 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.379361307 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.377718432 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.386761807 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.376654351 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.375579889 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.378872888 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.393819752 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380768322 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.387392657 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.374597871 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.349947051 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393918928 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.386552171 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.378027896 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.343015228 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.376562748 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.391999778 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.382489894 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392747814 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.382079532 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374110067 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.410184019 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393104988 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.384474395 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383954602 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.382803546 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.391674362 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.385244333 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.389851768 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.381838701 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379144299 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376446245 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.380048448 seconds)
done (took 108.852271734 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.506470298 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.373095558 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.522432994 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.383909657 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.54180898 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.510077508 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.378923488 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.381501708 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.379106149 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.205167941 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.382631619 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.377989443 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.371625904 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.381523723 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.508271468 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.381796476 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.380981873 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.095342235 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.384618523 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.520727718 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.376902309 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.384124346 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.38226807 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.207246012 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.373926092 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.375187153 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.52064369 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.384296057 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.095480117 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.370649743 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.377115379 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.102830592 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.524103706 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.402482377 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.391561948 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.393236906 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.544475685 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.39229166 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.507618945 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.506558896 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.52595338 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.425409362 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.375188418 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.378812915 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.384910422 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.388370668 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.384625884 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.412888423 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.382684004 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.386911915 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.098099423 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.399284812 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.383030822 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.384319862 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.386991629 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.416593759 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.388940007 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.38856268 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.526062029 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.389188856 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.514318139 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.210229929 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.20993727 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.389088264 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.379861621 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.385468197 seconds)
  done (took 111.72763194 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.45081864 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.467940527 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.4876363 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.379253875 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.436357441 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.48378602 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.383536143 seconds)
  done (took 11.343984038 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.386800162 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.389344028 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.428682078 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.428432565 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.387245414 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.538690128 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389718201 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.390093007 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.38710173 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.434920782 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.392390556 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.387007318 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.396985766 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.377455761 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.432248576 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.394492082 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.498332604 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.385259097 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.390170447 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.538833562 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.388043399 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.397403302 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.43825668 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.39483988 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.390277173 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.389015489 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.209973032 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.386268745 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.389417062 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.388391493 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.389204905 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.438051544 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387450245 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.379065791 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.390825809 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.499856387 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.388934229 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.39069819 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.392230882 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.384318162 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.391582582 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.389712216 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.39404078 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.391257487 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.391973613 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.407884925 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.391869007 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.390991054 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.392161904 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.393936945 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.433575514 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.387652946 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.391161229 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.392261463 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.441219107 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.396582046 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.388294572 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.390065073 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.393020344 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.391338224 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.540686289 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.434956122 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.391675162 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.432566413 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389762314 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.391648012 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.397586373 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.390535299 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437353991 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.388083252 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.433836855 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.391902337 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.577658097 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.409851766 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.392476273 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.386352264 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.389087633 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391403864 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.381340199 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.393496772 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.390046455 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.388193331 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.393000313 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390201514 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.387555914 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.545781354 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.50217719 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.391619765 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.398714588 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.390594621 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.389197017 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.442319163 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.3901976 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.39378083 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43989396 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.502782304 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.43947772 seconds)
  done (took 142.885228186 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.400492254 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.402824283 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.386830336 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.417225315 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.390515904 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.389583517 seconds)
  done (took 9.652976154 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.38490667 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.396888425 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.39043375 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.393883977 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.395185566 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.396289443 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.402195308 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391466275 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.390619971 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.395873045 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.397210497 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.401740164 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.393208739 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.390293774 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.39328068 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.389859928 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.392324002 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.390063915 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.386155158 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379363758 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.372177511 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.375373237 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381014939 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.374718912 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.383756737 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.381329239 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.386983866 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.373871282 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.372669532 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.374946124 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.374227004 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.373941308 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.370825046 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.362134626 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.371968867 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.360368428 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364694474 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.372050183 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362950295 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.366885897 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.369114993 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358801919 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.360832396 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.366178204 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.353530055 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.356976836 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.3665127 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.374945556 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.355527055 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.359052733 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.359637362 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.353514873 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.353690984 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.365417425 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.357291623 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349869929 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.362544784 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.358527037 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.352956555 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.350107103 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.355430496 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.354941284 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.34963908 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.355095368 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.348714411 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.357446972 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.344964597 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352670436 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350840836 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.350272012 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.351945236 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.342782614 seconds)
  done (took 100.972226925 seconds)
done (took 377.832849743 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.619719935 seconds)
  done (took 3.845248478 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.607613741 seconds)
  done (took 3.841489514 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.665324577 seconds)
  done (took 22.151539228 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.420417135 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.406313398 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.342450844 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.344099544 seconds)
  done (took 10.741251092 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.597201026 seconds)
  done (took 3.821214116 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.340561562 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.335511934 seconds)
  done (took 5.903167445 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.504703316 seconds)
  done (took 3.726119245 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.577900583 seconds)
  done (took 3.801066376 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.351221414 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.345046247 seconds)
  done (took 5.924978476 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.312223747 seconds)
  done (took 3.533306584 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.845440951 seconds)
  done (took 21.063778291 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.338652288 seconds)
  done (took 3.558986634 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.380857075 seconds)
  done (took 3.599597677 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.718554615 seconds)
  done (took 5.936177967 seconds)
done (took 102.675030139 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.324734158 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.332267706 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.331932252 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.330772389 seconds)
  done (took 10.537466732 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.390210723 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.390447795 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.39521563 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.3909189 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.388770666 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.390329276 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.364462001 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.364575705 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.389835531 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.388527849 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.396209474 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.388541241 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.389374613 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.364329525 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.38995497 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.396198176 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.392321672 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.394443202 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.36532014 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.39045753 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.340251199 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.39233041 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.391681825 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.339472219 seconds)
  done (took 34.40319871 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.848110372 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.403867605 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.485566037 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.384263216 seconds)
  done (took 7.340992188 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.419412996 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.421882606 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.438821337 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.475167894 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.503112879 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.437655664 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.365763675 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.361300116 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.345793564 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.421819416 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.471279071 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.412369037 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.512780576 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.340569038 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.556395288 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.339767814 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.339653365 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.421341728 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.474174026 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.490582899 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.340941303 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.419937256 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.425118468 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.406792851 seconds)
  done (took 35.363498248 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.346638776 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.358332587 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.339731596 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.354758287 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.339539494 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.338849435 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.341753272 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.345511578 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.338901828 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.339530924 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.338165046 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.353837189 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.338561639 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.339649263 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.346672735 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.342606744 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.339437522 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.346488616 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.348364246 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.33983822 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.339032702 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.34598193 seconds)
  done (took 30.783114616 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.327040282 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.327154516 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.678482279 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.584846515 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.329291657 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.330611784 seconds)
  done (took 13.799228145 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.400111939 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.538478183 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.339266063 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.667038073 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.757692794 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.341853629 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.335470964 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.569604538 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.856553679 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.847479315 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.394400224 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.404295211 seconds)
  done (took 19.675112957 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.342746057 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.334271943 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.349315029 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.351412295 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.386195145 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.342115667 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.340481869 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.328531591 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.390676253 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.391567661 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.336883341 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.388948921 seconds)
  done (took 21.505822778 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417868744 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329976735 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.328972534 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329877392 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333586599 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174079972 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.339150636 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043311801 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.33553958 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598284924 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339906574 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424931935 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.582542065 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330730217 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336981116 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.309025069 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562924275 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803638385 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336981724 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330190116 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364944227 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327921878 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346642625 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.526535179 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174305807 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327167171 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.590239463 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.331685564 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597197274 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57827101 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576915099 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335444504 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60223854 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957328051 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429881059 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521648117 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337313734 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335297755 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.317239113 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.35178616 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350384545 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336498636 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56848145 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336380797 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330285266 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333209656 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054245493 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.33808478 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.327070619 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329967624 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572365801 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433377372 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.332901256 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331366715 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375028274 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333435245 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.333780127 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454785942 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896515492 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329302339 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341513776 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.335677321 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33624629 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349313553 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950916286 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.336985501 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.335400696 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333859294 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33081809 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340278906 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358499696 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330407166 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.348693018 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33245056 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059688397 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339795111 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34031396 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865359919 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339250169 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.337061331 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560869897 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331681367 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33191919 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.330617417 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332868603 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038442862 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344062687 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.307843653 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397694807 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.047006277 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.531022579 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361025475 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363668837 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.555238094 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.310623309 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33140539 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.340886427 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339181551 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354131816 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.049243035 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335725468 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.336352852 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589199229 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.542478245 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339539888 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.315648063 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805182791 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335565384 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.374005814 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334833898 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.533601749 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.933891607 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580595894 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343604842 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370940679 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335576963 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099338772 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354669526 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.344126491 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333709779 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603780202 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.149895796 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341293802 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40274363 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340002575 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335174978 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345930311 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34254709 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334537886 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.530585414 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346491852 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58219341 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.346010425 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335244838 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.335396413 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339794499 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.344687528 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.558012375 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348676359 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61618178 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334615696 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33623174 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335688933 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.556568935 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.345679767 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.347201704 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597104676 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337544518 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341808299 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57947149 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37299137 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445364151 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365873597 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.347908085 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.594470792 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.341196332 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.343495842 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33679192 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345713805 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345930066 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.345917489 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340793928 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937901814 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317735538 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342834544 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340885994 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.353424324 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40734188 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344411457 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.536394872 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.351584926 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340215726 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.351145874 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.339129166 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566789005 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574429787 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.345985107 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419361643 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.805078305 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934998836 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353500707 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.337768841 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.336287564 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.337317087 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340054853 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338912298 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33968501 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536041215 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590526942 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356676373 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.941493224 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343206258 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.34476837 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.350677302 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579190856 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.353733463 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340864236 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.343906869 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345001887 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357694569 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.588067355 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480313331 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.355022125 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341264916 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.858236731 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347530089 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340310159 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341204756 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370803762 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345878388 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171825286 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601825629 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333882814 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588547821 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352156683 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.364220021 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.339878268 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35445589 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355081296 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.364478874 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353708519 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.537280283 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362039548 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349098843 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900067913 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078383389 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88497548 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348249837 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.349964707 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34688496 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.064873177 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345287174 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342341978 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567989804 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065833694 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345600632 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811270212 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.345290091 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.069134601 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592347345 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580473767 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342798016 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.363190658 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59059588 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561303865 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375042216 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357225778 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348891466 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.321741045 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883896495 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345205978 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430955006 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066899524 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361594613 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350506971 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.394013513 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.352082928 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727174636 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349009443 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345077095 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344911888 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349496256 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176703882 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347705399 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346895182 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957148104 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349358209 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.819870794 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350486975 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.541854388 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.591180558 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.592987519 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.350799217 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.363501048 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.616225099 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586199929 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352266473 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356443594 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888710203 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.217546109 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.352302896 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345291146 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11198817 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358461344 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6179453 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.35509516 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.350565813 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352185859 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347009657 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345489932 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.343991355 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351569826 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3185273 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813975905 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.347940544 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347162338 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358773124 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352156105 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.6004817 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.359128154 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939270604 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580548753 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34064975 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398331641 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.352141715 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346631747 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.332303459 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347659084 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34797932 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393015582 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.573424721 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34794854 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.328873762 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371654257 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.562334445 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346921442 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347567218 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561115727 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.353298276 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.349415163 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105703409 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38705654 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346785464 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355953174 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345350086 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39349561 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417637646 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546139187 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.593937092 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597322801 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734952806 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353252926 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355625724 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.363834183 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44289325 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348718621 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.356589913 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.129179135 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944526307 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096880467 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.956775506 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598125887 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356274263 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357707633 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350706291 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486775244 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350659121 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624315171 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350514431 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.35722746 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380125816 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350560119 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364610579 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565623836 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626131572 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35082791 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363120119 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357532161 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.35217142 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598197549 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.568366821 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821615556 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893991714 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35985378 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359875925 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056155653 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626332507 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352649583 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352392148 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353018804 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.356343416 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.377059436 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.364157487 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35967327 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492218025 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592195985 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992517921 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.596977618 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.394168409 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.871485248 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352435948 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.61100297 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119466675 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.550399728 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957232056 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.057103843 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621583979 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422723206 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552215699 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.358858797 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489620297 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.356226708 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358515896 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353330581 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354454931 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.351831772 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596672301 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962073122 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622518043 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.358317767 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.360479539 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389555042 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.55174896 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.581746741 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064697383 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583248098 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59983397 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366770358 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354887054 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958668163 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606212264 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360247206 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.359639815 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564294046 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361582647 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381191847 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.873126979 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.35340484 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886607207 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.250621909 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376918661 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358048239 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.058636354 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963143262 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.361343645 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83126736 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363233277 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355451113 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651454386 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.361091407 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367435456 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640111366 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.360215176 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356750494 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560252189 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.962022323 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088207891 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.369096471 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38903966 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.364557287 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359622102 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360491781 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362839342 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366987733 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.765775667 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362615896 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358197574 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369175749 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.364617176 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362896802 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.361999145 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357188492 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.365235293 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.361888199 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.359248441 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377931925 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482549511 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897896685 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359633948 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.037485348 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.706611255 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.612189256 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358884709 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.343128627 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.36340328 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360716013 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358657928 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358522021 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360403328 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899152687 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.366826603 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.627183894 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371390143 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.569328349 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570067103 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361167541 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567670619 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367410733 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385611555 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.339869119 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361065061 seconds)
  done (took 964.353108952 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.358140007 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.373555481 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.374017823 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.366222447 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.3722279 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.403882913 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.406017257 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.436952102 seconds)
  done (took 20.334118166 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.360782233 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.367202248 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.35927323 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.368407356 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.366815758 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.819536688 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.364578142 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.367870961 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.375847219 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.359847878 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.36574329 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.025854468 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.387697579 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.356311817 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.348626936 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.371316243 seconds)
  done (took 32.211445201 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.38151104 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.515732221 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.200763081 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.383950338 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.368648228 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.358119264 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.574502906 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.385042738 seconds)
  done (took 26.414162059 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.370164835 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.369334268 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.3692301 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.370631436 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.36847098 seconds)
  done (took 8.093235861 seconds)
done (took 1226.033328386 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.366091048 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.367349427 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.366935947 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.368635844 seconds)
  done (took 6.712001774 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.341484076 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.341412144 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.341281556 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.352270554 seconds)
  done (took 9.620755581 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.025384526 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.974969252 seconds)
  done (took 5.245353941 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.841970955 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.840273426 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.838918964 seconds)
  done (took 6.765129861 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.638887815 seconds)
  done (took 2.882693673 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.272055925 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.362403543 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.010468512 seconds)
  done (took 7.891250558 seconds)
done (took 40.361950971 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.370283082 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.608401948 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.512765765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.357663311 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.539120702 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.51447262 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.095338411 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.36317177 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.368111187 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.36425206 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.362915438 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.566765289 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.078402321 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.60357167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.080689981 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.608690144 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.520354654 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.364751177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.364377486 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.37480938 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.096401422 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.357929344 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.376195163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.358307562 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.52344268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.504078602 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.366068262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.603622521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.357718917 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.3600264 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.509835191 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.358587061 seconds)
  done (took 82.036954188 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.359464552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.358062845 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.361736644 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.359200792 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.369270023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.365661482 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.360027031 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.360254987 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.358205902 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.385498138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.358340044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.36438389 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.361234838 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.367449531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.361052849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.359365934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.380753377 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.360052959 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.360187199 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.359863005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.362612947 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.359399571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.358522808 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.359401747 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.363698095 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.370153102 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.359513078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.376319294 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.361564376 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.360266432 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.376352998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.365424503 seconds)
  done (took 76.891653889 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.37149029 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.369114465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.360298365 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.370371967 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.361139317 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.382030974 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.363941002 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.36060507 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.370044084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.369519182 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.361229177 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.36147169 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.377434178 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.362346737 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.379189455 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.372143761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.364579154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.367335029 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.376535712 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.371031237 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.361365141 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.362229036 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.379002427 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.362839017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.376417615 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.363868686 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.363179881 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.363645479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.367255411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.363223164 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.364636577 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.363035936 seconds)
  done (took 77.012001473 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.601819473 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.380856418 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.380479323 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.374381554 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.381635657 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.378162087 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.372982265 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.607709164 seconds)
  done (took 14.72852584 seconds)
done (took 251.914922171 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.37048813 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.858269775 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.399863647 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.379240382 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.394105931 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.395075028 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.584327264 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.399789022 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.58817729 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.407102313 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.390392679 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.371257997 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.14599079 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.522331876 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.201004208 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.302611187 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.223230848 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.369408348 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.925732109 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.647806626 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.398705774 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.364813688 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.187898902 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.230479169 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.349311881 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.451046324 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.468246567 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.592473168 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.530239448 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.452080069 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.87220297 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.390135593 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.377812771 seconds)
  done (took 63.794448482 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.371294902 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.376218985 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.380313434 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.380134794 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.376360686 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.380343875 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.37056872 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.379656596 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.379758794 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.380922982 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.380959223 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.378513249 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.379461172 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.378328173 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.37802039 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.361431376 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.371871551 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.378605738 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.371834825 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.362230808 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.3765602 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.379901701 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.382034336 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.379124173 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.38160527 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.381333853 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.378860508 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.379115682 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.380175047 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.378520821 seconds)
  done (took 42.568363041 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.382770013 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.932599973 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.074397472 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.387416543 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.373514707 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.379677424 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.648349921 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.38759023 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.377765717 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.378422964 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.831772323 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.390841928 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.40723599 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.082807438 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.377841534 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.382929849 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.383685802 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.376409876 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.945165408 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.385298925 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.647536976 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.385565347 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.650093886 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.384524858 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.378718425 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377543276 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.379906838 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.169645256 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.396712173 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.837129386 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.105757826 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.649868211 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.11203612 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.14257125 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.1184988 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.391038039 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.38486718 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.84540275 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.37955725 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.377015343 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.648274913 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.377428236 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.088657786 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.040888535 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.398951806 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.384900041 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.186245139 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.861117298 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.612695999 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.383317088 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.126206086 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.381307323 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.386911761 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.37873642 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.610862241 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.383995507 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.37804513 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.19615296 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.397710692 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.650131955 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.38786554 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.378994358 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.943299931 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.379112598 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.940463116 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.381917874 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.387205986 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.37869733 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.088829363 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.382613448 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.062712198 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.395054179 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.386585492 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.841909579 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.939838425 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.240318656 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.38167062 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.953230721 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.152413675 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.667074142 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.3901594 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.179968018 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.670957893 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.385531 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.392595944 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.390093076 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.388815484 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.452755042 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.64931281 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.997294653 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.076786317 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.211220197 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.670309597 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.392291388 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.381089337 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.199706769 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.403853807 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.388565539 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.087759585 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.078522302 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.397737663 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.388725581 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.046923221 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.400496331 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.654601492 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.388623127 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.14093958 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.383557132 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.454224337 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.389010289 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.38826993 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.386130768 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.653913627 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.388889167 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.39130507 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.042714673 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.871719793 seconds)
  done (took 192.357333368 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.392156125 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.376727908 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.376806985 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.39609303 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.376692168 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.38397345 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.377887781 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.377192643 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.381751165 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.379280333 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.378042449 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.38669491 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.384509142 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.378397232 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.376556977 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.378960746 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.377773826 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.39983062 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.378749713 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.37853386 seconds)
  done (took 44.899153584 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.393075965 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.914259442 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.889097166 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.394145125 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.388544974 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.385713861 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.437202869 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.393539452 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.388061533 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.66770648 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.547962484 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.401019067 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.389846073 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.390875752 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.889588185 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.377294269 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.666876078 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.918946877 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.398445963 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.91793469 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.377195047 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.394385568 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.384660834 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.92056299 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.680009977 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.6573877 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.441298149 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.924134935 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.391386693 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.391614943 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.91805004 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.394618442 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.385127748 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.91023705 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.39485227 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.408449102 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.392373178 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.441111203 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.445614354 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.6754251 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.92357242 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.664486629 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.405460143 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.558142963 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.40019168 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.373332174 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.926020283 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.395781175 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.373967741 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.392735372 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.39983542 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.900666858 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.387518333 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.900351785 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.393631243 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.396559357 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.919377366 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.902803947 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.895419239 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.548514381 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.393017716 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.658887676 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.392326404 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.928304662 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.398846861 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.395733969 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.396126964 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.550718983 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.927733832 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.660088575 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.67306278 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.673559264 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.396626803 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.451709604 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.400696678 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.675489842 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.450092037 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.790688201 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.681551388 seconds)
  done (took 125.298501637 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.635164634 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.50230112 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.742032166 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.955629613 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.87792839 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.52076282 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.503984318 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.624906569 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.391692138 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.481335214 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.004880932 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.485565789 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.092419311 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.479527398 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.496450669 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.516979806 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.77402855 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.365974626 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.016020706 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.975946201 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.391212026 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.49345803 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.951353984 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.56653024 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.395871319 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.930617521 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.314210524 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.894302187 seconds)
  done (took 52.64998792 seconds)
done (took 522.819219604 seconds)
SAVING RESULT...
DONE!
