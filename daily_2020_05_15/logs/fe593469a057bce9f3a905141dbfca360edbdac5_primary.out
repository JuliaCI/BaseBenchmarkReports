cset: moving following pidspec: 22974
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.247416757 seconds)
loading group "string"... done (took 0.6337933 seconds)
loading group "linalg"... done (took 8.09353534 seconds)
loading group "parallel"... done (took 0.168595282 seconds)
loading group "find"... done (took 1.309264796 seconds)
loading group "tuple"... done (took 1.97508986 seconds)
loading group "dates"... done (took 1.34673509 seconds)
loading group "micro"... done (took 0.20476476 seconds)
loading group "io"... done (took 0.944759589 seconds)
loading group "scalar"... done (took 39.783362772 seconds)
loading group "sparse"... done (took 12.28837247 seconds)
loading group "broadcast"... done (took 0.958970997 seconds)
loading group "union"... done (took 14.706691705 seconds)
loading group "simd"... done (took 5.122367291 seconds)
loading group "random"... done (took 9.767925625 seconds)
loading group "problem"... done (took 1.693421998 seconds)
loading group "array"... done (took 21.459272089 seconds)
loading group "misc"... done (took 1.611135953 seconds)
loading group "sort"... done (took 3.342573826 seconds)
loading group "collection"... done (took 18.540094818 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.54068714 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123784133 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136607961 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119791634 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149106493 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116888048 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124344538 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086691476 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.834712456 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146923142 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11398787 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41565964 seconds)
done (took 5.283917828 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172037074 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086953747 seconds)
    (2/2) benchmarking "String"...
    done (took 0.07916129 seconds)
  done (took 1.210520427 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066198825 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126879208 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067207141 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067602862 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071408123 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068679545 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068750296 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068247046 seconds)
  done (took 1.584762435 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07310524 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069381506 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0663055 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069463555 seconds)
  done (took 1.325240703 seconds)
done (took 5.413401719 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.792225423 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.208962241 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18858221 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.408525763 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134781 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178072826 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643434578 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325777105 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192702566 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094170405 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11244367 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390267506 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.1257294 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.631868412 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078250602 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095874224 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.144512704 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448985615 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073056573 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08687497 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093853784 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131631779 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.080402874 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076356788 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151617789 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070767395 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14588752 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084895446 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068753136 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.254944427 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17547357 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656082036 seconds)
  done (took 10.429009602 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10233935 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100207384 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069888708 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125351279 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097708143 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07022489 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075815664 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069375026 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092781781 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131063764 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09166937 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108133219 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.0681219 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071777269 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085021242 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201729612 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083116296 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083302001 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071596573 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078826693 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107587515 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078126643 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080058686 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079994574 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132983094 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.168744275 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096725279 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097848572 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06723618 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081416584 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117657238 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129827198 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066698832 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067097614 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125100743 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095012335 seconds)
  done (took 4.554356569 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.011343629 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152178904 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092554807 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137877075 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066847622 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113185768 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06747201 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085715998 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.240217986 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.460054475 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.628786513 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.150326693 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119273036 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104536083 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072908356 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071127554 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072664909 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.265837391 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105983758 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110315624 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08489014 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071844779 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071890877 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066692344 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073435328 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064962187 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07036807 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.089459715 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077308405 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.332086755 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127999538 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069939608 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.961014492 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.171649862 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070321495 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108346647 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168768597 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091775716 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096134851 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144400917 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069929696 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065250896 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160004003 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065080291 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071238195 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067005382 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084933652 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109383304 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119042228 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065355652 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066618009 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.1675144 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066376862 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064588866 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081367123 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.166557739 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149723165 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063131942 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284247579 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091518513 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070998088 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064541591 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.192649751 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.109133754 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.065301932 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.064627055 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066451542 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06611888 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.358238712 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.062956223 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.228078872 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.065411602 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075049529 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067790234 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068300628 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076209355 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075144151 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087082723 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066182516 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073096931 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06657069 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06525745 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06661969 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.092947068 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.372941985 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.064877383 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068962308 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064185751 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089749947 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095215669 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066848184 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.062774229 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099619732 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.061438167 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066430566 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.063416198 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06487196 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111234026 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068223472 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061000086 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111560163 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.063733885 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.281017443 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098651894 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072460705 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106157887 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082518841 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07607146 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.4780985 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067538604 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076072748 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069702522 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071232292 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070485945 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082235008 seconds)
  done (took 22.050904679 seconds)
done (took 39.091879592 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247317267 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08526236 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086970246 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.087915594 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087424228 seconds)
  done (took 1.767256351 seconds)
done (took 2.93635788 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128158777 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101617707 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067377579 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101167402 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066945071 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110759313 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104407094 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086673792 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104000094 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067678788 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101118011 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066762705 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067217056 seconds)
  done (took 2.345169181 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083595301 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085191692 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07151126 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084346789 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06532843 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084506771 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08291902 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091042583 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083433727 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074552862 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064784526 seconds)
  done (took 2.01929241 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082533038 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085384343 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071569898 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083479789 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064415416 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083371168 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083183795 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087166576 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083618347 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075809371 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065461799 seconds)
  done (took 2.008995271 seconds)
done (took 7.514786866 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076568228 seconds)
  done (took 1.209329901 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.542352815 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.48581497 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079152225 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.101363208 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193889475 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108904136 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.235695158 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083637165 seconds)
  done (took 8.137693955 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095886461 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082620286 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071050603 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071121648 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071696484 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072752417 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073291789 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072684117 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071434843 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072453373 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071729092 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07344877 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072938395 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071575346 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071930826 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072055812 seconds)
  done (took 2.405633795 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098051966 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098235422 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076157324 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078045719 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075637694 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074828751 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077497498 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076981222 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074012626 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075741249 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07900335 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076373135 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075924774 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066755115 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077330488 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07953963 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073946868 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077187031 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077589791 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078681106 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078651478 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066475801 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075707428 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077427012 seconds)
  done (took 3.112547589 seconds)
done (took 16.009835598 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106667715 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068187953 seconds)
  done (took 1.314894012 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.0790254 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080293355 seconds)
  done (took 1.307726373 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077424415 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06316792 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08422823 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074105923 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064078488 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064275228 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.083247479 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063765558 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06397587 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064101015 seconds)
  done (took 1.850845465 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065520725 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.074040829 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06990595 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079227409 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071125814 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065052513 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068884067 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065923934 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073515462 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06344899 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068597531 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08578544 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070414689 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086342327 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068845083 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068839178 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0707864 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067504428 seconds)
  done (took 2.434645903 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063502463 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064495121 seconds)
  done (took 1.284475591 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067705893 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064414277 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06797027 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06885496 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065654835 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065051247 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066458514 seconds)
  done (took 1.618880203 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402862524 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123896268 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332238009 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07088484 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081182899 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259976935 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065445422 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070247392 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070341151 seconds)
  done (took 2.674859195 seconds)
done (took 13.644117011 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080841884 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087735859 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10086954 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.419740619 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094816041 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068765135 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115403527 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.179425333 seconds)
done (took 2.31228084 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208807761 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.815508746 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.487569585 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208164551 seconds)
  done (took 2.670314887 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346363569 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.196855097 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078213132 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067280399 seconds)
  done (took 1.856856608 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067636553 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071064691 seconds)
  done (took 1.303758898 seconds)
done (took 7.2061727 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065840727 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06516947 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090026208 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065854965 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066726784 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066631163 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06633137 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.066538189 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066961044 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066610605 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066376331 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066784778 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067014202 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065116738 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065805793 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066955159 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066643194 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06747132 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067089475 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067158118 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06685056 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066562718 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067011157 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066950114 seconds)
  done (took 2.817626561 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08173359 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067878685 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069029249 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06937523 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069494404 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068926026 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06885162 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067189505 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068924419 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06712892 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069693103 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069444212 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067317423 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072252597 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069062651 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071382846 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071194916 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069661006 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069380571 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071626544 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070610055 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069574007 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071475347 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070824282 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071563449 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071614482 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068940543 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069330796 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071038238 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071401107 seconds)
  done (took 3.279496497 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066380618 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061260097 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062376987 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072100267 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062829983 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063991301 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063298941 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063554152 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064277494 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062914076 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064469856 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063158906 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063549561 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064018014 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064206762 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067855012 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0814939 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063652038 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063211675 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063746505 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067441112 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063019598 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063098373 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063016884 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064446706 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061542487 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06200723 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062080572 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062705066 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062367325 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066062356 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066632132 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061493601 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06999509 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066157931 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061605867 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066156819 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062074 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063843373 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062834597 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062901699 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06339299 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063168591 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072651996 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063437471 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064361235 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062963419 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064597185 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062938246 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064228779 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061158604 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061472785 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063647074 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06313717 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067264671 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062804206 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063845298 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06303755 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063879261 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063282255 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062798722 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062734893 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06643933 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064636949 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081652306 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072304351 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063044503 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064336848 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063492867 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06628454 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064841794 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079119164 seconds)
  done (took 5.848507456 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085352192 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088503734 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066657854 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066794433 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062498089 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062453513 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072048593 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06384633 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068917559 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082552504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062825419 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066772859 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067242424 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066103289 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063019305 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067008666 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070991522 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062742081 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062725315 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066259198 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062507777 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070186768 seconds)
  done (took 2.697855331 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.145964492 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069017299 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105970336 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073081773 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070634684 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072674462 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068081471 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068632482 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070276525 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0707385 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070478931 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069786025 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07274617 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070657737 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070396075 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070347916 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069943573 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070320291 seconds)
  done (took 2.56078341 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079676973 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068209713 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088736115 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069154713 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069695618 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069350634 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072985634 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074298045 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069057536 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069094559 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074067322 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068818821 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068835493 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069340622 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068807768 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069562342 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068840289 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069483674 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073955427 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073371031 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073273366 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07442649 seconds)
  done (took 2.766145781 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088701041 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066622908 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082806121 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069400395 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063785906 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06402739 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070062859 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068861517 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07057767 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067989737 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068978737 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063972513 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071144009 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068541471 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071460842 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068748434 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068360098 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069389814 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068228642 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064017305 seconds)
  done (took 2.580208312 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083757202 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065626576 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065072031 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071370146 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065230514 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06567235 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071630236 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065366601 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065555366 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086428139 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065773895 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065903376 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071425486 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069543337 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065251469 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071796855 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073792083 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072023667 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065239027 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065361929 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086328948 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065313617 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071907265 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0658301 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065406882 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065575378 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06578989 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06943954 seconds)
  done (took 3.132253685 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065860275 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064987851 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066126825 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065879843 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065632616 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065258347 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065286361 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065625723 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064908406 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065590309 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065198552 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066131145 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065349113 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064982256 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065046095 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065339406 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065139992 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065791349 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065515856 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065120004 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.0650549 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065057886 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065327375 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065290024 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065652696 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065023356 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065075155 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065511272 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066316197 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06714521 seconds)
  done (took 3.153326738 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075495334 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073629057 seconds)
  done (took 1.339031571 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063949188 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078958613 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061514772 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072870518 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070963496 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065427551 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071524599 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070927091 seconds)
  done (took 1.74134478 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085806825 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075681962 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064463538 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076096022 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074968792 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085387206 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126427673 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065387086 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074832777 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065799476 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08288846 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066708875 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076791361 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071105812 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076777474 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080297758 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063868131 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070761243 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067756162 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063910928 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064601585 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077435122 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074104968 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062407131 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069574469 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091572384 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080329181 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063697906 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071093476 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076980547 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074770444 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061327381 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063996444 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064324728 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062481958 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074944108 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082642935 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071599356 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077459644 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064772468 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071971184 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062659785 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07296199 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074939486 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080065665 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064256638 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064395791 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062065138 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06582403 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070528524 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062399176 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069050988 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061933882 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077236284 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074430532 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081283469 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064268551 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071687479 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072707366 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073414422 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077404421 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072290244 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075378683 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065671915 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081680312 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07459969 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075470327 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062143601 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062421477 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063701995 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080148175 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09352791 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073885085 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064631808 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066470904 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063555972 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07284552 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066516988 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074877524 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07730834 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065477259 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070474674 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078376521 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070435413 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07200951 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072399632 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064060201 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068822033 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066909166 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08587667 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064311045 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063689125 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06631223 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08118554 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074763701 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065013154 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066704092 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077184981 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062196779 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065548373 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066369659 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071150014 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079255563 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070022879 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070586618 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079444533 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075136939 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070981198 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072522922 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062292681 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064498213 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06557996 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075038497 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060745526 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070167627 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06831544 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064130381 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074511633 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061517702 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062741212 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075279332 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074311267 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061105593 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060419035 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069471247 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062497657 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064430295 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075604624 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062121451 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06090849 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061001078 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07057865 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062407433 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070194291 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065827191 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069839981 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060536093 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.18790256 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.0701915 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077244746 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068213264 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070985882 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074607999 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070880244 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063541475 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076651031 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07147724 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066573011 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07408512 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068883382 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062610809 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066402759 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070956326 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063173544 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071848506 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067035257 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070851426 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064910019 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063223598 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070339896 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064751483 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066694554 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069473213 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06312302 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079047711 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07080307 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062355042 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06215645 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071026299 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065934941 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065759002 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068310259 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073445586 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066990301 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.0649564 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065977329 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072052745 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074344784 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069461842 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067033381 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075721602 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082714425 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064116787 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071675901 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064281975 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065070381 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064668878 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078112872 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075651419 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06821049 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070813404 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061566214 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073312675 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076168594 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066547858 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062150544 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066620265 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068267505 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07558605 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067969422 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064177371 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062495357 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070782694 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066310456 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.0706128 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064024037 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067013592 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069375112 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062547404 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069432999 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064691953 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078600851 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071630605 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062467539 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066491136 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062695304 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075381367 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062147692 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06542465 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066852779 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064659487 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063532522 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070622234 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061265278 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076406547 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076742337 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069389682 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066746761 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063610561 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076640402 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070074436 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072742602 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071391253 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073799248 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07928717 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066246587 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071499692 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078995548 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063858368 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061516433 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073389307 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065209849 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062929128 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063087949 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063029549 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071695304 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071234872 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074397986 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061050458 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070622937 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062379718 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066246455 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062607568 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07281141 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072429106 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069638045 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077160382 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065681442 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065280105 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073513766 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064790488 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065419558 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065988363 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071990001 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065097126 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071408559 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067909162 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071318097 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067669578 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063027275 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070547143 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064543231 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070452638 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073357051 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064553024 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070610431 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071515635 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064980666 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070985876 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068443458 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.200413845 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072478638 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073086416 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072172644 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073938515 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064940435 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07919674 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065682627 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079258192 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071136922 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063079796 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071847984 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072787308 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.0722961 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066594993 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066906984 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072270316 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065049508 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073358913 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07866402 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067278845 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081871843 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077766124 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072390271 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073034006 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072150702 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071843455 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068057448 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070482151 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066829589 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07015804 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063891161 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072837021 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071111192 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068979569 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070703232 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064302833 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069646465 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064772529 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061937879 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066243811 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066874269 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063921979 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076877071 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06417593 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068029643 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064906751 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066442659 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065175199 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063064967 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07313805 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073412878 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066758822 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076993574 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068808006 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072290734 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08199324 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06336485 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064566461 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063997672 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067100837 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078648282 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.0651817 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080172592 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070999041 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068620752 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063451579 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066621875 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064774743 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06349986 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063906576 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073626133 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066616161 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063177846 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06380357 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070827558 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064555206 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076855186 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063603728 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068404177 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064266011 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06183827 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066841513 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066787618 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070873772 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064661236 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065478436 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061721898 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063791969 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068680696 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069996692 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063754895 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070042876 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077217364 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065721877 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072841701 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067829148 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063567836 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071265725 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063766363 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064388437 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066962175 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073566452 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073042029 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066423046 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07990408 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065335767 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072770381 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06391929 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062174622 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063327654 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06354852 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063705643 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066286935 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065073368 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077277613 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062281773 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069639118 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06864834 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067331658 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072685232 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06378267 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069156902 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067762909 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065201928 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069365481 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076415102 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066623655 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070291133 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063591856 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068634907 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072239957 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065501993 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075385539 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06985243 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065211951 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068602611 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064635277 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064655217 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064587475 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064331225 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075179346 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064610414 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066706078 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067332459 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.198253112 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069955803 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067246799 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078843746 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071544314 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07216244 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063027559 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063009487 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066374369 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067376609 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.0722003 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07297606 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075566638 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072681862 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06963539 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065003703 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080566768 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07374884 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072612554 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067040346 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073159769 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066192707 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071791733 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068428319 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070187423 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065579789 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072424193 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069863819 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066980968 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074172903 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071978083 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064983347 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07043374 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070168375 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069249569 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062710696 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065825121 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072335768 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074779081 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072432566 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066011844 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081786999 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067694033 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071007045 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069236879 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065287719 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074820146 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064476371 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072043551 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066707288 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066557418 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063890204 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068673003 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067395931 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072847098 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067824726 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064167932 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082025485 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080838541 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072331309 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065355417 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065178419 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064584431 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063800052 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068423512 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067196049 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071988418 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081053542 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068366227 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067883406 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063984828 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065405666 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073120101 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074002094 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06354064 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063675318 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068503362 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072546098 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077376991 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06484538 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06548745 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073539378 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072265381 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063537091 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069113442 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063402108 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074094265 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082795615 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06580876 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07194455 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075764702 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078772149 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065696386 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063716739 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06586394 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072116224 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071483911 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066633434 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066728065 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085542963 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073386504 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06843377 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064455997 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072571768 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068249104 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080356657 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066315222 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066520951 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074744638 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075050002 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073021979 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076320964 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077490718 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072265799 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072005661 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065038098 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070465582 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065112707 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068544984 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066436752 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06600143 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069944943 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074727857 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067810806 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080947772 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079663146 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067800319 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060955384 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066509015 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06612163 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061605774 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064977149 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062088071 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064222365 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063376597 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064032312 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070971676 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07427341 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069288786 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065421822 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064445916 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062474851 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074229728 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071836964 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070593992 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062696121 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.201337962 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067083747 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075692763 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069547966 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06883772 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073482217 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073307968 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072204881 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064098912 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077892159 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065542224 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072472511 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068776925 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066319873 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06669063 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073868509 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070404644 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066930388 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07259593 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072804398 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068469177 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064197393 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063611476 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07545604 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064687217 seconds)
  done (took 43.132278289 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100666128 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063974466 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062833154 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06421912 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074575471 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065533386 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064397146 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065832268 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06571655 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067546503 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06440613 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064505907 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071830061 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080392119 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074716198 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068709342 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065027639 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065493177 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065420464 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065679625 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07221164 seconds)
  done (took 2.722005341 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070686953 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.0775336 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075332628 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081510493 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073508555 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069615187 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077298716 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069332762 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07799621 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075366006 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078056764 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06992687 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07473619 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075477196 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075255452 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06960087 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077849226 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092015823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069287206 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077122545 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06955705 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076984416 seconds)
  done (took 2.91217168 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064116952 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062873987 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069916171 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062538697 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064565682 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063200521 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068063805 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063910637 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068288506 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067437156 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067329756 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067645104 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071852034 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063679087 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068526837 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063266008 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109796846 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067810136 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065483371 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066090534 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063346244 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072355429 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064053768 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063622651 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067447858 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067800367 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06557542 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062993596 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064808545 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067190933 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064668768 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06278003 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071352178 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070903504 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067432393 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067856974 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064846675 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064679984 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063649946 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063741564 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07101912 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063713193 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067959137 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071784397 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063209569 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063243706 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071792364 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064974272 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062838269 seconds)
  done (took 4.566192819 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074251828 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112604313 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070057897 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093002538 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07814312 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071086551 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069784816 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094131212 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065182335 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066073427 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079920084 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079912553 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067759293 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069306794 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072152612 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067137729 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068090361 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066384964 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070264414 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066856238 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070491718 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071567915 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078760162 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07888064 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068310182 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066101516 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066511374 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06864111 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078718566 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071004599 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068697267 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069387127 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078994596 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07229012 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066264511 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066938611 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079783067 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066746717 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067136556 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065294761 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066662747 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068330614 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071357748 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079880111 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067217079 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072064355 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067649629 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06514274 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079004686 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06684491 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072256299 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080055699 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068275241 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067493371 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068430577 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079460286 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067644531 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065351341 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066237584 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076550695 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0633629 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066417003 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077126755 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066878544 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070953372 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080043564 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072504594 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06852949 seconds)
  done (took 6.319805385 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072876475 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094407917 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079917335 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079030864 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075451287 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075161278 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075528574 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075857279 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075456413 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078985831 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075416737 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117162811 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071537149 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077021826 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075400945 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075228987 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075575164 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075306573 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075479908 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075098268 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075667815 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081408251 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075151068 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081595193 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07850267 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071236133 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074798625 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074356355 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07913115 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073114267 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07624981 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072908068 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075165378 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081175302 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078509945 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074739104 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064773207 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074978321 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075114936 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074964797 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070701863 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081204472 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075144988 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070712242 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075198051 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075278049 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08134775 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078567021 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076950018 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078939003 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075231006 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081779918 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075193298 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075178241 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082253961 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084042492 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081151513 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081287805 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074812814 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08114291 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081490751 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084600356 seconds)
  done (took 6.114940222 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078150992 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069919223 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081045187 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061726288 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062990406 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074305183 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063485864 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063423859 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072473451 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075001655 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07461853 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07407468 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076417401 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074164385 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073220518 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07514216 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072326727 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073871387 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072354192 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074505747 seconds)
  done (took 2.748248835 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075987057 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081101836 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067398353 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0716747 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067213025 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071627388 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067229379 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06776344 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068833377 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069020957 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073222754 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073192414 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068030764 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073999966 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075233628 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073922096 seconds)
  done (took 2.436135659 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083173824 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070183563 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077937287 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063552637 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067424711 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062319376 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064286805 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06378823 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063731479 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078241439 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06425451 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075719941 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064274604 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063360921 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062832951 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069096327 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063448138 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064119244 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063336562 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077115889 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071961683 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066164489 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069089517 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065016101 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071227741 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072708708 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066640695 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068955255 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065108162 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065391363 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071277414 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070833989 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063514308 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064203318 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062736939 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063105844 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063458311 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063462389 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06906285 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082216043 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062377648 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068529072 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063353856 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064619411 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063002165 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065322091 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064214292 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070887609 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065062979 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070482715 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064921487 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067346982 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065562438 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072935516 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067857559 seconds)
  done (took 5.005604944 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078874313 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067861257 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062454623 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061654863 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066994015 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06776128 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067205816 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067376461 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068424404 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061984085 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068366428 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067541826 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06887812 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067550682 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068496245 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068354273 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061935631 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067684278 seconds)
  done (took 2.51565872 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072736867 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067018296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072326563 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068888724 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068525394 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068425325 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06369069 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063704666 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063896523 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068527608 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068630919 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068241515 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063173223 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066499317 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066810471 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067081038 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067427495 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063989819 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068353864 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0637266 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068190978 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063907216 seconds)
  done (took 2.768727368 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096018375 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08370012 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138905018 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079453085 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087668678 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074561498 seconds)
  done (took 1.858275217 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093031273 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098151167 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068293803 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069551787 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074819149 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072272517 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072199107 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072958099 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076542688 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077420229 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072178702 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077431659 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076754829 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079254279 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074720847 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074007964 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071526368 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073443391 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067146455 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07973061 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070376462 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074777799 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070835322 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070137261 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070286587 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076893814 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074762182 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075692137 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070236639 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075072338 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072556394 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07078457 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075199607 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075282008 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067448779 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075121248 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071066681 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080589033 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072665697 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07714596 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069108617 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075017477 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076871129 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076316898 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077265558 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072637363 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07596789 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072192935 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072632489 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082563795 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074229111 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078762209 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07532533 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076489512 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07662603 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08401129 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077045869 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078468953 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074694947 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077311104 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078785119 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074436209 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078528607 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077279662 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07437243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07700684 seconds)
  done (took 6.274758946 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104089324 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067404748 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072775465 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077286528 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078528205 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072785907 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072713057 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07254349 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072509576 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069779365 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108182737 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073232023 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079274772 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079089585 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072814966 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072750565 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072697412 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079046478 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07013095 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084513737 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072686161 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07920878 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079057998 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078832716 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077350114 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074897905 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072700698 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072574661 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072673024 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072256597 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07613126 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072281038 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078638782 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069355223 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078896681 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072755656 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072667538 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076198622 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072424324 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074644826 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079259515 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08196749 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072690489 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072345396 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077929588 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072678605 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072015548 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06935296 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072665235 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069112072 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076907443 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077206777 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077516134 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078824886 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072610606 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072619622 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072541485 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072938936 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072726367 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074752901 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081127389 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072644768 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083747815 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072733629 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073116572 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078836438 seconds)
  done (took 6.320713908 seconds)
done (took 128.777270418 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213697708 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185311025 seconds)
  done (took 1.687069977 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074035682 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105370595 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082460312 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135839492 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071492863 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105175829 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104065422 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083779029 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071246961 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071159204 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071526561 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074131698 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136496785 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071802288 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07179339 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074213783 seconds)
  done (took 2.711040801 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105213505 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.166442875 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108784049 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069033981 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104109879 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077094816 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069542329 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082884537 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075611868 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071286387 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077061809 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075100205 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072361469 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080425824 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078141332 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079358509 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07247452 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079367088 seconds)
  done (took 2.854273531 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103097915 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093473091 seconds)
  done (took 1.510109276 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.177494558 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13653705 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205084574 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344278838 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153292219 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.420288669 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.139961612 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140323017 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114018066 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135618556 seconds)
  done (took 3.274183692 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104449731 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168713799 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293010732 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120222323 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076297699 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090791296 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121811193 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081949949 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083348096 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08367223 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083219082 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078439081 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103039806 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076551773 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075856865 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07839047 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106306076 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074829166 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077561545 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079494054 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105842818 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070391634 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076675206 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074779343 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08096875 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080694022 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071801063 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071165924 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078931783 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07655257 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079949749 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087022456 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080334967 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105209224 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073913657 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106102171 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078477509 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076356469 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075837275 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076328883 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079779481 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079655849 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078075936 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077870838 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07083809 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077998975 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070983025 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069499559 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079923183 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070785415 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079710622 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078745176 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105117157 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070899121 seconds)
  done (took 6.106833091 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107452796 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107604264 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070700366 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115791885 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107163349 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072333137 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108108499 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10174985 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109007579 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073484581 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071109963 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072725107 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082388482 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086488196 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119668912 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108389068 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073464737 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072392827 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110583618 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110905871 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071864519 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102512565 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098656664 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107024701 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068759075 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07046846 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069212661 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071171871 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075982664 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077088225 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069495448 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078971776 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083494402 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077580308 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068111633 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068922582 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06914465 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078130361 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078506352 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078098233 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076184781 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067883819 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068844395 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069956568 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069854787 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068229827 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077816445 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078636008 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076617439 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06917989 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070122143 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068684362 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069909072 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078581756 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078477786 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081918032 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07975348 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069240024 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068617164 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071605718 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079041946 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077858202 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077794486 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069872274 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078705097 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068748723 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07929599 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0818598 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069014908 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072959054 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069021856 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068546749 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069745623 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076048271 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076506098 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070445553 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069074873 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06867626 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078596557 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076684009 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068641651 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075748094 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067934169 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068637049 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070251478 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070784089 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076039676 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077978325 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070602274 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069109438 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068923778 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068756658 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067720167 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075503804 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07779511 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077033908 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076626944 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069644824 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077074667 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076197074 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069513307 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076536745 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068435562 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070004606 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06902644 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076108455 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07499844 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077437753 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068511524 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068594284 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075540173 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077523182 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068470001 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07551614 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077346583 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074915101 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06761939 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077961214 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067777251 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076413359 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067657517 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076465554 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.201349189 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078864262 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070195325 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069541597 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069186956 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077899488 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071354437 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071026953 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072532588 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071534114 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07885223 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081229662 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071134747 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0765714 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077106891 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070863237 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077366922 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070327935 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078347557 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070645997 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072572029 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071098247 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083247559 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072261735 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071003003 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071553745 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081105741 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069852079 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079703465 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076787159 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068331787 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080776979 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079061275 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076229594 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078902281 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070891759 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069220172 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069177056 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069884383 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077820236 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077872248 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070522979 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069061606 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077175375 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082200789 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070613965 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079493232 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079344959 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079086539 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07021767 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069401098 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079650877 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079464592 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076884296 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077670858 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077372134 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069712314 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076859898 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077420925 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069599975 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082835504 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069339059 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08112995 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077191182 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075652534 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078264965 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079056672 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078792237 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079229477 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081385231 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068591755 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069460015 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07761289 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069104709 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069081384 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07710814 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070839719 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07065477 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081383257 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069580041 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078670768 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068735757 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078064076 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068373765 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071500474 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084967411 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069625811 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070348364 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077475608 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06928226 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076245055 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079335251 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076329267 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068945041 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073265661 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077842328 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077778025 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069298563 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06884354 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070877346 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076104465 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075637206 seconds)
  done (took 18.513209205 seconds)
done (took 37.981739278 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204322893 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152573868 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182410959 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114258003 seconds)
  done (took 2.063081643 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107383286 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097356292 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087520977 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065942975 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.092980509 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065816976 seconds)
  done (took 1.860319994 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284473402 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193941108 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177057516 seconds)
  done (took 1.995040651 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208018077 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188792774 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457489631 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281889704 seconds)
  done (took 2.572365787 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139349544 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081900588 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064641449 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082523952 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122390937 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.147909499 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092150353 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117076391 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075495326 seconds)
  done (took 2.318465158 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145024976 seconds)
done (took 12.315092322 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.155584094 seconds)
    (2/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.214067516 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.105408803 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072572947 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.12889548 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069023659 seconds)
    (7/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.210008027 seconds)
    (8/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077568036 seconds)
    (9/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.167088845 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076692116 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104432204 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102395172 seconds)
    (13/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090573608 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101766119 seconds)
    (15/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076397552 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.198971425 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.432186682 seconds)
    (18/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17838099 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132215127 seconds)
    (20/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.163812697 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.101118994 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.198249862 seconds)
    (23/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.17538495 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074707943 seconds)
    (25/309) benchmarking ("sort", Float64, false)...
    done (took 0.131964548 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.169734864 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074720998 seconds)
    (28/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075843329 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.242293197 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065959932 seconds)
    (31/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074651915 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084267965 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134760701 seconds)
    (34/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.179637447 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074753685 seconds)
    (36/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.201728288 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065302748 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076082372 seconds)
    (39/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077976416 seconds)
    (40/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065514782 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075045285 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072935952 seconds)
    (43/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075971206 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.100892636 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072574705 seconds)
    (46/309) benchmarking ("sort", Bool, false)...
    done (took 0.156511363 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090126689 seconds)
    (48/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072541673 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170845356 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 0.066753674 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065751563 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066121957 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118836651 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08286438 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.235884394 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116885102 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065262473 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.0743145 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.098547617 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.211130204 seconds)
    (61/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.176496768 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064931743 seconds)
    (63/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.212042501 seconds)
    (64/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189701131 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.17901411 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072255842 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117862881 seconds)
    (68/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076799791 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115559941 seconds)
    (70/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074143844 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06628701 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.193136582 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066045295 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065409685 seconds)
    (75/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.078137631 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107896202 seconds)
    (77/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.14042096 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074545007 seconds)
    (79/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074362488 seconds)
    (80/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.136630125 seconds)
    (81/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.198771994 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.175636256 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066645881 seconds)
    (84/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.166212424 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067503386 seconds)
    (86/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073161713 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172566838 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073435354 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084416946 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085333872 seconds)
    (91/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072590561 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074332417 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.377796263 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07656059 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068336976 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068905738 seconds)
    (97/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079082939 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066024312 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07347234 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.228190769 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.222077026 seconds)
    (102/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.106834786 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.173910382 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.23357042 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.196429518 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066285637 seconds)
    (107/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073892958 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090932331 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066372798 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066381081 seconds)
    (111/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077982223 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068466793 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074764963 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.174090004 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073256301 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067507014 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075082016 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065401 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.170961692 seconds)
    (120/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.135661997 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089616988 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088591695 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.096134938 seconds)
    (124/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075508958 seconds)
    (125/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06652096 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089358256 seconds)
    (127/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.134945321 seconds)
    (128/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07639915 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07287079 seconds)
    (130/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065925502 seconds)
    (131/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066288613 seconds)
    (132/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079950751 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075710204 seconds)
    (134/309) benchmarking ("sort", Float32, false)...
    done (took 0.132973776 seconds)
    (135/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07511178 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120755312 seconds)
    (137/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120300586 seconds)
    (138/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06693926 seconds)
    (139/309) benchmarking ("sort", Int8, false)...
    done (took 0.157625255 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074250595 seconds)
    (141/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.140564322 seconds)
    (142/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067906259 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089432785 seconds)
    (144/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.231034862 seconds)
    (145/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070558016 seconds)
    (146/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066939645 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073751317 seconds)
    (148/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.172941939 seconds)
    (149/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072648382 seconds)
    (150/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.165082537 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074013045 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06960126 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073108905 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066939719 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22742549 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067159008 seconds)
    (157/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178143522 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064831217 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065077461 seconds)
    (160/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071831333 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065610573 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069422323 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120943872 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.077251441 seconds)
    (165/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06664025 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140074297 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065780098 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133241767 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066587459 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090874028 seconds)
    (171/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065267594 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086485917 seconds)
    (173/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.124735443 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067211604 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065981655 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067578831 seconds)
    (177/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.129804983 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066695699 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065890434 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179129428 seconds)
    (181/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.169277409 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065794794 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070118943 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125968135 seconds)
    (185/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066446581 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142377707 seconds)
    (187/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065680717 seconds)
    (188/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06582622 seconds)
    (189/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.124163617 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07331397 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065744058 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.086077668 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065371041 seconds)
    (194/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071721522 seconds)
    (195/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064831997 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073643016 seconds)
    (197/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06531529 seconds)
    (198/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.068364508 seconds)
    (199/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077662833 seconds)
    (200/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073354712 seconds)
    (201/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065844559 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072429119 seconds)
    (203/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066116312 seconds)
    (204/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.065511553 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130044487 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065749617 seconds)
    (207/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070088018 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065335699 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071607801 seconds)
    (210/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078210502 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068320117 seconds)
    (212/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06972403 seconds)
    (213/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065748473 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074385673 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.229206854 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140629291 seconds)
    (217/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067318696 seconds)
    (218/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068078626 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170503126 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091620196 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068504967 seconds)
    (222/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075430167 seconds)
    (223/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071142019 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068042916 seconds)
    (225/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073847299 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.070374113 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089821405 seconds)
    (228/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069363975 seconds)
    (229/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066070284 seconds)
    (230/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.125357451 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065914337 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.169722209 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08970674 seconds)
    (234/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.178617326 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170728619 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070081984 seconds)
    (237/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065560754 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066895023 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092243826 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066000837 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.078996872 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068086007 seconds)
    (243/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065453071 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068504431 seconds)
    (245/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094223458 seconds)
    (246/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06895287 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.06929472 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065266144 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.19224505 seconds)
    (250/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.06624238 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13239768 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093093987 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067217651 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080533709 seconds)
    (255/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078025071 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143558629 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067165887 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075103067 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121114332 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.07808592 seconds)
    (261/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066767548 seconds)
    (262/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070391537 seconds)
    (263/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072665219 seconds)
    (264/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066492831 seconds)
    (265/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079681653 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07418007 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066479636 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078690722 seconds)
    (269/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.126888657 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066585374 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066952853 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066384173 seconds)
    (273/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.138960438 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.0662699 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.0661756 seconds)
    (276/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079496123 seconds)
    (277/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074359683 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090823905 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066455321 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065621406 seconds)
    (281/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09156391 seconds)
    (282/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06717659 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078174257 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072560591 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123069058 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066677616 seconds)
    (287/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066766675 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074282488 seconds)
    (289/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.087487574 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065969748 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122723121 seconds)
    (292/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067188746 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088056109 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133102644 seconds)
    (295/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068479687 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136160527 seconds)
    (297/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067082152 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073210068 seconds)
    (299/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.078433761 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066932499 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066463406 seconds)
    (302/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066241203 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066478755 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066227649 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111207193 seconds)
    (306/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06635335 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065253545 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136026623 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089540062 seconds)
  done (took 32.811234934 seconds)
done (took 34.165466506 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083467992 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097138845 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073575686 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092782613 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080599205 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094690791 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073311336 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078562166 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080738058 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079820729 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078462896 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072269254 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075082789 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075130315 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073226165 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096299456 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.0801055 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074522442 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073802932 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065581359 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074533846 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066254317 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065768641 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071928726 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077217425 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073419129 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075463261 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075547081 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066575335 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066358198 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071370676 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074757917 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06598947 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078328683 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074761261 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07483977 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07560685 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078116882 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065524473 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066464912 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07617338 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066052128 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.0738704 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072369604 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071230691 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072680151 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074011317 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078027209 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096921319 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070340441 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076022645 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076521832 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077469526 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071175175 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071184615 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074056636 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07208987 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096247266 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074165587 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070287254 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075793409 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075292531 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072162909 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07387922 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074228071 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076658974 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07792126 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072306869 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076756327 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072730907 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066017664 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074284991 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070447933 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065724634 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076705004 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078290426 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06535082 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070318296 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073746637 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073914195 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065713508 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07268913 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065344646 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070857808 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070078402 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072087105 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070819947 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07291047 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065375653 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074201231 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07273398 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073694948 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065209449 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078704309 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065723355 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071773395 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066102841 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066114609 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065436356 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071239022 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065674481 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07015344 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074298935 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065232708 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070880123 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079064312 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065692251 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072973249 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065491946 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065941492 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076946544 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075262352 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066115815 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070179901 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065070842 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070889226 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065201492 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065385069 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06510675 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065397117 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069933952 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06546149 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070409669 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070460289 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077576677 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065295439 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070523559 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069689118 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06532166 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071987155 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06548471 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064957192 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065135026 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078217653 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070063868 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065560392 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070302363 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069454303 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072766284 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064810894 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073790761 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070911419 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069909891 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071245409 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064671503 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075352218 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068778576 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069058002 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064392056 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064689226 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063743868 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064348027 seconds)
done (took 12.453920943 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069312618 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.116372117 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09176321 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092470188 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082189906 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066856038 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07427309 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091036222 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067895653 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.095702509 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088145201 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087815019 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108676185 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065392542 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066651866 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068140787 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067860186 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078001079 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093844128 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087951374 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.104619551 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066038568 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085703765 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087134237 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086191615 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091147939 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070353655 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069882164 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072031155 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092262493 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094551081 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071806075 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069511792 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.092225177 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.086215887 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079244053 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067421078 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.074954399 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067089724 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066715438 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068113169 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087484626 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07493304 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074955261 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068176523 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074383663 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068059791 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082215813 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087202625 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07486092 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081328546 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090071105 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070332331 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082397527 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066451079 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082049571 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075773735 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066911839 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066927335 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071637423 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066723506 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069469436 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077486781 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075175394 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071298642 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081468987 seconds)
  done (took 6.617688096 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084429591 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094191827 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083167089 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083498125 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066609501 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067218096 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06691964 seconds)
  done (took 1.991115213 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067442754 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089194906 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089773299 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090255657 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080980133 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09078651 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074414332 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067102974 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095173699 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06600212 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086697145 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096775033 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07041664 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078513734 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091433168 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067004035 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091262293 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067062042 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067663726 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090590504 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071663394 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093736413 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07827912 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067248651 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079399455 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067502058 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.0988698 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074582641 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068609863 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068020159 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068034766 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093013953 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078624941 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080720792 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068257677 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081883159 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080236366 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070139292 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077682435 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076418118 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07998087 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068091642 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06600538 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068239938 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069877841 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078735869 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065852048 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068227681 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068275527 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085874972 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065762102 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079199504 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070530522 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072717464 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072567606 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071846408 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075631919 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068227547 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086168644 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068182503 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083600357 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083005447 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079905121 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083298044 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.066758922 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078788017 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080293124 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067873383 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068648383 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068425346 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083131324 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070192144 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069053403 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078436901 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066795745 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090730896 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090858508 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066485076 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079906916 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068252684 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068391106 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078817421 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09065677 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072206353 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068022216 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07111908 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069373472 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070438868 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065907594 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071108118 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068482161 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072169248 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068116017 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070921004 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06914366 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083097486 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065963875 seconds)
  done (took 8.791798803 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069819176 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068234445 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06970878 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067443446 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067767353 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068004407 seconds)
  done (took 1.882494579 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090526783 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06768466 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080772205 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068417982 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103163342 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.082923544 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085185609 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078598802 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081058001 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079627305 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084126286 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086002117 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087346658 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072371552 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085298292 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071378117 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086000632 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075164397 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081594003 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072748366 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.083406271 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072210196 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072876451 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089213842 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073624376 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071146477 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079874616 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081661818 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081194879 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079662711 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07234184 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074456645 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077741579 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079639989 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085925465 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076784444 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06966569 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075292602 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070843878 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071169785 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085588618 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070535733 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070120401 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073681741 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076924509 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077187314 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074363454 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075899271 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082417943 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073875212 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07373313 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068392076 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07124894 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074114533 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074339826 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076771157 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07382292 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082935507 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.06950328 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074396507 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067528768 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071043274 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076371976 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071137039 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.074840258 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073686532 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074509277 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07010193 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069861215 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067569058 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073828718 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06768938 seconds)
  done (took 6.959762011 seconds)
done (took 27.706237384 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.515952907 seconds)
  done (took 1.945192975 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.612462373 seconds)
  done (took 2.069638357 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.540300124 seconds)
  done (took 7.99302278 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.380119933 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473028857 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.73796022 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133438969 seconds)
  done (took 3.2236903 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702897839 seconds)
  done (took 2.166640036 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234227895 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224283554 seconds)
  done (took 1.933159224 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346827599 seconds)
  done (took 1.804402393 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.079169564 seconds)
  done (took 2.535759604 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.233489488 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159279588 seconds)
  done (took 1.85240902 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.443181162 seconds)
  done (took 1.901956231 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.196005469 seconds)
  done (took 5.65685452 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22372514 seconds)
  done (took 1.717607109 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234993928 seconds)
  done (took 1.694524613 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.724031314 seconds)
  done (took 3.187000531 seconds)
done (took 41.149372232 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083445696 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085058652 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084815335 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081037612 seconds)
  done (took 1.77841796 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075090675 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070599445 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07516976 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070323311 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074311119 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070356046 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071972855 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073301547 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070165779 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.070751553 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070954606 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070497886 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07341418 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071875377 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069188402 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073831099 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07499134 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07086908 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073693303 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070735635 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068822116 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073345723 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073828644 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070003246 seconds)
  done (took 3.193445517 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078372766 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073266538 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075467288 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071472766 seconds)
  done (took 1.768497003 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077183455 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087493574 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.085544699 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07704529 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088089258 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083349652 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.066934582 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067137536 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068280861 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07628695 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06608745 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092343308 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085718065 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07628346 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078595514 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063649777 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065489495 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084904517 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077067451 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077428233 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068441683 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077205029 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066167423 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086348665 seconds)
  done (took 3.310100163 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080896622 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066183947 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080698455 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091387168 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092838829 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066534246 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079653019 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093206233 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135769756 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065960756 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071729222 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066044808 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103973653 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066360711 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080962025 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109089468 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112514799 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070267809 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098414649 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066152273 seconds)
  done (took 3.174397221 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083628554 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072532753 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070680401 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065737201 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076197816 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073089363 seconds)
  done (took 1.919078582 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068435232 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068013663 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067808928 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06716365 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072536104 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067216668 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066358945 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067945002 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067663083 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067637368 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066850071 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066214928 seconds)
  done (took 2.287187376 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.191184898 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06913598 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069474604 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066022567 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069975356 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066874695 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081889147 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067785836 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092864708 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067460651 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066847067 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068985407 seconds)
  done (took 2.452508533 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189691718 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073623631 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218702425 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143292543 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101347465 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108626947 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110416686 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107543537 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.131620247 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096558684 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151408326 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157631 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102260194 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128021452 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086881236 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.11835972 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142310611 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154231772 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099015477 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152937084 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13388726 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121474231 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140564843 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096086575 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100346837 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111932164 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071514116 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076580821 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157034366 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122654955 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134331166 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104031875 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089418315 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163188353 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160215765 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13047766 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140745676 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081452308 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117336703 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128191728 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191209183 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085843581 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147932529 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101112739 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076412526 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122773042 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108041488 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113031023 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.097978675 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085174222 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272733661 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172182241 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128174956 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083736558 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116282287 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105003643 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109295319 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113236255 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167533625 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149305729 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121164318 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069762783 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105931476 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14202755 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125824181 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103793781 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117568406 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089441571 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12302243 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147595613 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117379677 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134450641 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.1109785 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084181887 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114342585 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129092322 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119210378 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16007776 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117552418 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070849949 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113982886 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095172069 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077510425 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142551284 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073661399 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163495092 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095106123 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120120334 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124922423 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104033977 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104506728 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148307962 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132618921 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10045556 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084014695 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098554361 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113579607 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135304515 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083828825 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103073756 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107710078 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076661279 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125364468 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072413811 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114048368 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092629077 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112841345 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118465209 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076170726 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114076637 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244168697 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100534079 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122673544 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149137396 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085529597 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078838262 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156062808 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116312648 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100143349 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134121336 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148857927 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117740138 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094084153 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13738971 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162367464 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087419377 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151561084 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098494282 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081146534 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102246503 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116989873 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105523363 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118252873 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078670784 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114556488 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152621283 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072873422 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093346698 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126101512 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078945247 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078127502 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100573269 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09966901 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093548011 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097423161 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100574326 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128967246 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116784704 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101194192 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117273452 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093450513 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154254147 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084473931 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101492429 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099720532 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070347576 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125307269 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145790644 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076093611 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149394228 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115620575 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109589506 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112089221 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080763189 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128205593 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076605945 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070410669 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130593633 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107164906 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102647435 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.139101025 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254894815 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118977188 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115374726 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124262489 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122872549 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122584795 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103581427 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086914608 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110068374 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122899214 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071355561 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088342338 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080092269 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099285767 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091124565 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081718139 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131410578 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1149849 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106398601 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109827826 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092981535 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140504237 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076268418 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117238331 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11605929 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092010733 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144478222 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143343772 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125497031 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097051793 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128542096 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071469605 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072342142 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085671891 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116758883 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081457283 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080987263 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107846811 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140489172 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118658305 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12821471 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117653863 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110571139 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147724655 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071291871 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116580037 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134683346 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114827437 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101503606 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087726903 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094356341 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134082934 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099113425 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168656227 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107889205 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117205822 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146159085 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097886104 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076377244 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09862073 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12223953 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096060519 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.281950827 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097114875 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084899579 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104227315 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076630451 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095785489 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120197823 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112580733 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130946868 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107539753 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12464451 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076235851 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106932579 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11726505 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115313851 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081550726 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11141484 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155950406 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093696574 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110774478 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140855545 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076761308 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134470902 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161390259 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134601901 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08215331 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100545264 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115891895 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119737008 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112238237 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130516717 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100041336 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129728986 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10647082 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083129346 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08416747 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092284641 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09966152 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108710687 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100281513 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110145542 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09257723 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122226242 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098987276 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106346301 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112126051 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096701877 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092393231 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092721078 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162490985 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112133952 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15661039 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095729904 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.131977072 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148165292 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072531476 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075943855 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077367356 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128138063 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081093305 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12033027 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.105144683 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257239371 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118803637 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131537309 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094184832 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070328265 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105563886 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126230848 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117707 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09400865 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099870868 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148563743 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11476796 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076405206 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107660474 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11153891 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100295339 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162304854 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079365185 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104530474 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075114408 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077845302 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119449056 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14130278 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080796594 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100537182 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115363304 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106141884 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119224461 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09384221 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10642396 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125619141 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137695552 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120092002 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086965209 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106620946 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121369213 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143831476 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099814939 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097071833 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162754277 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141787396 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148478888 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084784519 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111646227 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108982744 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105319026 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129268272 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081383048 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149725178 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079804927 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125912647 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095828216 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085498521 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119420255 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106798517 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084164571 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133757155 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109424364 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079048888 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076440252 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254131358 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114641913 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099344225 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073080048 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131445514 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072829251 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128126249 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159793823 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078432936 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100817749 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092620778 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07971605 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098955313 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098274131 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083966227 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096564473 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161114107 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088169504 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13888479 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125392968 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105955751 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128739202 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100480032 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640381455 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07957787 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143797236 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110388174 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164811052 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095553333 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113260205 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106448025 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114498215 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133922334 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097898892 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177625224 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122474053 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112672663 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076617606 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097379574 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09862423 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085535944 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102391105 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108300903 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107988792 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09154152 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112103566 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115302592 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079979001 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093320007 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144917989 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109948102 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133453385 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128700449 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081573204 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111472099 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126979309 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077338347 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.111326155 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137998531 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248789828 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098128207 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081866729 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098380863 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162458422 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071578908 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148402402 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115380753 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107206314 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112259038 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106352129 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123114752 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099474984 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11607679 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090688031 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105062027 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144854206 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081098487 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077284748 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101147422 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105266663 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094801426 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094262624 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095727673 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141502255 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070753988 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094317535 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109487705 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135315899 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159384086 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.101887841 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081557479 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113023844 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113191398 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109106947 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11541745 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078859186 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078398426 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079376787 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098423909 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120133838 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109408519 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113626193 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104280778 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150065427 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081061058 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222576783 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093202183 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100799241 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087082714 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077824436 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093254342 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092264651 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099271312 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106788404 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162125584 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092309218 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087474605 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089514414 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072794262 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080544872 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117200991 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103535088 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110007882 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098472233 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079202446 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245460594 seconds)
  done (took 56.395730162 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103714928 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.07757263 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097964491 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145731831 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12138826 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199345523 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15027009 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188729444 seconds)
  done (took 2.643741388 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068770287 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093866905 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103388503 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082667355 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066928656 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06816491 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223663861 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080808947 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067140068 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090913672 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077533656 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068849241 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.439297472 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069288457 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067905949 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075998329 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067522213 seconds)
  done (took 3.373092871 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.380427166 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.606696448 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345386801 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075721069 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.980048332 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089096456 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.212661146 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137734326 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082487514 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53650203 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370008008 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132386687 seconds)
  done (took 18.525613692 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082191568 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075358349 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090401196 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090202152 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078299144 seconds)
  done (took 1.984157427 seconds)
done (took 104.291834989 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081130509 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.428411414 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069097548 seconds)
  done (took 2.09367041 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091128699 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089385052 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08884888 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086658104 seconds)
  done (took 1.936839388 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074897974 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076869623 seconds)
  done (took 1.725565161 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226183292 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174585463 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095540127 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082588095 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081364255 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080623597 seconds)
  done (took 1.820945776 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073189773 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07272057 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073030269 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074160642 seconds)
  done (took 1.863792026 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068026939 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067090153 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069462309 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071781522 seconds)
  done (took 1.853648962 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084455647 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084883716 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07950731 seconds)
  done (took 1.824750519 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101625558 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090628741 seconds)
  done (took 1.769239016 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081404308 seconds)
  done (took 1.656622939 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088909615 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.098822908 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131707541 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113976718 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13775222 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113619683 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084594219 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085312237 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078680736 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085577433 seconds)
  done (took 2.593700604 seconds)
done (took 21.283924769 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078610829 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365543686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359893975 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090766447 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668133549 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357125687 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970686433 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092181349 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139780876 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068197875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084854897 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648209969 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960960161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323693172 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.947933243 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322856374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648962338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069453958 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068070845 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068203459 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.9556971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068380071 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068569059 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069521208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650753004 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373843572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069377502 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322099727 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069272798 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07097955 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356640946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069357929 seconds)
  done (took 16.033829307 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070389143 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121048446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073145481 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084423274 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070787001 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070690105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07196024 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069451722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120533891 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068657493 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085778697 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068087658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072094118 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069521085 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088047249 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069301807 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069748586 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070202679 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069885705 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070385686 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087897627 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069245319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069706686 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069961085 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069293182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081433155 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072365979 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069615638 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070019797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071312798 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072228048 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070567836 seconds)
  done (took 4.016756053 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116025938 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125081975 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074238783 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106622867 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111859901 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070984448 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146723276 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093375088 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127856326 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069090984 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085636217 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068720722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103303292 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069664823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089283663 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070193754 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070409831 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070629526 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069664307 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069835011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088916596 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069306352 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069387961 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07035491 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07015164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083438448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069707548 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069758248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069829547 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071402564 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073423403 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070435015 seconds)
  done (took 4.275904741 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071076466 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073767123 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080401266 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08113123 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067219489 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07008935 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071322257 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067403561 seconds)
  done (took 2.175855424 seconds)
done (took 28.084856492 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078780455 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068866072 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07170303 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087473771 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073889253 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079391517 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065311203 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074604095 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072366802 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072213117 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073662876 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067274333 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070670266 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065285121 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072557513 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066937447 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080949829 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07103179 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08064853 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080907051 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06988919 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073065955 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075441594 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08085438 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080904311 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080714084 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076826697 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072903397 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068302105 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070780306 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070262371 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079177165 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.0807785 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080800862 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067749268 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067331588 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07157305 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068644015 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082224755 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076443933 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069247181 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.0760762 seconds)
  done (took 4.680772261 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085066564 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089004191 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082993848 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079477882 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090047873 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083004984 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086226042 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078045077 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077921208 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085716543 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074444163 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081126658 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078861231 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072637546 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077310378 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074292419 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079254572 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073777405 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077366347 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078364582 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087080311 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072882446 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087509527 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079562645 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075073713 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080238405 seconds)
  done (took 3.688511711 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073855206 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086211265 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092968174 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144478214 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110875697 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079659206 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081729731 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091928401 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096125559 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068870338 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072824529 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092366367 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09291224 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074675774 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068309622 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08436841 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084620787 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07000819 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074970813 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096892786 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088666891 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085615504 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093331692 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08433322 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06722462 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070038188 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072800849 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083635014 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070332929 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079072122 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070629689 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074199162 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069200301 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078082323 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070581326 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067225753 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09206513 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07898835 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080334028 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069192291 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077560839 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068865925 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093182026 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128314573 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067442516 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072351389 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0717786 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079334233 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067208171 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095140487 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079952872 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067709514 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068509143 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067060289 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067849135 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070868752 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069898995 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070863475 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077916098 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075264056 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089867993 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072945976 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085237634 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067787003 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078013721 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067620121 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06957766 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066771945 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096237563 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069374378 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111310547 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069370965 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067154838 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079096648 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078085163 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074169743 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067785422 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085717739 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079301407 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072058618 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075900363 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071330317 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07150688 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097991966 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068181088 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067861162 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067125042 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071524274 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072233223 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068818079 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079690981 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067505919 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071523147 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085748023 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067834675 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069034278 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07193644 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070434803 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067536014 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078657675 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071873854 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069283029 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078592102 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06878005 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071437296 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080842528 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074482302 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066745512 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07023791 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071261526 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069190915 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069711344 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071401748 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070034913 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07465984 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074252187 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073844154 seconds)
  done (took 10.661751765 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164864518 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156650796 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07149544 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148184149 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077046417 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080591935 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152154953 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095813428 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069809826 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070598902 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069201767 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109958288 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105814383 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116504438 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082092133 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070114365 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092230866 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115269628 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154298047 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147560849 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091675655 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077541453 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071917863 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070704407 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07093908 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07868466 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086133325 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078021403 seconds)
  done (took 4.491633346 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078470569 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104096331 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073503786 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091546725 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088480878 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069679161 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071035646 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070597545 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085511184 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078111995 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069566424 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074810752 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074072125 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072568244 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070224742 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076080459 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076767274 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068633656 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073265607 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075174079 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079181979 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093912112 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073162083 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06919676 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072096597 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069460258 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07764075 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081475921 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069301095 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104984697 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067095598 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074227908 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08632577 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070039026 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068825632 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06977547 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069994162 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069729007 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070935434 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068152455 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067930253 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072963788 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068498561 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077667939 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082352153 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071204066 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071584783 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.0723525 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07242593 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066807491 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072390369 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071939358 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072194225 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076543181 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073369568 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072603426 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070179891 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096131011 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075231449 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068562704 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068536591 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067964771 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07143684 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078480524 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084603769 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071709063 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067899878 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069199415 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081995039 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082128373 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068693285 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073814267 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066710412 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071478351 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072182621 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072289517 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070148389 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067876299 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069046763 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073683315 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070742184 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068883924 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068688648 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072169635 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067355634 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068307963 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069555107 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070888888 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077585281 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068676616 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072872779 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070145192 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068262162 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071952398 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074919244 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072292943 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080560391 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080074473 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069971602 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06780894 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082911394 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072635912 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068755789 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074799986 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073970154 seconds)
  done (took 9.404832472 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091675314 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070012138 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085399943 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093027195 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079407556 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07512601 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079294954 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069262962 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085235847 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074011888 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076603283 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067844849 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079903626 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078879893 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069715017 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080133878 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072438571 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086776093 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083890399 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067633407 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077915118 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081799862 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081499115 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083831578 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083269872 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084389513 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081228208 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078848018 seconds)
  done (took 3.864454369 seconds)
done (took 38.381740671 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.683441647 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.846502036 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.667005335 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.882918574 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.94457221 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.680355698 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.749393947 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.677643675 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.807697943 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.707441108 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.99169151 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.894157522 seconds)
done (took 64.276937489 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.6994806 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.813641482 seconds)
    (2/2) benchmarking "String"...
    done (took 1.914303333 seconds)
  done (took 5.327572505 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.857801739 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.325880046 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.893525756 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.662174961 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.666821626 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.914434601 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.435834354 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.108528868 seconds)
  done (took 29.607794439 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.852854894 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.885051628 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.363191831 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.402404213 seconds)
  done (took 15.150813742 seconds)
done (took 61.338734588 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.708519042 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.688869994 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.697906395 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.659220178 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.754899548 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.681275917 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.771774089 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.907391642 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.662089882 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.669269297 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.665201287 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.150020233 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.663315161 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.762342129 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.661720079 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.663033082 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.7039781 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.108651714 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.815320675 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.671682309 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.676952129 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.69735819 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.66345373 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.801679461 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.710313747 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.664917822 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.075047596 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.670205911 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.272796705 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.665357102 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.700578804 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.971348113 seconds)
  done (took 201.235893523 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.662447996 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.696273078 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.776590204 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.700666112 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.196982688 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.852806937 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.760047762 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.251319706 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.665638543 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.678765611 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.935758715 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.662721891 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.971811382 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.658956861 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.699068784 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.698502497 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.895806711 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.967897233 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.702522474 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.808067168 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.674950738 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.762879902 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.729709407 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.914183513 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.700473579 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.735982981 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.67473969 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.683605144 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.846850514 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.873162184 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.66786538 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.673906226 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.855427725 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.534825837 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.690509689 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.688226186 seconds)
  done (took 166.551896296 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.846589624 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.665374092 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.66403707 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.667113876 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.669273993 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.664777753 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.787567174 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790318108 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.323576834 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.298728427 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.72642094 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.664246141 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.433139175 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.665787778 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.728815176 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.678276861 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.66667644 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.678844578 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.690597465 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.6671671 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.665498936 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787983154 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.67900136 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.663792278 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.679648947 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.665152575 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.670249651 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.049570329 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.664828638 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.894224708 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.668569839 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.670739848 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.904592351 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.670724601 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.672426714 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.495374719 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.612361483 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.670504795 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.750489037 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.671454755 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.676534007 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.668927929 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.887620717 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.671255016 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.671221572 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.670349069 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.670254161 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.77944683 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.671270898 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.794402762 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.673319882 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.148325235 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.669996812 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.669954305 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.674038115 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.862707986 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.501465775 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.670854572 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.674145164 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.671272272 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.671248793 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.684149332 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.873712544 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.744600642 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.673391853 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.671980071 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.675517154 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.669970211 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.73855178 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.673694366 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.459862079 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.687418023 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.902418998 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793665878 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.675015204 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736977907 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762644398 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.67277006 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.671216226 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.672660924 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.672457801 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.752110533 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.673464282 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.791739272 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.689296823 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.672510242 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.733387099 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.742096476 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.673568815 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.491551342 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.673671093 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.672231177 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.925000356 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.674457999 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.738311007 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.675366882 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.676502343 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.762799853 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794898935 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.675668157 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.39837295 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.675974001 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.891215887 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.759780933 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.674068067 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.790634094 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.672416024 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.753917754 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.686566761 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.675965094 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.714754011 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.674016408 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.686664891 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.676063 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.048147031 seconds)
  done (took 389.389202827 seconds)
done (took 760.684387494 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.301397646 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.265348846 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.373655784 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.28647395 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.260612235 seconds)
  done (took 13.098181189 seconds)
done (took 14.710559293 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.760916105 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.759957063 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.695111469 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.755943784 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.691370094 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.75451321 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.739442953 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.69657751 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.723991599 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.697823148 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.725452962 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.696406865 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.68335405 seconds)
  done (took 23.995090329 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.89494946 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.894643116 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.738981925 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.89162935 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.714212744 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.895599022 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.841560579 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.814093337 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.811493392 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.683747414 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.683130247 seconds)
  done (took 21.477019531 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.896068514 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.902902421 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.744824923 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.893874368 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.718348051 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.89440018 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.827052305 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.817821435 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.814276802 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.685080704 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.683442454 seconds)
  done (took 21.489478652 seconds)
done (took 68.57529803 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.679108707 seconds)
  done (took 3.291880175 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.697726035 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.852739914 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.679519647 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.678654842 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.678578746 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.681990578 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.679296074 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.679179076 seconds)
  done (took 15.241245009 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.679827953 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.679378756 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.679265807 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.678146664 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.679529385 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.679404554 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.679532954 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.679486462 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.679325689 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.67940675 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.679590924 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.680154948 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.68063817 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.679405502 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.678890813 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.679382749 seconds)
  done (took 28.486903645 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.681532273 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.679369162 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.680213378 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.679188308 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.679932104 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.679293757 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.680664558 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.679698084 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.679634212 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.679303836 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.681581645 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.680200919 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.680997318 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.679481648 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.67907938 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.681571621 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.680798974 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.679929796 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.685604886 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.680557704 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.680929255 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.680169901 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.680846629 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.680799934 seconds)
  done (took 41.947771064 seconds)
done (took 90.581682959 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.445174277 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.298750066 seconds)
  done (took 9.359391076 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.684746322 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.679346059 seconds)
  done (took 5.049908916 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.681242193 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.681641555 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.681800443 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.681025683 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.680830732 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.681515802 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.681143918 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.680775246 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.681814851 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.682245166 seconds)
  done (took 18.429630689 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.682099635 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.681835614 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.682402463 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.6831731 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.683605087 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.681999409 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.682966832 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.683065582 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.6840798 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.682918674 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.681150995 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.681345173 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.681620496 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.681326482 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.682545686 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.681827036 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.680208806 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.682869066 seconds)
  done (took 31.897153379 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.680909749 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.683627141 seconds)
  done (took 4.981686445 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.682023718 seconds)
    (2/7) benchmarking "second"...
    done (took 1.68243109 seconds)
    (3/7) benchmarking "month"...
    done (took 1.683089679 seconds)
    (4/7) benchmarking "year"...
    done (took 1.682069756 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.683190003 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.681877112 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.681752615 seconds)
  done (took 13.393366004 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.683697019 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.831441643 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.894594426 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.365127448 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.684363287 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.685772952 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.588398384 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.686207984 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.686798531 seconds)
  done (took 18.72347528 seconds)
done (took 103.450260875 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.530130774 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.679585259 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.945050921 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.737179444 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.73848985 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.973937115 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.707566538 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.969752596 seconds)
done (took 41.900311395 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.694733806 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.39119293 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.453047773 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.712654917 seconds)
  done (took 15.173985063 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.679572677 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.982037451 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.701841931 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.512511499 seconds)
  done (took 21.498962053 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.043063011 seconds)
    (2/2) benchmarking "read"...
    done (took 2.026128237 seconds)
  done (took 5.692068796 seconds)
done (took 50.680960341 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.68396764 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.684164479 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.682702378 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.682744848 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.68320337 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.684514989 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.683732991 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.684590732 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.683202775 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.684368544 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.683520714 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.682988003 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.683429393 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.684549917 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684770589 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.683919147 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.684290478 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.684858012 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.683545594 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.685142169 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.684623825 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.684482119 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.685221032 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.683659615 seconds)
  done (took 42.034302938 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.685595337 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.684911722 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.684629025 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.685161172 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.685632314 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.685094906 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.685672575 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.684971148 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.684837788 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.685100434 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.684449684 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.68529675 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.684758948 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.686231964 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.685847786 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.685684497 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.685319836 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685810785 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68547896 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.685414465 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.684996946 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686586527 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.686166127 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.686564012 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.686740153 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.686586308 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.684523365 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.686768489 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.687392446 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.686229873 seconds)
  done (took 52.188483743 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.687253135 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.685803885 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.686502282 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.686662521 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.686299487 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.686601491 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.686321654 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.687572759 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.686798985 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.686564195 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.68811003 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.686580135 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.687191686 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.686091341 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.686823953 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.686466359 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.686528259 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.687511041 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.686086189 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.688068181 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.687320608 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.688477354 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.687507196 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.687858482 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.687123474 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.689144562 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.687649929 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.686727009 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.688502743 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.69092793 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.687925337 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.688672565 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.687492184 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.687754359 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.687007005 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.688184294 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.687573644 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.687503591 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.687698461 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.687384726 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.688086454 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.688199068 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.688627667 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.688374062 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.688370935 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.688367753 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.688303164 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.688849046 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.688451922 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.688762038 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.688594054 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.687353967 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.68779585 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.68908808 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.688732983 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.688597838 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.689099889 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.689487815 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.688655906 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.688619344 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.689051281 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.688405829 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.690042358 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.688309772 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.68950581 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.689551274 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.69030085 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.689965988 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.689015027 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.689062826 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.689188638 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.690875499 seconds)
  done (took 123.160078485 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.689586315 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.688688882 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.689732806 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.689676729 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.69136004 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.690160418 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.693483437 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690820725 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69186783 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.691325945 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692102489 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.690147243 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69055523 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.689550667 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.690353356 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.690480887 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.690317489 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.689949368 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.689672526 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.69020902 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.68940828 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.689672205 seconds)
  done (took 38.811753748 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.689533782 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.689764212 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.691002089 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.69051904 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.68977107 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.690844855 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.69109838 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.690203393 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.691446513 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.690990257 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692187677 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690305618 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.692847948 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.690760344 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.69076271 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.690982572 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.691076687 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.692365094 seconds)
  done (took 32.06157307 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.691927489 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.691456959 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.691833158 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.691226084 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.690693175 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.692274308 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690589727 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.692069434 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.690011192 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.692533419 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.691540545 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692062669 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.690987797 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69104353 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691175618 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.693138777 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.691370958 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.691803847 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.690641394 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.691501362 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.692714455 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.691870331 seconds)
  done (took 38.840534387 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.692272178 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.69197146 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.692619279 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.69236881 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.691806542 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.692355224 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.691779179 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.692821957 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.692582503 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.692641541 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692196697 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.692878878 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.692922002 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.692795331 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.693629264 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693339995 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.693971635 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.690691607 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.6938674 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.69296671 seconds)
  done (took 35.480126499 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.692842019 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.692145735 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.696229956 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.69300648 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.693815285 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.691591389 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.694217615 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.693030428 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.693415758 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.693891623 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.693383408 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.692254186 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.693377763 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.693894546 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.69515843 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.694009656 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.692691428 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.6928542 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.693552654 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.693991831 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.696114661 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.696064055 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.693343997 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.693040682 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.694339792 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.694465214 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.693484662 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.694392741 seconds)
  done (took 49.052148858 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69290894 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.697144381 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.695437811 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.696592225 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.694478421 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.695281423 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.695562428 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.696384611 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.695891621 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.696377443 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.694159228 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.696879384 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.695499326 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.696125349 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.695843829 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.695565432 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.697598092 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.696325301 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695145985 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695382195 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.695588601 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695132141 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.694868392 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.69596969 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696928725 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.694797107 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.696484393 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.697212637 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696125064 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.695447245 seconds)
  done (took 52.502148176 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.717333409 seconds)
    (2/2) benchmarking "in"...
    done (took 1.717887587 seconds)
  done (took 5.064346776 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.695703963 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.696522868 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.695721119 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.697191528 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.696157321 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.697472057 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.696839424 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.697276425 seconds)
  done (took 15.203097509 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.698133063 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.698345585 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.695053869 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.697198282 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.700848321 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.695546705 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.701978778 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.698888724 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.697134786 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.698178876 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.704370528 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.707011016 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.70182615 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.697882986 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.698526417 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.700016347 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.695249602 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.69664548 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.697458118 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.697426356 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.697472011 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.700227123 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.699883945 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.698561626 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.699931149 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.709309979 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.702848699 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.696806692 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.698213575 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.70190848 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.698938472 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.699315134 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.698987024 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.699559223 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.697841064 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.698876703 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.70514625 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.701487223 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.703497162 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.700522473 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.698666566 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.698677979 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.699314889 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.700010799 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.702021285 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.699250728 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.698402784 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.700392286 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.698545535 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.702350812 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.708767571 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.700574122 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.698421127 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.704978984 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.70166249 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.707252273 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.702848598 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.702032103 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.708890509 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.710522514 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.712326594 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.71159109 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.701303599 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.700312503 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.709046041 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.726993253 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7061184 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.701396687 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.700744043 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.700216255 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.705803192 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.711205203 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.709826207 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.699467653 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.70104161 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.700271302 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.701520054 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.700536122 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.706559382 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.7049365 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.69946575 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.701327693 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.709405462 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.726620475 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.700989811 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.700047555 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.702849209 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.701417156 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.70223057 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.712829993 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.703498576 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.700805614 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.700883788 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.70264071 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.703467373 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.701700243 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.702647891 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.702901265 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.704833982 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.701785639 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.701488312 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.703803487 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.714862519 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.702256661 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.702596418 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.706767103 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.703030834 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.702027401 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.707401654 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.702650149 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.701669345 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.703522234 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.708558995 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.700925507 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.704463242 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.712525391 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.702936832 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.704921607 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.702572334 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.702825691 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.710959172 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.732144981 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.702905419 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.70271355 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.706825235 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.717256409 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.702404749 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.705072213 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.702274134 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.703328889 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.700432156 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.706090031 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.704845582 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.703167675 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.703015476 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.704463108 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.703037697 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.703724598 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.703686069 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.706150576 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.704790085 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.704664796 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.704912778 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.705009514 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.706289845 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.707039427 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.709648048 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.704523465 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.705782935 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.706132463 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.702775796 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.706995161 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.704912828 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.704398279 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.705161547 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.703041812 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.703917328 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.704139177 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.706362301 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.704167692 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.704160451 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.705627378 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.710818338 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.705626214 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.708646388 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.70555166 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.707167201 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.706098834 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.706463557 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.704812496 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.70375322 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.704043688 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.708440162 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.715060212 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.705012159 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.705925503 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.708890831 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.705582786 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.704463055 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.706536758 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.707904883 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.717501858 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.705454127 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.711647274 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.707018957 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.703975699 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.704946642 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.706183445 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.704314753 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.705655202 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.710134383 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.715012742 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.716687936 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.716493746 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.706556325 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.709972748 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.707668298 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.710205101 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.709725294 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.70625714 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.707579407 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.706463606 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.706200854 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.707435698 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.709304679 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.705325444 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.7061266 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.706497263 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.707814392 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.707717497 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.708157426 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.708815788 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.708516827 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.707793568 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.706400088 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.70779929 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.70752886 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.707592493 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.707387693 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.706923931 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.708197454 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.707597662 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.71244112 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.706611223 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.710346822 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.7097285 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.707746038 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.708113901 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.708461891 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.710464606 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.708798377 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.713153441 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.708470335 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.709225059 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.714288385 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.709267344 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.706962762 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.71151776 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.708163198 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.7090707 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.711079376 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.718262872 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.708301498 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.708438907 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.709270186 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.709975215 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.709481608 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.714467482 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.708916132 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.709478693 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.707988551 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.710907551 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.708856517 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.711344291 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.709921044 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.710047668 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.711035556 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.70926676 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.708821662 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.710629697 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.708416893 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.710373198 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.709755669 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.712250078 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.717121818 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.715200562 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.711053332 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.711278175 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.710483539 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.714103846 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.710796782 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.711922551 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.709692025 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.721491911 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.719902769 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.7168152 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.711687035 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.710230332 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.715344687 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.710823235 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.715205706 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.710194611 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.711081134 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.710850921 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.710035961 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.710659297 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.710697138 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.710597908 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.711513643 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.712688292 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.715801428 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.710753165 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.710068463 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.711524252 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.711321564 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.710669827 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.710404514 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.711368379 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.71396405 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.714101575 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.710536179 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.711875485 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.717673453 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.713842703 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.713290142 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.712367607 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.712527554 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.710746624 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.712111714 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.712430795 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.715211066 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.719773312 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.715988384 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.722794087 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.713775357 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.720794765 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.713068454 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.715532222 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.721124024 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.712003772 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.711660553 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.713195184 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.712292642 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.718045005 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.713330128 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.71362046 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.717730343 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.71379015 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.711994179 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.71171674 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.712745273 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.713393397 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.713711652 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.720397956 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.714445123 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.719537019 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.715524297 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.712368506 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.713003325 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.71307873 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.712932961 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.716739626 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.713954476 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.714473332 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.713671271 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.713073928 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.713697407 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.712904044 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.713307886 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.713007908 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.713656185 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.719698276 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.71657024 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.718073458 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.714252254 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.72205973 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.714101919 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.720448833 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.713824957 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.713994562 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.713378592 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.713348623 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.716065726 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.714607884 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.715486257 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.713243698 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.715170073 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.719163511 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.714530923 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.715897543 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.7164353 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.715236669 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.716059203 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.723719314 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.743343538 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.716753502 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.719527975 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.715266164 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.716855046 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.719807819 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.715444756 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.715467084 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.717549649 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.726235094 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.72463994 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.716556372 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.716334584 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.717420522 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.71539837 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.716363939 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.716037184 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.716173728 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.71560532 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.716746406 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.717144487 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.718455122 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.71565606 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.716170396 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.717207096 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.716577386 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.725460569 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.716600607 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.716744479 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.716402718 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.716182265 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.718417716 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.717269762 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.715901607 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.716803087 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.716248455 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.716659662 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.723159995 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.724196603 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.72006398 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.71611738 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.717766495 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.717761674 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.717461653 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.717462597 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.717443568 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.717429326 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.71692828 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.718106466 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.717725823 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.715011484 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.717055485 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.71717496 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.717325098 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.718384618 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.725960708 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.718688378 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.717032809 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.717422477 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.71860654 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.717160315 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.720512738 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.725149164 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.721834199 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.730142022 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.729265007 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.724646681 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.718692866 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.722322134 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.728743897 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.717164815 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.719249808 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.717869117 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.719835768 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.718008606 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.722598444 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.716366556 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.724259149 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.71967198 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.719102179 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.725857173 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.720600646 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.718513375 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.72087689 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.724374797 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.718640566 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.718462978 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.718218468 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.719680192 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.725238005 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.723116829 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.720777241 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.723269431 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.719575878 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.720810747 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.722982005 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.719615563 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.719978345 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.71929056 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.719193645 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.719126777 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72004542 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.720073921 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.720684745 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.718995866 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.72259043 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.727774531 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.718969438 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.722497385 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.721065522 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.720845179 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.720749926 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.720072305 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.720892076 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.720574989 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.719980888 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.719602677 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.720506241 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.723439231 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.720871045 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.722688587 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.723907047 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.721265389 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.723358088 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.733395943 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.728776241 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.721823026 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.720621489 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.72079016 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.724141836 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.721250861 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.722386964 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.722033853 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.722958497 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.720599907 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.721167461 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.722599085 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.724624579 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.739818126 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.722692692 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.720413363 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.72127844 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.725233589 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.721077235 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.721756743 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.721700434 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.72306934 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.724707851 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.73068817 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.721545756 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.728943888 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.721750441 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.723210106 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.726187281 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.724846821 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.731801161 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.724370159 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.722098153 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.721393454 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.725747429 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.739887274 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.722185314 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.731016815 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.754750763 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.722449926 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.721862698 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.722935404 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.722103312 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.72301654 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.724611142 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.721807094 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.723129308 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.722755467 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.722923492 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.724253391 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.729850533 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.725570501 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.721979257 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.723819094 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.724479984 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.72460881 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.723421053 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.723061378 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.724115144 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.724337751 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.722831615 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.724402233 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.724857348 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.734423534 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.734502056 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.722095837 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.724653134 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.72315153 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.726399884 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.724706259 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.735564571 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.732915528 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.724266482 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.722820183 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.725624131 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.724058518 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.723290671 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.723647928 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.725361812 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.722755883 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.722899282 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.734158681 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.734831514 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.728533967 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.725551159 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.723943561 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.724582217 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.726266324 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.725202159 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.724878439 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.725614494 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.724423925 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.72740213 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.725431086 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.726278168 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.728638837 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.734679749 seconds)
  done (took 1022.819670478 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.725149664 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.725169957 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.725805134 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.724954672 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724456871 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725027501 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.725576878 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.727412584 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.725917707 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.724728798 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.725743648 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.724098621 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.726259257 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.727170679 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726298687 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.725244623 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725055782 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.72577698 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.726588322 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725664211 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.726004777 seconds)
  done (took 37.897204981 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.72692463 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.726041367 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.726695412 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.726609907 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.726584793 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.725735066 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.726136442 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726560208 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.725998975 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726407148 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.72637294 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726142883 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.726587017 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.726732157 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725680257 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.72576046 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.728060917 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.726467298 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.727325958 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.727122324 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.7257531 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.727114113 seconds)
  done (took 39.643196024 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.726984151 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.729234846 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.727275488 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.72750555 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.727116609 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.728417048 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.727557643 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.727454685 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.727893742 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.727461521 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.728259853 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.728475135 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.734710188 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.737904569 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.730049398 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.727385749 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.872973846 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.727893673 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.728923214 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.728218889 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.728080423 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.732223709 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.728220257 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.72852698 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.72851591 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.728595762 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.728171471 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.730197106 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.729131567 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.728711428 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.734398561 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.730204411 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.729641086 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.732410802 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.728795481 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.730185639 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.735299204 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.729307194 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.728989438 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.729870973 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.738256008 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.757333197 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.731840928 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.736406332 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.731341077 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.729445044 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.731273673 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.738753371 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.730561185 seconds)
  done (took 86.60876551 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.727829426 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.7290222 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.72945892 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.727818646 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.729539116 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.730206952 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.729174773 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.730464799 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.729231675 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.731617509 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.728256164 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.727381751 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.729090832 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.728369959 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.730753809 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.733755544 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.728117109 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.726705409 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.72790508 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.728415788 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.728306859 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.728044113 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.72676109 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.727845144 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.727243731 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.727278238 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.727567694 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.728287918 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.72485224 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.727877561 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.727225868 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.726170156 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.728460967 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.729298882 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.730789891 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.728230817 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.726250326 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.728757362 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.730500571 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.727795683 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.729118183 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.73013814 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.728925954 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.727344518 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.728696296 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.726076589 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.728101859 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.727718614 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.728590647 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.730726432 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.726972611 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.727366342 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.725386321 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.725940665 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.724038753 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.727840341 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.723897414 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.722217854 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.722843731 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.723815782 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.722142442 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.726197231 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.721910201 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.717136845 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.719738982 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.718328281 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.722131699 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.722698077 seconds)
  done (took 119.112412651 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.71884735 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.72028522 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.717970939 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.718048068 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.722068449 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.718208371 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.716374977 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.717875038 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.71821045 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.717476218 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.718205878 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.719154743 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.718664489 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.718780366 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.717437398 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.720160564 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.719908611 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.717136612 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.718768728 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716538852 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.719287399 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.720678151 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.717768333 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.719000348 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.715835728 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.720836734 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.717960493 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.718925498 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.719624358 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.719039973 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.720920054 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.717669615 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.717198103 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.719655382 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.722592112 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.720719658 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.721277893 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.720413641 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.721026216 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.71999564 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.719183662 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.719528723 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.718624825 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.718017586 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.719892277 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.720735789 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.719587318 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.718600858 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.718690031 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.718471808 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.717994262 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.720000665 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.718245472 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.718960042 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.719988905 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.717654705 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.721879473 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.720060098 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.720741133 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.718280786 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.718966139 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.720163922 seconds)
  done (took 108.236149022 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.720252945 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.718367436 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.72003488 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.71976709 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.71966505 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.722827245 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.717481864 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.719295644 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.72111184 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.71850529 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718941274 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.719532014 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71983972 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71756872 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.720141486 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721211464 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.72153859 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.719863214 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.718249042 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.719516467 seconds)
  done (took 36.045590412 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.722549079 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.720214884 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.718292324 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.721445245 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.722334973 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.718002526 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.721365277 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721946529 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720990371 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719139772 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.720802013 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.720801936 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720485441 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.720270507 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.716222083 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.716079527 seconds)
  done (took 29.173134325 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.716152463 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.714570745 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.716530016 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.714397117 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.713662129 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.71543584 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.714610132 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.716844164 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.715094113 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.712874523 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.713957281 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.713578368 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.713870521 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.713650976 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.714817797 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.714083613 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.713550709 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.714449258 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.713069903 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.715965828 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.714278221 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.712851898 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.712599637 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.71310801 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.713584214 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.714844895 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.712884353 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.713159915 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.712916155 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.713061781 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.714164696 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.714604572 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.713290919 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.714030885 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.714728114 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.714150059 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.713075315 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.715237092 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.714027971 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.713803016 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.714693731 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.714570662 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.715577538 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.715082255 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.714133521 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.714152672 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.713620632 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.714643827 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.714751222 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.715572406 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.714389196 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.71591768 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.714559158 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.715135483 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.714833312 seconds)
  done (took 95.939759131 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.711572321 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.71252783 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.71204691 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.712461865 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.712239925 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.711596155 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.71238219 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.711734064 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.712254184 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.712921238 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.712866913 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.712559854 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.712196444 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.712543365 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.711640335 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711932974 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.71380919 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.710783959 seconds)
  done (took 32.46988762 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.712780038 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.712735016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.711899252 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.712648466 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.710667112 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.711655072 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.710237025 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.710734217 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.714824947 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.711438746 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709229238 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.710598894 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.709608572 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.709758868 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.710635717 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710902502 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.709306527 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.709363066 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.709819643 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.708999917 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.710450254 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.708513536 seconds)
  done (took 39.283311189 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.709008428 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.708872154 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.724368527 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.731127136 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.729492583 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.741475449 seconds)
  done (took 11.988389298 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708647257 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708796346 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.70941909 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707337491 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707568336 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706607314 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706948939 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706507125 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724479035 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705616011 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70655692 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705756507 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706500676 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706292848 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705912005 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70512468 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706318794 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705097588 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705109937 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705258832 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706552028 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706488927 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705939769 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705854152 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704904281 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706406512 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705712134 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706967316 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705883331 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706218886 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705784198 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70719806 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705470625 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706269502 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707148551 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706787848 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707000506 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706591998 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705771068 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70638269 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.705082829 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706777992 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705749936 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705999468 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70588766 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706044234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705562841 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706098905 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706035563 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707570781 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705898902 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705134278 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70596407 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705909236 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705210939 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7082542 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707491098 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706570592 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705948035 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706748243 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706124272 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705985384 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706349057 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706796351 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70562403 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706709475 seconds)
  done (took 114.281212713 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707052772 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.706415912 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70634577 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70668334 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707326805 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705562257 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705175054 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703772052 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704458172 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703936472 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703629605 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705698938 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704068607 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703967124 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705195046 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703925838 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704333886 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706677141 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703017304 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703934195 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702973256 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702129872 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703166861 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70475495 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701405512 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702243913 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703178002 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70146365 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70124229 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70292388 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700992855 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702540479 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700788303 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.701347351 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700330824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702751491 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699790019 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701000783 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699742298 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700040006 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700774358 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700160534 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700461691 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69976971 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700318095 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700128041 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700595604 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700213413 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70033367 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700276951 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699913566 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701231286 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70179428 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700698288 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699090712 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700566389 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699434606 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699745003 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701505502 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701613513 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700412528 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700845023 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70040714 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700596457 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701015298 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69929998 seconds)
  done (took 113.990993367 seconds)
done (took 2373.51147851 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.753040479 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.7231582 seconds)
  done (took 15.109910447 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.872553791 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.823072539 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.710744694 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.720394964 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.71049746 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.714628875 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.728024811 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.710193788 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.712241096 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.709561077 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.709838136 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.894286801 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.768308392 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.710500118 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.711251241 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.802442284 seconds)
  done (took 49.647327862 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.713654097 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.706997128 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.72199071 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.708702563 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.711696907 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.726098574 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.736310577 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.71659415 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.746523354 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.724537799 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.78136048 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.725813236 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.711490404 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.761704612 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.725313904 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.726758032 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.80386771 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.790679321 seconds)
  done (took 32.876656809 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.78835644 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.716282692 seconds)
  done (took 10.14647016 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.72233916 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.719987767 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.713051214 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.716196782 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.732331813 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.706215212 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.750178318 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.741854337 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.723083464 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.710181885 seconds)
  done (took 68.872347202 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.70855205 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.706269848 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.704105288 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.701529677 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.700582362 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.705169262 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.702544346 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.701589693 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.363694481 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.749074942 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.71734241 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.708638978 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.702286845 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.705766352 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.7000376 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.724484231 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.820615196 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.69835895 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.701169821 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.708429317 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.701942028 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.759243275 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.715999327 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.702330533 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.740284696 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.364804874 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.721537306 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.709316858 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.811473298 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.699619316 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.704038543 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.889026973 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.712419855 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.164578227 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.956481619 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.717235242 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.717653819 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.710183477 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.702155148 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.814999301 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.703056523 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.709152251 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.621508632 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.938531546 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.81571681 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.747891052 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.013003838 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.720542555 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.704366013 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.731964146 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.706212639 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.705021207 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.724132031 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.210660286 seconds)
  done (took 123.632407118 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.700842743 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.045059132 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.867794856 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.703748646 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982905143 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.90799733 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.70262173 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.74533014 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.701132184 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.927977669 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.95492888 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.803837374 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.703337677 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.701074964 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.700302354 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.700229364 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.854129668 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.772067707 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.704261145 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.700271905 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.727490787 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940802059 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.822534036 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.705008794 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.728979459 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.909280963 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.821495276 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.802337481 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.43370297 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.700877419 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.762441919 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.703369295 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.700345096 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.70025708 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.855386854 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.793388413 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.783210491 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.703084656 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.701033356 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.700943431 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.451331918 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.901992255 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.796914245 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.829536369 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.953434201 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.90445515 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.476086644 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.701377224 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.435335441 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.863783408 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.927969165 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.927257775 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.823522638 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.704866723 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.233258029 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.700439767 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.700660312 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.949206112 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.922016163 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.796395038 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.704297873 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.703226642 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.702132043 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.990519002 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.703267709 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.795815095 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.705538095 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.705695293 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.798544254 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.801086211 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.93073253 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.91259031 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.730678507 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.039391451 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.211005017 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.947491265 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.767724488 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.952667349 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.704551237 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.702251386 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.780290871 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.548096723 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.955847204 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.98227625 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.945668033 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736925797 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.421524772 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.702725241 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.926543975 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.922437453 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.963229928 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.94963191 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.940729861 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.029165454 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.702681886 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.702587079 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.935349343 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.825771944 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.707274985 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.049934475 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932973901 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.228568112 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.730564617 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.0054433 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.835680429 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.707637748 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.329650591 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.7069898 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.929248641 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.74226605 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.705428146 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.703656278 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.919973359 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.686735428 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.703889197 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.594981751 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.764112329 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.70703713 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93525287 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.707750299 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.969769032 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.705003929 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9366569 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.122888091 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.733975425 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.934438743 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.950023319 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.708211335 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.941178951 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945552517 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.81832597 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.974432252 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.614154037 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.704545425 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987973835 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.706324857 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.704976218 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.871785482 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.705906569 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.845475415 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.70804959 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.996142183 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.725223538 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.938249637 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.708067954 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.958060567 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.737554546 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.755457142 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.708932256 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.834367404 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.706499106 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.535348326 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.862250766 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.706700865 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.12041698 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.508740037 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.706394203 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.85514921 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.930300413 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.725922634 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.775450287 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.361874094 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.705005458 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788910158 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.727366912 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.095275471 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.70563522 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.95613855 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.708161275 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.706130884 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.705921927 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.990785306 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.940533857 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.7096405 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.70820343 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.607152456 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.707210474 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.705735855 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.887518499 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.070346329 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.706309847 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.906753522 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.710893884 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.834453738 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.708362022 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.781629462 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.044549895 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.70640704 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.706985347 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.708011039 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.708188473 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.70643883 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.967118438 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.73085492 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.196672495 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.842655174 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976660224 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.0156497 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.94537185 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.749331861 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.709144175 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.960058306 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.71019577 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.768984632 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.709438462 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.727790775 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.931934261 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.711464807 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.915800534 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.976014472 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.714041955 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.755241678 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.710637834 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.709161186 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.70872883 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.853178146 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788244502 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.70971852 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.708809443 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.821229923 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.828603073 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.91394222 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.710156081 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.808635322 seconds)
  done (took 867.025274466 seconds)
done (took 1168.945725865 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.708600882 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.707802893 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.711400033 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.71105594 seconds)
  done (took 28.483318132 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.718625631 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.711090765 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.711545233 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.710204982 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.71079049 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.711211953 seconds)
  done (took 11.917911934 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.70833257 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.71194561 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.711970081 seconds)
  done (took 20.776483559 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.789484256 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.093965907 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.849092796 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.12627198 seconds)
  done (took 9.503035185 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.712501245 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.713012598 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.711263005 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.714995757 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.718854333 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.719456761 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.712460031 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.713193631 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.720346299 seconds)
  done (took 17.081463666 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.810483571 seconds)
done (took 93.217892519 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.857356819 seconds)
    (2/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.715422765 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.72303664 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.876903027 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.181951509 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.820720539 seconds)
    (7/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.976684007 seconds)
    (8/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.851883324 seconds)
    (9/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.81880744 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.74013895 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.716365173 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.812725113 seconds)
    (13/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.833886819 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.044394326 seconds)
    (15/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.868514311 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.464238701 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.723933582 seconds)
    (18/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.72098013 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.691416732 seconds)
    (20/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.801890029 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.687887708 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.093488393 seconds)
    (23/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.860566309 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.888957011 seconds)
    (25/309) benchmarking ("sort", Float64, false)...
    done (took 5.439099724 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.911811935 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.743241677 seconds)
    (28/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.864609153 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.718218816 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.332306248 seconds)
    (31/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.818778332 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.805233597 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.727162604 seconds)
    (34/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.876473923 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.896994789 seconds)
    (36/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.082593563 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.827698869 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.717552043 seconds)
    (39/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 3.687810875 seconds)
    (40/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.852302704 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.740279216 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.947525995 seconds)
    (43/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.724816514 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.519701433 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.981372508 seconds)
    (46/309) benchmarking ("sort", Bool, false)...
    done (took 1.94062501 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.621129652 seconds)
    (48/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.106054256 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.881540411 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 5.40225111 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.054271442 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.906674023 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.855573418 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.969616038 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.033190093 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.729872686 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.973713387 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.74323712 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.064720257 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.723350436 seconds)
    (61/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.59183739 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.818032902 seconds)
    (63/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.720125623 seconds)
    (64/309) benchmarking ("sort", BigInt, false)...
    done (took 6.921783074 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.918943328 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.049705993 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.728248158 seconds)
    (68/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.249684657 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.745345164 seconds)
    (70/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.364844246 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.116465552 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.041189589 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.945955504 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.966791157 seconds)
    (75/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.976124872 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.85456241 seconds)
    (77/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.721151108 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.022670628 seconds)
    (79/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.762680059 seconds)
    (80/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.946670812 seconds)
    (81/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.520333413 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.719981921 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.816364516 seconds)
    (84/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 3.25363343 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.721197729 seconds)
    (86/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.14565939 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.738681738 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.721152983 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.084056024 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.672920526 seconds)
    (91/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.728876236 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.408861083 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.35944322 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.747346855 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.71956149 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.234775749 seconds)
    (97/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.011491647 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.120129868 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.744579979 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.720265348 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.209372789 seconds)
    (102/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.393890628 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.970487611 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.050524181 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.043867012 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.129055125 seconds)
    (107/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.814833653 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.507802527 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.89776857 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.726416734 seconds)
    (111/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.829134937 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.803542766 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.035690097 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.909961813 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.744484354 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.720383672 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.42093591 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.801861178 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.962508012 seconds)
    (120/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.18206324 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.968447893 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.668455711 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.59317852 seconds)
    (124/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.751857885 seconds)
    (125/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.72168607 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 4.210665829 seconds)
    (127/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.205793775 seconds)
    (128/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.742029535 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.80947982 seconds)
    (130/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.971376871 seconds)
    (131/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.052048156 seconds)
    (132/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.222480436 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.762406367 seconds)
    (134/309) benchmarking ("sort", Float32, false)...
    done (took 5.430949118 seconds)
    (135/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.733353965 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.72074926 seconds)
    (137/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.064011945 seconds)
    (138/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.827950135 seconds)
    (139/309) benchmarking ("sort", Int8, false)...
    done (took 4.607294614 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.976529854 seconds)
    (141/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.902053271 seconds)
    (142/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.728099933 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.391210305 seconds)
    (144/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.101360277 seconds)
    (145/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.794678139 seconds)
    (146/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.724639976 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.999986975 seconds)
    (148/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.940641486 seconds)
    (149/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.809922521 seconds)
    (150/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.834112901 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.748700569 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.976890498 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.860457003 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.025054651 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.726544664 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.825880423 seconds)
    (157/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.908733471 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.740635375 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.87401013 seconds)
    (160/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.74018688 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.033408784 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.791030651 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.724976948 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.146557939 seconds)
    (165/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.040031532 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.729640777 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.727978262 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.860518337 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.747263395 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.343983468 seconds)
    (171/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.109307293 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.849005845 seconds)
    (173/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.833136099 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.724995821 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.435939807 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.725601908 seconds)
    (177/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.721930947 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.72874932 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.913908121 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.72848098 seconds)
    (181/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.602023012 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.672931857 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.809884018 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.823319613 seconds)
    (185/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.511158159 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.72668838 seconds)
    (187/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.180604593 seconds)
    (188/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.820054615 seconds)
    (189/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.81409424 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.886587114 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.02835975 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.041689922 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.929122325 seconds)
    (194/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.73474953 seconds)
    (195/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.934093103 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.754369532 seconds)
    (197/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.799145011 seconds)
    (198/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.941819442 seconds)
    (199/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.212290747 seconds)
    (200/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.75804941 seconds)
    (201/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.726523346 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.864010855 seconds)
    (203/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.067725025 seconds)
    (204/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.868046768 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.849912163 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.84186994 seconds)
    (207/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.809387769 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.400992622 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.955047943 seconds)
    (210/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.414707471 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.793071949 seconds)
    (212/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.804205174 seconds)
    (213/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.951279142 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.379734081 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.927897856 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.725784278 seconds)
    (217/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.811817654 seconds)
    (218/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.076407784 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.840763747 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.746868083 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.920796935 seconds)
    (222/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.759564837 seconds)
    (223/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.785215276 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.726212338 seconds)
    (225/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.822112109 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.041110313 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.857591953 seconds)
    (228/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.731999304 seconds)
    (229/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.433508507 seconds)
    (230/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.801403256 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.732114506 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.825889268 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.065661852 seconds)
    (234/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.89190604 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.730005799 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.750261921 seconds)
    (237/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.80679673 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.074874118 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.346559813 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.735910426 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.048943772 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.73592193 seconds)
    (243/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.958634278 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.911631823 seconds)
    (245/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.769793874 seconds)
    (246/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.824616884 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.941382742 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.82580743 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.033310829 seconds)
    (250/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.885792313 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.761303979 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.751215029 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.10895064 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.594652086 seconds)
    (255/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.875405448 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.733708648 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.731563669 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.256581891 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.851564415 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.860482651 seconds)
    (261/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.846081517 seconds)
    (262/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.881787649 seconds)
    (263/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.743471485 seconds)
    (264/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.16973391 seconds)
    (265/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.61007367 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.757248049 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.031035726 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.239525261 seconds)
    (269/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.83593339 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.049141494 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.869286226 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.906832941 seconds)
    (273/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.97440182 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.084356873 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.972485591 seconds)
    (276/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.290251725 seconds)
    (277/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.770715952 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.397692244 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.999128581 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.063078137 seconds)
    (281/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.732946271 seconds)
    (282/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.177130198 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.904685841 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.751854961 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.866707201 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.915019097 seconds)
    (287/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.029124081 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.523086877 seconds)
    (289/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.114336086 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.133161149 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.866443664 seconds)
    (292/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.111091648 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.676706869 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.732286053 seconds)
    (295/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.868323825 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.861895833 seconds)
    (297/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.854078818 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.767402676 seconds)
    (299/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.988934942 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.106648371 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.04522314 seconds)
    (302/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.73322255 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 8.165691076 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.570553345 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.862622721 seconds)
    (306/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.688746613 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.94759175 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.732876083 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.518915318 seconds)
  done (took 962.966596128 seconds)
done (took 964.900786473 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.758543398 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.750849659 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.732041869 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.754219838 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.845837603 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.779206457 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.74578382 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.736486034 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.783702112 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.78201575 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.731106802 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.776846826 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.733992046 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.733255479 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.732218914 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.748894534 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.039396043 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.761709882 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.751411546 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.745174127 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.750837288 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.731642111 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.783457656 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.777568379 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.737738538 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.738624784 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.736934159 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.753744896 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.84607961 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.738175711 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.73906376 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.746920421 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.038968341 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.761202527 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.732574016 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.752989672 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.746739741 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.747561888 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.738226932 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.768855353 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.128070459 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.770851563 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.735891763 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.734103961 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.734851091 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.741334716 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.735036415 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.742992592 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.74872897 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.749979287 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.123154398 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.787625145 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.738627052 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.735666838 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.749305983 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.735249517 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.739074387 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.750715576 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.754942621 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.752201778 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.024824705 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.769798679 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.739137091 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.754185527 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.744252772 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.157889304 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.771845543 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.742042868 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.128493831 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.780916778 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.159540725 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.782592211 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.738756386 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.750459124 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.769206884 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.040654175 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.761489978 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.735362694 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.745585608 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.733832884 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.748149452 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.750817678 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.741063384 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.738255692 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.752552243 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.782343586 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.749489051 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.737296949 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.74906298 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.757760774 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.745699372 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.749283618 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.741352388 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.734696852 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.749321363 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.740747727 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.740773038 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.741960193 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.742499754 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.750913478 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.130137932 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.792008037 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.734382181 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.735067614 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.737330981 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.751709568 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.127838682 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.775697561 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.760598289 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.787676481 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.740649983 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.028327431 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.768860595 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.754865699 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.75032094 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.740681804 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.736349874 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.029281925 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.152209661 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.790043652 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.73906097 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.736472703 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.754769721 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.740677691 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.73572439 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.044894114 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.767794111 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.754887233 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.86102917 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.75254242 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.771357189 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.736036227 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.742087212 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.78868958 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.756080051 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.771822623 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.741732928 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.755623627 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.756497854 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.735941935 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.751638317 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.752673409 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.74115586 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.748374316 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.736513028 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.789302609 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.754734071 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.753964869 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.761224487 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.86261976 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.738193632 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.031483294 seconds)
done (took 273.618505414 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.818036754 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.739341156 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.830982431 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.739353999 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.82957599 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.81367776 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.738786389 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.739689228 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.738662768 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.226996733 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.739068737 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.744145817 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.736681018 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.739475633 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.811442124 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.741572693 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.738984298 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.181602221 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.740616109 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.817620115 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.738603136 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.740278907 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.739467629 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.234729072 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.737064625 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.738991019 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.81898592 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.739579106 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.179951665 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.740359395 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.740012897 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.1852316 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.819702197 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.767125125 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.746945527 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.74767551 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.830874332 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.749208524 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.807432061 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.809616821 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.836593141 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.77293952 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.739835043 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.739409417 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.742987372 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.741214228 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.739851916 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.772210436 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.740680068 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.744606067 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.177303216 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.748747204 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.744923361 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.740599103 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.741007493 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.769337987 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.741380708 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.743372179 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.81906184 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.743300656 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.809683394 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.230492992 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.236848151 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.741885697 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.741603979 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.745170266 seconds)
  done (took 176.536965802 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.808301845 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.817990277 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.806219769 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.748373059 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.791779648 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.808249642 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.746319833 seconds)
  done (took 14.203952178 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.750610994 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.741853422 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.791023303 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.7919228 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.742862032 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.897102151 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.743559626 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.754022161 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.748115364 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.769951699 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.744465528 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.742742195 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.750495545 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.742257727 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.7917507 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.753879008 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.857806596 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.74475606 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.742478947 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.889962024 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.74779014 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.750260169 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.768553242 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.75353812 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.74521566 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.749184536 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.314381062 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.743905685 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.743113672 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.742126465 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.743323811 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.784529635 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.744785189 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.74317993 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.742275209 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.857039764 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.742661157 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.743152547 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.742732898 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.74220662 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.744339823 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.743947815 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.743489627 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.743871047 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.744373312 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.766801224 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.744364105 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.744291559 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.744413022 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.745101603 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.76995327 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.74487857 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.744439939 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.748884002 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.785961132 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.751575655 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.744922383 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.743397522 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.745395199 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.744308178 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.893447288 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.793412488 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.743433062 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.792728267 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.745866492 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.744667102 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.744850147 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.744161767 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.832301822 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.744801317 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.79278251 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.744396612 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.903078657 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.767654114 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.746211556 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.748138865 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.74825663 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.744194573 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.744755881 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.750989871 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.745945044 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.747446783 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.751852842 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.750052535 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.745508328 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.85768289 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.886819917 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.745352056 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.746626105 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.753121137 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.745649544 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.789296135 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.745942227 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.746310343 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.802544194 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.862153139 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.773638957 seconds)
  done (took 193.468388814 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.75345229 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.753589383 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.748231319 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.761937906 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.748612231 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.748279591 seconds)
  done (took 12.192697608 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.748961409 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.750521463 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.746887123 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.745711183 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.746897791 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.747925052 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.747585835 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.747831699 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.750309605 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.74656225 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.748088575 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.753016098 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.747863385 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.747598642 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.747277881 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.748211428 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.747038179 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.748835226 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.747178931 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.747845462 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.997399156 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.747918262 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.748345868 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.756159156 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.751891703 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.747075814 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.761504401 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.747221547 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.747111861 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.754629869 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.753224979 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.747916159 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.757464661 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.752975511 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.751798174 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.756575514 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.751652554 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.755797622 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.748405601 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.747875537 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.754489607 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.748840404 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.748333719 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.75596919 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.749900244 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.760402369 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.757680212 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.760376764 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.748969193 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.754562191 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.754937035 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.750381843 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.749564449 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.75637416 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.759114997 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.756005825 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.758576431 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.749912892 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.749867933 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.757139073 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.753981965 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.749478078 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.751019314 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.753803875 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.757418836 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.755196954 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.75916112 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.753356098 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.75038354 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.750736551 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.756021703 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.750005546 seconds)
  done (took 129.049109871 seconds)
done (took 527.14120668 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.009601307 seconds)
  done (took 8.691269402 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.796047861 seconds)
  done (took 8.538105588 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.165280217 seconds)
  done (took 9.850166345 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.778437337 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.783253516 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.774925994 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.757751774 seconds)
  done (took 28.80044718 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.051300146 seconds)
  done (took 8.734338805 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.772021155 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.750050491 seconds)
  done (took 15.277330842 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.793528624 seconds)
  done (took 8.477254036 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.758944825 seconds)
  done (took 8.448484439 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.771400054 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.781193532 seconds)
  done (took 15.260375459 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.75302954 seconds)
  done (took 8.435228469 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.942027355 seconds)
  done (took 9.728187072 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.77250284 seconds)
  done (took 8.525677006 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.818192078 seconds)
  done (took 8.503333876 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.769302222 seconds)
  done (took 8.454189215 seconds)
done (took 157.410495216 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.75143896 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.74791425 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.749813267 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.749104602 seconds)
  done (took 28.680655884 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.783517073 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.783624136 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.78682058 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.794921544 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.7868616 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.786446152 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.776438933 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.776927453 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.796826815 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.78659904 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.785633673 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.787446969 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.786985882 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.776269513 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.786795281 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.78643398 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.795846491 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.787441233 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.777641185 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.787373827 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.752474829 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.795451834 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.788123125 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.751686434 seconds)
  done (took 44.487629832 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.940597988 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.822252189 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.906238135 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.805168172 seconds)
  done (took 9.158558959 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.802871251 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.804994168 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.816283105 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.855322108 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.878208621 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.813059957 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.778064306 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.772625131 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.759063259 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.806352166 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.880081519 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.800537329 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.890061509 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.75289417 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.940586588 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.753640415 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.755390479 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.80616231 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.856187651 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.869510511 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.754088366 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.804050008 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.810055811 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.800577871 seconds)
  done (took 45.244741708 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.753648334 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.763081265 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.760255937 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.754143624 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.754757837 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.754811227 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.761555394 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.755852562 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.776215379 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.756727081 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.754422788 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.754318739 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.761773286 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.755494838 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.754003308 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.767584026 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.769139091 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.755019006 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.759776409 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.76210216 seconds)
  done (took 36.871029079 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.751747883 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.599918299 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.097600026 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.005987429 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.750494939 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.75686219 seconds)
  done (took 30.648600173 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.767256795 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.761096174 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.755413643 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.812208889 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.89550747 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.762840614 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.755142339 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.765328653 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.800485916 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.819327435 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.773934773 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.783153733 seconds)
  done (took 23.138569067 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.756296062 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.756684627 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.756141282 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.767690162 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.764576062 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.762997256 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.762110224 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.753086766 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.768761579 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.772659446 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.762692692 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.765809659 seconds)
  done (took 42.839156216 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831951263 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.627700123 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207291442 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217757067 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.276923366 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957330316 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.756489907 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.839114628 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.756633549 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028841804 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.104014934 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960794716 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996710069 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464854172 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.759895635 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.237991854 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047970089 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974817251 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786355269 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.431280534 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866385616 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.230793416 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.397495452 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.866453502 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957842472 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.87909486 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.018768859 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.702869745 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802894751 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758375627 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761390259 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.754756604 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027082501 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876531688 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824730046 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760282344 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.163478724 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.459336204 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.760905905 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.381543842 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.24358437 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.878924399 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759181625 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.756536804 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.682493339 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.248317749 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849552599 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.758455032 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.455702427 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.756126985 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.761275332 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830690714 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.756542423 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.563125761 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436591679 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.023711165 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.757056906 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758101954 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319461597 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758305619 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337720778 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.693265462 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.840706924 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.38726113 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217697764 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.912025571 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.758719715 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758211305 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.683332174 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.379320913 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873801571 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89303554 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.773744135 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397670826 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06787432 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.146067356 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812719473 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034007765 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.508047903 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.69025486 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973668634 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.70788742 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685273525 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.584477017 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.6847896 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975230018 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792992866 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.365703389 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79353088 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.842198876 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.763801141 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773912015 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760549413 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.97322248 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.653479516 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.759110186 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.032118664 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.018201716 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776636533 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.844149405 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685355674 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.760623346 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004523293 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.962954805 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.972849603 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.250827696 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851437871 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.673328154 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.772758304 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.667762571 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.77149844 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.030377801 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819099875 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76469848 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877607643 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.709976254 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011527051 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.706575025 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.858696422 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.136295839 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999597492 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.121408961 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.006911512 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821809453 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.765597744 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.759685592 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.444352686 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3734665 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.976656737 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.774470642 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.219599646 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.769947398 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.762296573 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695665375 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.379284966 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.134029501 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.846538943 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974529476 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.691195172 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03595976 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687011675 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898342381 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.7511675 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.974738832 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.409369214 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.851382299 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00950465 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.976222405 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.960504537 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774529137 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776442754 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855385458 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778811466 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.146587893 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.010333304 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.763069486 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.763560526 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.446212871 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.819245571 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762779377 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.765092826 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.287958508 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038268828 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.785288422 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.763738913 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.63703134 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.773853337 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824551345 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764747553 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.765577592 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.27805775 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.266205125 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.768449234 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.402830647 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978389266 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.765327004 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.433215088 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947699587 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.774843042 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033950387 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.828445585 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.688702788 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.463409466 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.463122947 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762743685 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.690396827 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.763702771 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766381355 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768749192 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.949927006 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.040381945 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815742224 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.38601607 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.872063671 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769708871 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.766719017 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76445818 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.277260296 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76487239 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.232849527 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.889315945 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892236316 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.775085401 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.690048841 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.765287227 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76670363 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.764201002 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.711654029 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815152497 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.389194983 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970424648 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012863221 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.167918829 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773186472 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.389969229 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.883611422 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.781719042 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.062836618 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268459757 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.869407241 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840916822 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.770097122 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.384500815 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.499241108 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330168425 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069642916 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087175232 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115632273 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.124123036 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.084666681 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.850734514 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992426771 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.287352178 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820888645 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.857697146 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701512361 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780478804 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.412982171 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12266719 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774799264 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982155148 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053887102 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.107562527 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902047484 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969920636 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795935542 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.534232973 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.789862236 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.303157263 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784298141 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.148593296 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972335308 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849170889 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.066305407 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.848296929 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.768501003 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111994867 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811139631 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.470272253 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.121547549 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.129196727 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.211993136 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992443671 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.770095581 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.206196537 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118404401 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.935291525 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.886842124 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697334516 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.774215589 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.773088254 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.780811326 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.736010369 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.606502343 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.010767408 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773477104 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993652566 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.853462226 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130597825 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.672895379 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.77106452 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768950441 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023632841 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410679915 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920958364 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.028478712 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.335210512 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777434784 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.694719598 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695213181 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.468664782 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.769659795 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735778892 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983233433 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.872013787 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.445882366 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.118453255 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076006674 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.01174066 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.780306178 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.041590132 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043387115 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.259668711 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78875656 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.867206772 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.052335161 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.458097662 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.985452195 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.996166529 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29919413 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.98784548 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227202818 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.779756894 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.769658335 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.976244159 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.984378874 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.106809812 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946351869 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.47961104 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.785473489 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154795524 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834969124 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.112754918 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.959376172 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.853214571 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776145146 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847872653 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773481099 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.776114497 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.775495682 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781088023 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.112477779 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.891786102 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.782393967 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846573529 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791409074 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.340010748 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.778011396 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043127794 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136398816 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103548675 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832630769 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.77112194 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779864237 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697468711 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902665546 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.21083218 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04305321 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.891144631 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.903441041 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791542627 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.046519419 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.997724656 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078510199 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045098807 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.653711321 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363596998 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.888640358 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.988549107 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776827371 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.974786278 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993050356 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080616023 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338422062 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.874445831 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.960924091 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044224144 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.13271157 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.773194744 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350847559 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.788362117 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188857684 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.809359103 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.113172935 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031666575 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77698134 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893684343 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.777234669 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.970882837 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.225210196 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.399905038 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120627112 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.632270984 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.777596094 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047043983 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104063877 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077294194 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850922986 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779239313 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.488659216 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905900528 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.655288704 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.007249425 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.774877786 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97723641 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.484207 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.776825684 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047715138 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078194264 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.775285919 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.693001903 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811342452 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.779182445 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.99050108 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992899372 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021856522 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777701257 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.775955799 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.582039298 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052432053 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835396108 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700674724 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.77682467 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820690748 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000787623 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793490284 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.290488162 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.474890792 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058933073 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.683035481 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79297963 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.140172644 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152539606 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106962648 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.294660581 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99784611 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.328801546 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.591184622 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150882472 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.776964846 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.149621713 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154256661 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.777615172 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.237986966 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884085038 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.046886517 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100310166 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.786919425 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475078527 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.810469087 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990948582 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.134077119 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70748621 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.781281497 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.82418505 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.777692621 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.784052829 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.786363481 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.718940828 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.192441778 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.613920432 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333234397 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.781160605 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.783020987 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.100065341 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.275548837 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881152832 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795010413 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786563914 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.489955927 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.062241016 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.020832435 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.247004755 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.870405924 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.778751846 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77848029 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.697375341 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.961399405 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.963838466 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078991016 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.101940535 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.883518186 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779844742 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.985111484 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980544871 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.121487908 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908987268 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.858368551 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890820047 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.718216937 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.483299581 seconds)
  done (took 1609.537804498 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.813573599 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.808851785 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.904903909 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.780534379 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.850232327 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.817046168 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.886186753 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.822607706 seconds)
  done (took 56.395373309 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.778194242 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.936462287 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.783028836 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.795327666 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.784092623 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.779558625 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.936115834 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.789833226 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.782476318 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.785223843 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.780464632 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.779871593 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.059268459 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.801490032 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.780728281 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.781854617 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.783733252 seconds)
  done (took 72.69716634 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.780236475 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.015286264 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.813265406 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.780259566 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.756303697 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.798565322 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.816924685 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.841768357 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.785028018 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.023623749 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.077908448 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.794555017 seconds)
  done (took 88.995665671 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.791105819 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.783035618 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.780928201 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.781921614 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.783385865 seconds)
  done (took 10.638223116 seconds)
done (took 2101.036166939 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.008237465 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.975285867 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.023230988 seconds)
  done (took 5.710255515 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.921584252 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.97172884 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.087802047 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.107411029 seconds)
  done (took 9.804260087 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.085996998 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.166508782 seconds)
  done (took 5.965541425 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.093940044 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.810008886 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.149873859 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.784543992 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.784915385 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.788443941 seconds)
  done (took 22.074581925 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.78115089 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.782794755 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.783019889 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.783194327 seconds)
  done (took 8.843418886 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.780717331 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.487017633 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.779638752 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.797594117 seconds)
  done (took 20.557804844 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.929873638 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.898402408 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.925651371 seconds)
  done (took 7.467525475 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.987605044 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.577026249 seconds)
  done (took 6.277845146 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.942324863 seconds)
  done (took 3.655463251 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.809827654 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.051572508 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.27861147 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.295689709 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.361372551 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.577789561 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.06318814 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.000104702 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.219500892 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.211079213 seconds)
  done (took 23.582587823 seconds)
done (took 128.715255857 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.110955026 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.801756319 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.985010764 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.132468899 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.011082522 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.98418221 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.001829268 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.120345431 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.809238387 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.798084849 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.137623209 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.00953591 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.95412217 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.794042348 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.957195411 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.794805003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.002999505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.136809725 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.818279177 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.035784751 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.013672324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.778814464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.976632931 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.795736522 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.007558896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.9370056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.324414864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.79955243 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.955916422 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.338483019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.939830654 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.174406321 seconds)
  done (took 165.153818405 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.785500655 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.785737482 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.783622206 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.784675898 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.326424857 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.788030352 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.786465332 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.783949258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.184929796 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.181202897 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.786102959 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.315224717 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.786719724 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.785091513 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.784754431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.785385371 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.337116169 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.785702541 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.785552914 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.785634794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.786638926 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.148742985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.786109816 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.157051422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.325656941 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.785903277 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.785688308 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.785237896 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.785387368 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.784501934 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.785296225 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.785700325 seconds)
  done (took 206.548359037 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.785521965 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.787684163 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.788410061 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.786504386 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.787560289 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.78888332 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.788439891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.787617849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.398105683 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.391038108 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.786650766 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.786863203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.787163748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.786255083 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.787340897 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.785208794 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.787303535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.786811161 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.787495701 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.787964643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.793535232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.527844454 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.795319121 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.530505656 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.792552572 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.786765748 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.786903827 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.788727321 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.787122359 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.788124628 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.791388833 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.787194634 seconds)
  done (took 217.633579676 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.033127359 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.789116961 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.789438714 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.703620135 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.789225775 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.788436323 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.768044542 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.03433264 seconds)
  done (took 18.42260265 seconds)
done (took 609.480687502 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.158700504 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.695579694 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.97428302 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.814060164 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.054253934 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.864953496 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.80931045 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.88227405 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.705413506 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.888473507 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.493933104 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.835780188 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.585409701 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.837579971 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.933388237 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.870665775 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.405062897 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.517844119 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.99337912 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.878214301 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.994829226 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.713882091 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.896432737 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.658044271 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.594723676 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.768698558 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.847478932 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.418954524 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.822312494 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.967052336 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.488782207 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.098496206 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.826746183 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.809212878 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.868431778 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.843461391 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.034261234 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.824064453 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.935617759 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.508678981 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.870117298 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.547274727 seconds)
  done (took 100.256157271 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.801446289 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.796625986 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.7976281 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.796406904 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.806192926 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.797421292 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.796444013 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.797632486 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.797428574 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.796623002 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.796990499 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.807556152 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.797970931 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.806286943 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.797497785 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.796581912 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.798052355 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.806930612 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.797516505 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.797203669 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.797267931 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.797393 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.793647284 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.798208278 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.797839901 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.797493471 seconds)
  done (took 48.505581892 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.792305892 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.945006657 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.038736192 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.814360706 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.793597519 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.796967725 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.811874039 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.798453846 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.795400781 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.794913456 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.884009085 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.799382231 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.812529159 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.038162245 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.811093751 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.793859767 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.793278031 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.795106864 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.951482817 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.81135266 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.814265147 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.800167427 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.8141055 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.808894159 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.797231799 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.795548404 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.797999812 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.22526884 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.807869969 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.885055415 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.886319304 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.819323121 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.170191791 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.047749117 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.851542292 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.804679798 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.794512375 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.889153438 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.8014295 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.794589365 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.813543918 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.801064785 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.036271379 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.311295151 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.811252466 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.794816026 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.233365921 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.89915328 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.837516772 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.805437789 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.040189584 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.812611742 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.796212995 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.796400204 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.833171547 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.804248296 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.798418851 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.104899061 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.811570046 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.816956951 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.803021539 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.798169614 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.956701203 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.804985088 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.946556614 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.805063462 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.80149506 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.797176511 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.041292305 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.813686276 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.318988141 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.81105446 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.797053864 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.887293293 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.951363066 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.262491207 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.811187539 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.957646268 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.187051124 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.823183111 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.806204566 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.214441269 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.825704802 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.805188739 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.798461607 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.798683382 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.796601412 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.839417025 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.812818417 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.241495867 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.322387493 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.12153448 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.824745043 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.811989667 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.798849699 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.107005206 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.806462035 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.797982348 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.033648889 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.325383119 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.812380755 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.805028073 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.302834205 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.813700835 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.81664839 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.806956366 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.045216162 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.813569728 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.83940967 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.797315656 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.804184897 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.800157166 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.816000902 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.80795549 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.796819729 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.294169806 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.908297863 seconds)
  done (took 223.308068049 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.799206148 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.801869291 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.796866532 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.802682366 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.797606014 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.799168085 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.797343882 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.797564273 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.798966569 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.795721656 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.798663118 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.7994583 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.798174034 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.802122455 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.806336766 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.800546153 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.402104772 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.799840446 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.799300792 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.798207319 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.442482372 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.803809641 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.799143758 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.79897292 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.798911641 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.799174759 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.79814931 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.804973978 seconds)
  done (took 165.368492182 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.799830097 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.912906673 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.81726617 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.828546692 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.808155671 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.799416436 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.901019763 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.818115163 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.806898009 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.800708022 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.79987097 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.860032435 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.81279394 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.898725165 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.831518893 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.907821773 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.904504948 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.807976212 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.800451399 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.801478659 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.831489459 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.808799697 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.859219952 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.924627574 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.822441461 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.914536401 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.818959682 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.801213718 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.801325622 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.914404068 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.821483617 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.861517785 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.830476406 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.819755895 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.919429651 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.916504465 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.907354246 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.906241037 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.807953958 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.800903327 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.803216638 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.802210854 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.915056962 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.820138087 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.802274012 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.916536429 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.818584413 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.802351669 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.802804695 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.801554622 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.815045548 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.820570148 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.866898244 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.930942652 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.837076228 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.825455888 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.9005964 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.921898778 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.802882212 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.900292686 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.80829595 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.916022009 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.82130075 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.802690108 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.805088293 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.805663741 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.831808935 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.909621233 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.907678954 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.809843143 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.900429414 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.838963455 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.810515201 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.802632519 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.803838234 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.915506103 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.918076473 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.838854964 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.839722283 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.833411969 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.811328285 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.803249052 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.814408439 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.820557477 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.808843545 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.916789904 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.920520322 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.809368268 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.808729088 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.803323351 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.803483008 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.827244187 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.926022384 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.84683325 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.91108947 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.869588854 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.876192995 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.816410395 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.817951249 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.8101728 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.865149465 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.81692816 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.81443121 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.086699327 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.863494874 seconds)
  done (took 195.635235535 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.199532142 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.852487102 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.860885304 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.129321071 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.149225909 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.774290311 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.848757015 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.850085765 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.875384997 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.032133006 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.927746209 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.869671338 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.839693999 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.825613988 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.849443293 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.874800091 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.861622409 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.202912598 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.061019612 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.990128056 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.840729693 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.130441406 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.155731735 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.433996235 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.900368588 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.242202636 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.416861747 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.993925874 seconds)
  done (took 59.73017911 seconds)
done (took 794.524212134 seconds)
SAVING RESULT...
DONE!
